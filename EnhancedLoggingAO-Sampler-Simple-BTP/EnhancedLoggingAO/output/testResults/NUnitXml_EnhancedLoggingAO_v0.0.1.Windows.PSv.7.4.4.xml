<?xml version="1.0" encoding="utf-8" standalone="no"?>
<test-results xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="nunit_schema_2.5.xsd" name="EnhancedLoggingAO" total="94" errors="0" failures="82" not-run="0" inconclusive="0" ignored="0" skipped="0" invalid="0" date="2024-08-03" time="17:35:49">
  <environment platform="Microsoft Windows Server 2025 Datacenter Evaluation|C:\Windows|\Device\Harddisk0\Partition4" cwd="C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO" clr-version="8.0.7" user="Administrator" nunit-version="2.5.8.0" os-version="10.0.26100" user-domain="LAB-VSCODE03" machine-name="LAB-VSCODE03" />
  <culture-info current-culture="en-US" current-uiculture="en-US" />
  <test-suite type="TestFixture" name="EnhancedLoggingAO" executed="True" result="Failure" success="False" time="5.1245" asserts="0" description="Pester">
    <results>
      <test-suite type="TestFixture" name="C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1" executed="True" result="Failure" success="False" time="3.5871" asserts="0" description="C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Changelog Management" executed="True" result="Success" success="True" time="0.0635" asserts="0" description="Changelog Management">
            <results>
              <test-case description="Changelog format compliant with keepachangelog format" name="Changelog Management.Changelog format compliant with keepachangelog format" time="0.0453" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="Changelog should have an Unreleased header" name="Changelog Management.Changelog should have an Unreleased header" time="0.0068" asserts="0" success="True" result="Success" executed="True" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="General module control" executed="True" result="Success" success="True" time="0.0823" asserts="0" description="General module control">
            <results>
              <test-case description="Should import without errors" name="General module control.Should import without errors" time="0.0136" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="Should remove without error" name="General module control.Should remove without error" time="0.0029" asserts="0" success="True" result="Success" executed="True" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="Quality for module" executed="True" result="Failure" success="False" time="1.8396" asserts="0" description="Quality for module">
            <results>
              <test-suite type="ParameterizedTest" name="Quality for module.Should have a unit test for &lt;Name&gt;" executed="True" result="Failure" success="False" time="0.1371" asserts="0" description="Should have a unit test for &lt;Name&gt;">
                <results>
                  <test-case description="Should have a unit test for Add-Step" name="Quality for module.Should have a unit test for Add-Step" time="0.0406" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected a value, but got $null or empty.</message>
                      <stack-trace>at Get-ChildItem -Path 'tests\' -Recurse -Include "$Name.Tests.ps1" | Should -Not -BeNullOrEmpty, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:117
at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:117</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="Should have a unit test for AppendCSVLog" name="Quality for module.Should have a unit test for AppendCSVLog" time="0.0074" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected a value, but got $null or empty.</message>
                      <stack-trace>at Get-ChildItem -Path 'tests\' -Recurse -Include "$Name.Tests.ps1" | Should -Not -BeNullOrEmpty, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:117
at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:117</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="Should have a unit test for CreateEventLogSource" name="Quality for module.Should have a unit test for CreateEventLogSource" time="0.0073" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected a value, but got $null or empty.</message>
                      <stack-trace>at Get-ChildItem -Path 'tests\' -Recurse -Include "$Name.Tests.ps1" | Should -Not -BeNullOrEmpty, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:117
at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:117</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="Should have a unit test for CreateEventSourceAndLog" name="Quality for module.Should have a unit test for CreateEventSourceAndLog" time="0.0071" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected a value, but got $null or empty.</message>
                      <stack-trace>at Get-ChildItem -Path 'tests\' -Recurse -Include "$Name.Tests.ps1" | Should -Not -BeNullOrEmpty, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:117
at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:117</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="Should have a unit test for Export-Data" name="Quality for module.Should have a unit test for Export-Data" time="0.0086" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected a value, but got $null or empty.</message>
                      <stack-trace>at Get-ChildItem -Path 'tests\' -Recurse -Include "$Name.Tests.ps1" | Should -Not -BeNullOrEmpty, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:117
at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:117</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="Should have a unit test for Export-EventLog" name="Quality for module.Should have a unit test for Export-EventLog" time="0.0126" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected a value, but got $null or empty.</message>
                      <stack-trace>at Get-ChildItem -Path 'tests\' -Recurse -Include "$Name.Tests.ps1" | Should -Not -BeNullOrEmpty, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:117
at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:117</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="Should have a unit test for Handle-Error" name="Quality for module.Should have a unit test for Handle-Error" time="0.0078" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected a value, but got $null or empty.</message>
                      <stack-trace>at Get-ChildItem -Path 'tests\' -Recurse -Include "$Name.Tests.ps1" | Should -Not -BeNullOrEmpty, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:117
at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:117</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="Should have a unit test for Initialize-CSVDirectory" name="Quality for module.Should have a unit test for Initialize-CSVDirectory" time="0.0078" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected a value, but got $null or empty.</message>
                      <stack-trace>at Get-ChildItem -Path 'tests\' -Recurse -Include "$Name.Tests.ps1" | Should -Not -BeNullOrEmpty, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:117
at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:117</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="Should have a unit test for Initialize-ScriptAndLogging" name="Quality for module.Should have a unit test for Initialize-ScriptAndLogging" time="0.0085" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected a value, but got $null or empty.</message>
                      <stack-trace>at Get-ChildItem -Path 'tests\' -Recurse -Include "$Name.Tests.ps1" | Should -Not -BeNullOrEmpty, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:117
at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:117</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="Should have a unit test for Log-And-Execute-Step" name="Quality for module.Should have a unit test for Log-And-Execute-Step" time="0.0087" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected a value, but got $null or empty.</message>
                      <stack-trace>at Get-ChildItem -Path 'tests\' -Recurse -Include "$Name.Tests.ps1" | Should -Not -BeNullOrEmpty, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:117
at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:117</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="Should have a unit test for Log-Params" name="Quality for module.Should have a unit test for Log-Params" time="0.0067" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected a value, but got $null or empty.</message>
                      <stack-trace>at Get-ChildItem -Path 'tests\' -Recurse -Include "$Name.Tests.ps1" | Should -Not -BeNullOrEmpty, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:117
at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:117</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="Should have a unit test for Write-EnhancedLog" name="Quality for module.Should have a unit test for Write-EnhancedLog" time="0.0077" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected a value, but got $null or empty.</message>
                      <stack-trace>at Get-ChildItem -Path 'tests\' -Recurse -Include "$Name.Tests.ps1" | Should -Not -BeNullOrEmpty, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:117
at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:117</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="Should have a unit test for Write-EventLogMessage" name="Quality for module.Should have a unit test for Write-EventLogMessage" time="0.0063" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected a value, but got $null or empty.</message>
                      <stack-trace>at Get-ChildItem -Path 'tests\' -Recurse -Include "$Name.Tests.ps1" | Should -Not -BeNullOrEmpty, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:117
at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:117</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="ParameterizedTest" name="Quality for module.Should pass Script Analyzer for &lt;Name&gt;" executed="True" result="Failure" success="False" time="1.6155" asserts="0" description="Should pass Script Analyzer for &lt;Name&gt;">
                <results>
                  <test-case description="Should pass Script Analyzer for Add-Step" name="Quality for module.Should pass Script Analyzer for Add-Step" time="0.0632" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected $null or empty, because some rule triggered.
 
RuleName          Severity ScriptName   Line Message
--------          -------- ----------   ---- -------
PSAvoidGlobalVars Warning  Add-Step.ps1 27   Found global variable 'global:steps'., but got Found global variable 'global:steps'..</message>
                      <stack-trace>at $pssaResult | Should -BeNullOrEmpty -Because `, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:125
at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:125</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="Should pass Script Analyzer for AppendCSVLog" name="Quality for module.Should pass Script Analyzer for AppendCSVLog" time="0.0182" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected $null or empty, because some rule triggered.
 
RuleName                  Severity    ScriptName       Line Message
--------                  --------    ----------       ---- -------
PSAvoidTrailingWhitespace Information AppendCSVLog.ps1 5    Line has trailing whitespace
PSAvoidTrailingWhitespace Information AppendCSVLog.ps1 7    Line has trailing whitespace
PSAvoidTrailingWhitespace Information AppendCSVLog.ps1 13   Line has trailing whitespace, but got @(Line has trailing whitespace, Line has trailing whitespace, Line has trailing whitespace).</message>
                      <stack-trace>at $pssaResult | Should -BeNullOrEmpty -Because `, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:125
at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:125</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="Should pass Script Analyzer for CreateEventLogSource" name="Quality for module.Should pass Script Analyzer for CreateEventLogSource" time="0.0254" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected $null or empty, because some rule triggered.
 
RuleName              Severity ScriptName               Line Message
--------              -------- ----------               ---- -------
PSAvoidUsingWriteHost Warning  CreateEventLogSource.ps1 9    File 'CreateEventLogSource.ps1' uses Write-Host.
                                                             Avoid using Write-Host it might not work
                                                             in all hosts, does not work when there is no
                                                             host, and (prior to PS 5.0) cannot be
                                                             suppressed, captured, or redirected. Instead,
                                                             use Write-Output, Write-Verbose, or
                                                             Write-Information., but got File 'CreateEventLogSource.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information..</message>
                      <stack-trace>at $pssaResult | Should -BeNullOrEmpty -Because `, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:125
at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:125</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="Should pass Script Analyzer for CreateEventSourceAndLog" name="Quality for module.Should pass Script Analyzer for CreateEventSourceAndLog" time="0.0348" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected $null or empty, because some rule triggered.
 
RuleName                  Severity    ScriptName                  Line Message
--------                  --------    ----------                  ---- -------
PSAvoidTrailingWhitespace Information CreateEventSourceAndLog.ps1 5    Line has trailing whitespace
PSAvoidTrailingWhitespace Information CreateEventSourceAndLog.ps1 8    Line has trailing whitespace
PSAvoidTrailingWhitespace Information CreateEventSourceAndLog.ps1 16   Line has trailing whitespace
PSAvoidTrailingWhitespace Information CreateEventSourceAndLog.ps1 17   Line has trailing whitespace
PSAvoidTrailingWhitespace Information CreateEventSourceAndLog.ps1 28   Line has trailing whitespace
PSAvoidTrailingWhitespace Information CreateEventSourceAndLog.ps1 29   Line has trailing whitespace
PSAvoidUsingWriteHost     Warning     CreateEventSourceAndLog.ps1 44   File 'CreateEventSourceAndLog.ps1'
                                                                       uses Write-Host. Avoid using
                                                                       Write-Host it might not work
                                                                       in all hosts, does not work when there
                                                                       is no host, and (prior to PS 5.0)
                                                                       cannot be suppressed, captured, or
                                                                       redirected. Instead, use Write-Output,
                                                                       Write-Verbose, or Write-Information., but got @(Line has trailing whitespace, Line has trailing whitespace, Line has trailing whitespace, Line has trailing whitespace, Line has trailing whitespace, Line has trailing whitespace, File 'CreateEventSourceAndLog.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information.).</message>
                      <stack-trace>at $pssaResult | Should -BeNullOrEmpty -Because `, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:125
at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:125</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="Should pass Script Analyzer for Export-Data" name="Quality for module.Should pass Script Analyzer for Export-Data" time="0.0379" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected $null or empty, because some rule triggered.
 
RuleName                  Severity    ScriptName      Line Message
--------                  --------    ----------      ---- -------
PSAvoidUsingWriteHost     Warning     Export-Data.ps1 82   File 'Export-Data.ps1' uses Write-Host. Avoid
                                                           using Write-Host it might not work in all
                                                           hosts, does not work when there is no host, and
                                                           (prior to PS 5.0) cannot be suppressed, captured,
                                                           or redirected. Instead, use Write-Output,
                                                           Write-Verbose, or Write-Information.
PSAvoidUsingWriteHost     Warning     Export-Data.ps1 131  File 'Export-Data.ps1' uses Write-Host. Avoid
                                                           using Write-Host it might not work in all
                                                           hosts, does not work when there is no host, and
                                                           (prior to PS 5.0) cannot be suppressed, captured,
                                                           or redirected. Instead, use Write-Output,
                                                           Write-Verbose, or Write-Information.
PSAvoidUsingWriteHost     Warning     Export-Data.ps1 174  File 'Export-Data.ps1' uses Write-Host. Avoid
                                                           using Write-Host it might not work in all
                                                           hosts, does not work when there is no host, and
                                                           (prior to PS 5.0) cannot be suppressed, captured,
                                                           or redirected. Instead, use Write-Output,
                                                           Write-Verbose, or Write-Information.
PSAvoidTrailingWhitespace Information Export-Data.ps1 121  Line has trailing whitespace
PSAvoidTrailingWhitespace Information Export-Data.ps1 123  Line has trailing whitespace
PSAvoidTrailingWhitespace Information Export-Data.ps1 130  Line has trailing whitespace
PSAvoidTrailingWhitespace Information Export-Data.ps1 133  Line has trailing whitespace
PSAvoidTrailingWhitespace Information Export-Data.ps1 148  Line has trailing whitespace, but got @(File 'Export-Data.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information., File 'Export-Data.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information., File 'Export-Data.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information., Line has trailing whitespace, Line has trailing whitespace, Line has trailing whitespace, Line has trailing whitespace, Line has trailing whitespace).</message>
                      <stack-trace>at $pssaResult | Should -BeNullOrEmpty -Because `, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:125
at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:125</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="Should pass Script Analyzer for Export-EventLog" name="Quality for module.Should pass Script Analyzer for Export-EventLog" time="0.0271" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected $null or empty, because some rule triggered.
 
RuleName                  Severity    ScriptName          Line Message
--------                  --------    ----------          ---- -------
PSAvoidTrailingWhitespace Information Export-EventLog.ps1 3    Line has trailing whitespace
PSAvoidTrailingWhitespace Information Export-EventLog.ps1 17   Line has trailing whitespace
PSAvoidTrailingWhitespace Information Export-EventLog.ps1 20   Line has trailing whitespace, but got @(Line has trailing whitespace, Line has trailing whitespace, Line has trailing whitespace).</message>
                      <stack-trace>at $pssaResult | Should -BeNullOrEmpty -Because `, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:125
at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:125</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="Should pass Script Analyzer for Handle-Error" name="Quality for module.Should pass Script Analyzer for Handle-Error" time="0.0428" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected $null or empty, because some rule triggered.
 
RuleName           Severity ScriptName       Line Message
--------           -------- ----------       ---- -------
PSUseApprovedVerbs Warning  Handle-Error.ps1 1    The cmdlet 'Handle-Error' uses an unapproved verb., but got The cmdlet 'Handle-Error' uses an unapproved verb..</message>
                      <stack-trace>at $pssaResult | Should -BeNullOrEmpty -Because `, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:125
at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:125</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="Should pass Script Analyzer for Initialize-CSVDirectory" name="Quality for module.Should pass Script Analyzer for Initialize-CSVDirectory" time="0.0583" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected $null or empty, because some rule triggered.
 
RuleName              Severity ScriptName                  Line Message
--------              -------- ----------                  ---- -------
PSAvoidUsingWriteHost Warning  Initialize-CSVDirectory.ps1 32   File 'Initialize-CSVDirectory.ps1' uses
                                                                Write-Host. Avoid using Write-Host it
                                                                might not work in all hosts, does not work
                                                                when there is no host, and (prior to PS 5.0)
                                                                cannot be suppressed, captured, or
                                                                redirected. Instead, use Write-Output,
                                                                Write-Verbose, or Write-Information.
PSAvoidUsingWriteHost Warning  Initialize-CSVDirectory.ps1 33   File 'Initialize-CSVDirectory.ps1' uses
                                                                Write-Host. Avoid using Write-Host it
                                                                might not work in all hosts, does not work
                                                                when there is no host, and (prior to PS 5.0)
                                                                cannot be suppressed, captured, or
                                                                redirected. Instead, use Write-Output,
                                                                Write-Verbose, or Write-Information.
PSAvoidUsingWriteHost Warning  Initialize-CSVDirectory.ps1 35   File 'Initialize-CSVDirectory.ps1' uses
                                                                Write-Host. Avoid using Write-Host it
                                                                might not work in all hosts, does not work
                                                                when there is no host, and (prior to PS 5.0)
                                                                cannot be suppressed, captured, or
                                                                redirected. Instead, use Write-Output,
                                                                Write-Verbose, or Write-Information.
PSAvoidUsingWriteHost Warning  Initialize-CSVDirectory.ps1 43   File 'Initialize-CSVDirectory.ps1' uses
                                                                Write-Host. Avoid using Write-Host it
                                                                might not work in all hosts, does not work
                                                                when there is no host, and (prior to PS 5.0)
                                                                cannot be suppressed, captured, or
                                                                redirected. Instead, use Write-Output,
                                                                Write-Verbose, or Write-Information., but got @(File 'Initialize-CSVDirectory.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information., File 'Initialize-CSVDirectory.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information., File 'Initialize-CSVDirectory.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information., File 'Initialize-CSVDirectory.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information.).</message>
                      <stack-trace>at $pssaResult | Should -BeNullOrEmpty -Because `, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:125
at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:125</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="Should pass Script Analyzer for Initialize-ScriptAndLogging" name="Quality for module.Should pass Script Analyzer for Initialize-ScriptAndLogging" time="0.0715" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected $null or empty, because some rule triggered.
 
RuleName                  Severity    ScriptName                      Line Message
--------                  --------    ----------                      ---- -------
PSAvoidTrailingWhitespace Information Initialize-ScriptAndLogging.ps1 6    Line has trailing whitespace
PSAvoidUsingWriteHost     Warning     Initialize-ScriptAndLogging.ps1 34   File
                                                                           'Initialize-ScriptAndLogging.ps1'
                                                                           uses Write-Host. Avoid using
                                                                           Write-Host it might not
                                                                           work in all hosts, does not work
                                                                           when there is no host, and (prior
                                                                           to PS 5.0) cannot be suppressed,
                                                                           captured, or redirected. Instead,
                                                                           use Write-Output, Write-Verbose,
                                                                           or Write-Information.
PSAvoidUsingWriteHost     Warning     Initialize-ScriptAndLogging.ps1 42   File
                                                                           'Initialize-ScriptAndLogging.ps1'
                                                                           uses Write-Host. Avoid using
                                                                           Write-Host it might not
                                                                           work in all hosts, does not work
                                                                           when there is no host, and (prior
                                                                           to PS 5.0) cannot be suppressed,
                                                                           captured, or redirected. Instead,
                                                                           use Write-Output, Write-Verbose,
                                                                           or Write-Information.
PSAvoidUsingWriteHost     Warning     Initialize-ScriptAndLogging.ps1 43   File
                                                                           'Initialize-ScriptAndLogging.ps1'
                                                                           uses Write-Host. Avoid using
                                                                           Write-Host it might not
                                                                           work in all hosts, does not work
                                                                           when there is no host, and (prior
                                                                           to PS 5.0) cannot be suppressed,
                                                                           captured, or redirected. Instead,
                                                                           use Write-Output, Write-Verbose,
                                                                           or Write-Information.
PSAvoidUsingWriteHost     Warning     Initialize-ScriptAndLogging.ps1 45   File
                                                                           'Initialize-ScriptAndLogging.ps1'
                                                                           uses Write-Host. Avoid using
                                                                           Write-Host it might not
                                                                           work in all hosts, does not work
                                                                           when there is no host, and (prior
                                                                           to PS 5.0) cannot be suppressed,
                                                                           captured, or redirected. Instead,
                                                                           use Write-Output, Write-Verbose,
                                                                           or Write-Information.
PSAvoidUsingWriteHost     Warning     Initialize-ScriptAndLogging.ps1 59   File
                                                                           'Initialize-ScriptAndLogging.ps1'
                                                                           uses Write-Host. Avoid using
                                                                           Write-Host it might not
                                                                           work in all hosts, does not work
                                                                           when there is no host, and (prior
                                                                           to PS 5.0) cannot be suppressed,
                                                                           captured, or redirected. Instead,
                                                                           use Write-Output, Write-Verbose,
                                                                           or Write-Information., but got @(Line has trailing whitespace, File 'Initialize-ScriptAndLogging.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information., File 'Initialize-ScriptAndLogging.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information., File 'Initialize-ScriptAndLogging.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information., File 'Initialize-ScriptAndLogging.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information., File 'Initialize-ScriptAndLogging.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information.).</message>
                      <stack-trace>at $pssaResult | Should -BeNullOrEmpty -Because `, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:125
at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:125</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="Should pass Script Analyzer for Log-And-Execute-Step" name="Quality for module.Should pass Script Analyzer for Log-And-Execute-Step" time="1.1449" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected $null or empty, because some rule triggered.
 
RuleName                  Severity    ScriptName               Line Message
--------                  --------    ----------               ---- -------
PSAvoidTrailingWhitespace Information Log-And-Execute-Step.ps1 19   Line has trailing whitespace
PSUseApprovedVerbs        Warning     Log-And-Execute-Step.ps1 1    The cmdlet 'Log-And-Execute-Step' uses an
                                                                    unapproved verb.
PSAvoidGlobalVars         Warning     Log-And-Execute-Step.ps1 15   Found global variable
                                                                    'global:currentStep'.
PSAvoidGlobalVars         Warning     Log-And-Execute-Step.ps1 16   Found global variable 'global:steps'.
PSAvoidGlobalVars         Warning     Log-And-Execute-Step.ps1 17   Found global variable 'global:steps'.
PSAvoidGlobalVars         Warning     Log-And-Execute-Step.ps1 17   Found global variable
                                                                    'global:currentStep'.
PSAvoidGlobalVars         Warning     Log-And-Execute-Step.ps1 18   Found global variable
                                                                    'global:currentStep'., but got @(Line has trailing whitespace, The cmdlet 'Log-And-Execute-Step' uses an unapproved verb., Found global variable 'global:currentStep'., Found global variable 'global:steps'., Found global variable 'global:steps'., Found global variable 'global:currentStep'., Found global variable 'global:currentStep'.).</message>
                      <stack-trace>at $pssaResult | Should -BeNullOrEmpty -Because `, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:125
at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:125</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="Should pass Script Analyzer for Log-Params" name="Quality for module.Should pass Script Analyzer for Log-Params" time="0.0314" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected $null or empty, because some rule triggered.
 
RuleName           Severity ScriptName     Line Message
--------           -------- ----------     ---- -------
PSUseApprovedVerbs Warning  Log-Params.ps1 1    The cmdlet 'Log-Params' uses an unapproved verb.
PSUseSingularNouns Warning  Log-Params.ps1 1    The cmdlet 'Log-Params' uses a plural noun. A singular noun
                                                should be used instead., but got @(The cmdlet 'Log-Params' uses an unapproved verb., The cmdlet 'Log-Params' uses a plural noun. A singular noun should be used instead.).</message>
                      <stack-trace>at $pssaResult | Should -BeNullOrEmpty -Because `, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:125
at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:125</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="Should pass Script Analyzer for Write-EnhancedLog" name="Quality for module.Should pass Script Analyzer for Write-EnhancedLog" time="0.0313" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected $null or empty, because some rule triggered.
 
RuleName                Severity ScriptName            Line Message
--------                -------- ----------            ---- -------
PSReviewUnusedParameter Warning  Write-EnhancedLog.ps1 27   The parameter 'ForegroundColor' has been declared
                                                            but not used.
PSReviewUnusedParameter Warning  Write-EnhancedLog.ps1 28   The parameter 'UseModule' has been declared but
                                                            not used., but got @(The parameter 'ForegroundColor' has been declared but not used. , The parameter 'UseModule' has been declared but not used. ).</message>
                      <stack-trace>at $pssaResult | Should -BeNullOrEmpty -Because `, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:125
at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:125</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="Should pass Script Analyzer for Write-EventLogMessage" name="Quality for module.Should pass Script Analyzer for Write-EventLogMessage" time="0.0288" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected $null or empty, because some rule triggered.
 
RuleName                  Severity    ScriptName                Line Message
--------                  --------    ----------                ---- -------
PSAvoidTrailingWhitespace Information Write-EventLogMessage.ps1 6    Line has trailing whitespace
PSAvoidTrailingWhitespace Information Write-EventLogMessage.ps1 9    Line has trailing whitespace
PSAvoidTrailingWhitespace Information Write-EventLogMessage.ps1 12   Line has trailing whitespace
PSAvoidTrailingWhitespace Information Write-EventLogMessage.ps1 15   Line has trailing whitespace
PSAvoidTrailingWhitespace Information Write-EventLogMessage.ps1 20   Line has trailing whitespace
PSAvoidTrailingWhitespace Information Write-EventLogMessage.ps1 31   Line has trailing whitespace
PSAvoidTrailingWhitespace Information Write-EventLogMessage.ps1 32   Line has trailing whitespace
PSAvoidTrailingWhitespace Information Write-EventLogMessage.ps1 35   Line has trailing whitespace
PSAvoidTrailingWhitespace Information Write-EventLogMessage.ps1 38   Line has trailing whitespace
PSAvoidTrailingWhitespace Information Write-EventLogMessage.ps1 43   Line has trailing whitespace
PSAvoidUsingWriteHost     Warning     Write-EventLogMessage.ps1 35   File 'Write-EventLogMessage.ps1' uses
                                                                     Write-Host. Avoid using Write-Host
                                                                     it might not work in all hosts,
                                                                     does not work when there is no host, and
                                                                     (prior to PS 5.0) cannot be suppressed,
                                                                     captured, or redirected. Instead, use
                                                                     Write-Output, Write-Verbose, or
                                                                     Write-Information., but got @(Line has trailing whitespace, Line has trailing whitespace, Line has trailing whitespace, Line has trailing whitespace, Line has trailing whitespace, Line has trailing whitespace, Line has trailing whitespace, Line has trailing whitespace, Line has trailing whitespace, Line has trailing whitespace, ...1 more).</message>
                      <stack-trace>at $pssaResult | Should -BeNullOrEmpty -Because `, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:125
at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:125</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="Help for module" executed="True" result="Failure" success="False" time="3.1739" asserts="0" description="Help for module">
            <results>
              <test-suite type="ParameterizedTest" name="Help for module.Should have .SYNOPSIS for &lt;Name&gt;" executed="True" result="Failure" success="False" time="0.4971" asserts="0" description="Should have .SYNOPSIS for &lt;Name&gt;">
                <results>
                  <test-case description="Should have .SYNOPSIS for Add-Step" name="Help for module.Should have .SYNOPSIS for Add-Step" time="0.0797" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected a value, but got $null or empty.</message>
                      <stack-trace>at $functionHelp.Synopsis | Should -Not -BeNullOrEmpty, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:147
at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:147</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="Should have .SYNOPSIS for AppendCSVLog" name="Help for module.Should have .SYNOPSIS for AppendCSVLog" time="0.0358" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected a value, but got $null or empty.</message>
                      <stack-trace>at $functionHelp.Synopsis | Should -Not -BeNullOrEmpty, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:147
at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:147</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="Should have .SYNOPSIS for CreateEventLogSource" name="Help for module.Should have .SYNOPSIS for CreateEventLogSource" time="0.0187" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected a value, but got $null or empty.</message>
                      <stack-trace>at $functionHelp.Synopsis | Should -Not -BeNullOrEmpty, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:147
at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:147</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="Should have .SYNOPSIS for CreateEventSourceAndLog" name="Help for module.Should have .SYNOPSIS for CreateEventSourceAndLog" time="0.0267" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected a value, but got $null or empty.</message>
                      <stack-trace>at $functionHelp.Synopsis | Should -Not -BeNullOrEmpty, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:147
at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:147</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="Should have .SYNOPSIS for Export-Data" name="Help for module.Should have .SYNOPSIS for Export-Data" time="0.0439" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should have .SYNOPSIS for Export-EventLog" name="Help for module.Should have .SYNOPSIS for Export-EventLog" time="0.0934" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected a value, but got $null or empty.</message>
                      <stack-trace>at $functionHelp.Synopsis | Should -Not -BeNullOrEmpty, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:147
at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:147</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="Should have .SYNOPSIS for Handle-Error" name="Help for module.Should have .SYNOPSIS for Handle-Error" time="0.0118" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected a value, but got $null or empty.</message>
                      <stack-trace>at $functionHelp.Synopsis | Should -Not -BeNullOrEmpty, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:147
at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:147</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="Should have .SYNOPSIS for Initialize-CSVDirectory" name="Help for module.Should have .SYNOPSIS for Initialize-CSVDirectory" time="0.0136" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected a value, but got $null or empty.</message>
                      <stack-trace>at $functionHelp.Synopsis | Should -Not -BeNullOrEmpty, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:147
at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:147</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="Should have .SYNOPSIS for Initialize-ScriptAndLogging" name="Help for module.Should have .SYNOPSIS for Initialize-ScriptAndLogging" time="0.0175" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected a value, but got $null or empty.</message>
                      <stack-trace>at $functionHelp.Synopsis | Should -Not -BeNullOrEmpty, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:147
at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:147</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="Should have .SYNOPSIS for Log-And-Execute-Step" name="Help for module.Should have .SYNOPSIS for Log-And-Execute-Step" time="0.0702" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected a value, but got $null or empty.</message>
                      <stack-trace>at $functionHelp.Synopsis | Should -Not -BeNullOrEmpty, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:147
at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:147</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="Should have .SYNOPSIS for Log-Params" name="Help for module.Should have .SYNOPSIS for Log-Params" time="0.0436" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should have .SYNOPSIS for Write-EnhancedLog" name="Help for module.Should have .SYNOPSIS for Write-EnhancedLog" time="0.0323" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected a value, but got $null or empty.</message>
                      <stack-trace>at $functionHelp.Synopsis | Should -Not -BeNullOrEmpty, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:147
at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:147</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="Should have .SYNOPSIS for Write-EventLogMessage" name="Help for module.Should have .SYNOPSIS for Write-EventLogMessage" time="0.0099" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected a value, but got $null or empty.</message>
                      <stack-trace>at $functionHelp.Synopsis | Should -Not -BeNullOrEmpty, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:147
at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:147</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="ParameterizedTest" name="Help for module.Should have a .DESCRIPTION with length greater than 40 characters for &lt;Name&gt;" executed="True" result="Failure" success="False" time="0.2666" asserts="0" description="Should have a .DESCRIPTION with length greater than 40 characters for &lt;Name&gt;">
                <results>
                  <test-case description="Should have a .DESCRIPTION with length greater than 40 characters for Add-Step" name="Help for module.Should have a .DESCRIPTION with length greater than 40 characters for Add-Step" time="0.0301" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected the actual value to be greater than 40, but got 0.</message>
                      <stack-trace>at $functionHelp.Description.Length | Should -BeGreaterThan 40, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:166
at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:166</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="Should have a .DESCRIPTION with length greater than 40 characters for AppendCSVLog" name="Help for module.Should have a .DESCRIPTION with length greater than 40 characters for AppendCSVLog" time="0.0154" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected the actual value to be greater than 40, but got 0.</message>
                      <stack-trace>at $functionHelp.Description.Length | Should -BeGreaterThan 40, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:166
at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:166</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="Should have a .DESCRIPTION with length greater than 40 characters for CreateEventLogSource" name="Help for module.Should have a .DESCRIPTION with length greater than 40 characters for CreateEventLogSource" time="0.0087" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected the actual value to be greater than 40, but got 0.</message>
                      <stack-trace>at $functionHelp.Description.Length | Should -BeGreaterThan 40, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:166
at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:166</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="Should have a .DESCRIPTION with length greater than 40 characters for CreateEventSourceAndLog" name="Help for module.Should have a .DESCRIPTION with length greater than 40 characters for CreateEventSourceAndLog" time="0.0103" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected the actual value to be greater than 40, but got 0.</message>
                      <stack-trace>at $functionHelp.Description.Length | Should -BeGreaterThan 40, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:166
at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:166</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="Should have a .DESCRIPTION with length greater than 40 characters for Export-Data" name="Help for module.Should have a .DESCRIPTION with length greater than 40 characters for Export-Data" time="0.0518" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should have a .DESCRIPTION with length greater than 40 characters for Export-EventLog" name="Help for module.Should have a .DESCRIPTION with length greater than 40 characters for Export-EventLog" time="0.0193" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected the actual value to be greater than 40, but got 0.</message>
                      <stack-trace>at $functionHelp.Description.Length | Should -BeGreaterThan 40, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:166
at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:166</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="Should have a .DESCRIPTION with length greater than 40 characters for Handle-Error" name="Help for module.Should have a .DESCRIPTION with length greater than 40 characters for Handle-Error" time="0.0225" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected the actual value to be greater than 40, but got 0.</message>
                      <stack-trace>at $functionHelp.Description.Length | Should -BeGreaterThan 40, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:166
at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:166</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="Should have a .DESCRIPTION with length greater than 40 characters for Initialize-CSVDirectory" name="Help for module.Should have a .DESCRIPTION with length greater than 40 characters for Initialize-CSVDirectory" time="0.0094" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected the actual value to be greater than 40, but got 0.</message>
                      <stack-trace>at $functionHelp.Description.Length | Should -BeGreaterThan 40, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:166
at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:166</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="Should have a .DESCRIPTION with length greater than 40 characters for Initialize-ScriptAndLogging" name="Help for module.Should have a .DESCRIPTION with length greater than 40 characters for Initialize-ScriptAndLogging" time="0.0117" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected the actual value to be greater than 40, but got 0.</message>
                      <stack-trace>at $functionHelp.Description.Length | Should -BeGreaterThan 40, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:166
at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:166</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="Should have a .DESCRIPTION with length greater than 40 characters for Log-And-Execute-Step" name="Help for module.Should have a .DESCRIPTION with length greater than 40 characters for Log-And-Execute-Step" time="0.0175" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected the actual value to be greater than 40, but got 0.</message>
                      <stack-trace>at $functionHelp.Description.Length | Should -BeGreaterThan 40, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:166
at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:166</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="Should have a .DESCRIPTION with length greater than 40 characters for Log-Params" name="Help for module.Should have a .DESCRIPTION with length greater than 40 characters for Log-Params" time="0.0359" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected the actual value to be greater than 40, but got 0.</message>
                      <stack-trace>at $functionHelp.Description.Length | Should -BeGreaterThan 40, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:166
at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:166</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="Should have a .DESCRIPTION with length greater than 40 characters for Write-EnhancedLog" name="Help for module.Should have a .DESCRIPTION with length greater than 40 characters for Write-EnhancedLog" time="0.0198" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected the actual value to be greater than 40, but got 0.</message>
                      <stack-trace>at $functionHelp.Description.Length | Should -BeGreaterThan 40, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:166
at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:166</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="Should have a .DESCRIPTION with length greater than 40 characters for Write-EventLogMessage" name="Help for module.Should have a .DESCRIPTION with length greater than 40 characters for Write-EventLogMessage" time="0.0142" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected the actual value to be greater than 40, but got 0.</message>
                      <stack-trace>at $functionHelp.Description.Length | Should -BeGreaterThan 40, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:166
at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:166</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="ParameterizedTest" name="Help for module.Should have at least one (1) example for &lt;Name&gt;" executed="True" result="Failure" success="False" time="0.287" asserts="0" description="Should have at least one (1) example for &lt;Name&gt;">
                <results>
                  <test-case description="Should have at least one (1) example for Add-Step" name="Help for module.Should have at least one (1) example for Add-Step" time="0.019" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected the actual value to be greater than 0, but got 0.</message>
                      <stack-trace>at $functionHelp.Examples.Count | Should -BeGreaterThan 0, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:185
at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:185</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="Should have at least one (1) example for AppendCSVLog" name="Help for module.Should have at least one (1) example for AppendCSVLog" time="0.0175" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected the actual value to be greater than 0, but got 0.</message>
                      <stack-trace>at $functionHelp.Examples.Count | Should -BeGreaterThan 0, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:185
at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:185</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="Should have at least one (1) example for CreateEventLogSource" name="Help for module.Should have at least one (1) example for CreateEventLogSource" time="0.0286" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected the actual value to be greater than 0, but got 0.</message>
                      <stack-trace>at $functionHelp.Examples.Count | Should -BeGreaterThan 0, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:185
at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:185</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="Should have at least one (1) example for CreateEventSourceAndLog" name="Help for module.Should have at least one (1) example for CreateEventSourceAndLog" time="0.0521" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected the actual value to be greater than 0, but got 0.</message>
                      <stack-trace>at $functionHelp.Examples.Count | Should -BeGreaterThan 0, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:185
at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:185</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="Should have at least one (1) example for Export-Data" name="Help for module.Should have at least one (1) example for Export-Data" time="0.0684" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should have at least one (1) example for Export-EventLog" name="Help for module.Should have at least one (1) example for Export-EventLog" time="0.0114" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected the actual value to be greater than 0, but got 0.</message>
                      <stack-trace>at $functionHelp.Examples.Count | Should -BeGreaterThan 0, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:185
at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:185</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="Should have at least one (1) example for Handle-Error" name="Help for module.Should have at least one (1) example for Handle-Error" time="0.011" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected the actual value to be greater than 0, but got 0.</message>
                      <stack-trace>at $functionHelp.Examples.Count | Should -BeGreaterThan 0, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:185
at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:185</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="Should have at least one (1) example for Initialize-CSVDirectory" name="Help for module.Should have at least one (1) example for Initialize-CSVDirectory" time="0.0103" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected the actual value to be greater than 0, but got 0.</message>
                      <stack-trace>at $functionHelp.Examples.Count | Should -BeGreaterThan 0, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:185
at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:185</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="Should have at least one (1) example for Initialize-ScriptAndLogging" name="Help for module.Should have at least one (1) example for Initialize-ScriptAndLogging" time="0.0106" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected the actual value to be greater than 0, but got 0.</message>
                      <stack-trace>at $functionHelp.Examples.Count | Should -BeGreaterThan 0, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:185
at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:185</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="Should have at least one (1) example for Log-And-Execute-Step" name="Help for module.Should have at least one (1) example for Log-And-Execute-Step" time="0.0164" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected the actual value to be greater than 0, but got 0.</message>
                      <stack-trace>at $functionHelp.Examples.Count | Should -BeGreaterThan 0, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:185
at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:185</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="Should have at least one (1) example for Log-Params" name="Help for module.Should have at least one (1) example for Log-Params" time="0.0136" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected the actual value to be greater than 0, but got 0.</message>
                      <stack-trace>at $functionHelp.Examples.Count | Should -BeGreaterThan 0, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:185
at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:185</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="Should have at least one (1) example for Write-EnhancedLog" name="Help for module.Should have at least one (1) example for Write-EnhancedLog" time="0.0171" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected the actual value to be greater than 0, but got 0.</message>
                      <stack-trace>at $functionHelp.Examples.Count | Should -BeGreaterThan 0, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:185
at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:185</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="Should have at least one (1) example for Write-EventLogMessage" name="Help for module.Should have at least one (1) example for Write-EventLogMessage" time="0.011" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected the actual value to be greater than 0, but got 0.</message>
                      <stack-trace>at $functionHelp.Examples.Count | Should -BeGreaterThan 0, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:185
at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:185</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="ParameterizedTest" name="Help for module.Should have described all parameters for &lt;Name&gt;" executed="True" result="Failure" success="False" time="0.274" asserts="0" description="Should have described all parameters for &lt;Name&gt;">
                <results>
                  <test-case description="Should have described all parameters for Add-Step" name="Help for module.Should have described all parameters for Add-Step" time="0.0264" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected a value, because the parameter Description must have a description, but got $null or empty.</message>
                      <stack-trace>at $functionHelp.Parameters.($parameter.ToUpper()) | Should -Not -BeNullOrEmpty -Because ('the parameter {0} must have a description' -f $parameter), C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:211
at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:211</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="Should have described all parameters for AppendCSVLog" name="Help for module.Should have described all parameters for AppendCSVLog" time="0.0123" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected a value, because the parameter Message must have a description, but got $null or empty.</message>
                      <stack-trace>at $functionHelp.Parameters.($parameter.ToUpper()) | Should -Not -BeNullOrEmpty -Because ('the parameter {0} must have a description' -f $parameter), C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:211
at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:211</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="Should have described all parameters for CreateEventLogSource" name="Help for module.Should have described all parameters for CreateEventLogSource" time="0.0162" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should have described all parameters for CreateEventSourceAndLog" name="Help for module.Should have described all parameters for CreateEventSourceAndLog" time="0.0345" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected a value, because the parameter LogName must have a description, but got $null or empty.</message>
                      <stack-trace>at $functionHelp.Parameters.($parameter.ToUpper()) | Should -Not -BeNullOrEmpty -Because ('the parameter {0} must have a description' -f $parameter), C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:211
at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:211</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="Should have described all parameters for Export-Data" name="Help for module.Should have described all parameters for Export-Data" time="0.0471" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should have described all parameters for Export-EventLog" name="Help for module.Should have described all parameters for Export-EventLog" time="0.0213" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected a value, because the parameter LogName must have a description, but got $null or empty.</message>
                      <stack-trace>at $functionHelp.Parameters.($parameter.ToUpper()) | Should -Not -BeNullOrEmpty -Because ('the parameter {0} must have a description' -f $parameter), C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:211
at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:211</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="Should have described all parameters for Handle-Error" name="Help for module.Should have described all parameters for Handle-Error" time="0.0191" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected a value, because the parameter ErrorRecord must have a description, but got $null or empty.</message>
                      <stack-trace>at $functionHelp.Parameters.($parameter.ToUpper()) | Should -Not -BeNullOrEmpty -Because ('the parameter {0} must have a description' -f $parameter), C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:211
at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:211</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="Should have described all parameters for Initialize-CSVDirectory" name="Help for module.Should have described all parameters for Initialize-CSVDirectory" time="0.0247" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected a value, because the parameter deploymentName must have a description, but got $null or empty.</message>
                      <stack-trace>at $functionHelp.Parameters.($parameter.ToUpper()) | Should -Not -BeNullOrEmpty -Because ('the parameter {0} must have a description' -f $parameter), C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:211
at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:211</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="Should have described all parameters for Initialize-ScriptAndLogging" name="Help for module.Should have described all parameters for Initialize-ScriptAndLogging" time="0.0175" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should have described all parameters for Log-And-Execute-Step" name="Help for module.Should have described all parameters for Log-And-Execute-Step" time="0.0087" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should have described all parameters for Log-Params" name="Help for module.Should have described all parameters for Log-Params" time="0.0121" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected a value, because the parameter Params must have a description, but got $null or empty.</message>
                      <stack-trace>at $functionHelp.Parameters.($parameter.ToUpper()) | Should -Not -BeNullOrEmpty -Because ('the parameter {0} must have a description' -f $parameter), C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:211
at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:211</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="Should have described all parameters for Write-EnhancedLog" name="Help for module.Should have described all parameters for Write-EnhancedLog" time="0.0108" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected a value, because the parameter Message must have a description, but got $null or empty.</message>
                      <stack-trace>at $functionHelp.Parameters.($parameter.ToUpper()) | Should -Not -BeNullOrEmpty -Because ('the parameter {0} must have a description' -f $parameter), C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:211
at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:211</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="Should have described all parameters for Write-EventLogMessage" name="Help for module.Should have described all parameters for Write-EventLogMessage" time="0.0234" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected a value, because the parameter Message must have a description, but got $null or empty.</message>
                      <stack-trace>at $functionHelp.Parameters.($parameter.ToUpper()) | Should -Not -BeNullOrEmpty -Because ('the parameter {0} must have a description' -f $parameter), C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:211
at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:211</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\Unit\Private\Get-PrivateFunction.tests.ps1" executed="True" result="Failure" success="False" time="1.3971" asserts="0" description="C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\Unit\Private\Get-PrivateFunction.tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Get-PrivateFunction" executed="True" result="Failure" success="False" time="0.7396" asserts="0" description="Get-PrivateFunction">
            <results>
              <test-suite type="TestFixture" name="Get-PrivateFunction.When calling the function with string value" executed="True" result="Failure" success="False" time="0.734" asserts="0" description="Get-PrivateFunction.When calling the function with string value">
                <results>
                  <test-case description="Should return a single object" name="Get-PrivateFunction.When calling the function with string value.Should return a single object" time="0.6924" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>CommandNotFoundException: The term 'Get-PrivateFunction' is not recognized as a name of a cmdlet, function, script file, or executable program.
Check the spelling of the name, or if a path was included, verify that the path is correct and try again.</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\Unit\Private\Get-PrivateFunction.tests.ps1:16</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="Should return a string based on the parameter PrivateData" name="Get-PrivateFunction.When calling the function with string value.Should return a string based on the parameter PrivateData" time="0.0367" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>CommandNotFoundException: The term 'Get-PrivateFunction' is not recognized as a name of a cmdlet, function, script file, or executable program.
Check the spelling of the name, or if a path was included, verify that the path is correct and try again.</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\Unit\Private\Get-PrivateFunction.tests.ps1:24</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\Unit\Public\Get-Something.tests.ps1" executed="True" result="Failure" success="False" time="0.1403" asserts="0" description="C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\Unit\Public\Get-Something.tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Get-Something" executed="True" result="Failure" success="False" time="0.0757" asserts="0" description="Get-Something">
            <results>
              <test-suite type="TestFixture" name="Get-Something.When passing values using named parameters" executed="True" result="Failure" success="False" time="0" asserts="0" description="Get-Something.When passing values using named parameters">
                <results>
                  <test-case description="Should call the private function once" name="Get-Something.When passing values using named parameters.Should call the private function once" time="0" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>This test should run but it did not. Most likely a setup in some parent block failed.</message>
                      <stack-trace />
                    </failure>
                  </test-case>
                  <test-case description="Should return a single object" name="Get-Something.When passing values using named parameters.Should return a single object" time="0" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>This test should run but it did not. Most likely a setup in some parent block failed.</message>
                      <stack-trace />
                    </failure>
                  </test-case>
                  <test-case description="Should return the correct string value" name="Get-Something.When passing values using named parameters.Should return the correct string value" time="0" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>This test should run but it did not. Most likely a setup in some parent block failed.</message>
                      <stack-trace />
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Get-Something.When passing values over the pipeline" executed="True" result="Failure" success="False" time="0" asserts="0" description="Get-Something.When passing values over the pipeline">
                <results>
                  <test-case description="Should call the private function two times" name="Get-Something.When passing values over the pipeline.Should call the private function two times" time="0" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>This test should run but it did not. Most likely a setup in some parent block failed.</message>
                      <stack-trace />
                    </failure>
                  </test-case>
                  <test-case description="Should return an array with two items" name="Get-Something.When passing values over the pipeline.Should return an array with two items" time="0" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>This test should run but it did not. Most likely a setup in some parent block failed.</message>
                      <stack-trace />
                    </failure>
                  </test-case>
                  <test-case description="Should return an array with the correct string values" name="Get-Something.When passing values over the pipeline.Should return an array with the correct string values" time="0" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>This test should run but it did not. Most likely a setup in some parent block failed.</message>
                      <stack-trace />
                    </failure>
                  </test-case>
                  <test-case description="Should accept values from the pipeline by property name" name="Get-Something.When passing values over the pipeline.Should accept values from the pipeline by property name" time="0" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>This test should run but it did not. Most likely a setup in some parent block failed.</message>
                      <stack-trace />
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Get-Something.When passing WhatIf" executed="True" result="Failure" success="False" time="0" asserts="0" description="Get-Something.When passing WhatIf">
                <results>
                  <test-case description="Should support the parameter WhatIf" name="Get-Something.When passing WhatIf.Should support the parameter WhatIf" time="0" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>This test should run but it did not. Most likely a setup in some parent block failed.</message>
                      <stack-trace />
                    </failure>
                  </test-case>
                  <test-case description="Should not call the private function" name="Get-Something.When passing WhatIf.Should not call the private function" time="0" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>This test should run but it did not. Most likely a setup in some parent block failed.</message>
                      <stack-trace />
                    </failure>
                  </test-case>
                  <test-case description="Should return $null" name="Get-Something.When passing WhatIf.Should return $null" time="0" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>This test should run but it did not. Most likely a setup in some parent block failed.</message>
                      <stack-trace />
                    </failure>
                  </test-case>
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
    </results>
  </test-suite>
</test-results>