<Objs Version="1.1.0.1" xmlns="http://schemas.microsoft.com/powershell/2004/04">
  <Obj RefId="0">
    <TN RefId="0">
      <T>Pester.Run</T>
      <T>System.Object</T>
    </TN>
    <ToString>[-] Pester</ToString>
    <Props>
      <Obj N="Containers" RefId="1">
        <TN RefId="1">
          <T>System.Collections.Generic.List`1[[Pester.Container, Pester, Version=5.6.1.0, Culture=neutral, PublicKeyToken=null]]</T>
          <T>System.Object</T>
        </TN>
        <LST>
          <Obj RefId="2">
            <TN RefId="2">
              <T>Pester.Container</T>
              <T>System.Object</T>
            </TN>
            <ToString>[-] C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1</ToString>
            <Props>
              <S N="Name">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1</S>
              <S N="Type">File</S>
              <Obj N="Item" RefId="3">
                <TN RefId="3">
                  <T>System.IO.FileInfo</T>
                  <T>System.IO.FileSystemInfo</T>
                  <T>System.MarshalByRefObject</T>
                  <T>System.Object</T>
                </TN>
                <ToString>C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1</ToString>
                <Props>
                  <S N="Name">module.tests.ps1</S>
                  <I64 N="Length">8332</I64>
                  <S N="DirectoryName">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA</S>
                  <Obj N="Directory" RefId="4">
                    <TN RefId="4">
                      <T>System.IO.DirectoryInfo</T>
                      <T>System.IO.FileSystemInfo</T>
                      <T>System.MarshalByRefObject</T>
                      <T>System.Object</T>
                    </TN>
                    <ToString>C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA</ToString>
                    <Props>
                      <S N="Name">QA</S>
                      <Obj N="Parent" RefId="5">
                        <TNRef RefId="4" />
                        <ToString>C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests</ToString>
                        <Props>
                          <S N="Name">tests</S>
                          <S N="Parent">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO</S>
                          <S N="Root">C:\</S>
                          <B N="Exists">true</B>
                          <S N="FullName">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests</S>
                          <S N="Extension"></S>
                          <DT N="CreationTime">2024-08-03T13:02:33.5570948-07:00</DT>
                          <DT N="CreationTimeUtc">2024-08-03T20:02:33.5570948Z</DT>
                          <DT N="LastAccessTime">2024-08-03T13:02:34.0927425-07:00</DT>
                          <DT N="LastAccessTimeUtc">2024-08-03T20:02:34.0927425Z</DT>
                          <DT N="LastWriteTime">2024-08-03T13:02:34.0927425-07:00</DT>
                          <DT N="LastWriteTimeUtc">2024-08-03T20:02:34.0927425Z</DT>
                          <Nil N="LinkTarget" />
                          <S N="UnixFileMode">-1</S>
                          <S N="Attributes">Directory</S>
                        </Props>
                        <MS>
                          <S N="Mode">d----</S>
                          <S N="ModeWithoutHardLink">d----</S>
                          <S N="BaseName">tests</S>
                          <S N="ResolvedTarget">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests</S>
                          <Nil N="Target" />
                          <Nil N="LinkType" />
                          <S N="NameString">_x001B_[44;1mtests_x001B_[0m</S>
                          <S N="LengthString"></S>
                          <S N="LastWriteTimeString">  8/3/2024  1:02 PM</S>
                        </MS>
                      </Obj>
                      <Obj N="Root" RefId="6">
                        <TNRef RefId="4" />
                        <ToString>C:\</ToString>
                        <Props>
                          <S N="Name">C:\</S>
                          <Nil N="Parent" />
                          <S N="Root">C:\</S>
                          <B N="Exists">true</B>
                          <S N="FullName">C:\</S>
                          <S N="Extension"></S>
                          <DT N="CreationTime">2024-03-31T23:58:25.0116655-07:00</DT>
                          <DT N="CreationTimeUtc">2024-04-01T06:58:25.0116655Z</DT>
                          <DT N="LastAccessTime">2024-08-02T19:57:42.5881892-07:00</DT>
                          <DT N="LastAccessTimeUtc">2024-08-03T02:57:42.5881892Z</DT>
                          <DT N="LastWriteTime">2024-08-02T19:57:42.5881892-07:00</DT>
                          <DT N="LastWriteTimeUtc">2024-08-03T02:57:42.5881892Z</DT>
                          <Nil N="LinkTarget" />
                          <S N="UnixFileMode">-1</S>
                          <S N="Attributes">Hidden, System, Directory</S>
                        </Props>
                        <MS>
                          <S N="Mode">d--hs</S>
                          <S N="ModeWithoutHardLink">d--hs</S>
                          <S N="BaseName">C:\</S>
                          <Nil N="Target" />
                          <Nil N="LinkType" />
                          <S N="LengthString"></S>
                          <S N="LastWriteTimeString">  8/2/2024  7:57 PM</S>
                        </MS>
                      </Obj>
                      <B N="Exists">true</B>
                      <S N="FullName">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA</S>
                      <S N="Extension"></S>
                      <DT N="CreationTime">2024-08-03T13:02:34.0927425-07:00</DT>
                      <DT N="CreationTimeUtc">2024-08-03T20:02:34.0927425Z</DT>
                      <DT N="LastAccessTime">2024-08-03T13:02:34.286981-07:00</DT>
                      <DT N="LastAccessTimeUtc">2024-08-03T20:02:34.286981Z</DT>
                      <DT N="LastWriteTime">2024-08-03T13:02:34.286981-07:00</DT>
                      <DT N="LastWriteTimeUtc">2024-08-03T20:02:34.286981Z</DT>
                      <Nil N="LinkTarget" />
                      <Obj N="UnixFileMode" RefId="7">
                        <TN RefId="5">
                          <T>System.IO.UnixFileMode</T>
                          <T>System.Enum</T>
                          <T>System.ValueType</T>
                          <T>System.Object</T>
                        </TN>
                        <ToString>-1</ToString>
                        <I32>-1</I32>
                      </Obj>
                      <Obj N="Attributes" RefId="8">
                        <TN RefId="6">
                          <T>System.IO.FileAttributes</T>
                          <T>System.Enum</T>
                          <T>System.ValueType</T>
                          <T>System.Object</T>
                        </TN>
                        <ToString>Directory</ToString>
                        <I32>16</I32>
                      </Obj>
                    </Props>
                    <MS>
                      <S N="Mode">d----</S>
                      <S N="ModeWithoutHardLink">d----</S>
                      <S N="BaseName">QA</S>
                      <S N="ResolvedTarget">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA</S>
                      <Nil N="Target" />
                      <Nil N="LinkType" />
                      <S N="NameString">_x001B_[44;1mQA_x001B_[0m</S>
                      <S N="LengthString"></S>
                      <S N="LastWriteTimeString">  8/3/2024  1:02 PM</S>
                    </MS>
                  </Obj>
                  <B N="IsReadOnly">false</B>
                  <B N="Exists">true</B>
                  <S N="FullName">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1</S>
                  <S N="Extension">.ps1</S>
                  <DT N="CreationTime">2024-08-03T13:02:34.286981-07:00</DT>
                  <DT N="CreationTimeUtc">2024-08-03T20:02:34.286981Z</DT>
                  <DT N="LastAccessTime">2024-08-03T13:02:34.286981-07:00</DT>
                  <DT N="LastAccessTimeUtc">2024-08-03T20:02:34.286981Z</DT>
                  <DT N="LastWriteTime">2024-08-03T13:02:34.2573262-07:00</DT>
                  <DT N="LastWriteTimeUtc">2024-08-03T20:02:34.2573262Z</DT>
                  <Nil N="LinkTarget" />
                  <Obj N="UnixFileMode" RefId="9">
                    <TNRef RefId="5" />
                    <ToString>-1</ToString>
                    <I32>-1</I32>
                  </Obj>
                  <Obj N="Attributes" RefId="10">
                    <TNRef RefId="6" />
                    <ToString>Archive</ToString>
                    <I32>32</I32>
                  </Obj>
                </Props>
                <MS>
                  <S N="PSPath">Microsoft.PowerShell.Core\FileSystem::C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1</S>
                  <S N="PSParentPath">Microsoft.PowerShell.Core\FileSystem::C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA</S>
                  <S N="PSChildName">module.tests.ps1</S>
                  <Obj N="PSDrive" RefId="11">
                    <TN RefId="7">
                      <T>System.Management.Automation.PSDriveInfo</T>
                      <T>System.Object</T>
                    </TN>
                    <ToString>C</ToString>
                    <Props>
                      <S N="CurrentLocation">Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO</S>
                      <S N="Name">C</S>
                      <Obj N="Provider" RefId="12">
                        <TN RefId="8">
                          <T>System.Management.Automation.ProviderInfo</T>
                          <T>System.Object</T>
                        </TN>
                        <ToString>Microsoft.PowerShell.Core\FileSystem</ToString>
                        <Props>
                          <Obj N="ImplementingType" RefId="13">
                            <TN RefId="9">
                              <T>System.RuntimeType</T>
                              <T>System.Reflection.TypeInfo</T>
                              <T>System.Type</T>
                              <T>System.Reflection.MemberInfo</T>
                              <T>System.Object</T>
                            </TN>
                            <ToString>Microsoft.PowerShell.Commands.FileSystemProvider</ToString>
                            <Props>
                              <B N="IsCollectible">false</B>
                              <S N="FullName">Microsoft.PowerShell.Commands.FileSystemProvider</S>
                              <S N="AssemblyQualifiedName">Microsoft.PowerShell.Commands.FileSystemProvider, System.Management.Automation, Version=7.4.4.500, Culture=neutral, PublicKeyToken=31bf3856ad364e35</S>
                              <S N="Namespace">Microsoft.PowerShell.Commands</S>
                              <G N="GUID">00dada53-70e2-3a43-89f4-5bcf26672e9b</G>
                              <B N="IsEnum">false</B>
                              <B N="IsConstructedGenericType">false</B>
                              <B N="IsGenericType">false</B>
                              <B N="IsGenericTypeDefinition">false</B>
                              <B N="IsSZArray">false</B>
                              <B N="ContainsGenericParameters">false</B>
                              <S N="StructLayoutAttribute">System.Runtime.InteropServices.StructLayoutAttribute</S>
                              <B N="IsFunctionPointer">false</B>
                              <B N="IsUnmanagedFunctionPointer">false</B>
                              <S N="Name">FileSystemProvider</S>
                              <Nil N="DeclaringType" />
                              <S N="Assembly">System.Management.Automation, Version=7.4.4.500, Culture=neutral, PublicKeyToken=31bf3856ad364e35</S>
                              <S N="BaseType">System.Management.Automation.Provider.NavigationCmdletProvider</S>
                              <B N="IsByRefLike">false</B>
                              <B N="IsGenericParameter">false</B>
                              <B N="IsTypeDefinition">true</B>
                              <B N="IsSecurityCritical">true</B>
                              <B N="IsSecuritySafeCritical">false</B>
                              <B N="IsSecurityTransparent">false</B>
                              <S N="MemberType">TypeInfo</S>
                              <I32 N="MetadataToken">33556342</I32>
                              <S N="Module">System.Management.Automation.dll</S>
                              <Nil N="ReflectedType" />
                              <S N="TypeHandle">System.RuntimeTypeHandle</S>
                              <Ref N="UnderlyingSystemType" RefId="13" />
                              <Obj N="GenericTypeParameters" RefId="14">
                                <TN RefId="10">
                                  <T>System.Type[]</T>
                                  <T>System.Array</T>
                                  <T>System.Object</T>
                                </TN>
                                <LST />
                              </Obj>
                              <Obj N="DeclaredConstructors" RefId="15">
                                <TN RefId="11">
                                  <T>System.Reflection.ConstructorInfo[]</T>
                                  <T>System.Array</T>
                                  <T>System.Object</T>
                                </TN>
                                <LST>
                                  <S>Void .ctor()</S>
                                  <S>Void .cctor()</S>
                                </LST>
                              </Obj>
                              <Obj N="DeclaredEvents" RefId="16">
                                <TN RefId="12">
                                  <T>System.Reflection.EventInfo[]</T>
                                  <T>System.Array</T>
                                  <T>System.Object</T>
                                </TN>
                                <LST />
                              </Obj>
                              <Obj N="DeclaredFields" RefId="17">
                                <TN RefId="13">
                                  <T>System.Reflection.FieldInfo[]</T>
                                  <T>System.Array</T>
                                  <T>System.Object</T>
                                </TN>
                                <LST>
                                  <S>System.Collections.ObjectModel.Collection`1[System.Management.Automation.WildcardPattern] _excludeMatcher</S>
                                  <S>Int64 _totalFiles</S>
                                  <S>Int64 _totalBytes</S>
                                  <S>Int64 _copiedFiles</S>
                                  <S>Int64 _copiedBytes</S>
                                  <S>System.Diagnostics.Stopwatch _copyStopwatch</S>
                                  <S>System.Management.Automation.PSTraceSource s_tracer</S>
                                  <S>System.IO.EnumerationOptions _enumerationOptions</S>
                                  <S>Int32 FILETRANSFERSIZE</S>
                                  <S>Int32 COPY_FILE_ACTIVITY_ID</S>
                                  <S>System.String SelfCopyDataKey</S>
                                  <S>System.String ProviderName</S>
                                </LST>
                              </Obj>
                              <Obj N="DeclaredMembers" RefId="18">
                                <TN RefId="14">
                                  <T>System.Reflection.MemberInfo[]</T>
                                  <T>System.Array</T>
                                  <T>System.Object</T>
                                </TN>
                                <LST>
                                  <S>System.String NormalizePath(System.String)</S>
                                  <S>System.String GetCorrectCasedPath(System.String)</S>
                                  <S>System.IO.FileSystemInfo GetFileSystemInfo(System.String, Boolean ByRef)</S>
                                  <S>Boolean IsFilterSet()</S>
                                  <S>System.Object GetChildNamesDynamicParameters(System.String)</S>
                                  <S>System.Object GetChildItemsDynamicParameters(System.String, Boolean)</S>
                                  <S>System.Object CopyItemDynamicParameters(System.String, System.String, Boolean)</S>
                                  <S>System.String GetHelpMaml(System.String, System.String)</S>
                                  <S>System.Management.Automation.ProviderInfo Start(System.Management.Automation.ProviderInfo)</S>
                                  <S>System.Management.Automation.PSDriveInfo NewDrive(System.Management.Automation.PSDriveInfo)</S>
                                  <S>Void MapNetworkDrive(System.Management.Automation.PSDriveInfo)</S>
                                  <S>Boolean IsNetworkMappedDrive(System.Management.Automation.PSDriveInfo)</S>
                                  <S>System.Management.Automation.PSDriveInfo RemoveDrive(System.Management.Automation.PSDriveInfo)</S>
                                  <S>Boolean IsSupportedDriveForPersistence(System.Management.Automation.PSDriveInfo)</S>
                                  <S>System.String GetUNCForNetworkDrive(System.String)</S>
                                  <S>System.String GetSubstitutedPathForNetworkDosDevice(System.String)</S>
                                  <S>System.String WinGetSubstitutedPathForNetworkDosDevice(System.String)</S>
                                  <S>System.String GetRootPathForNetworkDriveOrDosDevice(System.IO.DriveInfo)</S>
                                  <S>System.Collections.ObjectModel.Collection`1[System.Management.Automation.PSDriveInfo] InitializeDefaultDrives()</S>
                                  <S>System.Object GetItemDynamicParameters(System.String)</S>
                                  <S>Boolean IsValidPath(System.String)</S>
                                  <S>Void GetItem(System.String)</S>
                                  <S>System.IO.FileSystemInfo GetFileSystemItem(System.String, Boolean ByRef, Boolean)</S>
                                  <S>Void InvokeDefaultAction(System.String)</S>
                                  <S>Void GetChildItems(System.String, Boolean, UInt32)</S>
                                  <S>Void GetChildNames(System.String, System.Management.Automation.ReturnContainers)</S>
                                  <S>Boolean ConvertPath(System.String, System.String, System.String ByRef, System.String ByRef)</S>
                                  <S>Void GetPathItems(System.String, Boolean, UInt32, Boolean, System.Management.Automation.ReturnContainers)</S>
                                  <S>Void Dir(System.IO.DirectoryInfo, Boolean, UInt32, Boolean, System.Management.Automation.ReturnContainers, InodeTracker)</S>
                                  <S>System.Management.Automation.FlagsExpression`1[System.IO.FileAttributes] FormatAttributeSwitchParameters()</S>
                                  <S>System.String Mode(System.Management.Automation.PSObject)</S>
                                  <S>System.String ModeWithoutHardLink(System.Management.Automation.PSObject)</S>
                                  <S>System.String Mode(System.Management.Automation.PSObject, Boolean)</S>
                                  <S>System.String NameString(System.Management.Automation.PSObject)</S>
                                  <S>System.String LengthString(System.Management.Automation.PSObject)</S>
                                  <S>System.String LastWriteTimeString(System.Management.Automation.PSObject)</S>
                                  <S>Void RenameItem(System.String, System.String)</S>
                                  <S>Void NewItem(System.String, System.String, System.Object)</S>
                                  <S>Boolean WinCreateSymbolicLink(System.String, System.String, Boolean)</S>
                                  <S>Boolean WinCreateJunction(System.String, System.String)</S>
                                  <S>ItemType GetItemType(System.String)</S>
                                  <S>Void CreateDirectory(System.String, Boolean)</S>
                                  <S>Boolean CreateIntermediateDirectories(System.String)</S>
                                  <S>Void RemoveItem(System.String, Boolean)</S>
                                  <S>System.Object RemoveItemDynamicParameters(System.String, Boolean)</S>
                                  <S>Void RemoveDirectoryInfoItem(System.IO.DirectoryInfo, Boolean, Boolean, Boolean)</S>
                                  <S>Void RemoveFileInfoItem(System.IO.FileInfo, Boolean)</S>
                                  <S>Void RemoveFileSystemItem(System.IO.FileSystemInfo, Boolean)</S>
                                  <S>Boolean ItemExists(System.String)</S>
                                  <S>Boolean ItemExists(System.String, System.Management.Automation.ErrorRecord ByRef)</S>
                                  <S>System.Object ItemExistsDynamicParameters(System.String)</S>
                                  <S>Boolean HasChildItems(System.String)</S>
                                  <S>Boolean DirectoryInfoHasChildItems(System.IO.DirectoryInfo)</S>
                                  <S>Void CopyItem(System.String, System.String, Boolean)</S>
                                  <S>Void GetTotalFiles(System.String, Boolean)</S>
                                  <S>Void CopyItemFromRemoteSession(System.String, System.String, Boolean, Boolean, System.Management.Automation.Runspaces.PSSession)</S>
                                  <S>Void CopyItemLocalOrToSession(System.String, System.String, Boolean, Boolean, System.Management.Automation.PowerShell)</S>
                                  <S>Void CopyDirectoryInfoItem(System.IO.DirectoryInfo, System.String, Boolean, Boolean, System.Management.Automation.PowerShell)</S>
                                  <S>Void CopyFileInfoItem(System.IO.FileInfo, System.String, Boolean, System.Management.Automation.PowerShell)</S>
                                  <S>Void CopyDirectoryFromRemoteSession(System.String, System.String, System.String, Boolean, Boolean, System.Management.Automation.PowerShell)</S>
                                  <S>System.Collections.ArrayList GetRemoteSourceAlternateStreams(System.Management.Automation.PowerShell, System.String)</S>
                                  <S>Void InitializeFunctionPSCopyFileFromRemoteSession(System.Management.Automation.PowerShell)</S>
                                  <S>Void RemoveFunctionsPSCopyFileFromRemoteSession(System.Management.Automation.PowerShell)</S>
                                  <S>Boolean ValidRemoteSessionForScripting(System.Management.Automation.Runspaces.Runspace)</S>
                                  <S>System.Collections.Hashtable GetRemoteFileMetadata(System.String, System.Management.Automation.PowerShell)</S>
                                  <S>Void SetFileMetadata(System.String, System.IO.FileInfo, System.Management.Automation.PowerShell)</S>
                                  <S>Void CopyFileFromRemoteSession(System.String, System.String, System.String, Boolean, System.Management.Automation.PowerShell, Int64)</S>
                                  <S>Boolean PerformCopyFileFromRemoteSession(System.String, System.IO.FileInfo, System.String, Boolean, System.Management.Automation.PowerShell, Int64, Boolean, System.String)</S>
                                  <S>Void InitializeFunctionsPSCopyFileToRemoteSession(System.Management.Automation.PowerShell)</S>
                                  <S>Void RemoveFunctionPSCopyFileToRemoteSession(System.Management.Automation.PowerShell)</S>
                                  <S>Boolean RemoteTargetSupportsAlternateStreams(System.Management.Automation.PowerShell, System.String)</S>
                                  <S>System.String MakeRemotePath(System.Management.Automation.PowerShell, System.String, System.String)</S>
                                  <S>Boolean RemoteDirectoryExist(System.Management.Automation.PowerShell, System.String)</S>
                                  <S>Boolean CopyFileStreamToRemoteSession(System.IO.FileInfo, System.String, System.Management.Automation.PowerShell, Boolean, System.String)</S>
                                  <S>System.Collections.Hashtable GetFileMetadata(System.IO.FileInfo)</S>
                                  <S>Void SetRemoteFileMetadata(System.IO.FileInfo, System.String, System.Management.Automation.PowerShell)</S>
                                  <S>Boolean PerformCopyFileToRemoteSession(System.IO.FileInfo, System.String, System.Management.Automation.PowerShell)</S>
                                  <S>Boolean RemoteDestinationPathIsFile(System.String, System.Management.Automation.PowerShell)</S>
                                  <S>System.String CreateDirectoryOnRemoteSession(System.String, Boolean, System.Management.Automation.PowerShell)</S>
                                  <S>Boolean PathIsReservedDeviceName(System.String, System.String)</S>
                                  <S>System.String GetParentPath(System.String, System.String)</S>
                                  <S>Boolean IsAbsolutePath(System.String)</S>
                                  <S>Boolean IsUNCRoot(System.String)</S>
                                  <S>Boolean IsPathRoot(System.String)</S>
                                  <S>System.String NormalizeRelativePath(System.String, System.String)</S>
                                  <S>System.String NormalizeRelativePathHelper(System.String, System.String)</S>
                                  <S>System.String RemoveRelativeTokens(System.String)</S>
                                  <S>System.String GetCommonBase(System.String, System.String)</S>
                                  <S>System.Collections.Generic.Stack`1[System.String] TokenizePathToStack(System.String, System.String)</S>
                                  <S>System.Collections.Generic.Stack`1[System.String] NormalizeThePath(System.String, System.Collections.Generic.Stack`1[System.String])</S>
                                  <S>System.String CreateNormalizedRelativePathFromStack(System.Collections.Generic.Stack`1[System.String])</S>
                                  <S>System.String GetChildName(System.String)</S>
                                  <S>System.String EnsureDriveIsRooted(System.String)</S>
                                  <S>Boolean IsItemContainer(System.String)</S>
                                  <S>Void MoveItem(System.String, System.String)</S>
                                  <S>Void MoveFileInfoItem(System.IO.FileInfo, System.String, Boolean, Boolean)</S>
                                  <S>Void MoveDirectoryInfoItem(System.IO.DirectoryInfo, System.String, Boolean)</S>
                                  <S>Void MoveDirectoryInfoUnchecked(System.IO.DirectoryInfo, System.String, Boolean)</S>
                                  <S>Void CopyAndDelete(System.IO.DirectoryInfo, System.String, Boolean)</S>
                                  <S>Void GetProperty(System.String, System.Collections.ObjectModel.Collection`1[System.String])</S>
                                  <S>System.Object GetPropertyDynamicParameters(System.String, System.Collections.ObjectModel.Collection`1[System.String])</S>
                                  <S>Void SetProperty(System.String, System.Management.Automation.PSObject)</S>
                                  <S>System.Object SetPropertyDynamicParameters(System.String, System.Management.Automation.PSObject)</S>
                                  <S>Void ClearProperty(System.String, System.Collections.ObjectModel.Collection`1[System.String])</S>
                                  <S>System.Object ClearPropertyDynamicParameters(System.String, System.Collections.ObjectModel.Collection`1[System.String])</S>
                                  <S>System.Management.Automation.Provider.IContentReader GetContentReader(System.String)</S>
                                  <S>System.Object GetContentReaderDynamicParameters(System.String)</S>
                                  <S>System.Management.Automation.Provider.IContentWriter GetContentWriter(System.String)</S>
                                  <S>System.Object GetContentWriterDynamicParameters(System.String)</S>
                                  <S>Void ClearContent(System.String)</S>
                                  <S>System.Object ClearContentDynamicParameters(System.String)</S>
                                  <S>Void ValidateParameters(Boolean)</S>
                                  <S>Boolean PathIsNetworkPath(System.String)</S>
                                  <S>Boolean WinPathIsNetworkPath(System.String)</S>
                                  <S>Void GetSecurityDescriptor(System.String, System.Security.AccessControl.AccessControlSections)</S>
                                  <S>Void SetSecurityDescriptor(System.String, System.Security.AccessControl.ObjectSecurity)</S>
                                  <S>Void SetSecurityDescriptor(System.String, System.Security.AccessControl.ObjectSecurity, System.Security.AccessControl.AccessControlSections)</S>
                                  <S>System.Security.AccessControl.ObjectSecurity NewSecurityDescriptorFromPath(System.String, System.Security.AccessControl.AccessControlSections)</S>
                                  <S>System.Security.AccessControl.ObjectSecurity NewSecurityDescriptorOfType(System.String, System.Security.AccessControl.AccessControlSections)</S>
                                  <S>System.Security.AccessControl.ObjectSecurity NewSecurityDescriptor(ItemType)</S>
                                  <S>System.Management.Automation.ErrorRecord CreateErrorRecord(System.String, System.String)</S>
                                  <S>System.String &lt;Mode&gt;g__ToModeString|40_0(System.IO.FileSystemInfo, &lt;&gt;c__DisplayClass40_0 ByRef)</S>
                                  <S>Void &lt;RemoveDirectoryInfoItem&gt;g__WriteErrorHelper|54_0(System.Exception, &lt;&gt;c__DisplayClass54_0 ByRef)</S>
                                  <S>Void .ctor()</S>
                                  <S>Void .cctor()</S>
                                  <S>System.Collections.ObjectModel.Collection`1[System.Management.Automation.WildcardPattern] _excludeMatcher</S>
                                  <S>Int64 _totalFiles</S>
                                  <S>Int64 _totalBytes</S>
                                  <S>Int64 _copiedFiles</S>
                                  <S>Int64 _copiedBytes</S>
                                  <S>System.Diagnostics.Stopwatch _copyStopwatch</S>
                                  <S>System.Management.Automation.PSTraceSource s_tracer</S>
                                  <S>System.IO.EnumerationOptions _enumerationOptions</S>
                                  <S>Int32 FILETRANSFERSIZE</S>
                                  <S>Int32 COPY_FILE_ACTIVITY_ID</S>
                                  <S>System.String SelfCopyDataKey</S>
                                  <S>System.String ProviderName</S>
                                  <S>Microsoft.PowerShell.Commands.FileSystemProvider+ItemType</S>
                                  <S>Microsoft.PowerShell.Commands.FileSystemProvider+InodeTracker</S>
                                  <S>Microsoft.PowerShell.Commands.FileSystemProvider+&lt;&gt;c</S>
                                  <S>Microsoft.PowerShell.Commands.FileSystemProvider+&lt;&gt;c__DisplayClass40_0</S>
                                  <S>Microsoft.PowerShell.Commands.FileSystemProvider+&lt;&gt;c__DisplayClass54_0</S>
                                  <S>Microsoft.PowerShell.Commands.FileSystemProvider+&lt;&gt;c__DisplayClass62_0</S>
                                </LST>
                              </Obj>
                              <Obj N="DeclaredMethods" RefId="19">
                                <TN RefId="15">
                                  <T>System.Reflection.MethodInfo[]</T>
                                  <T>System.Array</T>
                                  <T>System.Object</T>
                                </TN>
                                <LST>
                                  <S>System.String NormalizePath(System.String)</S>
                                  <S>System.String GetCorrectCasedPath(System.String)</S>
                                  <S>System.IO.FileSystemInfo GetFileSystemInfo(System.String, Boolean ByRef)</S>
                                  <S>Boolean IsFilterSet()</S>
                                  <S>System.Object GetChildNamesDynamicParameters(System.String)</S>
                                  <S>System.Object GetChildItemsDynamicParameters(System.String, Boolean)</S>
                                  <S>System.Object CopyItemDynamicParameters(System.String, System.String, Boolean)</S>
                                  <S>System.String GetHelpMaml(System.String, System.String)</S>
                                  <S>System.Management.Automation.ProviderInfo Start(System.Management.Automation.ProviderInfo)</S>
                                  <S>System.Management.Automation.PSDriveInfo NewDrive(System.Management.Automation.PSDriveInfo)</S>
                                  <S>Void MapNetworkDrive(System.Management.Automation.PSDriveInfo)</S>
                                  <S>Boolean IsNetworkMappedDrive(System.Management.Automation.PSDriveInfo)</S>
                                  <S>System.Management.Automation.PSDriveInfo RemoveDrive(System.Management.Automation.PSDriveInfo)</S>
                                  <S>Boolean IsSupportedDriveForPersistence(System.Management.Automation.PSDriveInfo)</S>
                                  <S>System.String GetUNCForNetworkDrive(System.String)</S>
                                  <S>System.String GetSubstitutedPathForNetworkDosDevice(System.String)</S>
                                  <S>System.String WinGetSubstitutedPathForNetworkDosDevice(System.String)</S>
                                  <S>System.String GetRootPathForNetworkDriveOrDosDevice(System.IO.DriveInfo)</S>
                                  <S>System.Collections.ObjectModel.Collection`1[System.Management.Automation.PSDriveInfo] InitializeDefaultDrives()</S>
                                  <S>System.Object GetItemDynamicParameters(System.String)</S>
                                  <S>Boolean IsValidPath(System.String)</S>
                                  <S>Void GetItem(System.String)</S>
                                  <S>System.IO.FileSystemInfo GetFileSystemItem(System.String, Boolean ByRef, Boolean)</S>
                                  <S>Void InvokeDefaultAction(System.String)</S>
                                  <S>Void GetChildItems(System.String, Boolean, UInt32)</S>
                                  <S>Void GetChildNames(System.String, System.Management.Automation.ReturnContainers)</S>
                                  <S>Boolean ConvertPath(System.String, System.String, System.String ByRef, System.String ByRef)</S>
                                  <S>Void GetPathItems(System.String, Boolean, UInt32, Boolean, System.Management.Automation.ReturnContainers)</S>
                                  <S>Void Dir(System.IO.DirectoryInfo, Boolean, UInt32, Boolean, System.Management.Automation.ReturnContainers, InodeTracker)</S>
                                  <S>System.Management.Automation.FlagsExpression`1[System.IO.FileAttributes] FormatAttributeSwitchParameters()</S>
                                  <S>System.String Mode(System.Management.Automation.PSObject)</S>
                                  <S>System.String ModeWithoutHardLink(System.Management.Automation.PSObject)</S>
                                  <S>System.String Mode(System.Management.Automation.PSObject, Boolean)</S>
                                  <S>System.String NameString(System.Management.Automation.PSObject)</S>
                                  <S>System.String LengthString(System.Management.Automation.PSObject)</S>
                                  <S>System.String LastWriteTimeString(System.Management.Automation.PSObject)</S>
                                  <S>Void RenameItem(System.String, System.String)</S>
                                  <S>Void NewItem(System.String, System.String, System.Object)</S>
                                  <S>Boolean WinCreateSymbolicLink(System.String, System.String, Boolean)</S>
                                  <S>Boolean WinCreateJunction(System.String, System.String)</S>
                                  <S>ItemType GetItemType(System.String)</S>
                                  <S>Void CreateDirectory(System.String, Boolean)</S>
                                  <S>Boolean CreateIntermediateDirectories(System.String)</S>
                                  <S>Void RemoveItem(System.String, Boolean)</S>
                                  <S>System.Object RemoveItemDynamicParameters(System.String, Boolean)</S>
                                  <S>Void RemoveDirectoryInfoItem(System.IO.DirectoryInfo, Boolean, Boolean, Boolean)</S>
                                  <S>Void RemoveFileInfoItem(System.IO.FileInfo, Boolean)</S>
                                  <S>Void RemoveFileSystemItem(System.IO.FileSystemInfo, Boolean)</S>
                                  <S>Boolean ItemExists(System.String)</S>
                                  <S>Boolean ItemExists(System.String, System.Management.Automation.ErrorRecord ByRef)</S>
                                  <S>System.Object ItemExistsDynamicParameters(System.String)</S>
                                  <S>Boolean HasChildItems(System.String)</S>
                                  <S>Boolean DirectoryInfoHasChildItems(System.IO.DirectoryInfo)</S>
                                  <S>Void CopyItem(System.String, System.String, Boolean)</S>
                                  <S>Void GetTotalFiles(System.String, Boolean)</S>
                                  <S>Void CopyItemFromRemoteSession(System.String, System.String, Boolean, Boolean, System.Management.Automation.Runspaces.PSSession)</S>
                                  <S>Void CopyItemLocalOrToSession(System.String, System.String, Boolean, Boolean, System.Management.Automation.PowerShell)</S>
                                  <S>Void CopyDirectoryInfoItem(System.IO.DirectoryInfo, System.String, Boolean, Boolean, System.Management.Automation.PowerShell)</S>
                                  <S>Void CopyFileInfoItem(System.IO.FileInfo, System.String, Boolean, System.Management.Automation.PowerShell)</S>
                                  <S>Void CopyDirectoryFromRemoteSession(System.String, System.String, System.String, Boolean, Boolean, System.Management.Automation.PowerShell)</S>
                                  <S>System.Collections.ArrayList GetRemoteSourceAlternateStreams(System.Management.Automation.PowerShell, System.String)</S>
                                  <S>Void InitializeFunctionPSCopyFileFromRemoteSession(System.Management.Automation.PowerShell)</S>
                                  <S>Void RemoveFunctionsPSCopyFileFromRemoteSession(System.Management.Automation.PowerShell)</S>
                                  <S>Boolean ValidRemoteSessionForScripting(System.Management.Automation.Runspaces.Runspace)</S>
                                  <S>System.Collections.Hashtable GetRemoteFileMetadata(System.String, System.Management.Automation.PowerShell)</S>
                                  <S>Void SetFileMetadata(System.String, System.IO.FileInfo, System.Management.Automation.PowerShell)</S>
                                  <S>Void CopyFileFromRemoteSession(System.String, System.String, System.String, Boolean, System.Management.Automation.PowerShell, Int64)</S>
                                  <S>Boolean PerformCopyFileFromRemoteSession(System.String, System.IO.FileInfo, System.String, Boolean, System.Management.Automation.PowerShell, Int64, Boolean, System.String)</S>
                                  <S>Void InitializeFunctionsPSCopyFileToRemoteSession(System.Management.Automation.PowerShell)</S>
                                  <S>Void RemoveFunctionPSCopyFileToRemoteSession(System.Management.Automation.PowerShell)</S>
                                  <S>Boolean RemoteTargetSupportsAlternateStreams(System.Management.Automation.PowerShell, System.String)</S>
                                  <S>System.String MakeRemotePath(System.Management.Automation.PowerShell, System.String, System.String)</S>
                                  <S>Boolean RemoteDirectoryExist(System.Management.Automation.PowerShell, System.String)</S>
                                  <S>Boolean CopyFileStreamToRemoteSession(System.IO.FileInfo, System.String, System.Management.Automation.PowerShell, Boolean, System.String)</S>
                                  <S>System.Collections.Hashtable GetFileMetadata(System.IO.FileInfo)</S>
                                  <S>Void SetRemoteFileMetadata(System.IO.FileInfo, System.String, System.Management.Automation.PowerShell)</S>
                                  <S>Boolean PerformCopyFileToRemoteSession(System.IO.FileInfo, System.String, System.Management.Automation.PowerShell)</S>
                                  <S>Boolean RemoteDestinationPathIsFile(System.String, System.Management.Automation.PowerShell)</S>
                                  <S>System.String CreateDirectoryOnRemoteSession(System.String, Boolean, System.Management.Automation.PowerShell)</S>
                                  <S>Boolean PathIsReservedDeviceName(System.String, System.String)</S>
                                  <S>System.String GetParentPath(System.String, System.String)</S>
                                  <S>Boolean IsAbsolutePath(System.String)</S>
                                  <S>Boolean IsUNCRoot(System.String)</S>
                                  <S>Boolean IsPathRoot(System.String)</S>
                                  <S>System.String NormalizeRelativePath(System.String, System.String)</S>
                                  <S>System.String NormalizeRelativePathHelper(System.String, System.String)</S>
                                  <S>System.String RemoveRelativeTokens(System.String)</S>
                                  <S>System.String GetCommonBase(System.String, System.String)</S>
                                  <S>System.Collections.Generic.Stack`1[System.String] TokenizePathToStack(System.String, System.String)</S>
                                  <S>System.Collections.Generic.Stack`1[System.String] NormalizeThePath(System.String, System.Collections.Generic.Stack`1[System.String])</S>
                                  <S>System.String CreateNormalizedRelativePathFromStack(System.Collections.Generic.Stack`1[System.String])</S>
                                  <S>System.String GetChildName(System.String)</S>
                                  <S>System.String EnsureDriveIsRooted(System.String)</S>
                                  <S>Boolean IsItemContainer(System.String)</S>
                                  <S>Void MoveItem(System.String, System.String)</S>
                                  <S>Void MoveFileInfoItem(System.IO.FileInfo, System.String, Boolean, Boolean)</S>
                                  <S>Void MoveDirectoryInfoItem(System.IO.DirectoryInfo, System.String, Boolean)</S>
                                  <S>Void MoveDirectoryInfoUnchecked(System.IO.DirectoryInfo, System.String, Boolean)</S>
                                  <S>Void CopyAndDelete(System.IO.DirectoryInfo, System.String, Boolean)</S>
                                  <S>Void GetProperty(System.String, System.Collections.ObjectModel.Collection`1[System.String])</S>
                                  <S>System.Object GetPropertyDynamicParameters(System.String, System.Collections.ObjectModel.Collection`1[System.String])</S>
                                  <S>Void SetProperty(System.String, System.Management.Automation.PSObject)</S>
                                  <S>System.Object SetPropertyDynamicParameters(System.String, System.Management.Automation.PSObject)</S>
                                  <S>Void ClearProperty(System.String, System.Collections.ObjectModel.Collection`1[System.String])</S>
                                  <S>System.Object ClearPropertyDynamicParameters(System.String, System.Collections.ObjectModel.Collection`1[System.String])</S>
                                  <S>System.Management.Automation.Provider.IContentReader GetContentReader(System.String)</S>
                                  <S>System.Object GetContentReaderDynamicParameters(System.String)</S>
                                  <S>System.Management.Automation.Provider.IContentWriter GetContentWriter(System.String)</S>
                                  <S>System.Object GetContentWriterDynamicParameters(System.String)</S>
                                  <S>Void ClearContent(System.String)</S>
                                  <S>System.Object ClearContentDynamicParameters(System.String)</S>
                                  <S>Void ValidateParameters(Boolean)</S>
                                  <S>Boolean PathIsNetworkPath(System.String)</S>
                                  <S>Boolean WinPathIsNetworkPath(System.String)</S>
                                  <S>Void GetSecurityDescriptor(System.String, System.Security.AccessControl.AccessControlSections)</S>
                                  <S>Void SetSecurityDescriptor(System.String, System.Security.AccessControl.ObjectSecurity)</S>
                                  <S>Void SetSecurityDescriptor(System.String, System.Security.AccessControl.ObjectSecurity, System.Security.AccessControl.AccessControlSections)</S>
                                  <S>System.Security.AccessControl.ObjectSecurity NewSecurityDescriptorFromPath(System.String, System.Security.AccessControl.AccessControlSections)</S>
                                  <S>System.Security.AccessControl.ObjectSecurity NewSecurityDescriptorOfType(System.String, System.Security.AccessControl.AccessControlSections)</S>
                                  <S>System.Security.AccessControl.ObjectSecurity NewSecurityDescriptor(ItemType)</S>
                                  <S>System.Management.Automation.ErrorRecord CreateErrorRecord(System.String, System.String)</S>
                                  <S>System.String &lt;Mode&gt;g__ToModeString|40_0(System.IO.FileSystemInfo, &lt;&gt;c__DisplayClass40_0 ByRef)</S>
                                  <S>Void &lt;RemoveDirectoryInfoItem&gt;g__WriteErrorHelper|54_0(System.Exception, &lt;&gt;c__DisplayClass54_0 ByRef)</S>
                                </LST>
                              </Obj>
                              <Obj N="DeclaredNestedTypes" RefId="20">
                                <TN RefId="16">
                                  <T>System.Reflection.TypeInfo+&lt;get_DeclaredNestedTypes&gt;d__22</T>
                                  <T>System.Object</T>
                                </TN>
                                <IE>
                                  <S>Microsoft.PowerShell.Commands.FileSystemProvider+ItemType</S>
                                  <S>Microsoft.PowerShell.Commands.FileSystemProvider+InodeTracker</S>
                                  <S>Microsoft.PowerShell.Commands.FileSystemProvider+&lt;&gt;c</S>
                                  <S>Microsoft.PowerShell.Commands.FileSystemProvider+&lt;&gt;c__DisplayClass40_0</S>
                                  <S>Microsoft.PowerShell.Commands.FileSystemProvider+&lt;&gt;c__DisplayClass54_0</S>
                                  <S>Microsoft.PowerShell.Commands.FileSystemProvider+&lt;&gt;c__DisplayClass62_0</S>
                                </IE>
                              </Obj>
                              <Obj N="DeclaredProperties" RefId="21">
                                <TN RefId="17">
                                  <T>System.Reflection.PropertyInfo[]</T>
                                  <T>System.Array</T>
                                  <T>System.Object</T>
                                </TN>
                                <LST />
                              </Obj>
                              <Obj N="ImplementedInterfaces" RefId="22">
                                <TNRef RefId="10" />
                                <LST>
                                  <S>System.Management.Automation.IResourceSupplier</S>
                                  <S>System.Management.Automation.Provider.IContentCmdletProvider</S>
                                  <S>System.Management.Automation.Provider.IPropertyCmdletProvider</S>
                                  <S>System.Management.Automation.Provider.ISecurityDescriptorCmdletProvider</S>
                                  <S>System.Management.Automation.Provider.ICmdletProviderSupportsHelp</S>
                                </LST>
                              </Obj>
                              <B N="IsInterface">false</B>
                              <B N="IsNested">false</B>
                              <B N="IsArray">false</B>
                              <B N="IsByRef">false</B>
                              <B N="IsPointer">false</B>
                              <B N="IsGenericTypeParameter">false</B>
                              <B N="IsGenericMethodParameter">false</B>
                              <B N="IsVariableBoundArray">false</B>
                              <B N="HasElementType">false</B>
                              <Ref N="GenericTypeArguments" RefId="14" />
                              <S N="Attributes">Public, Sealed, BeforeFieldInit</S>
                              <B N="IsAbstract">false</B>
                              <B N="IsImport">false</B>
                              <B N="IsSealed">true</B>
                              <B N="IsSpecialName">false</B>
                              <B N="IsClass">true</B>
                              <B N="IsNestedAssembly">false</B>
                              <B N="IsNestedFamANDAssem">false</B>
                              <B N="IsNestedFamily">false</B>
                              <B N="IsNestedFamORAssem">false</B>
                              <B N="IsNestedPrivate">false</B>
                              <B N="IsNestedPublic">false</B>
                              <B N="IsNotPublic">false</B>
                              <B N="IsPublic">true</B>
                              <B N="IsAutoLayout">true</B>
                              <B N="IsExplicitLayout">false</B>
                              <B N="IsLayoutSequential">false</B>
                              <B N="IsAnsiClass">true</B>
                              <B N="IsAutoClass">false</B>
                              <B N="IsUnicodeClass">false</B>
                              <B N="IsCOMObject">false</B>
                              <B N="IsContextful">false</B>
                              <B N="IsMarshalByRef">false</B>
                              <B N="IsPrimitive">false</B>
                              <B N="IsValueType">false</B>
                              <B N="IsSignatureType">false</B>
                              <S N="TypeInitializer">Void .cctor()</S>
                              <B N="IsSerializable">false</B>
                              <B N="IsVisible">true</B>
                              <Obj N="CustomAttributes" RefId="23">
                                <TN RefId="18">
                                  <T>System.Collections.ObjectModel.ReadOnlyCollection`1[[System.Reflection.CustomAttributeData, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]</T>
                                  <T>System.Object</T>
                                </TN>
                                <LST>
                                  <S>[System.Management.Automation.Provider.CmdletProviderAttribute("FileSystem", (System.Management.Automation.Provider.ProviderCapabilities)52)]</S>
                                  <S>[System.Management.Automation.OutputTypeAttribute(typeof(System.Security.AccessControl.FileSecurity), ProviderCmdlet = "Set-Acl")]</S>
                                  <S>[System.Management.Automation.OutputTypeAttribute(new Type[2] { typeof(System.String), typeof(System.Management.Automation.PathInfo) }, ProviderCmdlet = "Resolve-Path")]</S>
                                  <S>[System.Management.Automation.OutputTypeAttribute(typeof(System.Management.Automation.PathInfo), ProviderCmdlet = "Push-Location")]</S>
                                  <S>[System.Management.Automation.OutputTypeAttribute(typeof(System.Management.Automation.PathInfo), ProviderCmdlet = "Pop-Location")]</S>
                                  <S>[System.Management.Automation.OutputTypeAttribute(new Type[2] { typeof(System.Byte), typeof(System.String) }, ProviderCmdlet = "Get-Content")]</S>
                                  <S>[System.Management.Automation.OutputTypeAttribute(typeof(System.IO.FileInfo), ProviderCmdlet = "Get-Item")]</S>
                                  <S>[System.Management.Automation.OutputTypeAttribute(new Type[2] { typeof(System.IO.FileInfo), typeof(System.IO.DirectoryInfo) }, ProviderCmdlet = "Get-ChildItem")]</S>
                                  <S>[System.Management.Automation.OutputTypeAttribute(new Type[2] { typeof(System.Security.AccessControl.FileSecurity), typeof(System.Security.AccessControl.DirectorySecurity) }, ProviderCmdlet = "Get-Acl")]</S>
                                  <S>[System.Management.Automation.OutputTypeAttribute(new Type[4] { typeof(System.Boolean), typeof(System.String), typeof(System.IO.FileInfo), typeof(System.IO.DirectoryInfo) }, ProviderCmdlet = "Get-Item")]</S>
                                  <S>[System.Management.Automation.OutputTypeAttribute(new Type[5] { typeof(System.Boolean), typeof(System.String), typeof(System.DateTime), typeof(System.IO.FileInfo), typeof(System.IO.DirectoryInfo) }, ProviderCmdlet = "Get-ItemProperty")]</S>
                                  <S>[System.Management.Automation.OutputTypeAttribute(new Type[2] { typeof(System.String), typeof(System.IO.FileInfo) }, ProviderCmdlet = "New-Item")]</S>
                                </LST>
                              </Obj>
                            </Props>
                          </Obj>
                          <S N="HelpFile">System.Management.Automation.dll-Help.xml</S>
                          <S N="Name">FileSystem</S>
                          <Obj N="PSSnapIn" RefId="24">
                            <TN RefId="19">
                              <T>System.Management.Automation.PSSnapInInfo</T>
                              <T>System.Object</T>
                            </TN>
                            <ToString>Microsoft.PowerShell.Core</ToString>
                            <Props>
                              <S N="Name">Microsoft.PowerShell.Core</S>
                              <B N="IsDefault">true</B>
                              <S N="ApplicationBase">C:\Program Files\PowerShell\7</S>
                              <S N="AssemblyName">System.Management.Automation, Version=7.4.4.500, Culture=neutral, PublicKeyToken=31bf3856ad364e35</S>
                              <S N="ModuleName">C:\Program Files\PowerShell\7\System.Management.Automation.dll</S>
                              <Version N="PSVersion">7.4.4</Version>
                              <Version N="Version">7.4.4.500</Version>
                              <Obj N="Types" RefId="25">
                                <TN RefId="20">
                                  <T>System.Collections.ObjectModel.Collection`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]</T>
                                  <T>System.Object</T>
                                </TN>
                                <LST>
                                  <S>types.ps1xml</S>
                                  <S>typesv3.ps1xml</S>
                                </LST>
                              </Obj>
                              <Obj N="Formats" RefId="26">
                                <TNRef RefId="20" />
                                <LST>
                                  <S>Certificate.format.ps1xml</S>
                                  <S>DotNetTypes.format.ps1xml</S>
                                  <S>FileSystem.format.ps1xml</S>
                                  <S>Help.format.ps1xml</S>
                                  <S>HelpV3.format.ps1xml</S>
                                  <S>PowerShellCore.format.ps1xml</S>
                                  <S>PowerShellTrace.format.ps1xml</S>
                                  <S>Registry.format.ps1xml</S>
                                </LST>
                              </Obj>
                              <B N="LogPipelineExecutionDetails">false</B>
                            </Props>
                          </Obj>
                          <S N="ModuleName">Microsoft.PowerShell.Core</S>
                          <Nil N="Module" />
                          <S N="Description"></S>
                          <Obj N="Capabilities" RefId="27">
                            <TN RefId="21">
                              <T>System.Management.Automation.Provider.ProviderCapabilities</T>
                              <T>System.Enum</T>
                              <T>System.ValueType</T>
                              <T>System.Object</T>
                            </TN>
                            <ToString>Filter, ShouldProcess, Credentials</ToString>
                            <I32>52</I32>
                          </Obj>
                          <S N="Home">C:\Users\Administrator</S>
                          <Obj N="Drives" RefId="28">
                            <TN RefId="22">
                              <T>System.Collections.ObjectModel.Collection`1[[System.Management.Automation.PSDriveInfo, System.Management.Automation, Version=7.4.4.500, Culture=neutral, PublicKeyToken=31bf3856ad364e35]]</T>
                              <T>System.Object</T>
                            </TN>
                            <LST>
                              <Ref RefId="11" />
                              <Obj RefId="29">
                                <TNRef RefId="7" />
                                <ToString>Temp</ToString>
                                <Props>
                                  <S N="CurrentLocation"></S>
                                  <S N="Name">Temp</S>
                                  <Ref N="Provider" RefId="12" />
                                  <S N="Root">C:\Users\Administrator\AppData\Local\Temp\2\</S>
                                  <S N="Description">Drive that maps to the temporary directory path for the current user</S>
                                  <Nil N="MaximumSize" />
                                  <Obj N="Credential" RefId="30">
                                    <TN RefId="23">
                                      <T>System.Management.Automation.PSCredential</T>
                                      <T>System.Object</T>
                                    </TN>
                                    <ToString>System.Management.Automation.PSCredential</ToString>
                                    <Props>
                                      <Nil N="UserName" />
                                      <Nil N="Password" />
                                    </Props>
                                  </Obj>
                                  <Nil N="DisplayRoot" />
                                  <B N="VolumeSeparatedByColon">true</B>
                                </Props>
                                <MS>
                                  <I64 N="Used">38389829632</I64>
                                  <I64 N="Free">68622589952</I64>
                                </MS>
                              </Obj>
                              <Obj RefId="31">
                                <TNRef RefId="7" />
                                <ToString>D</ToString>
                                <Props>
                                  <S N="CurrentLocation"></S>
                                  <S N="Name">D</S>
                                  <Ref N="Provider" RefId="12" />
                                  <S N="Root">D:\</S>
                                  <S N="Description"></S>
                                  <Nil N="MaximumSize" />
                                  <Ref N="Credential" RefId="30" />
                                  <Nil N="DisplayRoot" />
                                  <B N="VolumeSeparatedByColon">true</B>
                                </Props>
                                <MS>
                                  <I64 N="Used">5307996160</I64>
                                  <I64 N="Free">0</I64>
                                </MS>
                              </Obj>
                            </LST>
                          </Obj>
                          <B N="VolumeSeparatedByColon">true</B>
                          <C N="ItemSeparator">92</C>
                          <C N="AltItemSeparator">47</C>
                        </Props>
                      </Obj>
                      <S N="Root">C:\</S>
                      <S N="Description"></S>
                      <Nil N="MaximumSize" />
                      <Ref N="Credential" RefId="30" />
                      <Nil N="DisplayRoot" />
                      <B N="VolumeSeparatedByColon">true</B>
                    </Props>
                    <MS>
                      <I64 N="Used">38389829632</I64>
                      <I64 N="Free">68622589952</I64>
                    </MS>
                  </Obj>
                  <Ref N="PSProvider" RefId="12" />
                  <B N="PSIsContainer">false</B>
                  <S N="Mode">-a---</S>
                  <S N="ModeWithoutHardLink">-a---</S>
                  <Obj N="VersionInfo" RefId="32">
                    <TN RefId="24">
                      <T>System.Diagnostics.FileVersionInfo</T>
                      <T>System.Object</T>
                    </TN>
                    <ToString>File:             C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1_x000D__x000A_InternalName:     _x000D__x000A_OriginalFilename: _x000D__x000A_FileVersion:      _x000D__x000A_FileDescription:  _x000D__x000A_Product:          _x000D__x000A_ProductVersion:   _x000D__x000A_Debug:            False_x000D__x000A_Patched:          False_x000D__x000A_PreRelease:       False_x000D__x000A_PrivateBuild:     False_x000D__x000A_SpecialBuild:     False_x000D__x000A_Language:         _x000D__x000A_</ToString>
                    <Props>
                      <Nil N="Comments" />
                      <Nil N="CompanyName" />
                      <I32 N="FileBuildPart">0</I32>
                      <Nil N="FileDescription" />
                      <I32 N="FileMajorPart">0</I32>
                      <I32 N="FileMinorPart">0</I32>
                      <S N="FileName">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1</S>
                      <I32 N="FilePrivatePart">0</I32>
                      <Nil N="FileVersion" />
                      <Nil N="InternalName" />
                      <B N="IsDebug">false</B>
                      <B N="IsPatched">false</B>
                      <B N="IsPrivateBuild">false</B>
                      <B N="IsPreRelease">false</B>
                      <B N="IsSpecialBuild">false</B>
                      <Nil N="Language" />
                      <Nil N="LegalCopyright" />
                      <Nil N="LegalTrademarks" />
                      <Nil N="OriginalFilename" />
                      <Nil N="PrivateBuild" />
                      <I32 N="ProductBuildPart">0</I32>
                      <I32 N="ProductMajorPart">0</I32>
                      <I32 N="ProductMinorPart">0</I32>
                      <Nil N="ProductName" />
                      <I32 N="ProductPrivatePart">0</I32>
                      <Nil N="ProductVersion" />
                      <Nil N="SpecialBuild" />
                    </Props>
                    <MS>
                      <Version N="FileVersionRaw">0.0.0.0</Version>
                      <Version N="ProductVersionRaw">0.0.0.0</Version>
                    </MS>
                  </Obj>
                  <S N="BaseName">module.tests</S>
                  <S N="ResolvedTarget">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1</S>
                  <Nil N="Target" />
                  <Nil N="LinkType" />
                  <S N="NameString">_x001B_[33;1mmodule.tests.ps1_x001B_[0m</S>
                  <S N="LengthString">8332</S>
                  <S N="LastWriteTimeString">  8/3/2024  1:02 PM</S>
                </MS>
              </Obj>
              <Obj N="Data" RefId="33">
                <TN RefId="25">
                  <T>System.Collections.Hashtable</T>
                  <T>System.Object</T>
                </TN>
                <DCT />
              </Obj>
              <Obj N="Blocks" RefId="34">
                <TN RefId="26">
                  <T>System.Collections.Generic.List`1[[Pester.Block, Pester, Version=5.6.1.0, Culture=neutral, PublicKeyToken=null]]</T>
                  <T>System.Object</T>
                </TN>
                <LST>
                  <Obj RefId="35">
                    <TN RefId="27">
                      <T>Pester.Block</T>
                      <T>System.Object</T>
                    </TN>
                    <ToString>[+] Changelog Management</ToString>
                    <Props>
                      <S N="Name">Changelog Management</S>
                      <Obj N="Path" RefId="36">
                        <TN RefId="28">
                          <T>System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]</T>
                          <T>System.Object</T>
                        </TN>
                        <LST>
                          <S>Changelog Management</S>
                        </LST>
                      </Obj>
                      <Nil N="Data" />
                      <S N="ExpandedName">Changelog Management</S>
                      <S N="ExpandedPath">Changelog Management</S>
                      <Obj N="Blocks" RefId="37">
                        <TNRef RefId="26" />
                        <LST />
                      </Obj>
                      <Obj N="Tests" RefId="38">
                        <TN RefId="29">
                          <T>System.Collections.Generic.List`1[[Pester.Test, Pester, Version=5.6.1.0, Culture=neutral, PublicKeyToken=null]]</T>
                          <T>System.Object</T>
                        </TN>
                        <LST>
                          <Obj RefId="39">
                            <TN RefId="30">
                              <T>Pester.Test</T>
                              <T>System.Object</T>
                            </TN>
                            <ToString>[+] Changelog format compliant with keepachangelog format</ToString>
                            <Props>
                              <S N="Name">Changelog format compliant with keepachangelog format</S>
                              <Obj N="Path" RefId="40">
                                <TNRef RefId="28" />
                                <LST>
                                  <S>Changelog Management</S>
                                  <S>Changelog format compliant with keepachangelog format</S>
                                </LST>
                              </Obj>
                              <Nil N="Data" />
                              <S N="ExpandedName">Changelog format compliant with keepachangelog format</S>
                              <S N="ExpandedPath">Changelog Management.Changelog format compliant with keepachangelog format</S>
                              <S N="Result">Passed</S>
                              <Obj N="ErrorRecord" RefId="41">
                                <TN RefId="31">
                                  <T>System.Collections.Generic.List`1[[System.Object, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]</T>
                                  <T>System.Object</T>
                                </TN>
                                <LST />
                              </Obj>
                              <Nil N="StandardOutput" />
                              <TS N="Duration">PT0.0453078S</TS>
                              <S N="ItemType">Test</S>
                              <S N="Id"></S>
                              <S N="GroupId"></S>
                              <SBK N="ScriptBlock">_x000D__x000A_        { Get-ChangelogData -Path (Join-Path $ProjectPath 'CHANGELOG.md') -ErrorAction Stop } | Should -Not -Throw_x000D__x000A_    </SBK>
                              <Nil N="Tag" />
                              <B N="Focus">false</B>
                              <B N="Skip">false</B>
                              <Ref N="Block" RefId="35" />
                              <B N="First">true</B>
                              <B N="Last">false</B>
                              <B N="Include">false</B>
                              <B N="Exclude">false</B>
                              <B N="Explicit">false</B>
                              <B N="ShouldRun">true</B>
                              <I32 N="StartLine">59</I32>
                              <B N="Executed">true</B>
                              <DT N="ExecutedAt">2024-08-03T17:35:50.2420074-07:00</DT>
                              <B N="Passed">true</B>
                              <B N="Skipped">false</B>
                              <B N="Inconclusive">false</B>
                              <TS N="UserDuration">PT0.0274813S</TS>
                              <TS N="FrameworkDuration">PT0.0178265S</TS>
                              <Nil N="PluginData" />
                              <Nil N="FrameworkData" />
                            </Props>
                          </Obj>
                          <Obj RefId="42">
                            <TNRef RefId="30" />
                            <ToString>[+] Changelog should have an Unreleased header</ToString>
                            <Props>
                              <S N="Name">Changelog should have an Unreleased header</S>
                              <Obj N="Path" RefId="43">
                                <TNRef RefId="28" />
                                <LST>
                                  <S>Changelog Management</S>
                                  <S>Changelog should have an Unreleased header</S>
                                </LST>
                              </Obj>
                              <Nil N="Data" />
                              <S N="ExpandedName">Changelog should have an Unreleased header</S>
                              <S N="ExpandedPath">Changelog Management.Changelog should have an Unreleased header</S>
                              <S N="Result">Passed</S>
                              <Obj N="ErrorRecord" RefId="44">
                                <TNRef RefId="31" />
                                <LST />
                              </Obj>
                              <Nil N="StandardOutput" />
                              <TS N="Duration">PT0.0067979S</TS>
                              <S N="ItemType">Test</S>
                              <S N="Id"></S>
                              <S N="GroupId"></S>
                              <SBK N="ScriptBlock">_x000D__x000A_            (Get-ChangelogData -Path (Join-Path -Path $ProjectPath -ChildPath 'CHANGELOG.md') -ErrorAction Stop).Unreleased | Should -Not -BeNullOrEmpty_x000D__x000A_    </SBK>
                              <Nil N="Tag" />
                              <B N="Focus">false</B>
                              <B N="Skip">false</B>
                              <Ref N="Block" RefId="35" />
                              <B N="First">false</B>
                              <B N="Last">true</B>
                              <B N="Include">false</B>
                              <B N="Exclude">false</B>
                              <B N="Explicit">false</B>
                              <B N="ShouldRun">true</B>
                              <I32 N="StartLine">63</I32>
                              <B N="Executed">true</B>
                              <DT N="ExecutedAt">2024-08-03T17:35:50.2862257-07:00</DT>
                              <B N="Passed">true</B>
                              <B N="Skipped">false</B>
                              <B N="Inconclusive">false</B>
                              <TS N="UserDuration">PT0.0045347S</TS>
                              <TS N="FrameworkDuration">PT0.0022632S</TS>
                              <Nil N="PluginData" />
                              <Nil N="FrameworkData" />
                            </Props>
                          </Obj>
                        </LST>
                      </Obj>
                      <S N="Result">Passed</S>
                      <I32 N="FailedCount">0</I32>
                      <I32 N="PassedCount">2</I32>
                      <I32 N="SkippedCount">0</I32>
                      <I32 N="NotRunCount">0</I32>
                      <I32 N="TotalCount">2</I32>
                      <Obj N="ErrorRecord" RefId="45">
                        <TNRef RefId="31" />
                        <LST />
                      </Obj>
                      <TS N="Duration">PT0.0635229S</TS>
                      <S N="Id"></S>
                      <S N="GroupId"></S>
                      <Obj N="Tag" RefId="46">
                        <TNRef RefId="28" />
                        <LST>
                          <S>Changelog</S>
                        </LST>
                      </Obj>
                      <B N="Focus">false</B>
                      <B N="Skip">false</B>
                      <S N="ItemType">Block</S>
                      <Obj N="BlockContainer" RefId="47">
                        <TN RefId="32">
                          <T>Pester.ContainerInfo</T>
                          <T>System.Object</T>
                        </TN>
                        <ToString>C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1</ToString>
                        <Props>
                          <S N="Type">File</S>
                          <Ref N="Item" RefId="3" />
                          <Ref N="Data" RefId="33" />
                        </Props>
                      </Obj>
                      <Obj N="Root" RefId="48">
                        <TNRef RefId="27" />
                        <ToString>[ ] Root</ToString>
                        <Props>
                          <S N="Name">Root</S>
                          <Obj N="Path" RefId="49">
                            <TNRef RefId="28" />
                            <LST>
                              <S>Path</S>
                            </LST>
                          </Obj>
                          <Ref N="Data" RefId="33" />
                          <S N="ExpandedName">Root</S>
                          <S N="ExpandedPath">.Root</S>
                          <Ref N="Blocks" RefId="34" />
                          <Obj N="Tests" RefId="50">
                            <TNRef RefId="29" />
                            <LST />
                          </Obj>
                          <S N="Result">NotRun</S>
                          <I32 N="FailedCount">70</I32>
                          <I32 N="PassedCount">12</I32>
                          <I32 N="SkippedCount">0</I32>
                          <I32 N="NotRunCount">0</I32>
                          <I32 N="TotalCount">82</I32>
                          <Obj N="ErrorRecord" RefId="51">
                            <TNRef RefId="31" />
                            <LST />
                          </Obj>
                          <TS N="Duration">PT3.4887547S</TS>
                          <Nil N="Id" />
                          <Nil N="GroupId" />
                          <Nil N="Tag" />
                          <B N="Focus">false</B>
                          <B N="Skip">false</B>
                          <S N="ItemType">Block</S>
                          <Ref N="BlockContainer" RefId="47" />
                          <Ref N="Root" RefId="48" />
                          <B N="IsRoot">true</B>
                          <Nil N="Parent" />
                          <Nil N="EachTestSetup" />
                          <SBK N="OneTimeTestSetup">_x000D__x000A_                    . $action $parameters_x000D__x000A_                    if ($null -ne $setup) {_x000D__x000A_                        . $setup_x000D__x000A_                    }_x000D__x000A_                </SBK>
                          <Nil N="EachTestTeardown" />
                          <Nil N="OneTimeTestTeardown" />
                          <Nil N="EachBlockSetup" />
                          <Nil N="OneTimeBlockSetup" />
                          <Nil N="EachBlockTeardown" />
                          <Nil N="OneTimeBlockTeardown" />
                          <Obj N="Order" RefId="52">
                            <TNRef RefId="31" />
                            <LST>
                              <Ref RefId="35" />
                              <Obj RefId="53">
                                <TNRef RefId="27" />
                                <ToString>[+] General module control</ToString>
                                <Props>
                                  <S N="Name">General module control</S>
                                  <Obj N="Path" RefId="54">
                                    <TNRef RefId="28" />
                                    <LST>
                                      <S>General module control</S>
                                    </LST>
                                  </Obj>
                                  <Nil N="Data" />
                                  <S N="ExpandedName">General module control</S>
                                  <S N="ExpandedPath">General module control</S>
                                  <Obj N="Blocks" RefId="55">
                                    <TNRef RefId="26" />
                                    <LST />
                                  </Obj>
                                  <Obj N="Tests" RefId="56">
                                    <TNRef RefId="29" />
                                    <LST>
                                      <S>[+] Should import without errors</S>
                                      <S>[+] Should remove without error</S>
                                    </LST>
                                  </Obj>
                                  <S N="Result">Passed</S>
                                  <I32 N="FailedCount">0</I32>
                                  <I32 N="PassedCount">2</I32>
                                  <I32 N="SkippedCount">0</I32>
                                  <I32 N="NotRunCount">0</I32>
                                  <I32 N="TotalCount">2</I32>
                                  <Obj N="ErrorRecord" RefId="57">
                                    <TNRef RefId="31" />
                                    <LST />
                                  </Obj>
                                  <TS N="Duration">PT0.0823486S</TS>
                                  <S N="Id"></S>
                                  <S N="GroupId"></S>
                                  <Obj N="Tag" RefId="58">
                                    <TNRef RefId="28" />
                                    <LST>
                                      <S>FunctionalQuality</S>
                                    </LST>
                                  </Obj>
                                  <B N="Focus">false</B>
                                  <B N="Skip">false</B>
                                  <S N="ItemType">Block</S>
                                  <Ref N="BlockContainer" RefId="47" />
                                  <Ref N="Root" RefId="48" />
                                  <B N="IsRoot">false</B>
                                  <Ref N="Parent" RefId="48" />
                                  <Nil N="EachTestSetup" />
                                  <Nil N="OneTimeTestSetup" />
                                  <Nil N="EachTestTeardown" />
                                  <Nil N="OneTimeTestTeardown" />
                                  <Nil N="EachBlockSetup" />
                                  <Nil N="OneTimeBlockSetup" />
                                  <Nil N="EachBlockTeardown" />
                                  <Nil N="OneTimeBlockTeardown" />
                                  <Obj N="Order" RefId="59">
                                    <TNRef RefId="31" />
                                    <LST>
                                      <S>[+] Should import without errors</S>
                                      <S>[+] Should remove without error</S>
                                    </LST>
                                  </Obj>
                                  <B N="Passed">true</B>
                                  <B N="First">false</B>
                                  <B N="Last">false</B>
                                  <Nil N="StandardOutput" />
                                  <B N="ShouldRun">true</B>
                                  <B N="Executed">true</B>
                                  <DT N="ExecutedAt">2024-08-03T17:35:50.299077-07:00</DT>
                                  <B N="Exclude">false</B>
                                  <B N="Include">false</B>
                                  <B N="Explicit">false</B>
                                  <TS N="DiscoveryDuration">PT0S</TS>
                                  <TS N="FrameworkDuration">PT0.0392958S</TS>
                                  <TS N="UserDuration">PT0.0430528S</TS>
                                  <TS N="OwnDuration">PT0.0658374S</TS>
                                  <SBK N="ScriptBlock">_x000D__x000A_    It 'Should import without errors' {_x000D__x000A_        { Import-Module -Name $script:moduleName -Force -ErrorAction Stop } | Should -Not -Throw_x000D__x000A__x000D__x000A_        Get-Module -Name $script:moduleName | Should -Not -BeNullOrEmpty_x000D__x000A_    }_x000D__x000A__x000D__x000A_    It 'Should remove without error' {_x000D__x000A_        { Remove-Module -Name $script:moduleName -ErrorAction Stop } | Should -Not -Throw_x000D__x000A__x000D__x000A_        Get-Module $script:moduleName | Should -BeNullOrEmpty_x000D__x000A_    }_x000D__x000A_</SBK>
                                  <I32 N="StartLine">68</I32>
                                  <Nil N="FrameworkData" />
                                  <Nil N="PluginData" />
                                  <I32 N="PendingCount">0</I32>
                                  <I32 N="InconclusiveCount">0</I32>
                                  <B N="OwnPassed">true</B>
                                  <I32 N="OwnTotalCount">2</I32>
                                  <I32 N="OwnPassedCount">2</I32>
                                  <I32 N="OwnFailedCount">0</I32>
                                  <I32 N="OwnSkippedCount">0</I32>
                                  <I32 N="OwnPendingCount">0</I32>
                                  <I32 N="OwnNotRunCount">0</I32>
                                  <I32 N="OwnInconclusiveCount">0</I32>
                                </Props>
                              </Obj>
                              <Obj RefId="60">
                                <TNRef RefId="27" />
                                <ToString>[-] Quality for module</ToString>
                                <Props>
                                  <S N="Name">Quality for module</S>
                                  <Obj N="Path" RefId="61">
                                    <TNRef RefId="28" />
                                    <LST>
                                      <S>Quality for module</S>
                                    </LST>
                                  </Obj>
                                  <Nil N="Data" />
                                  <S N="ExpandedName">Quality for module</S>
                                  <S N="ExpandedPath">Quality for module</S>
                                  <Obj N="Blocks" RefId="62">
                                    <TNRef RefId="26" />
                                    <LST />
                                  </Obj>
                                  <Obj N="Tests" RefId="63">
                                    <TNRef RefId="29" />
                                    <LST>
                                      <S>[-] Should have a unit test for Add-Step</S>
                                      <S>[-] Should have a unit test for AppendCSVLog</S>
                                      <S>[-] Should have a unit test for CreateEventLogSource</S>
                                      <S>[-] Should have a unit test for CreateEventSourceAndLog</S>
                                      <S>[-] Should have a unit test for Export-Data</S>
                                      <S>[-] Should have a unit test for Export-EventLog</S>
                                      <S>[-] Should have a unit test for Handle-Error</S>
                                      <S>[-] Should have a unit test for Initialize-CSVDirectory</S>
                                      <S>[-] Should have a unit test for Initialize-ScriptAndLogging</S>
                                      <S>[-] Should have a unit test for Log-And-Execute-Step</S>
                                      <S>[-] Should have a unit test for Log-Params</S>
                                      <S>[-] Should have a unit test for Write-EnhancedLog</S>
                                      <S>[-] Should have a unit test for Write-EventLogMessage</S>
                                      <S>[-] Should pass Script Analyzer for Add-Step</S>
                                      <S>[-] Should pass Script Analyzer for AppendCSVLog</S>
                                      <S>[-] Should pass Script Analyzer for CreateEventLogSource</S>
                                      <S>[-] Should pass Script Analyzer for CreateEventSourceAndLog</S>
                                      <S>[-] Should pass Script Analyzer for Export-Data</S>
                                      <S>[-] Should pass Script Analyzer for Export-EventLog</S>
                                      <S>[-] Should pass Script Analyzer for Handle-Error</S>
                                      <S>[-] Should pass Script Analyzer for Initialize-CSVDirectory</S>
                                      <S>[-] Should pass Script Analyzer for Initialize-ScriptAndLogging</S>
                                      <S>[-] Should pass Script Analyzer for Log-And-Execute-Step</S>
                                      <S>[-] Should pass Script Analyzer for Log-Params</S>
                                      <S>[-] Should pass Script Analyzer for Write-EnhancedLog</S>
                                      <S>[-] Should pass Script Analyzer for Write-EventLogMessage</S>
                                    </LST>
                                  </Obj>
                                  <S N="Result">Failed</S>
                                  <I32 N="FailedCount">26</I32>
                                  <I32 N="PassedCount">0</I32>
                                  <I32 N="SkippedCount">0</I32>
                                  <I32 N="NotRunCount">0</I32>
                                  <I32 N="TotalCount">26</I32>
                                  <Obj N="ErrorRecord" RefId="64">
                                    <TNRef RefId="31" />
                                    <LST />
                                  </Obj>
                                  <TS N="Duration">PT1.8395527S</TS>
                                  <S N="Id"></S>
                                  <S N="GroupId"></S>
                                  <Obj N="Tag" RefId="65">
                                    <TNRef RefId="28" />
                                    <LST>
                                      <S>TestQuality</S>
                                    </LST>
                                  </Obj>
                                  <B N="Focus">false</B>
                                  <B N="Skip">false</B>
                                  <S N="ItemType">Block</S>
                                  <Ref N="BlockContainer" RefId="47" />
                                  <Ref N="Root" RefId="48" />
                                  <B N="IsRoot">false</B>
                                  <Ref N="Parent" RefId="48" />
                                  <Nil N="EachTestSetup" />
                                  <Nil N="OneTimeTestSetup" />
                                  <Nil N="EachTestTeardown" />
                                  <Nil N="OneTimeTestTeardown" />
                                  <Nil N="EachBlockSetup" />
                                  <Nil N="OneTimeBlockSetup" />
                                  <Nil N="EachBlockTeardown" />
                                  <Nil N="OneTimeBlockTeardown" />
                                  <Obj N="Order" RefId="66">
                                    <TNRef RefId="31" />
                                    <LST>
                                      <S>[-] Should have a unit test for Add-Step</S>
                                      <S>[-] Should have a unit test for AppendCSVLog</S>
                                      <S>[-] Should have a unit test for CreateEventLogSource</S>
                                      <S>[-] Should have a unit test for CreateEventSourceAndLog</S>
                                      <S>[-] Should have a unit test for Export-Data</S>
                                      <S>[-] Should have a unit test for Export-EventLog</S>
                                      <S>[-] Should have a unit test for Handle-Error</S>
                                      <S>[-] Should have a unit test for Initialize-CSVDirectory</S>
                                      <S>[-] Should have a unit test for Initialize-ScriptAndLogging</S>
                                      <S>[-] Should have a unit test for Log-And-Execute-Step</S>
                                      <S>[-] Should have a unit test for Log-Params</S>
                                      <S>[-] Should have a unit test for Write-EnhancedLog</S>
                                      <S>[-] Should have a unit test for Write-EventLogMessage</S>
                                      <S>[-] Should pass Script Analyzer for Add-Step</S>
                                      <S>[-] Should pass Script Analyzer for AppendCSVLog</S>
                                      <S>[-] Should pass Script Analyzer for CreateEventLogSource</S>
                                      <S>[-] Should pass Script Analyzer for CreateEventSourceAndLog</S>
                                      <S>[-] Should pass Script Analyzer for Export-Data</S>
                                      <S>[-] Should pass Script Analyzer for Export-EventLog</S>
                                      <S>[-] Should pass Script Analyzer for Handle-Error</S>
                                      <S>[-] Should pass Script Analyzer for Initialize-CSVDirectory</S>
                                      <S>[-] Should pass Script Analyzer for Initialize-ScriptAndLogging</S>
                                      <S>[-] Should pass Script Analyzer for Log-And-Execute-Step</S>
                                      <S>[-] Should pass Script Analyzer for Log-Params</S>
                                      <S>[-] Should pass Script Analyzer for Write-EnhancedLog</S>
                                      <S>[-] Should pass Script Analyzer for Write-EventLogMessage</S>
                                    </LST>
                                  </Obj>
                                  <B N="Passed">false</B>
                                  <B N="First">false</B>
                                  <B N="Last">false</B>
                                  <Nil N="StandardOutput" />
                                  <B N="ShouldRun">true</B>
                                  <B N="Executed">true</B>
                                  <DT N="ExecutedAt">2024-08-03T17:35:50.3178914-07:00</DT>
                                  <B N="Exclude">false</B>
                                  <B N="Include">false</B>
                                  <B N="Explicit">false</B>
                                  <TS N="DiscoveryDuration">PT0S</TS>
                                  <TS N="FrameworkDuration">PT0.2381467S</TS>
                                  <TS N="UserDuration">PT1.601406S</TS>
                                  <TS N="OwnDuration">PT0.086917S</TS>
                                  <SBK N="ScriptBlock">_x000D__x000A_    BeforeDiscovery {_x000D__x000A_        if (Get-Command -Name Invoke-ScriptAnalyzer -ErrorAction SilentlyContinue)_x000D__x000A_        {_x000D__x000A_            $scriptAnalyzerRules = Get-ScriptAnalyzerRule_x000D__x000A_        }_x000D__x000A_        else_x000D__x000A_        {_x000D__x000A_            if ($ErrorActionPreference -ne 'Stop')_x000D__x000A_            {_x000D__x000A_                Write-Warning -Message 'ScriptAnalyzer not found!'_x000D__x000A_            }_x000D__x000A_            else_x000D__x000A_            {_x000D__x000A_                throw 'ScriptAnalyzer not found!'_x000D__x000A_            }_x000D__x000A_        }_x000D__x000A_    }_x000D__x000A__x000D__x000A_    It 'Should have a unit test for &lt;Name&gt;' -ForEach $testCases {_x000D__x000A_        Get-ChildItem -Path 'tests\' -Recurse -Include "$Name.Tests.ps1" | Should -Not -BeNullOrEmpty_x000D__x000A_    }_x000D__x000A__x000D__x000A_    It 'Should pass Script Analyzer for &lt;Name&gt;' -ForEach $testCases -Skip:(-not $scriptAnalyzerRules) {_x000D__x000A_        $functionFile = Get-ChildItem -Path $sourcePath -Recurse -Include "$Name.ps1"_x000D__x000A__x000D__x000A_        $pssaResult = (Invoke-ScriptAnalyzer -Path $functionFile.FullName)_x000D__x000A_        $report = $pssaResult | Format-Table -AutoSize | Out-String -Width 110_x000D__x000A_        $pssaResult | Should -BeNullOrEmpty -Because `_x000D__x000A_            "some rule triggered.`r`n`r`n $report"_x000D__x000A_    }_x000D__x000A_</SBK>
                                  <I32 N="StartLine">97</I32>
                                  <Nil N="FrameworkData" />
                                  <Nil N="PluginData" />
                                  <I32 N="PendingCount">0</I32>
                                  <I32 N="InconclusiveCount">0</I32>
                                  <B N="OwnPassed">true</B>
                                  <I32 N="OwnTotalCount">26</I32>
                                  <I32 N="OwnPassedCount">0</I32>
                                  <I32 N="OwnFailedCount">26</I32>
                                  <I32 N="OwnSkippedCount">0</I32>
                                  <I32 N="OwnPendingCount">0</I32>
                                  <I32 N="OwnNotRunCount">0</I32>
                                  <I32 N="OwnInconclusiveCount">0</I32>
                                </Props>
                              </Obj>
                              <Obj RefId="67">
                                <TNRef RefId="27" />
                                <ToString>[-] Help for module</ToString>
                                <Props>
                                  <S N="Name">Help for module</S>
                                  <Obj N="Path" RefId="68">
                                    <TNRef RefId="28" />
                                    <LST>
                                      <S>Help for module</S>
                                    </LST>
                                  </Obj>
                                  <Nil N="Data" />
                                  <S N="ExpandedName">Help for module</S>
                                  <S N="ExpandedPath">Help for module</S>
                                  <Obj N="Blocks" RefId="69">
                                    <TNRef RefId="26" />
                                    <LST />
                                  </Obj>
                                  <Obj N="Tests" RefId="70">
                                    <TNRef RefId="29" />
                                    <LST>
                                      <S>[-] Should have .SYNOPSIS for Add-Step</S>
                                      <S>[-] Should have .SYNOPSIS for AppendCSVLog</S>
                                      <S>[-] Should have .SYNOPSIS for CreateEventLogSource</S>
                                      <S>[-] Should have .SYNOPSIS for CreateEventSourceAndLog</S>
                                      <S>[+] Should have .SYNOPSIS for Export-Data</S>
                                      <S>[-] Should have .SYNOPSIS for Export-EventLog</S>
                                      <S>[-] Should have .SYNOPSIS for Handle-Error</S>
                                      <S>[-] Should have .SYNOPSIS for Initialize-CSVDirectory</S>
                                      <S>[-] Should have .SYNOPSIS for Initialize-ScriptAndLogging</S>
                                      <S>[-] Should have .SYNOPSIS for Log-And-Execute-Step</S>
                                      <S>[+] Should have .SYNOPSIS for Log-Params</S>
                                      <S>[-] Should have .SYNOPSIS for Write-EnhancedLog</S>
                                      <S>[-] Should have .SYNOPSIS for Write-EventLogMessage</S>
                                      <S>[-] Should have a .DESCRIPTION with length greater than 40 characters for Add-Step</S>
                                      <S>[-] Should have a .DESCRIPTION with length greater than 40 characters for AppendCSVLog</S>
                                      <S>[-] Should have a .DESCRIPTION with length greater than 40 characters for CreateEventLogSource</S>
                                      <S>[-] Should have a .DESCRIPTION with length greater than 40 characters for CreateEventSourceAndLog</S>
                                      <S>[+] Should have a .DESCRIPTION with length greater than 40 characters for Export-Data</S>
                                      <S>[-] Should have a .DESCRIPTION with length greater than 40 characters for Export-EventLog</S>
                                      <S>[-] Should have a .DESCRIPTION with length greater than 40 characters for Handle-Error</S>
                                      <S>[-] Should have a .DESCRIPTION with length greater than 40 characters for Initialize-CSVDirectory</S>
                                      <S>[-] Should have a .DESCRIPTION with length greater than 40 characters for Initialize-ScriptAndLogging</S>
                                      <S>[-] Should have a .DESCRIPTION with length greater than 40 characters for Log-And-Execute-Step</S>
                                      <S>[-] Should have a .DESCRIPTION with length greater than 40 characters for Log-Params</S>
                                      <S>[-] Should have a .DESCRIPTION with length greater than 40 characters for Write-EnhancedLog</S>
                                      <S>[-] Should have a .DESCRIPTION with length greater than 40 characters for Write-EventLogMessage</S>
                                      <S>[-] Should have at least one (1) example for Add-Step</S>
                                      <S>[-] Should have at least one (1) example for AppendCSVLog</S>
                                      <S>[-] Should have at least one (1) example for CreateEventLogSource</S>
                                      <S>[-] Should have at least one (1) example for CreateEventSourceAndLog</S>
                                      <S>[+] Should have at least one (1) example for Export-Data</S>
                                      <S>[-] Should have at least one (1) example for Export-EventLog</S>
                                      <S>[-] Should have at least one (1) example for Handle-Error</S>
                                      <S>[-] Should have at least one (1) example for Initialize-CSVDirectory</S>
                                      <S>[-] Should have at least one (1) example for Initialize-ScriptAndLogging</S>
                                      <S>[-] Should have at least one (1) example for Log-And-Execute-Step</S>
                                      <S>[-] Should have at least one (1) example for Log-Params</S>
                                      <S>[-] Should have at least one (1) example for Write-EnhancedLog</S>
                                      <S>[-] Should have at least one (1) example for Write-EventLogMessage</S>
                                      <S>[-] Should have described all parameters for Add-Step</S>
                                      <S>[-] Should have described all parameters for AppendCSVLog</S>
                                      <S>[+] Should have described all parameters for CreateEventLogSource</S>
                                      <S>[-] Should have described all parameters for CreateEventSourceAndLog</S>
                                      <S>[+] Should have described all parameters for Export-Data</S>
                                      <S>[-] Should have described all parameters for Export-EventLog</S>
                                      <S>[-] Should have described all parameters for Handle-Error</S>
                                      <S>[-] Should have described all parameters for Initialize-CSVDirectory</S>
                                      <S>[+] Should have described all parameters for Initialize-ScriptAndLogging</S>
                                      <S>[+] Should have described all parameters for Log-And-Execute-Step</S>
                                      <S>[-] Should have described all parameters for Log-Params</S>
                                      <S>[-] Should have described all parameters for Write-EnhancedLog</S>
                                      <S>[-] Should have described all parameters for Write-EventLogMessage</S>
                                    </LST>
                                  </Obj>
                                  <S N="Result">Failed</S>
                                  <I32 N="FailedCount">44</I32>
                                  <I32 N="PassedCount">8</I32>
                                  <I32 N="SkippedCount">0</I32>
                                  <I32 N="NotRunCount">0</I32>
                                  <I32 N="TotalCount">52</I32>
                                  <Obj N="ErrorRecord" RefId="71">
                                    <TNRef RefId="31" />
                                    <LST />
                                  </Obj>
                                  <TS N="Duration">PT3.1739315S</TS>
                                  <S N="Id"></S>
                                  <S N="GroupId"></S>
                                  <Obj N="Tag" RefId="72">
                                    <TNRef RefId="28" />
                                    <LST>
                                      <S>helpQuality</S>
                                    </LST>
                                  </Obj>
                                  <B N="Focus">false</B>
                                  <B N="Skip">false</B>
                                  <S N="ItemType">Block</S>
                                  <Ref N="BlockContainer" RefId="47" />
                                  <Ref N="Root" RefId="48" />
                                  <B N="IsRoot">false</B>
                                  <Ref N="Parent" RefId="48" />
                                  <Nil N="EachTestSetup" />
                                  <Nil N="OneTimeTestSetup" />
                                  <Nil N="EachTestTeardown" />
                                  <Nil N="OneTimeTestTeardown" />
                                  <Nil N="EachBlockSetup" />
                                  <Nil N="OneTimeBlockSetup" />
                                  <Nil N="EachBlockTeardown" />
                                  <Nil N="OneTimeBlockTeardown" />
                                  <Obj N="Order" RefId="73">
                                    <TNRef RefId="31" />
                                    <LST>
                                      <S>[-] Should have .SYNOPSIS for Add-Step</S>
                                      <S>[-] Should have .SYNOPSIS for AppendCSVLog</S>
                                      <S>[-] Should have .SYNOPSIS for CreateEventLogSource</S>
                                      <S>[-] Should have .SYNOPSIS for CreateEventSourceAndLog</S>
                                      <S>[+] Should have .SYNOPSIS for Export-Data</S>
                                      <S>[-] Should have .SYNOPSIS for Export-EventLog</S>
                                      <S>[-] Should have .SYNOPSIS for Handle-Error</S>
                                      <S>[-] Should have .SYNOPSIS for Initialize-CSVDirectory</S>
                                      <S>[-] Should have .SYNOPSIS for Initialize-ScriptAndLogging</S>
                                      <S>[-] Should have .SYNOPSIS for Log-And-Execute-Step</S>
                                      <S>[+] Should have .SYNOPSIS for Log-Params</S>
                                      <S>[-] Should have .SYNOPSIS for Write-EnhancedLog</S>
                                      <S>[-] Should have .SYNOPSIS for Write-EventLogMessage</S>
                                      <S>[-] Should have a .DESCRIPTION with length greater than 40 characters for Add-Step</S>
                                      <S>[-] Should have a .DESCRIPTION with length greater than 40 characters for AppendCSVLog</S>
                                      <S>[-] Should have a .DESCRIPTION with length greater than 40 characters for CreateEventLogSource</S>
                                      <S>[-] Should have a .DESCRIPTION with length greater than 40 characters for CreateEventSourceAndLog</S>
                                      <S>[+] Should have a .DESCRIPTION with length greater than 40 characters for Export-Data</S>
                                      <S>[-] Should have a .DESCRIPTION with length greater than 40 characters for Export-EventLog</S>
                                      <S>[-] Should have a .DESCRIPTION with length greater than 40 characters for Handle-Error</S>
                                      <S>[-] Should have a .DESCRIPTION with length greater than 40 characters for Initialize-CSVDirectory</S>
                                      <S>[-] Should have a .DESCRIPTION with length greater than 40 characters for Initialize-ScriptAndLogging</S>
                                      <S>[-] Should have a .DESCRIPTION with length greater than 40 characters for Log-And-Execute-Step</S>
                                      <S>[-] Should have a .DESCRIPTION with length greater than 40 characters for Log-Params</S>
                                      <S>[-] Should have a .DESCRIPTION with length greater than 40 characters for Write-EnhancedLog</S>
                                      <S>[-] Should have a .DESCRIPTION with length greater than 40 characters for Write-EventLogMessage</S>
                                      <S>[-] Should have at least one (1) example for Add-Step</S>
                                      <S>[-] Should have at least one (1) example for AppendCSVLog</S>
                                      <S>[-] Should have at least one (1) example for CreateEventLogSource</S>
                                      <S>[-] Should have at least one (1) example for CreateEventSourceAndLog</S>
                                      <S>[+] Should have at least one (1) example for Export-Data</S>
                                      <S>[-] Should have at least one (1) example for Export-EventLog</S>
                                      <S>[-] Should have at least one (1) example for Handle-Error</S>
                                      <S>[-] Should have at least one (1) example for Initialize-CSVDirectory</S>
                                      <S>[-] Should have at least one (1) example for Initialize-ScriptAndLogging</S>
                                      <S>[-] Should have at least one (1) example for Log-And-Execute-Step</S>
                                      <S>[-] Should have at least one (1) example for Log-Params</S>
                                      <S>[-] Should have at least one (1) example for Write-EnhancedLog</S>
                                      <S>[-] Should have at least one (1) example for Write-EventLogMessage</S>
                                      <S>[-] Should have described all parameters for Add-Step</S>
                                      <S>[-] Should have described all parameters for AppendCSVLog</S>
                                      <S>[+] Should have described all parameters for CreateEventLogSource</S>
                                      <S>[-] Should have described all parameters for CreateEventSourceAndLog</S>
                                      <S>[+] Should have described all parameters for Export-Data</S>
                                      <S>[-] Should have described all parameters for Export-EventLog</S>
                                      <S>[-] Should have described all parameters for Handle-Error</S>
                                      <S>[-] Should have described all parameters for Initialize-CSVDirectory</S>
                                      <S>[+] Should have described all parameters for Initialize-ScriptAndLogging</S>
                                      <S>[+] Should have described all parameters for Log-And-Execute-Step</S>
                                      <S>[-] Should have described all parameters for Log-Params</S>
                                      <S>[-] Should have described all parameters for Write-EnhancedLog</S>
                                      <S>[-] Should have described all parameters for Write-EventLogMessage</S>
                                    </LST>
                                  </Obj>
                                  <B N="Passed">false</B>
                                  <B N="First">false</B>
                                  <B N="Last">true</B>
                                  <Nil N="StandardOutput" />
                                  <B N="ShouldRun">true</B>
                                  <B N="Executed">true</B>
                                  <DT N="ExecutedAt">2024-08-03T17:35:52.0751039-07:00</DT>
                                  <B N="Exclude">false</B>
                                  <B N="Include">false</B>
                                  <B N="Explicit">false</B>
                                  <TS N="DiscoveryDuration">PT0S</TS>
                                  <TS N="FrameworkDuration">PT0.6795845S</TS>
                                  <TS N="UserDuration">PT2.494347S</TS>
                                  <TS N="OwnDuration">PT1.8491927S</TS>
                                  <SBK N="ScriptBlock">_x000D__x000A_    It 'Should have .SYNOPSIS for &lt;Name&gt;' -ForEach $testCases {_x000D__x000A_        $functionFile = Get-ChildItem -Path $sourcePath -Recurse -Include "$Name.ps1"_x000D__x000A__x000D__x000A_        $scriptFileRawContent = Get-Content -Raw -Path $functionFile.FullName_x000D__x000A__x000D__x000A_        $abstractSyntaxTree = [System.Management.Automation.Language.Parser]::ParseInput($scriptFileRawContent, [ref] $null, [ref] $null)_x000D__x000A__x000D__x000A_        $astSearchDelegate = { $args[0] -is [System.Management.Automation.Language.FunctionDefinitionAst] }_x000D__x000A__x000D__x000A_        $parsedFunction = $abstractSyntaxTree.FindAll( $astSearchDelegate, $true ) |_x000D__x000A_            Where-Object -FilterScript {_x000D__x000A_                $_.Name -eq $Name_x000D__x000A_            }_x000D__x000A__x000D__x000A_        $functionHelp = $parsedFunction.GetHelpContent()_x000D__x000A__x000D__x000A_        $functionHelp.Synopsis | Should -Not -BeNullOrEmpty_x000D__x000A_    }_x000D__x000A__x000D__x000A_    It 'Should have a .DESCRIPTION with length greater than 40 characters for &lt;Name&gt;' -ForEach $testCases {_x000D__x000A_        $functionFile = Get-ChildItem -Path $sourcePath -Recurse -Include "$Name.ps1"_x000D__x000A__x000D__x000A_        $scriptFileRawContent = Get-Content -Raw -Path $functionFile.FullName_x000D__x000A__x000D__x000A_        $abstractSyntaxTree = [System.Management.Automation.Language.Parser]::ParseInput($scriptFileRawContent, [ref] $null, [ref] $null)_x000D__x000A__x000D__x000A_        $astSearchDelegate = { $args[0] -is [System.Management.Automation.Language.FunctionDefinitionAst] }_x000D__x000A__x000D__x000A_        $parsedFunction = $abstractSyntaxTree.FindAll($astSearchDelegate, $true) |_x000D__x000A_            Where-Object -FilterScript {_x000D__x000A_                $_.Name -eq $Name_x000D__x000A_            }_x000D__x000A__x000D__x000A_        $functionHelp = $parsedFunction.GetHelpContent()_x000D__x000A__x000D__x000A_        $functionHelp.Description.Length | Should -BeGreaterThan 40_x000D__x000A_    }_x000D__x000A__x000D__x000A_    It 'Should have at least one (1) example for &lt;Name&gt;' -ForEach $testCases {_x000D__x000A_        $functionFile = Get-ChildItem -Path $sourcePath -Recurse -Include "$Name.ps1"_x000D__x000A__x000D__x000A_        $scriptFileRawContent = Get-Content -Raw -Path $functionFile.FullName_x000D__x000A__x000D__x000A_        $abstractSyntaxTree = [System.Management.Automation.Language.Parser]::ParseInput($scriptFileRawContent, [ref] $null, [ref] $null)_x000D__x000A__x000D__x000A_        $astSearchDelegate = { $args[0] -is [System.Management.Automation.Language.FunctionDefinitionAst] }_x000D__x000A__x000D__x000A_        $parsedFunction = $abstractSyntaxTree.FindAll( $astSearchDelegate, $true ) |_x000D__x000A_            Where-Object -FilterScript {_x000D__x000A_                $_.Name -eq $Name_x000D__x000A_            }_x000D__x000A__x000D__x000A_        $functionHelp = $parsedFunction.GetHelpContent()_x000D__x000A__x000D__x000A_        $functionHelp.Examples.Count | Should -BeGreaterThan 0_x000D__x000A_        $functionHelp.Examples[0] | Should -Match ([regex]::Escape($function.Name))_x000D__x000A_        $functionHelp.Examples[0].Length | Should -BeGreaterThan ($function.Name.Length + 10)_x000D__x000A__x000D__x000A_    }_x000D__x000A__x000D__x000A_    It 'Should have described all parameters for &lt;Name&gt;' -ForEach $testCases {_x000D__x000A_        $functionFile = Get-ChildItem -Path $sourcePath -Recurse -Include "$Name.ps1"_x000D__x000A__x000D__x000A_        $scriptFileRawContent = Get-Content -Raw -Path $functionFile.FullName_x000D__x000A__x000D__x000A_        $abstractSyntaxTree = [System.Management.Automation.Language.Parser]::ParseInput($scriptFileRawContent, [ref] $null, [ref] $null)_x000D__x000A__x000D__x000A_        $astSearchDelegate = { $args[0] -is [System.Management.Automation.Language.FunctionDefinitionAst] }_x000D__x000A__x000D__x000A_        $parsedFunction = $abstractSyntaxTree.FindAll( $astSearchDelegate, $true ) |_x000D__x000A_            Where-Object -FilterScript {_x000D__x000A_                $_.Name -eq $Name_x000D__x000A_            }_x000D__x000A__x000D__x000A_        $functionHelp = $parsedFunction.GetHelpContent()_x000D__x000A__x000D__x000A_        $parameters = $parsedFunction.Body.ParamBlock.Parameters.Name.VariablePath.ForEach({ $_.ToString() })_x000D__x000A__x000D__x000A_        foreach ($parameter in $parameters)_x000D__x000A_        {_x000D__x000A_            $functionHelp.Parameters.($parameter.ToUpper()) | Should -Not -BeNullOrEmpty -Because ('the parameter {0} must have a description' -f $parameter)_x000D__x000A_            $functionHelp.Parameters.($parameter.ToUpper()).Length | Should -BeGreaterThan 25 -Because ('the parameter {0} must have descriptive description' -f $parameter)_x000D__x000A_        }_x000D__x000A_    }_x000D__x000A_</SBK>
                                  <I32 N="StartLine">130</I32>
                                  <Nil N="FrameworkData" />
                                  <Nil N="PluginData" />
                                  <I32 N="PendingCount">0</I32>
                                  <I32 N="InconclusiveCount">0</I32>
                                  <B N="OwnPassed">true</B>
                                  <I32 N="OwnTotalCount">52</I32>
                                  <I32 N="OwnPassedCount">8</I32>
                                  <I32 N="OwnFailedCount">44</I32>
                                  <I32 N="OwnSkippedCount">0</I32>
                                  <I32 N="OwnPendingCount">0</I32>
                                  <I32 N="OwnNotRunCount">0</I32>
                                  <I32 N="OwnInconclusiveCount">0</I32>
                                </Props>
                              </Obj>
                            </LST>
                          </Obj>
                          <B N="Passed">false</B>
                          <B N="First">true</B>
                          <B N="Last">true</B>
                          <Nil N="StandardOutput" />
                          <B N="ShouldRun">true</B>
                          <B N="Executed">true</B>
                          <DT N="ExecutedAt">2024-08-03T17:35:50.1395646-07:00</DT>
                          <B N="Exclude">false</B>
                          <B N="Include">false</B>
                          <B N="Explicit">false</B>
                          <TS N="DiscoveryDuration">PT0.1500731S</TS>
                          <TS N="FrameworkDuration">PT0.7929523S</TS>
                          <TS N="UserDuration">PT2.5457293S</TS>
                          <TS N="OwnDuration">-PT1.670601S</TS>
                          <SBK N="ScriptBlock"></SBK>
                          <I32 N="StartLine">0</I32>
                          <Obj N="FrameworkData" RefId="74">
                            <TNRef RefId="25" />
                            <DCT>
                              <En>
                                <S N="Key">MissingParametersProcessed</S>
                                <B N="Value">true</B>
                              </En>
                            </DCT>
                          </Obj>
                          <Obj N="PluginData" RefId="75">
                            <TNRef RefId="25" />
                            <DCT>
                              <En>
                                <S N="Key">Mock</S>
                                <Obj N="Value" RefId="76">
                                  <TNRef RefId="25" />
                                  <DCT>
                                    <En>
                                      <S N="Key">Behaviors</S>
                                      <Obj N="Value" RefId="77">
                                        <TNRef RefId="25" />
                                        <DCT />
                                      </Obj>
                                    </En>
                                    <En>
                                      <S N="Key">Hooks</S>
                                      <Obj N="Value" RefId="78">
                                        <TNRef RefId="31" />
                                        <LST />
                                      </Obj>
                                    </En>
                                    <En>
                                      <S N="Key">CallHistory</S>
                                      <Obj N="Value" RefId="79">
                                        <TNRef RefId="25" />
                                        <DCT />
                                      </Obj>
                                    </En>
                                  </DCT>
                                </Obj>
                              </En>
                              <En>
                                <S N="Key">TestRegistry</S>
                                <Obj N="Value" RefId="80">
                                  <TNRef RefId="25" />
                                  <DCT>
                                    <En>
                                      <S N="Key">TestRegistryContent</S>
                                      <Nil N="Value" />
                                    </En>
                                    <En>
                                      <S N="Key">TestRegistryPath</S>
                                      <S N="Value">Microsoft.PowerShell.Core\Registry::HKEY_CURRENT_USER\Software\Pester\825a7622-e202-4f91-9fd7-1b0555b93a7e</S>
                                    </En>
                                    <En>
                                      <S N="Key">TestRegistryAdded</S>
                                      <B N="Value">true</B>
                                    </En>
                                  </DCT>
                                </Obj>
                              </En>
                              <En>
                                <S N="Key">TestDrive</S>
                                <Obj N="Value" RefId="81">
                                  <TNRef RefId="25" />
                                  <DCT>
                                    <En>
                                      <S N="Key">TestDriveAdded</S>
                                      <B N="Value">true</B>
                                    </En>
                                    <En>
                                      <S N="Key">TestDrivePath</S>
                                      <S N="Value">C:\Users\Administrator\AppData\Local\Temp\2\2b5f278c-5838-447b-9c4b-c9260079beaf</S>
                                    </En>
                                    <En>
                                      <S N="Key">TestDriveContent</S>
                                      <Nil N="Value" />
                                    </En>
                                  </DCT>
                                </Obj>
                              </En>
                            </DCT>
                          </Obj>
                          <I32 N="PendingCount">0</I32>
                          <I32 N="InconclusiveCount">0</I32>
                          <B N="OwnPassed">true</B>
                          <I32 N="OwnTotalCount">0</I32>
                          <I32 N="OwnPassedCount">0</I32>
                          <I32 N="OwnFailedCount">0</I32>
                          <I32 N="OwnSkippedCount">0</I32>
                          <I32 N="OwnPendingCount">0</I32>
                          <I32 N="OwnNotRunCount">0</I32>
                          <I32 N="OwnInconclusiveCount">0</I32>
                        </Props>
                      </Obj>
                      <B N="IsRoot">false</B>
                      <Ref N="Parent" RefId="48" />
                      <Nil N="EachTestSetup" />
                      <Nil N="OneTimeTestSetup" />
                      <Nil N="EachTestTeardown" />
                      <Nil N="OneTimeTestTeardown" />
                      <Nil N="EachBlockSetup" />
                      <Nil N="OneTimeBlockSetup" />
                      <Nil N="EachBlockTeardown" />
                      <Nil N="OneTimeBlockTeardown" />
                      <Obj N="Order" RefId="82">
                        <TNRef RefId="31" />
                        <LST>
                          <Ref RefId="39" />
                          <Ref RefId="42" />
                        </LST>
                      </Obj>
                      <B N="Passed">true</B>
                      <B N="First">true</B>
                      <B N="Last">false</B>
                      <Nil N="StandardOutput" />
                      <B N="ShouldRun">true</B>
                      <B N="Executed">true</B>
                      <DT N="ExecutedAt">2024-08-03T17:35:50.2355482-07:00</DT>
                      <B N="Exclude">false</B>
                      <B N="Include">false</B>
                      <B N="Explicit">false</B>
                      <TS N="DiscoveryDuration">PT0S</TS>
                      <TS N="FrameworkDuration">PT0.0312771S</TS>
                      <TS N="UserDuration">PT0.0322458S</TS>
                      <TS N="OwnDuration">PT0.0114172S</TS>
                      <SBK N="ScriptBlock">_x000D__x000A__x000D__x000A_    It 'Changelog format compliant with keepachangelog format' -Skip:(![bool](Get-Command git -EA SilentlyContinue)) {_x000D__x000A_        { Get-ChangelogData -Path (Join-Path $ProjectPath 'CHANGELOG.md') -ErrorAction Stop } | Should -Not -Throw_x000D__x000A_    }_x000D__x000A__x000D__x000A_    It 'Changelog should have an Unreleased header' -Skip:$skipTest {_x000D__x000A_            (Get-ChangelogData -Path (Join-Path -Path $ProjectPath -ChildPath 'CHANGELOG.md') -ErrorAction Stop).Unreleased | Should -Not -BeNullOrEmpty_x000D__x000A_    }_x000D__x000A_</SBK>
                      <I32 N="StartLine">57</I32>
                      <Nil N="FrameworkData" />
                      <Nil N="PluginData" />
                      <I32 N="PendingCount">0</I32>
                      <I32 N="InconclusiveCount">0</I32>
                      <B N="OwnPassed">true</B>
                      <I32 N="OwnTotalCount">2</I32>
                      <I32 N="OwnPassedCount">2</I32>
                      <I32 N="OwnFailedCount">0</I32>
                      <I32 N="OwnSkippedCount">0</I32>
                      <I32 N="OwnPendingCount">0</I32>
                      <I32 N="OwnNotRunCount">0</I32>
                      <I32 N="OwnInconclusiveCount">0</I32>
                    </Props>
                  </Obj>
                  <Ref RefId="53" />
                  <Ref RefId="60" />
                  <Ref RefId="67" />
                </LST>
              </Obj>
              <S N="Result">Failed</S>
              <TS N="Duration">PT3.5871034S</TS>
              <I32 N="FailedCount">70</I32>
              <I32 N="PassedCount">12</I32>
              <I32 N="SkippedCount">0</I32>
              <I32 N="InconclusiveCount">0</I32>
              <I32 N="NotRunCount">0</I32>
              <I32 N="TotalCount">82</I32>
              <Ref N="ErrorRecord" RefId="51" />
              <B N="Passed">false</B>
              <B N="OwnPassed">true</B>
              <B N="Skip">false</B>
              <B N="ShouldRun">true</B>
              <B N="Executed">true</B>
              <DT N="ExecutedAt">2024-08-03T17:35:50.1395646-07:00</DT>
              <TS N="DiscoveryDuration">PT0.1500731S</TS>
              <TS N="UserDuration">PT2.5457293S</TS>
              <TS N="FrameworkDuration">PT0.891301S</TS>
              <Nil N="StandardOutput" />
            </Props>
          </Obj>
          <Obj RefId="83">
            <TNRef RefId="2" />
            <ToString>[-] C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\Unit\Private\Get-PrivateFunction.tests.ps1</ToString>
            <Props>
              <S N="Name">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\Unit\Private\Get-PrivateFunction.tests.ps1</S>
              <S N="Type">File</S>
              <Obj N="Item" RefId="84">
                <TNRef RefId="3" />
                <ToString>C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\Unit\Private\Get-PrivateFunction.tests.ps1</ToString>
                <Props>
                  <S N="Name">Get-PrivateFunction.tests.ps1</S>
                  <I64 N="Length">931</I64>
                  <S N="DirectoryName">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\Unit\Private</S>
                  <Obj N="Directory" RefId="85">
                    <TNRef RefId="4" />
                    <ToString>C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\Unit\Private</ToString>
                    <Props>
                      <S N="Name">Private</S>
                      <Obj N="Parent" RefId="86">
                        <TNRef RefId="4" />
                        <ToString>C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\Unit</ToString>
                        <Props>
                          <S N="Name">Unit</S>
                          <S N="Parent">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests</S>
                          <S N="Root">C:\</S>
                          <B N="Exists">true</B>
                          <S N="FullName">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\Unit</S>
                          <S N="Extension"></S>
                          <DT N="CreationTime">2024-08-03T13:02:33.5802252-07:00</DT>
                          <DT N="CreationTimeUtc">2024-08-03T20:02:33.5802252Z</DT>
                          <DT N="LastAccessTime">2024-08-03T13:02:33.7524353-07:00</DT>
                          <DT N="LastAccessTimeUtc">2024-08-03T20:02:33.7524353Z</DT>
                          <DT N="LastWriteTime">2024-08-03T13:02:33.5998939-07:00</DT>
                          <DT N="LastWriteTimeUtc">2024-08-03T20:02:33.5998939Z</DT>
                          <Nil N="LinkTarget" />
                          <S N="UnixFileMode">-1</S>
                          <S N="Attributes">Directory</S>
                        </Props>
                        <MS>
                          <S N="Mode">d----</S>
                          <S N="ModeWithoutHardLink">d----</S>
                          <S N="BaseName">Unit</S>
                          <S N="ResolvedTarget">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\Unit</S>
                          <Nil N="Target" />
                          <Nil N="LinkType" />
                          <S N="NameString">_x001B_[44;1mUnit_x001B_[0m</S>
                          <S N="LengthString"></S>
                          <S N="LastWriteTimeString">  8/3/2024  1:02 PM</S>
                        </MS>
                      </Obj>
                      <Obj N="Root" RefId="87">
                        <TNRef RefId="4" />
                        <ToString>C:\</ToString>
                        <Props>
                          <S N="Name">C:\</S>
                          <Nil N="Parent" />
                          <S N="Root">C:\</S>
                          <B N="Exists">true</B>
                          <S N="FullName">C:\</S>
                          <S N="Extension"></S>
                          <DT N="CreationTime">2024-03-31T23:58:25.0116655-07:00</DT>
                          <DT N="CreationTimeUtc">2024-04-01T06:58:25.0116655Z</DT>
                          <DT N="LastAccessTime">2024-08-02T19:57:42.5881892-07:00</DT>
                          <DT N="LastAccessTimeUtc">2024-08-03T02:57:42.5881892Z</DT>
                          <DT N="LastWriteTime">2024-08-02T19:57:42.5881892-07:00</DT>
                          <DT N="LastWriteTimeUtc">2024-08-03T02:57:42.5881892Z</DT>
                          <Nil N="LinkTarget" />
                          <S N="UnixFileMode">-1</S>
                          <S N="Attributes">Hidden, System, Directory</S>
                        </Props>
                        <MS>
                          <S N="Mode">d--hs</S>
                          <S N="ModeWithoutHardLink">d--hs</S>
                          <S N="BaseName">C:\</S>
                          <Nil N="Target" />
                          <Nil N="LinkType" />
                          <S N="LengthString"></S>
                          <S N="LastWriteTimeString">  8/2/2024  7:57 PM</S>
                        </MS>
                      </Obj>
                      <B N="Exists">true</B>
                      <S N="FullName">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\Unit\Private</S>
                      <S N="Extension"></S>
                      <DT N="CreationTime">2024-08-03T13:02:33.5802252-07:00</DT>
                      <DT N="CreationTimeUtc">2024-08-03T20:02:33.5802252Z</DT>
                      <DT N="LastAccessTime">2024-08-03T13:02:33.8378829-07:00</DT>
                      <DT N="LastAccessTimeUtc">2024-08-03T20:02:33.8378829Z</DT>
                      <DT N="LastWriteTime">2024-08-03T13:02:33.8378829-07:00</DT>
                      <DT N="LastWriteTimeUtc">2024-08-03T20:02:33.8378829Z</DT>
                      <Nil N="LinkTarget" />
                      <Obj N="UnixFileMode" RefId="88">
                        <TNRef RefId="5" />
                        <ToString>-1</ToString>
                        <I32>-1</I32>
                      </Obj>
                      <Obj N="Attributes" RefId="89">
                        <TNRef RefId="6" />
                        <ToString>Directory</ToString>
                        <I32>16</I32>
                      </Obj>
                    </Props>
                    <MS>
                      <S N="Mode">d----</S>
                      <S N="ModeWithoutHardLink">d----</S>
                      <S N="BaseName">Private</S>
                      <S N="ResolvedTarget">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\Unit\Private</S>
                      <Nil N="Target" />
                      <Nil N="LinkType" />
                      <S N="NameString">_x001B_[44;1mPrivate_x001B_[0m</S>
                      <S N="LengthString"></S>
                      <S N="LastWriteTimeString">  8/3/2024  1:02 PM</S>
                    </MS>
                  </Obj>
                  <B N="IsReadOnly">false</B>
                  <B N="Exists">true</B>
                  <S N="FullName">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\Unit\Private\Get-PrivateFunction.tests.ps1</S>
                  <S N="Extension">.ps1</S>
                  <DT N="CreationTime">2024-08-03T13:02:33.8378829-07:00</DT>
                  <DT N="CreationTimeUtc">2024-08-03T20:02:33.8378829Z</DT>
                  <DT N="LastAccessTime">2024-08-03T13:02:33.8467802-07:00</DT>
                  <DT N="LastAccessTimeUtc">2024-08-03T20:02:33.8467802Z</DT>
                  <DT N="LastWriteTime">2024-08-03T13:02:33.8321314-07:00</DT>
                  <DT N="LastWriteTimeUtc">2024-08-03T20:02:33.8321314Z</DT>
                  <Nil N="LinkTarget" />
                  <Obj N="UnixFileMode" RefId="90">
                    <TNRef RefId="5" />
                    <ToString>-1</ToString>
                    <I32>-1</I32>
                  </Obj>
                  <Obj N="Attributes" RefId="91">
                    <TNRef RefId="6" />
                    <ToString>Archive</ToString>
                    <I32>32</I32>
                  </Obj>
                </Props>
                <MS>
                  <S N="PSPath">Microsoft.PowerShell.Core\FileSystem::C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\Unit\Private\Get-PrivateFunction.tests.ps1</S>
                  <S N="PSParentPath">Microsoft.PowerShell.Core\FileSystem::C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\Unit\Private</S>
                  <S N="PSChildName">Get-PrivateFunction.tests.ps1</S>
                  <Ref N="PSDrive" RefId="11" />
                  <Ref N="PSProvider" RefId="12" />
                  <B N="PSIsContainer">false</B>
                  <S N="Mode">-a---</S>
                  <S N="ModeWithoutHardLink">-a---</S>
                  <Obj N="VersionInfo" RefId="92">
                    <TNRef RefId="24" />
                    <ToString>File:             C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\Unit\Private\Get-PrivateFunction.tests.ps1_x000D__x000A_InternalName:     _x000D__x000A_OriginalFilename: _x000D__x000A_FileVersion:      _x000D__x000A_FileDescription:  _x000D__x000A_Product:          _x000D__x000A_ProductVersion:   _x000D__x000A_Debug:            False_x000D__x000A_Patched:          False_x000D__x000A_PreRelease:       False_x000D__x000A_PrivateBuild:     False_x000D__x000A_SpecialBuild:     False_x000D__x000A_Language:         _x000D__x000A_</ToString>
                    <Props>
                      <Nil N="Comments" />
                      <Nil N="CompanyName" />
                      <I32 N="FileBuildPart">0</I32>
                      <Nil N="FileDescription" />
                      <I32 N="FileMajorPart">0</I32>
                      <I32 N="FileMinorPart">0</I32>
                      <S N="FileName">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\Unit\Private\Get-PrivateFunction.tests.ps1</S>
                      <I32 N="FilePrivatePart">0</I32>
                      <Nil N="FileVersion" />
                      <Nil N="InternalName" />
                      <B N="IsDebug">false</B>
                      <B N="IsPatched">false</B>
                      <B N="IsPrivateBuild">false</B>
                      <B N="IsPreRelease">false</B>
                      <B N="IsSpecialBuild">false</B>
                      <Nil N="Language" />
                      <Nil N="LegalCopyright" />
                      <Nil N="LegalTrademarks" />
                      <Nil N="OriginalFilename" />
                      <Nil N="PrivateBuild" />
                      <I32 N="ProductBuildPart">0</I32>
                      <I32 N="ProductMajorPart">0</I32>
                      <I32 N="ProductMinorPart">0</I32>
                      <Nil N="ProductName" />
                      <I32 N="ProductPrivatePart">0</I32>
                      <Nil N="ProductVersion" />
                      <Nil N="SpecialBuild" />
                    </Props>
                    <MS>
                      <Version N="FileVersionRaw">0.0.0.0</Version>
                      <Version N="ProductVersionRaw">0.0.0.0</Version>
                    </MS>
                  </Obj>
                  <S N="BaseName">Get-PrivateFunction.tests</S>
                  <S N="ResolvedTarget">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\Unit\Private\Get-PrivateFunction.tests.ps1</S>
                  <Nil N="Target" />
                  <Nil N="LinkType" />
                  <S N="NameString">_x001B_[33;1mGet-PrivateFunction.tests.ps1_x001B_[0m</S>
                  <S N="LengthString">931</S>
                  <S N="LastWriteTimeString">  8/3/2024  1:02 PM</S>
                </MS>
              </Obj>
              <Obj N="Data" RefId="93">
                <TNRef RefId="25" />
                <DCT />
              </Obj>
              <Obj N="Blocks" RefId="94">
                <TNRef RefId="26" />
                <LST>
                  <Obj RefId="95">
                    <TNRef RefId="27" />
                    <ToString>[-] Get-PrivateFunction</ToString>
                    <Props>
                      <S N="Name">Get-PrivateFunction</S>
                      <Obj N="Path" RefId="96">
                        <TNRef RefId="28" />
                        <LST>
                          <S>Get-PrivateFunction</S>
                        </LST>
                      </Obj>
                      <Nil N="Data" />
                      <S N="ExpandedName">Get-PrivateFunction</S>
                      <S N="ExpandedPath">Get-PrivateFunction</S>
                      <Obj N="Blocks" RefId="97">
                        <TNRef RefId="26" />
                        <LST>
                          <Obj RefId="98">
                            <TNRef RefId="27" />
                            <ToString>[-] When calling the function with string value</ToString>
                            <Props>
                              <S N="Name">When calling the function with string value</S>
                              <Obj N="Path" RefId="99">
                                <TNRef RefId="28" />
                                <LST>
                                  <S>Get-PrivateFunction</S>
                                  <S>When calling the function with string value</S>
                                </LST>
                              </Obj>
                              <Nil N="Data" />
                              <S N="ExpandedName">When calling the function with string value</S>
                              <S N="ExpandedPath">Get-PrivateFunction.When calling the function with string value</S>
                              <Obj N="Blocks" RefId="100">
                                <TNRef RefId="26" />
                                <LST />
                              </Obj>
                              <Obj N="Tests" RefId="101">
                                <TNRef RefId="29" />
                                <LST>
                                  <Obj RefId="102">
                                    <TNRef RefId="30" />
                                    <ToString>[-] Should return a single object</ToString>
                                    <Props>
                                      <S N="Name">Should return a single object</S>
                                      <Obj N="Path" RefId="103">
                                        <TNRef RefId="28" />
                                        <LST>
                                          <S>Get-PrivateFunction</S>
                                          <S>When calling the function with string value</S>
                                          <S>Should return a single object</S>
                                        </LST>
                                      </Obj>
                                      <Nil N="Data" />
                                      <S N="ExpandedName">Should return a single object</S>
                                      <S N="ExpandedPath">Get-PrivateFunction.When calling the function with string value.Should return a single object</S>
                                      <S N="Result">Failed</S>
                                      <Obj N="ErrorRecord" RefId="104">
                                        <TNRef RefId="31" />
                                        <LST>
                                          <Obj RefId="105">
                                            <S>The term 'Get-PrivateFunction' is not recognized as a name of a cmdlet, function, script file, or executable program._x000D__x000A_Check the spelling of the name, or if a path was included, verify that the path is correct and try again.</S>
                                            <MS>
                                              <S N="DisplayErrorMessage">CommandNotFoundException: The term 'Get-PrivateFunction' is not recognized as a name of a cmdlet, function, script file, or executable program._x000D__x000A_Check the spelling of the name, or if a path was included, verify that the path is correct and try again.</S>
                                              <S N="DisplayStackTrace">at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\Unit\Private\Get-PrivateFunction.tests.ps1:16</S>
                                            </MS>
                                          </Obj>
                                        </LST>
                                      </Obj>
                                      <Nil N="StandardOutput" />
                                      <TS N="Duration">PT0.6923924S</TS>
                                      <S N="ItemType">Test</S>
                                      <S N="Id"></S>
                                      <S N="GroupId"></S>
                                      <SBK N="ScriptBlock">_x000D__x000A_            InModuleScope -ModuleName $dscModuleName {_x000D__x000A_                $return = Get-PrivateFunction -PrivateData 'string'_x000D__x000A__x000D__x000A_                ($return | Measure-Object).Count | Should -Be 1_x000D__x000A_            }_x000D__x000A_        </SBK>
                                      <Nil N="Tag" />
                                      <B N="Focus">false</B>
                                      <B N="Skip">false</B>
                                      <Ref N="Block" RefId="98" />
                                      <B N="First">true</B>
                                      <B N="Last">false</B>
                                      <B N="Include">false</B>
                                      <B N="Exclude">false</B>
                                      <B N="Explicit">false</B>
                                      <B N="ShouldRun">true</B>
                                      <I32 N="StartLine">14</I32>
                                      <B N="Executed">true</B>
                                      <DT N="ExecutedAt">2024-08-03T17:35:54.133589-07:00</DT>
                                      <B N="Passed">false</B>
                                      <B N="Skipped">false</B>
                                      <B N="Inconclusive">false</B>
                                      <TS N="UserDuration">PT0.6742155S</TS>
                                      <TS N="FrameworkDuration">PT0.0181769S</TS>
                                      <Nil N="PluginData" />
                                      <Nil N="FrameworkData" />
                                    </Props>
                                  </Obj>
                                  <Obj RefId="106">
                                    <TNRef RefId="30" />
                                    <ToString>[-] Should return a string based on the parameter PrivateData</ToString>
                                    <Props>
                                      <S N="Name">Should return a string based on the parameter PrivateData</S>
                                      <Obj N="Path" RefId="107">
                                        <TNRef RefId="28" />
                                        <LST>
                                          <S>Get-PrivateFunction</S>
                                          <S>When calling the function with string value</S>
                                          <S>Should return a string based on the parameter PrivateData</S>
                                        </LST>
                                      </Obj>
                                      <Nil N="Data" />
                                      <S N="ExpandedName">Should return a string based on the parameter PrivateData</S>
                                      <S N="ExpandedPath">Get-PrivateFunction.When calling the function with string value.Should return a string based on the parameter PrivateData</S>
                                      <S N="Result">Failed</S>
                                      <Obj N="ErrorRecord" RefId="108">
                                        <TNRef RefId="31" />
                                        <LST>
                                          <Obj RefId="109">
                                            <S>The term 'Get-PrivateFunction' is not recognized as a name of a cmdlet, function, script file, or executable program._x000D__x000A_Check the spelling of the name, or if a path was included, verify that the path is correct and try again.</S>
                                            <MS>
                                              <S N="DisplayErrorMessage">CommandNotFoundException: The term 'Get-PrivateFunction' is not recognized as a name of a cmdlet, function, script file, or executable program._x000D__x000A_Check the spelling of the name, or if a path was included, verify that the path is correct and try again.</S>
                                              <S N="DisplayStackTrace">at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\Unit\Private\Get-PrivateFunction.tests.ps1:24</S>
                                            </MS>
                                          </Obj>
                                        </LST>
                                      </Obj>
                                      <Nil N="StandardOutput" />
                                      <TS N="Duration">PT0.0366884S</TS>
                                      <S N="ItemType">Test</S>
                                      <S N="Id"></S>
                                      <S N="GroupId"></S>
                                      <SBK N="ScriptBlock">_x000D__x000A_            InModuleScope -ModuleName $dscModuleName {_x000D__x000A_                $return = Get-PrivateFunction -PrivateData 'string'_x000D__x000A__x000D__x000A_                $return | Should -Be 'string'_x000D__x000A_            }_x000D__x000A_        </SBK>
                                      <Nil N="Tag" />
                                      <B N="Focus">false</B>
                                      <B N="Skip">false</B>
                                      <Ref N="Block" RefId="98" />
                                      <B N="First">false</B>
                                      <B N="Last">true</B>
                                      <B N="Include">false</B>
                                      <B N="Exclude">false</B>
                                      <B N="Explicit">false</B>
                                      <B N="ShouldRun">true</B>
                                      <I32 N="StartLine">22</I32>
                                      <B N="Executed">true</B>
                                      <DT N="ExecutedAt">2024-08-03T17:35:54.8260822-07:00</DT>
                                      <B N="Passed">false</B>
                                      <B N="Skipped">false</B>
                                      <B N="Inconclusive">false</B>
                                      <TS N="UserDuration">PT0.0295938S</TS>
                                      <TS N="FrameworkDuration">PT0.0070946S</TS>
                                      <Nil N="PluginData" />
                                      <Nil N="FrameworkData" />
                                    </Props>
                                  </Obj>
                                </LST>
                              </Obj>
                              <S N="Result">Failed</S>
                              <I32 N="FailedCount">2</I32>
                              <I32 N="PassedCount">0</I32>
                              <I32 N="SkippedCount">0</I32>
                              <I32 N="NotRunCount">0</I32>
                              <I32 N="TotalCount">2</I32>
                              <Obj N="ErrorRecord" RefId="110">
                                <TNRef RefId="31" />
                                <LST />
                              </Obj>
                              <TS N="Duration">PT0.7340338S</TS>
                              <S N="Id"></S>
                              <S N="GroupId"></S>
                              <Obj N="Tag" RefId="111">
                                <TNRef RefId="28" />
                                <LST />
                              </Obj>
                              <B N="Focus">false</B>
                              <B N="Skip">false</B>
                              <S N="ItemType">Block</S>
                              <Obj N="BlockContainer" RefId="112">
                                <TNRef RefId="32" />
                                <ToString>C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\Unit\Private\Get-PrivateFunction.tests.ps1</ToString>
                                <Props>
                                  <S N="Type">File</S>
                                  <Ref N="Item" RefId="84" />
                                  <Ref N="Data" RefId="93" />
                                </Props>
                              </Obj>
                              <Obj N="Root" RefId="113">
                                <TNRef RefId="27" />
                                <ToString>[ ] Root</ToString>
                                <Props>
                                  <S N="Name">Root</S>
                                  <Obj N="Path" RefId="114">
                                    <TNRef RefId="28" />
                                    <LST>
                                      <S>Path</S>
                                    </LST>
                                  </Obj>
                                  <Ref N="Data" RefId="93" />
                                  <S N="ExpandedName">Root</S>
                                  <S N="ExpandedPath">.Root</S>
                                  <Ref N="Blocks" RefId="94" />
                                  <Obj N="Tests" RefId="115">
                                    <TNRef RefId="29" />
                                    <LST />
                                  </Obj>
                                  <S N="Result">NotRun</S>
                                  <I32 N="FailedCount">2</I32>
                                  <I32 N="PassedCount">0</I32>
                                  <I32 N="SkippedCount">0</I32>
                                  <I32 N="NotRunCount">0</I32>
                                  <I32 N="TotalCount">2</I32>
                                  <Obj N="ErrorRecord" RefId="116">
                                    <TNRef RefId="31" />
                                    <LST />
                                  </Obj>
                                  <TS N="Duration">PT1.2705656S</TS>
                                  <Nil N="Id" />
                                  <Nil N="GroupId" />
                                  <Nil N="Tag" />
                                  <B N="Focus">false</B>
                                  <B N="Skip">false</B>
                                  <S N="ItemType">Block</S>
                                  <Ref N="BlockContainer" RefId="112" />
                                  <Ref N="Root" RefId="113" />
                                  <B N="IsRoot">true</B>
                                  <Nil N="Parent" />
                                  <Nil N="EachTestSetup" />
                                  <SBK N="OneTimeTestSetup">_x000D__x000A_                    . $action $parameters_x000D__x000A_                    if ($null -ne $setup) {_x000D__x000A_                        . $setup_x000D__x000A_                    }_x000D__x000A_                </SBK>
                                  <Nil N="EachTestTeardown" />
                                  <SBK N="OneTimeTestTeardown">_x000D__x000A_    # Unload the module being tested so that it doesn't impact any other tests._x000D__x000A_    Get-Module -Name $script:dscModuleName -All | Remove-Module -Force_x000D__x000A_</SBK>
                                  <Nil N="EachBlockSetup" />
                                  <Nil N="OneTimeBlockSetup" />
                                  <Nil N="EachBlockTeardown" />
                                  <Nil N="OneTimeBlockTeardown" />
                                  <Obj N="Order" RefId="117">
                                    <TNRef RefId="31" />
                                    <LST>
                                      <Ref RefId="95" />
                                    </LST>
                                  </Obj>
                                  <B N="Passed">false</B>
                                  <B N="First">true</B>
                                  <B N="Last">true</B>
                                  <Nil N="StandardOutput" />
                                  <B N="ShouldRun">true</B>
                                  <B N="Executed">true</B>
                                  <DT N="ExecutedAt">2024-08-03T17:35:53.6427375-07:00</DT>
                                  <B N="Exclude">false</B>
                                  <B N="Include">false</B>
                                  <B N="Explicit">false</B>
                                  <TS N="DiscoveryDuration">PT0.0120333S</TS>
                                  <TS N="FrameworkDuration">PT0.5198759S</TS>
                                  <TS N="UserDuration">PT0.7386564S</TS>
                                  <TS N="OwnDuration">PT0.5309878S</TS>
                                  <SBK N="ScriptBlock"></SBK>
                                  <I32 N="StartLine">0</I32>
                                  <Obj N="FrameworkData" RefId="118">
                                    <TNRef RefId="25" />
                                    <DCT>
                                      <En>
                                        <S N="Key">MissingParametersProcessed</S>
                                        <B N="Value">true</B>
                                      </En>
                                    </DCT>
                                  </Obj>
                                  <Obj N="PluginData" RefId="119">
                                    <TNRef RefId="25" />
                                    <DCT>
                                      <En>
                                        <S N="Key">Mock</S>
                                        <Obj N="Value" RefId="120">
                                          <TNRef RefId="25" />
                                          <DCT>
                                            <En>
                                              <S N="Key">Behaviors</S>
                                              <Obj N="Value" RefId="121">
                                                <TNRef RefId="25" />
                                                <DCT />
                                              </Obj>
                                            </En>
                                            <En>
                                              <S N="Key">Hooks</S>
                                              <Obj N="Value" RefId="122">
                                                <TNRef RefId="31" />
                                                <LST />
                                              </Obj>
                                            </En>
                                            <En>
                                              <S N="Key">CallHistory</S>
                                              <Obj N="Value" RefId="123">
                                                <TNRef RefId="25" />
                                                <DCT />
                                              </Obj>
                                            </En>
                                          </DCT>
                                        </Obj>
                                      </En>
                                      <En>
                                        <S N="Key">TestRegistry</S>
                                        <Obj N="Value" RefId="124">
                                          <TNRef RefId="25" />
                                          <DCT>
                                            <En>
                                              <S N="Key">TestRegistryContent</S>
                                              <Nil N="Value" />
                                            </En>
                                            <En>
                                              <S N="Key">TestRegistryPath</S>
                                              <S N="Value">Microsoft.PowerShell.Core\Registry::HKEY_CURRENT_USER\Software\Pester\d5a434eb-1cf1-4209-869c-c5cf8d431f09</S>
                                            </En>
                                            <En>
                                              <S N="Key">TestRegistryAdded</S>
                                              <B N="Value">true</B>
                                            </En>
                                          </DCT>
                                        </Obj>
                                      </En>
                                      <En>
                                        <S N="Key">TestDrive</S>
                                        <Obj N="Value" RefId="125">
                                          <TNRef RefId="25" />
                                          <DCT>
                                            <En>
                                              <S N="Key">TestDriveAdded</S>
                                              <B N="Value">true</B>
                                            </En>
                                            <En>
                                              <S N="Key">TestDrivePath</S>
                                              <S N="Value">C:\Users\Administrator\AppData\Local\Temp\2\bd1589f8-0260-4ca2-a089-099ac1bdc461</S>
                                            </En>
                                            <En>
                                              <S N="Key">TestDriveContent</S>
                                              <Nil N="Value" />
                                            </En>
                                          </DCT>
                                        </Obj>
                                      </En>
                                    </DCT>
                                  </Obj>
                                  <I32 N="PendingCount">0</I32>
                                  <I32 N="InconclusiveCount">0</I32>
                                  <B N="OwnPassed">true</B>
                                  <I32 N="OwnTotalCount">0</I32>
                                  <I32 N="OwnPassedCount">0</I32>
                                  <I32 N="OwnFailedCount">0</I32>
                                  <I32 N="OwnSkippedCount">0</I32>
                                  <I32 N="OwnPendingCount">0</I32>
                                  <I32 N="OwnNotRunCount">0</I32>
                                  <I32 N="OwnInconclusiveCount">0</I32>
                                </Props>
                              </Obj>
                              <B N="IsRoot">false</B>
                              <Ref N="Parent" RefId="95" />
                              <Nil N="EachTestSetup" />
                              <Nil N="OneTimeTestSetup" />
                              <Nil N="EachTestTeardown" />
                              <Nil N="OneTimeTestTeardown" />
                              <Nil N="EachBlockSetup" />
                              <Nil N="OneTimeBlockSetup" />
                              <Nil N="EachBlockTeardown" />
                              <Nil N="OneTimeBlockTeardown" />
                              <Obj N="Order" RefId="126">
                                <TNRef RefId="31" />
                                <LST>
                                  <Ref RefId="102" />
                                  <Ref RefId="106" />
                                </LST>
                              </Obj>
                              <B N="Passed">false</B>
                              <B N="First">true</B>
                              <B N="Last">true</B>
                              <Nil N="StandardOutput" />
                              <B N="ShouldRun">true</B>
                              <B N="Executed">true</B>
                              <DT N="ExecutedAt">2024-08-03T17:35:54.130774-07:00</DT>
                              <B N="Exclude">false</B>
                              <B N="Include">false</B>
                              <B N="Explicit">false</B>
                              <TS N="DiscoveryDuration">PT0S</TS>
                              <TS N="FrameworkDuration">PT0.0296709S</TS>
                              <TS N="UserDuration">PT0.7043629S</TS>
                              <TS N="OwnDuration">PT0.004953S</TS>
                              <SBK N="ScriptBlock">_x000D__x000A_        It 'Should return a single object' {_x000D__x000A_            InModuleScope -ModuleName $dscModuleName {_x000D__x000A_                $return = Get-PrivateFunction -PrivateData 'string'_x000D__x000A__x000D__x000A_                ($return | Measure-Object).Count | Should -Be 1_x000D__x000A_            }_x000D__x000A_        }_x000D__x000A__x000D__x000A_        It 'Should return a string based on the parameter PrivateData' {_x000D__x000A_            InModuleScope -ModuleName $dscModuleName {_x000D__x000A_                $return = Get-PrivateFunction -PrivateData 'string'_x000D__x000A__x000D__x000A_                $return | Should -Be 'string'_x000D__x000A_            }_x000D__x000A_        }_x000D__x000A_    </SBK>
                              <I32 N="StartLine">13</I32>
                              <Nil N="FrameworkData" />
                              <Nil N="PluginData" />
                              <I32 N="PendingCount">0</I32>
                              <I32 N="InconclusiveCount">0</I32>
                              <B N="OwnPassed">true</B>
                              <I32 N="OwnTotalCount">2</I32>
                              <I32 N="OwnPassedCount">0</I32>
                              <I32 N="OwnFailedCount">2</I32>
                              <I32 N="OwnSkippedCount">0</I32>
                              <I32 N="OwnPendingCount">0</I32>
                              <I32 N="OwnNotRunCount">0</I32>
                              <I32 N="OwnInconclusiveCount">0</I32>
                            </Props>
                          </Obj>
                        </LST>
                      </Obj>
                      <Obj N="Tests" RefId="127">
                        <TNRef RefId="29" />
                        <LST />
                      </Obj>
                      <S N="Result">Failed</S>
                      <I32 N="FailedCount">2</I32>
                      <I32 N="PassedCount">0</I32>
                      <I32 N="SkippedCount">0</I32>
                      <I32 N="NotRunCount">0</I32>
                      <I32 N="TotalCount">2</I32>
                      <Obj N="ErrorRecord" RefId="128">
                        <TNRef RefId="31" />
                        <LST />
                      </Obj>
                      <TS N="Duration">PT0.7395778S</TS>
                      <S N="Id"></S>
                      <S N="GroupId"></S>
                      <Obj N="Tag" RefId="129">
                        <TNRef RefId="28" />
                        <LST />
                      </Obj>
                      <B N="Focus">false</B>
                      <B N="Skip">false</B>
                      <S N="ItemType">Block</S>
                      <Ref N="BlockContainer" RefId="112" />
                      <Ref N="Root" RefId="113" />
                      <B N="IsRoot">false</B>
                      <Ref N="Parent" RefId="113" />
                      <Nil N="EachTestSetup" />
                      <Nil N="OneTimeTestSetup" />
                      <Nil N="EachTestTeardown" />
                      <Nil N="OneTimeTestTeardown" />
                      <Nil N="EachBlockSetup" />
                      <Nil N="OneTimeBlockSetup" />
                      <Nil N="EachBlockTeardown" />
                      <Nil N="OneTimeBlockTeardown" />
                      <Obj N="Order" RefId="130">
                        <TNRef RefId="31" />
                        <LST>
                          <Ref RefId="98" />
                        </LST>
                      </Obj>
                      <B N="Passed">false</B>
                      <B N="First">true</B>
                      <B N="Last">true</B>
                      <Nil N="StandardOutput" />
                      <B N="ShouldRun">true</B>
                      <B N="Executed">true</B>
                      <DT N="ExecutedAt">2024-08-03T17:35:54.1268886-07:00</DT>
                      <B N="Exclude">false</B>
                      <B N="Include">false</B>
                      <B N="Explicit">false</B>
                      <TS N="DiscoveryDuration">PT0S</TS>
                      <TS N="FrameworkDuration">PT0.0344797S</TS>
                      <TS N="UserDuration">PT0.7050981S</TS>
                      <TS N="OwnDuration">PT0.005544S</TS>
                      <SBK N="ScriptBlock">_x000D__x000A_    Context 'When calling the function with string value' {_x000D__x000A_        It 'Should return a single object' {_x000D__x000A_            InModuleScope -ModuleName $dscModuleName {_x000D__x000A_                $return = Get-PrivateFunction -PrivateData 'string'_x000D__x000A__x000D__x000A_                ($return | Measure-Object).Count | Should -Be 1_x000D__x000A_            }_x000D__x000A_        }_x000D__x000A__x000D__x000A_        It 'Should return a string based on the parameter PrivateData' {_x000D__x000A_            InModuleScope -ModuleName $dscModuleName {_x000D__x000A_                $return = Get-PrivateFunction -PrivateData 'string'_x000D__x000A__x000D__x000A_                $return | Should -Be 'string'_x000D__x000A_            }_x000D__x000A_        }_x000D__x000A_    }_x000D__x000A_</SBK>
                      <I32 N="StartLine">12</I32>
                      <Nil N="FrameworkData" />
                      <Nil N="PluginData" />
                      <I32 N="PendingCount">0</I32>
                      <I32 N="InconclusiveCount">0</I32>
                      <B N="OwnPassed">true</B>
                      <I32 N="OwnTotalCount">0</I32>
                      <I32 N="OwnPassedCount">0</I32>
                      <I32 N="OwnFailedCount">0</I32>
                      <I32 N="OwnSkippedCount">0</I32>
                      <I32 N="OwnPendingCount">0</I32>
                      <I32 N="OwnNotRunCount">0</I32>
                      <I32 N="OwnInconclusiveCount">0</I32>
                    </Props>
                  </Obj>
                </LST>
              </Obj>
              <S N="Result">Failed</S>
              <TS N="Duration">PT1.3970954S</TS>
              <I32 N="FailedCount">2</I32>
              <I32 N="PassedCount">0</I32>
              <I32 N="SkippedCount">0</I32>
              <I32 N="InconclusiveCount">0</I32>
              <I32 N="NotRunCount">0</I32>
              <I32 N="TotalCount">2</I32>
              <Ref N="ErrorRecord" RefId="116" />
              <B N="Passed">false</B>
              <B N="OwnPassed">true</B>
              <B N="Skip">false</B>
              <B N="ShouldRun">true</B>
              <B N="Executed">true</B>
              <DT N="ExecutedAt">2024-08-03T17:35:53.6427375-07:00</DT>
              <TS N="DiscoveryDuration">PT0.0120333S</TS>
              <TS N="UserDuration">PT0.7386564S</TS>
              <TS N="FrameworkDuration">PT0.6464057S</TS>
              <Nil N="StandardOutput" />
            </Props>
          </Obj>
          <Obj RefId="131">
            <TNRef RefId="2" />
            <ToString>[-] C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\Unit\Public\Get-Something.tests.ps1</ToString>
            <Props>
              <S N="Name">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\Unit\Public\Get-Something.tests.ps1</S>
              <S N="Type">File</S>
              <Obj N="Item" RefId="132">
                <TNRef RefId="3" />
                <ToString>C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\Unit\Public\Get-Something.tests.ps1</ToString>
                <Props>
                  <S N="Name">Get-Something.tests.ps1</S>
                  <I64 N="Length">2967</I64>
                  <S N="DirectoryName">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\Unit\Public</S>
                  <Obj N="Directory" RefId="133">
                    <TNRef RefId="4" />
                    <ToString>C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\Unit\Public</ToString>
                    <Props>
                      <S N="Name">Public</S>
                      <Obj N="Parent" RefId="134">
                        <TNRef RefId="4" />
                        <ToString>C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\Unit</ToString>
                        <Props>
                          <S N="Name">Unit</S>
                          <S N="Parent">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests</S>
                          <S N="Root">C:\</S>
                          <B N="Exists">true</B>
                          <S N="FullName">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\Unit</S>
                          <S N="Extension"></S>
                          <DT N="CreationTime">2024-08-03T13:02:33.5802252-07:00</DT>
                          <DT N="CreationTimeUtc">2024-08-03T20:02:33.5802252Z</DT>
                          <DT N="LastAccessTime">2024-08-03T13:02:33.7524353-07:00</DT>
                          <DT N="LastAccessTimeUtc">2024-08-03T20:02:33.7524353Z</DT>
                          <DT N="LastWriteTime">2024-08-03T13:02:33.5998939-07:00</DT>
                          <DT N="LastWriteTimeUtc">2024-08-03T20:02:33.5998939Z</DT>
                          <Nil N="LinkTarget" />
                          <S N="UnixFileMode">-1</S>
                          <S N="Attributes">Directory</S>
                        </Props>
                        <MS>
                          <S N="Mode">d----</S>
                          <S N="ModeWithoutHardLink">d----</S>
                          <S N="BaseName">Unit</S>
                          <S N="ResolvedTarget">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\Unit</S>
                          <Nil N="Target" />
                          <Nil N="LinkType" />
                          <S N="NameString">_x001B_[44;1mUnit_x001B_[0m</S>
                          <S N="LengthString"></S>
                          <S N="LastWriteTimeString">  8/3/2024  1:02 PM</S>
                        </MS>
                      </Obj>
                      <Obj N="Root" RefId="135">
                        <TNRef RefId="4" />
                        <ToString>C:\</ToString>
                        <Props>
                          <S N="Name">C:\</S>
                          <Nil N="Parent" />
                          <S N="Root">C:\</S>
                          <B N="Exists">true</B>
                          <S N="FullName">C:\</S>
                          <S N="Extension"></S>
                          <DT N="CreationTime">2024-03-31T23:58:25.0116655-07:00</DT>
                          <DT N="CreationTimeUtc">2024-04-01T06:58:25.0116655Z</DT>
                          <DT N="LastAccessTime">2024-08-02T19:57:42.5881892-07:00</DT>
                          <DT N="LastAccessTimeUtc">2024-08-03T02:57:42.5881892Z</DT>
                          <DT N="LastWriteTime">2024-08-02T19:57:42.5881892-07:00</DT>
                          <DT N="LastWriteTimeUtc">2024-08-03T02:57:42.5881892Z</DT>
                          <Nil N="LinkTarget" />
                          <S N="UnixFileMode">-1</S>
                          <S N="Attributes">Hidden, System, Directory</S>
                        </Props>
                        <MS>
                          <S N="Mode">d--hs</S>
                          <S N="ModeWithoutHardLink">d--hs</S>
                          <S N="BaseName">C:\</S>
                          <Nil N="Target" />
                          <Nil N="LinkType" />
                          <S N="LengthString"></S>
                          <S N="LastWriteTimeString">  8/2/2024  7:57 PM</S>
                        </MS>
                      </Obj>
                      <B N="Exists">true</B>
                      <S N="FullName">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\Unit\Public</S>
                      <S N="Extension"></S>
                      <DT N="CreationTime">2024-08-03T13:02:33.5998939-07:00</DT>
                      <DT N="CreationTimeUtc">2024-08-03T20:02:33.5998939Z</DT>
                      <DT N="LastAccessTime">2024-08-03T13:02:33.9142135-07:00</DT>
                      <DT N="LastAccessTimeUtc">2024-08-03T20:02:33.9142135Z</DT>
                      <DT N="LastWriteTime">2024-08-03T13:02:33.9142135-07:00</DT>
                      <DT N="LastWriteTimeUtc">2024-08-03T20:02:33.9142135Z</DT>
                      <Nil N="LinkTarget" />
                      <Obj N="UnixFileMode" RefId="136">
                        <TNRef RefId="5" />
                        <ToString>-1</ToString>
                        <I32>-1</I32>
                      </Obj>
                      <Obj N="Attributes" RefId="137">
                        <TNRef RefId="6" />
                        <ToString>Directory</ToString>
                        <I32>16</I32>
                      </Obj>
                    </Props>
                    <MS>
                      <S N="Mode">d----</S>
                      <S N="ModeWithoutHardLink">d----</S>
                      <S N="BaseName">Public</S>
                      <S N="ResolvedTarget">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\Unit\Public</S>
                      <Nil N="Target" />
                      <Nil N="LinkType" />
                      <S N="NameString">_x001B_[44;1mPublic_x001B_[0m</S>
                      <S N="LengthString"></S>
                      <S N="LastWriteTimeString">  8/3/2024  1:02 PM</S>
                    </MS>
                  </Obj>
                  <B N="IsReadOnly">false</B>
                  <B N="Exists">true</B>
                  <S N="FullName">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\Unit\Public\Get-Something.tests.ps1</S>
                  <S N="Extension">.ps1</S>
                  <DT N="CreationTime">2024-08-03T13:02:33.9142135-07:00</DT>
                  <DT N="CreationTimeUtc">2024-08-03T20:02:33.9142135Z</DT>
                  <DT N="LastAccessTime">2024-08-03T13:02:33.9142135-07:00</DT>
                  <DT N="LastAccessTimeUtc">2024-08-03T20:02:33.9142135Z</DT>
                  <DT N="LastWriteTime">2024-08-03T13:02:33.9108387-07:00</DT>
                  <DT N="LastWriteTimeUtc">2024-08-03T20:02:33.9108387Z</DT>
                  <Nil N="LinkTarget" />
                  <Obj N="UnixFileMode" RefId="138">
                    <TNRef RefId="5" />
                    <ToString>-1</ToString>
                    <I32>-1</I32>
                  </Obj>
                  <Obj N="Attributes" RefId="139">
                    <TNRef RefId="6" />
                    <ToString>Archive</ToString>
                    <I32>32</I32>
                  </Obj>
                </Props>
                <MS>
                  <S N="PSPath">Microsoft.PowerShell.Core\FileSystem::C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\Unit\Public\Get-Something.tests.ps1</S>
                  <S N="PSParentPath">Microsoft.PowerShell.Core\FileSystem::C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\Unit\Public</S>
                  <S N="PSChildName">Get-Something.tests.ps1</S>
                  <Ref N="PSDrive" RefId="11" />
                  <Ref N="PSProvider" RefId="12" />
                  <B N="PSIsContainer">false</B>
                  <S N="Mode">-a---</S>
                  <S N="ModeWithoutHardLink">-a---</S>
                  <Obj N="VersionInfo" RefId="140">
                    <TNRef RefId="24" />
                    <ToString>File:             C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\Unit\Public\Get-Something.tests.ps1_x000D__x000A_InternalName:     _x000D__x000A_OriginalFilename: _x000D__x000A_FileVersion:      _x000D__x000A_FileDescription:  _x000D__x000A_Product:          _x000D__x000A_ProductVersion:   _x000D__x000A_Debug:            False_x000D__x000A_Patched:          False_x000D__x000A_PreRelease:       False_x000D__x000A_PrivateBuild:     False_x000D__x000A_SpecialBuild:     False_x000D__x000A_Language:         _x000D__x000A_</ToString>
                    <Props>
                      <Nil N="Comments" />
                      <Nil N="CompanyName" />
                      <I32 N="FileBuildPart">0</I32>
                      <Nil N="FileDescription" />
                      <I32 N="FileMajorPart">0</I32>
                      <I32 N="FileMinorPart">0</I32>
                      <S N="FileName">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\Unit\Public\Get-Something.tests.ps1</S>
                      <I32 N="FilePrivatePart">0</I32>
                      <Nil N="FileVersion" />
                      <Nil N="InternalName" />
                      <B N="IsDebug">false</B>
                      <B N="IsPatched">false</B>
                      <B N="IsPrivateBuild">false</B>
                      <B N="IsPreRelease">false</B>
                      <B N="IsSpecialBuild">false</B>
                      <Nil N="Language" />
                      <Nil N="LegalCopyright" />
                      <Nil N="LegalTrademarks" />
                      <Nil N="OriginalFilename" />
                      <Nil N="PrivateBuild" />
                      <I32 N="ProductBuildPart">0</I32>
                      <I32 N="ProductMajorPart">0</I32>
                      <I32 N="ProductMinorPart">0</I32>
                      <Nil N="ProductName" />
                      <I32 N="ProductPrivatePart">0</I32>
                      <Nil N="ProductVersion" />
                      <Nil N="SpecialBuild" />
                    </Props>
                    <MS>
                      <Version N="FileVersionRaw">0.0.0.0</Version>
                      <Version N="ProductVersionRaw">0.0.0.0</Version>
                    </MS>
                  </Obj>
                  <S N="BaseName">Get-Something.tests</S>
                  <S N="ResolvedTarget">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\Unit\Public\Get-Something.tests.ps1</S>
                  <Nil N="Target" />
                  <Nil N="LinkType" />
                  <S N="NameString">_x001B_[33;1mGet-Something.tests.ps1_x001B_[0m</S>
                  <S N="LengthString">2967</S>
                  <S N="LastWriteTimeString">  8/3/2024  1:02 PM</S>
                </MS>
              </Obj>
              <Obj N="Data" RefId="141">
                <TNRef RefId="25" />
                <DCT />
              </Obj>
              <Obj N="Blocks" RefId="142">
                <TNRef RefId="26" />
                <LST>
                  <Obj RefId="143">
                    <TNRef RefId="27" />
                    <ToString>[-] Get-Something</ToString>
                    <Props>
                      <S N="Name">Get-Something</S>
                      <Obj N="Path" RefId="144">
                        <TNRef RefId="28" />
                        <LST>
                          <S>Get-Something</S>
                        </LST>
                      </Obj>
                      <Nil N="Data" />
                      <S N="ExpandedName">Get-Something</S>
                      <S N="ExpandedPath">Get-Something</S>
                      <Obj N="Blocks" RefId="145">
                        <TNRef RefId="26" />
                        <LST>
                          <Obj RefId="146">
                            <TNRef RefId="27" />
                            <ToString>[-] When passing values using named parameters</ToString>
                            <Props>
                              <S N="Name">When passing values using named parameters</S>
                              <Obj N="Path" RefId="147">
                                <TNRef RefId="28" />
                                <LST>
                                  <S>Get-Something</S>
                                  <S>When passing values using named parameters</S>
                                </LST>
                              </Obj>
                              <Nil N="Data" />
                              <S N="ExpandedName">When passing values using named parameters</S>
                              <S N="ExpandedPath">Get-Something.When passing values using named parameters</S>
                              <Obj N="Blocks" RefId="148">
                                <TNRef RefId="26" />
                                <LST />
                              </Obj>
                              <Obj N="Tests" RefId="149">
                                <TNRef RefId="29" />
                                <LST>
                                  <Obj RefId="150">
                                    <TNRef RefId="30" />
                                    <ToString>[-] Should call the private function once</ToString>
                                    <Props>
                                      <S N="Name">Should call the private function once</S>
                                      <Obj N="Path" RefId="151">
                                        <TNRef RefId="28" />
                                        <LST>
                                          <S>Get-Something</S>
                                          <S>When passing values using named parameters</S>
                                          <S>Should call the private function once</S>
                                        </LST>
                                      </Obj>
                                      <Nil N="Data" />
                                      <S N="ExpandedName">Should call the private function once</S>
                                      <S N="ExpandedPath">Get-Something.When passing values using named parameters.Should call the private function once</S>
                                      <S N="Result">Failed</S>
                                      <Obj N="ErrorRecord" RefId="152">
                                        <TNRef RefId="31" />
                                        <LST />
                                      </Obj>
                                      <Nil N="StandardOutput" />
                                      <TS N="Duration">PT0S</TS>
                                      <S N="ItemType">Test</S>
                                      <S N="Id"></S>
                                      <S N="GroupId"></S>
                                      <SBK N="ScriptBlock">_x000D__x000A_            { Get-Something -Data 'value' } | Should -Not -Throw_x000D__x000A__x000D__x000A_            Should -Invoke -CommandName Get-PrivateFunction -Exactly -Times 1 -Scope It -ModuleName $dscModuleName_x000D__x000A_        </SBK>
                                      <Nil N="Tag" />
                                      <B N="Focus">false</B>
                                      <B N="Skip">false</B>
                                      <Ref N="Block" RefId="146" />
                                      <B N="First">true</B>
                                      <B N="Last">false</B>
                                      <B N="Include">false</B>
                                      <B N="Exclude">false</B>
                                      <B N="Explicit">false</B>
                                      <B N="ShouldRun">true</B>
                                      <I32 N="StartLine">21</I32>
                                      <B N="Executed">false</B>
                                      <Nil N="ExecutedAt" />
                                      <B N="Passed">false</B>
                                      <B N="Skipped">false</B>
                                      <B N="Inconclusive">false</B>
                                      <TS N="UserDuration">PT0S</TS>
                                      <TS N="FrameworkDuration">PT0S</TS>
                                      <Nil N="PluginData" />
                                      <Nil N="FrameworkData" />
                                    </Props>
                                  </Obj>
                                  <Obj RefId="153">
                                    <TNRef RefId="30" />
                                    <ToString>[-] Should return a single object</ToString>
                                    <Props>
                                      <S N="Name">Should return a single object</S>
                                      <Obj N="Path" RefId="154">
                                        <TNRef RefId="28" />
                                        <LST>
                                          <S>Get-Something</S>
                                          <S>When passing values using named parameters</S>
                                          <S>Should return a single object</S>
                                        </LST>
                                      </Obj>
                                      <Nil N="Data" />
                                      <S N="ExpandedName">Should return a single object</S>
                                      <S N="ExpandedPath">Get-Something.When passing values using named parameters.Should return a single object</S>
                                      <S N="Result">Failed</S>
                                      <Obj N="ErrorRecord" RefId="155">
                                        <TNRef RefId="31" />
                                        <LST />
                                      </Obj>
                                      <Nil N="StandardOutput" />
                                      <TS N="Duration">PT0S</TS>
                                      <S N="ItemType">Test</S>
                                      <S N="Id"></S>
                                      <S N="GroupId"></S>
                                      <SBK N="ScriptBlock">_x000D__x000A_            $return = Get-Something -Data 'value'_x000D__x000A__x000D__x000A_            ($return | Measure-Object).Count | Should -Be 1_x000D__x000A_        </SBK>
                                      <Nil N="Tag" />
                                      <B N="Focus">false</B>
                                      <B N="Skip">false</B>
                                      <Ref N="Block" RefId="146" />
                                      <B N="First">false</B>
                                      <B N="Last">false</B>
                                      <B N="Include">false</B>
                                      <B N="Exclude">false</B>
                                      <B N="Explicit">false</B>
                                      <B N="ShouldRun">true</B>
                                      <I32 N="StartLine">27</I32>
                                      <B N="Executed">false</B>
                                      <Nil N="ExecutedAt" />
                                      <B N="Passed">false</B>
                                      <B N="Skipped">false</B>
                                      <B N="Inconclusive">false</B>
                                      <TS N="UserDuration">PT0S</TS>
                                      <TS N="FrameworkDuration">PT0S</TS>
                                      <Nil N="PluginData" />
                                      <Nil N="FrameworkData" />
                                    </Props>
                                  </Obj>
                                  <Obj RefId="156">
                                    <TNRef RefId="30" />
                                    <ToString>[-] Should return the correct string value</ToString>
                                    <Props>
                                      <S N="Name">Should return the correct string value</S>
                                      <Obj N="Path" RefId="157">
                                        <TNRef RefId="28" />
                                        <LST>
                                          <S>Get-Something</S>
                                          <S>When passing values using named parameters</S>
                                          <S>Should return the correct string value</S>
                                        </LST>
                                      </Obj>
                                      <Nil N="Data" />
                                      <S N="ExpandedName">Should return the correct string value</S>
                                      <S N="ExpandedPath">Get-Something.When passing values using named parameters.Should return the correct string value</S>
                                      <S N="Result">Failed</S>
                                      <Obj N="ErrorRecord" RefId="158">
                                        <TNRef RefId="31" />
                                        <LST />
                                      </Obj>
                                      <Nil N="StandardOutput" />
                                      <TS N="Duration">PT0S</TS>
                                      <S N="ItemType">Test</S>
                                      <S N="Id"></S>
                                      <S N="GroupId"></S>
                                      <SBK N="ScriptBlock">_x000D__x000A_            $return = Get-Something -Data 'value'_x000D__x000A__x000D__x000A_            $return | Should -Be 'value'_x000D__x000A_        </SBK>
                                      <Nil N="Tag" />
                                      <B N="Focus">false</B>
                                      <B N="Skip">false</B>
                                      <Ref N="Block" RefId="146" />
                                      <B N="First">false</B>
                                      <B N="Last">true</B>
                                      <B N="Include">false</B>
                                      <B N="Exclude">false</B>
                                      <B N="Explicit">false</B>
                                      <B N="ShouldRun">true</B>
                                      <I32 N="StartLine">33</I32>
                                      <B N="Executed">false</B>
                                      <Nil N="ExecutedAt" />
                                      <B N="Passed">false</B>
                                      <B N="Skipped">false</B>
                                      <B N="Inconclusive">false</B>
                                      <TS N="UserDuration">PT0S</TS>
                                      <TS N="FrameworkDuration">PT0S</TS>
                                      <Nil N="PluginData" />
                                      <Nil N="FrameworkData" />
                                    </Props>
                                  </Obj>
                                </LST>
                              </Obj>
                              <S N="Result">Failed</S>
                              <I32 N="FailedCount">3</I32>
                              <I32 N="PassedCount">0</I32>
                              <I32 N="SkippedCount">0</I32>
                              <I32 N="NotRunCount">0</I32>
                              <I32 N="TotalCount">3</I32>
                              <Obj N="ErrorRecord" RefId="159">
                                <TNRef RefId="31" />
                                <LST />
                              </Obj>
                              <TS N="Duration">PT0S</TS>
                              <S N="Id"></S>
                              <S N="GroupId"></S>
                              <Obj N="Tag" RefId="160">
                                <TNRef RefId="28" />
                                <LST />
                              </Obj>
                              <B N="Focus">false</B>
                              <B N="Skip">false</B>
                              <S N="ItemType">Block</S>
                              <Obj N="BlockContainer" RefId="161">
                                <TNRef RefId="32" />
                                <ToString>C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\Unit\Public\Get-Something.tests.ps1</ToString>
                                <Props>
                                  <S N="Type">File</S>
                                  <Ref N="Item" RefId="132" />
                                  <Ref N="Data" RefId="141" />
                                </Props>
                              </Obj>
                              <Obj N="Root" RefId="162">
                                <TNRef RefId="27" />
                                <ToString>[ ] Root</ToString>
                                <Props>
                                  <S N="Name">Root</S>
                                  <Obj N="Path" RefId="163">
                                    <TNRef RefId="28" />
                                    <LST>
                                      <S>Path</S>
                                    </LST>
                                  </Obj>
                                  <Ref N="Data" RefId="141" />
                                  <S N="ExpandedName">Root</S>
                                  <S N="ExpandedPath">.Root</S>
                                  <Ref N="Blocks" RefId="142" />
                                  <Obj N="Tests" RefId="164">
                                    <TNRef RefId="29" />
                                    <LST />
                                  </Obj>
                                  <S N="Result">NotRun</S>
                                  <I32 N="FailedCount">10</I32>
                                  <I32 N="PassedCount">0</I32>
                                  <I32 N="SkippedCount">0</I32>
                                  <I32 N="NotRunCount">0</I32>
                                  <I32 N="TotalCount">10</I32>
                                  <Obj N="ErrorRecord" RefId="165">
                                    <TNRef RefId="31" />
                                    <LST />
                                  </Obj>
                                  <TS N="Duration">PT0.1188566S</TS>
                                  <Nil N="Id" />
                                  <Nil N="GroupId" />
                                  <Nil N="Tag" />
                                  <B N="Focus">false</B>
                                  <B N="Skip">false</B>
                                  <S N="ItemType">Block</S>
                                  <Ref N="BlockContainer" RefId="161" />
                                  <Ref N="Root" RefId="162" />
                                  <B N="IsRoot">true</B>
                                  <Nil N="Parent" />
                                  <Nil N="EachTestSetup" />
                                  <SBK N="OneTimeTestSetup">_x000D__x000A_                    . $action $parameters_x000D__x000A_                    if ($null -ne $setup) {_x000D__x000A_                        . $setup_x000D__x000A_                    }_x000D__x000A_                </SBK>
                                  <Nil N="EachTestTeardown" />
                                  <SBK N="OneTimeTestTeardown">_x000D__x000A_    # Unload the module being tested so that it doesn't impact any other tests._x000D__x000A_    Get-Module -Name $script:dscModuleName -All | Remove-Module -Force_x000D__x000A_</SBK>
                                  <Nil N="EachBlockSetup" />
                                  <Nil N="OneTimeBlockSetup" />
                                  <Nil N="EachBlockTeardown" />
                                  <Nil N="OneTimeBlockTeardown" />
                                  <Obj N="Order" RefId="166">
                                    <TNRef RefId="31" />
                                    <LST>
                                      <Ref RefId="143" />
                                    </LST>
                                  </Obj>
                                  <B N="Passed">false</B>
                                  <B N="First">true</B>
                                  <B N="Last">true</B>
                                  <Nil N="StandardOutput" />
                                  <B N="ShouldRun">true</B>
                                  <B N="Executed">true</B>
                                  <DT N="ExecutedAt">2024-08-03T17:35:54.9381336-07:00</DT>
                                  <B N="Exclude">false</B>
                                  <B N="Include">false</B>
                                  <B N="Explicit">false</B>
                                  <TS N="DiscoveryDuration">PT0.0163202S</TS>
                                  <TS N="FrameworkDuration">PT0.0280188S</TS>
                                  <TS N="UserDuration">PT0.0745176S</TS>
                                  <TS N="OwnDuration">PT0.0431554S</TS>
                                  <SBK N="ScriptBlock"></SBK>
                                  <I32 N="StartLine">0</I32>
                                  <Obj N="FrameworkData" RefId="167">
                                    <TNRef RefId="25" />
                                    <DCT>
                                      <En>
                                        <S N="Key">MissingParametersProcessed</S>
                                        <B N="Value">true</B>
                                      </En>
                                    </DCT>
                                  </Obj>
                                  <Obj N="PluginData" RefId="168">
                                    <TNRef RefId="25" />
                                    <DCT>
                                      <En>
                                        <S N="Key">Mock</S>
                                        <Obj N="Value" RefId="169">
                                          <TNRef RefId="25" />
                                          <DCT>
                                            <En>
                                              <S N="Key">Behaviors</S>
                                              <Obj N="Value" RefId="170">
                                                <TNRef RefId="25" />
                                                <DCT />
                                              </Obj>
                                            </En>
                                            <En>
                                              <S N="Key">Hooks</S>
                                              <Obj N="Value" RefId="171">
                                                <TNRef RefId="31" />
                                                <LST />
                                              </Obj>
                                            </En>
                                            <En>
                                              <S N="Key">CallHistory</S>
                                              <Obj N="Value" RefId="172">
                                                <TNRef RefId="25" />
                                                <DCT />
                                              </Obj>
                                            </En>
                                          </DCT>
                                        </Obj>
                                      </En>
                                      <En>
                                        <S N="Key">TestRegistry</S>
                                        <Obj N="Value" RefId="173">
                                          <TNRef RefId="25" />
                                          <DCT>
                                            <En>
                                              <S N="Key">TestRegistryContent</S>
                                              <Nil N="Value" />
                                            </En>
                                            <En>
                                              <S N="Key">TestRegistryPath</S>
                                              <S N="Value">Microsoft.PowerShell.Core\Registry::HKEY_CURRENT_USER\Software\Pester\d54e8e75-0c3b-4c90-b44d-be46219e8dca</S>
                                            </En>
                                            <En>
                                              <S N="Key">TestRegistryAdded</S>
                                              <B N="Value">true</B>
                                            </En>
                                          </DCT>
                                        </Obj>
                                      </En>
                                      <En>
                                        <S N="Key">TestDrive</S>
                                        <Obj N="Value" RefId="174">
                                          <TNRef RefId="25" />
                                          <DCT>
                                            <En>
                                              <S N="Key">TestDriveAdded</S>
                                              <B N="Value">true</B>
                                            </En>
                                            <En>
                                              <S N="Key">TestDrivePath</S>
                                              <S N="Value">C:\Users\Administrator\AppData\Local\Temp\2\680c22ad-11fa-43e8-8856-c6422112c857</S>
                                            </En>
                                            <En>
                                              <S N="Key">TestDriveContent</S>
                                              <Nil N="Value" />
                                            </En>
                                          </DCT>
                                        </Obj>
                                      </En>
                                    </DCT>
                                  </Obj>
                                  <I32 N="PendingCount">0</I32>
                                  <I32 N="InconclusiveCount">0</I32>
                                  <B N="OwnPassed">true</B>
                                  <I32 N="OwnTotalCount">0</I32>
                                  <I32 N="OwnPassedCount">0</I32>
                                  <I32 N="OwnFailedCount">0</I32>
                                  <I32 N="OwnSkippedCount">0</I32>
                                  <I32 N="OwnPendingCount">0</I32>
                                  <I32 N="OwnNotRunCount">0</I32>
                                  <I32 N="OwnInconclusiveCount">0</I32>
                                </Props>
                              </Obj>
                              <B N="IsRoot">false</B>
                              <Ref N="Parent" RefId="143" />
                              <Nil N="EachTestSetup" />
                              <Nil N="OneTimeTestSetup" />
                              <Nil N="EachTestTeardown" />
                              <Nil N="OneTimeTestTeardown" />
                              <Nil N="EachBlockSetup" />
                              <Nil N="OneTimeBlockSetup" />
                              <Nil N="EachBlockTeardown" />
                              <Nil N="OneTimeBlockTeardown" />
                              <Obj N="Order" RefId="175">
                                <TNRef RefId="31" />
                                <LST>
                                  <Ref RefId="150" />
                                  <Ref RefId="153" />
                                  <Ref RefId="156" />
                                </LST>
                              </Obj>
                              <B N="Passed">false</B>
                              <B N="First">true</B>
                              <B N="Last">false</B>
                              <Nil N="StandardOutput" />
                              <B N="ShouldRun">true</B>
                              <B N="Executed">false</B>
                              <DT N="ExecutedAt">0001-01-01T00:00:00</DT>
                              <B N="Exclude">false</B>
                              <B N="Include">false</B>
                              <B N="Explicit">false</B>
                              <TS N="DiscoveryDuration">PT0S</TS>
                              <TS N="FrameworkDuration">PT0S</TS>
                              <TS N="UserDuration">PT0S</TS>
                              <TS N="OwnDuration">PT0S</TS>
                              <SBK N="ScriptBlock">_x000D__x000A_        It 'Should call the private function once' {_x000D__x000A_            { Get-Something -Data 'value' } | Should -Not -Throw_x000D__x000A__x000D__x000A_            Should -Invoke -CommandName Get-PrivateFunction -Exactly -Times 1 -Scope It -ModuleName $dscModuleName_x000D__x000A_        }_x000D__x000A__x000D__x000A_        It 'Should return a single object' {_x000D__x000A_            $return = Get-Something -Data 'value'_x000D__x000A__x000D__x000A_            ($return | Measure-Object).Count | Should -Be 1_x000D__x000A_        }_x000D__x000A__x000D__x000A_        It 'Should return the correct string value' {_x000D__x000A_            $return = Get-Something -Data 'value'_x000D__x000A__x000D__x000A_            $return | Should -Be 'value'_x000D__x000A_        }_x000D__x000A_    </SBK>
                              <I32 N="StartLine">20</I32>
                              <Nil N="FrameworkData" />
                              <Nil N="PluginData" />
                              <I32 N="PendingCount">0</I32>
                              <I32 N="InconclusiveCount">0</I32>
                              <B N="OwnPassed">false</B>
                              <I32 N="OwnTotalCount">3</I32>
                              <I32 N="OwnPassedCount">0</I32>
                              <I32 N="OwnFailedCount">3</I32>
                              <I32 N="OwnSkippedCount">0</I32>
                              <I32 N="OwnPendingCount">0</I32>
                              <I32 N="OwnNotRunCount">0</I32>
                              <I32 N="OwnInconclusiveCount">0</I32>
                            </Props>
                          </Obj>
                          <Obj RefId="176">
                            <TNRef RefId="27" />
                            <ToString>[-] When passing values over the pipeline</ToString>
                            <Props>
                              <S N="Name">When passing values over the pipeline</S>
                              <Obj N="Path" RefId="177">
                                <TNRef RefId="28" />
                                <LST>
                                  <S>Get-Something</S>
                                  <S>When passing values over the pipeline</S>
                                </LST>
                              </Obj>
                              <Nil N="Data" />
                              <S N="ExpandedName">When passing values over the pipeline</S>
                              <S N="ExpandedPath">Get-Something.When passing values over the pipeline</S>
                              <Obj N="Blocks" RefId="178">
                                <TNRef RefId="26" />
                                <LST />
                              </Obj>
                              <Obj N="Tests" RefId="179">
                                <TNRef RefId="29" />
                                <LST>
                                  <Obj RefId="180">
                                    <TNRef RefId="30" />
                                    <ToString>[-] Should call the private function two times</ToString>
                                    <Props>
                                      <S N="Name">Should call the private function two times</S>
                                      <Obj N="Path" RefId="181">
                                        <TNRef RefId="28" />
                                        <LST>
                                          <S>Get-Something</S>
                                          <S>When passing values over the pipeline</S>
                                          <S>Should call the private function two times</S>
                                        </LST>
                                      </Obj>
                                      <Nil N="Data" />
                                      <S N="ExpandedName">Should call the private function two times</S>
                                      <S N="ExpandedPath">Get-Something.When passing values over the pipeline.Should call the private function two times</S>
                                      <S N="Result">Failed</S>
                                      <Obj N="ErrorRecord" RefId="182">
                                        <TNRef RefId="31" />
                                        <LST />
                                      </Obj>
                                      <Nil N="StandardOutput" />
                                      <TS N="Duration">PT0S</TS>
                                      <S N="ItemType">Test</S>
                                      <S N="Id"></S>
                                      <S N="GroupId"></S>
                                      <SBK N="ScriptBlock">_x000D__x000A_            { 'value1', 'value2' | Get-Something } | Should -Not -Throw_x000D__x000A__x000D__x000A_            Should -Invoke -CommandName Get-PrivateFunction -Exactly -Times 2 -Scope It -ModuleName $dscModuleName_x000D__x000A_        </SBK>
                                      <Nil N="Tag" />
                                      <B N="Focus">false</B>
                                      <B N="Skip">false</B>
                                      <Ref N="Block" RefId="176" />
                                      <B N="First">true</B>
                                      <B N="Last">false</B>
                                      <B N="Include">false</B>
                                      <B N="Exclude">false</B>
                                      <B N="Explicit">false</B>
                                      <B N="ShouldRun">true</B>
                                      <I32 N="StartLine">41</I32>
                                      <B N="Executed">false</B>
                                      <Nil N="ExecutedAt" />
                                      <B N="Passed">false</B>
                                      <B N="Skipped">false</B>
                                      <B N="Inconclusive">false</B>
                                      <TS N="UserDuration">PT0S</TS>
                                      <TS N="FrameworkDuration">PT0S</TS>
                                      <Nil N="PluginData" />
                                      <Nil N="FrameworkData" />
                                    </Props>
                                  </Obj>
                                  <Obj RefId="183">
                                    <TNRef RefId="30" />
                                    <ToString>[-] Should return an array with two items</ToString>
                                    <Props>
                                      <S N="Name">Should return an array with two items</S>
                                      <Obj N="Path" RefId="184">
                                        <TNRef RefId="28" />
                                        <LST>
                                          <S>Get-Something</S>
                                          <S>When passing values over the pipeline</S>
                                          <S>Should return an array with two items</S>
                                        </LST>
                                      </Obj>
                                      <Nil N="Data" />
                                      <S N="ExpandedName">Should return an array with two items</S>
                                      <S N="ExpandedPath">Get-Something.When passing values over the pipeline.Should return an array with two items</S>
                                      <S N="Result">Failed</S>
                                      <Obj N="ErrorRecord" RefId="185">
                                        <TNRef RefId="31" />
                                        <LST />
                                      </Obj>
                                      <Nil N="StandardOutput" />
                                      <TS N="Duration">PT0S</TS>
                                      <S N="ItemType">Test</S>
                                      <S N="Id"></S>
                                      <S N="GroupId"></S>
                                      <SBK N="ScriptBlock">_x000D__x000A_            $return = 'value1', 'value2' | Get-Something_x000D__x000A__x000D__x000A_            $return.Count | Should -Be 2_x000D__x000A_        </SBK>
                                      <Nil N="Tag" />
                                      <B N="Focus">false</B>
                                      <B N="Skip">false</B>
                                      <Ref N="Block" RefId="176" />
                                      <B N="First">false</B>
                                      <B N="Last">false</B>
                                      <B N="Include">false</B>
                                      <B N="Exclude">false</B>
                                      <B N="Explicit">false</B>
                                      <B N="ShouldRun">true</B>
                                      <I32 N="StartLine">47</I32>
                                      <B N="Executed">false</B>
                                      <Nil N="ExecutedAt" />
                                      <B N="Passed">false</B>
                                      <B N="Skipped">false</B>
                                      <B N="Inconclusive">false</B>
                                      <TS N="UserDuration">PT0S</TS>
                                      <TS N="FrameworkDuration">PT0S</TS>
                                      <Nil N="PluginData" />
                                      <Nil N="FrameworkData" />
                                    </Props>
                                  </Obj>
                                  <Obj RefId="186">
                                    <TNRef RefId="30" />
                                    <ToString>[-] Should return an array with the correct string values</ToString>
                                    <Props>
                                      <S N="Name">Should return an array with the correct string values</S>
                                      <Obj N="Path" RefId="187">
                                        <TNRef RefId="28" />
                                        <LST>
                                          <S>Get-Something</S>
                                          <S>When passing values over the pipeline</S>
                                          <S>Should return an array with the correct string values</S>
                                        </LST>
                                      </Obj>
                                      <Nil N="Data" />
                                      <S N="ExpandedName">Should return an array with the correct string values</S>
                                      <S N="ExpandedPath">Get-Something.When passing values over the pipeline.Should return an array with the correct string values</S>
                                      <S N="Result">Failed</S>
                                      <Obj N="ErrorRecord" RefId="188">
                                        <TNRef RefId="31" />
                                        <LST />
                                      </Obj>
                                      <Nil N="StandardOutput" />
                                      <TS N="Duration">PT0S</TS>
                                      <S N="ItemType">Test</S>
                                      <S N="Id"></S>
                                      <S N="GroupId"></S>
                                      <SBK N="ScriptBlock">_x000D__x000A_            $return = 'value1', 'value2' | Get-Something_x000D__x000A__x000D__x000A_            $return[0] | Should -Be 'value1'_x000D__x000A_            $return[1] | Should -Be 'value2'_x000D__x000A_        </SBK>
                                      <Nil N="Tag" />
                                      <B N="Focus">false</B>
                                      <B N="Skip">false</B>
                                      <Ref N="Block" RefId="176" />
                                      <B N="First">false</B>
                                      <B N="Last">false</B>
                                      <B N="Include">false</B>
                                      <B N="Exclude">false</B>
                                      <B N="Explicit">false</B>
                                      <B N="ShouldRun">true</B>
                                      <I32 N="StartLine">53</I32>
                                      <B N="Executed">false</B>
                                      <Nil N="ExecutedAt" />
                                      <B N="Passed">false</B>
                                      <B N="Skipped">false</B>
                                      <B N="Inconclusive">false</B>
                                      <TS N="UserDuration">PT0S</TS>
                                      <TS N="FrameworkDuration">PT0S</TS>
                                      <Nil N="PluginData" />
                                      <Nil N="FrameworkData" />
                                    </Props>
                                  </Obj>
                                  <Obj RefId="189">
                                    <TNRef RefId="30" />
                                    <ToString>[-] Should accept values from the pipeline by property name</ToString>
                                    <Props>
                                      <S N="Name">Should accept values from the pipeline by property name</S>
                                      <Obj N="Path" RefId="190">
                                        <TNRef RefId="28" />
                                        <LST>
                                          <S>Get-Something</S>
                                          <S>When passing values over the pipeline</S>
                                          <S>Should accept values from the pipeline by property name</S>
                                        </LST>
                                      </Obj>
                                      <Nil N="Data" />
                                      <S N="ExpandedName">Should accept values from the pipeline by property name</S>
                                      <S N="ExpandedPath">Get-Something.When passing values over the pipeline.Should accept values from the pipeline by property name</S>
                                      <S N="Result">Failed</S>
                                      <Obj N="ErrorRecord" RefId="191">
                                        <TNRef RefId="31" />
                                        <LST />
                                      </Obj>
                                      <Nil N="StandardOutput" />
                                      <TS N="Duration">PT0S</TS>
                                      <S N="ItemType">Test</S>
                                      <S N="Id"></S>
                                      <S N="GroupId"></S>
                                      <SBK N="ScriptBlock">_x000D__x000A_            $return = 'value1', 'value2' | ForEach-Object {_x000D__x000A_                [PSCustomObject]@{_x000D__x000A_                    Data = $__x000D__x000A_                    OtherProperty = 'other'_x000D__x000A_                }_x000D__x000A_            } | Get-Something_x000D__x000A__x000D__x000A_            $return[0] | Should -Be 'value1'_x000D__x000A_            $return[1] | Should -Be 'value2'_x000D__x000A_        </SBK>
                                      <Nil N="Tag" />
                                      <B N="Focus">false</B>
                                      <B N="Skip">false</B>
                                      <Ref N="Block" RefId="176" />
                                      <B N="First">false</B>
                                      <B N="Last">true</B>
                                      <B N="Include">false</B>
                                      <B N="Exclude">false</B>
                                      <B N="Explicit">false</B>
                                      <B N="ShouldRun">true</B>
                                      <I32 N="StartLine">60</I32>
                                      <B N="Executed">false</B>
                                      <Nil N="ExecutedAt" />
                                      <B N="Passed">false</B>
                                      <B N="Skipped">false</B>
                                      <B N="Inconclusive">false</B>
                                      <TS N="UserDuration">PT0S</TS>
                                      <TS N="FrameworkDuration">PT0S</TS>
                                      <Nil N="PluginData" />
                                      <Nil N="FrameworkData" />
                                    </Props>
                                  </Obj>
                                </LST>
                              </Obj>
                              <S N="Result">Failed</S>
                              <I32 N="FailedCount">4</I32>
                              <I32 N="PassedCount">0</I32>
                              <I32 N="SkippedCount">0</I32>
                              <I32 N="NotRunCount">0</I32>
                              <I32 N="TotalCount">4</I32>
                              <Obj N="ErrorRecord" RefId="192">
                                <TNRef RefId="31" />
                                <LST />
                              </Obj>
                              <TS N="Duration">PT0S</TS>
                              <S N="Id"></S>
                              <S N="GroupId"></S>
                              <Obj N="Tag" RefId="193">
                                <TNRef RefId="28" />
                                <LST />
                              </Obj>
                              <B N="Focus">false</B>
                              <B N="Skip">false</B>
                              <S N="ItemType">Block</S>
                              <Ref N="BlockContainer" RefId="161" />
                              <Ref N="Root" RefId="162" />
                              <B N="IsRoot">false</B>
                              <Ref N="Parent" RefId="143" />
                              <Nil N="EachTestSetup" />
                              <Nil N="OneTimeTestSetup" />
                              <Nil N="EachTestTeardown" />
                              <Nil N="OneTimeTestTeardown" />
                              <Nil N="EachBlockSetup" />
                              <Nil N="OneTimeBlockSetup" />
                              <Nil N="EachBlockTeardown" />
                              <Nil N="OneTimeBlockTeardown" />
                              <Obj N="Order" RefId="194">
                                <TNRef RefId="31" />
                                <LST>
                                  <Ref RefId="180" />
                                  <Ref RefId="183" />
                                  <Ref RefId="186" />
                                  <Ref RefId="189" />
                                </LST>
                              </Obj>
                              <B N="Passed">false</B>
                              <B N="First">false</B>
                              <B N="Last">false</B>
                              <Nil N="StandardOutput" />
                              <B N="ShouldRun">true</B>
                              <B N="Executed">false</B>
                              <DT N="ExecutedAt">0001-01-01T00:00:00</DT>
                              <B N="Exclude">false</B>
                              <B N="Include">false</B>
                              <B N="Explicit">false</B>
                              <TS N="DiscoveryDuration">PT0S</TS>
                              <TS N="FrameworkDuration">PT0S</TS>
                              <TS N="UserDuration">PT0S</TS>
                              <TS N="OwnDuration">PT0S</TS>
                              <SBK N="ScriptBlock">_x000D__x000A_        It 'Should call the private function two times' {_x000D__x000A_            { 'value1', 'value2' | Get-Something } | Should -Not -Throw_x000D__x000A__x000D__x000A_            Should -Invoke -CommandName Get-PrivateFunction -Exactly -Times 2 -Scope It -ModuleName $dscModuleName_x000D__x000A_        }_x000D__x000A__x000D__x000A_        It 'Should return an array with two items' {_x000D__x000A_            $return = 'value1', 'value2' | Get-Something_x000D__x000A__x000D__x000A_            $return.Count | Should -Be 2_x000D__x000A_        }_x000D__x000A__x000D__x000A_        It 'Should return an array with the correct string values' {_x000D__x000A_            $return = 'value1', 'value2' | Get-Something_x000D__x000A__x000D__x000A_            $return[0] | Should -Be 'value1'_x000D__x000A_            $return[1] | Should -Be 'value2'_x000D__x000A_        }_x000D__x000A__x000D__x000A_        It 'Should accept values from the pipeline by property name' {_x000D__x000A_            $return = 'value1', 'value2' | ForEach-Object {_x000D__x000A_                [PSCustomObject]@{_x000D__x000A_                    Data = $__x000D__x000A_                    OtherProperty = 'other'_x000D__x000A_                }_x000D__x000A_            } | Get-Something_x000D__x000A__x000D__x000A_            $return[0] | Should -Be 'value1'_x000D__x000A_            $return[1] | Should -Be 'value2'_x000D__x000A_        }_x000D__x000A_    </SBK>
                              <I32 N="StartLine">40</I32>
                              <Nil N="FrameworkData" />
                              <Nil N="PluginData" />
                              <I32 N="PendingCount">0</I32>
                              <I32 N="InconclusiveCount">0</I32>
                              <B N="OwnPassed">false</B>
                              <I32 N="OwnTotalCount">4</I32>
                              <I32 N="OwnPassedCount">0</I32>
                              <I32 N="OwnFailedCount">4</I32>
                              <I32 N="OwnSkippedCount">0</I32>
                              <I32 N="OwnPendingCount">0</I32>
                              <I32 N="OwnNotRunCount">0</I32>
                              <I32 N="OwnInconclusiveCount">0</I32>
                            </Props>
                          </Obj>
                          <Obj RefId="195">
                            <TNRef RefId="27" />
                            <ToString>[-] When passing WhatIf</ToString>
                            <Props>
                              <S N="Name">When passing WhatIf</S>
                              <Obj N="Path" RefId="196">
                                <TNRef RefId="28" />
                                <LST>
                                  <S>Get-Something</S>
                                  <S>When passing WhatIf</S>
                                </LST>
                              </Obj>
                              <Nil N="Data" />
                              <S N="ExpandedName">When passing WhatIf</S>
                              <S N="ExpandedPath">Get-Something.When passing WhatIf</S>
                              <Obj N="Blocks" RefId="197">
                                <TNRef RefId="26" />
                                <LST />
                              </Obj>
                              <Obj N="Tests" RefId="198">
                                <TNRef RefId="29" />
                                <LST>
                                  <Obj RefId="199">
                                    <TNRef RefId="30" />
                                    <ToString>[-] Should support the parameter WhatIf</ToString>
                                    <Props>
                                      <S N="Name">Should support the parameter WhatIf</S>
                                      <Obj N="Path" RefId="200">
                                        <TNRef RefId="28" />
                                        <LST>
                                          <S>Get-Something</S>
                                          <S>When passing WhatIf</S>
                                          <S>Should support the parameter WhatIf</S>
                                        </LST>
                                      </Obj>
                                      <Nil N="Data" />
                                      <S N="ExpandedName">Should support the parameter WhatIf</S>
                                      <S N="ExpandedPath">Get-Something.When passing WhatIf.Should support the parameter WhatIf</S>
                                      <S N="Result">Failed</S>
                                      <Obj N="ErrorRecord" RefId="201">
                                        <TNRef RefId="31" />
                                        <LST />
                                      </Obj>
                                      <Nil N="StandardOutput" />
                                      <TS N="Duration">PT0S</TS>
                                      <S N="ItemType">Test</S>
                                      <S N="Id"></S>
                                      <S N="GroupId"></S>
                                      <SBK N="ScriptBlock">_x000D__x000A_            (Get-Command -Name 'Get-Something').Parameters.ContainsKey('WhatIf') | Should -Be $true_x000D__x000A_        </SBK>
                                      <Nil N="Tag" />
                                      <B N="Focus">false</B>
                                      <B N="Skip">false</B>
                                      <Ref N="Block" RefId="195" />
                                      <B N="First">true</B>
                                      <B N="Last">false</B>
                                      <B N="Include">false</B>
                                      <B N="Exclude">false</B>
                                      <B N="Explicit">false</B>
                                      <B N="ShouldRun">true</B>
                                      <I32 N="StartLine">74</I32>
                                      <B N="Executed">false</B>
                                      <Nil N="ExecutedAt" />
                                      <B N="Passed">false</B>
                                      <B N="Skipped">false</B>
                                      <B N="Inconclusive">false</B>
                                      <TS N="UserDuration">PT0S</TS>
                                      <TS N="FrameworkDuration">PT0S</TS>
                                      <Nil N="PluginData" />
                                      <Nil N="FrameworkData" />
                                    </Props>
                                  </Obj>
                                  <Obj RefId="202">
                                    <TNRef RefId="30" />
                                    <ToString>[-] Should not call the private function</ToString>
                                    <Props>
                                      <S N="Name">Should not call the private function</S>
                                      <Obj N="Path" RefId="203">
                                        <TNRef RefId="28" />
                                        <LST>
                                          <S>Get-Something</S>
                                          <S>When passing WhatIf</S>
                                          <S>Should not call the private function</S>
                                        </LST>
                                      </Obj>
                                      <Nil N="Data" />
                                      <S N="ExpandedName">Should not call the private function</S>
                                      <S N="ExpandedPath">Get-Something.When passing WhatIf.Should not call the private function</S>
                                      <S N="Result">Failed</S>
                                      <Obj N="ErrorRecord" RefId="204">
                                        <TNRef RefId="31" />
                                        <LST />
                                      </Obj>
                                      <Nil N="StandardOutput" />
                                      <TS N="Duration">PT0S</TS>
                                      <S N="ItemType">Test</S>
                                      <S N="Id"></S>
                                      <S N="GroupId"></S>
                                      <SBK N="ScriptBlock">_x000D__x000A_            { Get-Something -Data 'value' -WhatIf } | Should -Not -Throw_x000D__x000A__x000D__x000A_            Should -Invoke -CommandName Get-PrivateFunction -Exactly -Times 0 -Scope It -ModuleName $dscModuleName_x000D__x000A_        </SBK>
                                      <Nil N="Tag" />
                                      <B N="Focus">false</B>
                                      <B N="Skip">false</B>
                                      <Ref N="Block" RefId="195" />
                                      <B N="First">false</B>
                                      <B N="Last">false</B>
                                      <B N="Include">false</B>
                                      <B N="Exclude">false</B>
                                      <B N="Explicit">false</B>
                                      <B N="ShouldRun">true</B>
                                      <I32 N="StartLine">78</I32>
                                      <B N="Executed">false</B>
                                      <Nil N="ExecutedAt" />
                                      <B N="Passed">false</B>
                                      <B N="Skipped">false</B>
                                      <B N="Inconclusive">false</B>
                                      <TS N="UserDuration">PT0S</TS>
                                      <TS N="FrameworkDuration">PT0S</TS>
                                      <Nil N="PluginData" />
                                      <Nil N="FrameworkData" />
                                    </Props>
                                  </Obj>
                                  <Obj RefId="205">
                                    <TNRef RefId="30" />
                                    <ToString>[-] Should return $null</ToString>
                                    <Props>
                                      <S N="Name">Should return $null</S>
                                      <Obj N="Path" RefId="206">
                                        <TNRef RefId="28" />
                                        <LST>
                                          <S>Get-Something</S>
                                          <S>When passing WhatIf</S>
                                          <S>Should return $null</S>
                                        </LST>
                                      </Obj>
                                      <Nil N="Data" />
                                      <S N="ExpandedName">Should return $null</S>
                                      <S N="ExpandedPath">Get-Something.When passing WhatIf.Should return $null</S>
                                      <S N="Result">Failed</S>
                                      <Obj N="ErrorRecord" RefId="207">
                                        <TNRef RefId="31" />
                                        <LST />
                                      </Obj>
                                      <Nil N="StandardOutput" />
                                      <TS N="Duration">PT0S</TS>
                                      <S N="ItemType">Test</S>
                                      <S N="Id"></S>
                                      <S N="GroupId"></S>
                                      <SBK N="ScriptBlock">_x000D__x000A_            $return = Get-Something -Data 'value' -WhatIf_x000D__x000A__x000D__x000A_            $return | Should -BeNullOrEmpty_x000D__x000A_        </SBK>
                                      <Nil N="Tag" />
                                      <B N="Focus">false</B>
                                      <B N="Skip">false</B>
                                      <Ref N="Block" RefId="195" />
                                      <B N="First">false</B>
                                      <B N="Last">true</B>
                                      <B N="Include">false</B>
                                      <B N="Exclude">false</B>
                                      <B N="Explicit">false</B>
                                      <B N="ShouldRun">true</B>
                                      <I32 N="StartLine">84</I32>
                                      <B N="Executed">false</B>
                                      <Nil N="ExecutedAt" />
                                      <B N="Passed">false</B>
                                      <B N="Skipped">false</B>
                                      <B N="Inconclusive">false</B>
                                      <TS N="UserDuration">PT0S</TS>
                                      <TS N="FrameworkDuration">PT0S</TS>
                                      <Nil N="PluginData" />
                                      <Nil N="FrameworkData" />
                                    </Props>
                                  </Obj>
                                </LST>
                              </Obj>
                              <S N="Result">Failed</S>
                              <I32 N="FailedCount">3</I32>
                              <I32 N="PassedCount">0</I32>
                              <I32 N="SkippedCount">0</I32>
                              <I32 N="NotRunCount">0</I32>
                              <I32 N="TotalCount">3</I32>
                              <Obj N="ErrorRecord" RefId="208">
                                <TNRef RefId="31" />
                                <LST />
                              </Obj>
                              <TS N="Duration">PT0S</TS>
                              <S N="Id"></S>
                              <S N="GroupId"></S>
                              <Obj N="Tag" RefId="209">
                                <TNRef RefId="28" />
                                <LST />
                              </Obj>
                              <B N="Focus">false</B>
                              <B N="Skip">false</B>
                              <S N="ItemType">Block</S>
                              <Ref N="BlockContainer" RefId="161" />
                              <Ref N="Root" RefId="162" />
                              <B N="IsRoot">false</B>
                              <Ref N="Parent" RefId="143" />
                              <Nil N="EachTestSetup" />
                              <Nil N="OneTimeTestSetup" />
                              <Nil N="EachTestTeardown" />
                              <Nil N="OneTimeTestTeardown" />
                              <Nil N="EachBlockSetup" />
                              <Nil N="OneTimeBlockSetup" />
                              <Nil N="EachBlockTeardown" />
                              <Nil N="OneTimeBlockTeardown" />
                              <Obj N="Order" RefId="210">
                                <TNRef RefId="31" />
                                <LST>
                                  <Ref RefId="199" />
                                  <Ref RefId="202" />
                                  <Ref RefId="205" />
                                </LST>
                              </Obj>
                              <B N="Passed">false</B>
                              <B N="First">false</B>
                              <B N="Last">true</B>
                              <Nil N="StandardOutput" />
                              <B N="ShouldRun">true</B>
                              <B N="Executed">false</B>
                              <DT N="ExecutedAt">0001-01-01T00:00:00</DT>
                              <B N="Exclude">false</B>
                              <B N="Include">false</B>
                              <B N="Explicit">false</B>
                              <TS N="DiscoveryDuration">PT0S</TS>
                              <TS N="FrameworkDuration">PT0S</TS>
                              <TS N="UserDuration">PT0S</TS>
                              <TS N="OwnDuration">PT0S</TS>
                              <SBK N="ScriptBlock">_x000D__x000A_        It 'Should support the parameter WhatIf' {_x000D__x000A_            (Get-Command -Name 'Get-Something').Parameters.ContainsKey('WhatIf') | Should -Be $true_x000D__x000A_        }_x000D__x000A__x000D__x000A_        It 'Should not call the private function' {_x000D__x000A_            { Get-Something -Data 'value' -WhatIf } | Should -Not -Throw_x000D__x000A__x000D__x000A_            Should -Invoke -CommandName Get-PrivateFunction -Exactly -Times 0 -Scope It -ModuleName $dscModuleName_x000D__x000A_        }_x000D__x000A__x000D__x000A_        It 'Should return $null' {_x000D__x000A_            $return = Get-Something -Data 'value' -WhatIf_x000D__x000A__x000D__x000A_            $return | Should -BeNullOrEmpty_x000D__x000A_        }_x000D__x000A_    </SBK>
                              <I32 N="StartLine">73</I32>
                              <Nil N="FrameworkData" />
                              <Nil N="PluginData" />
                              <I32 N="PendingCount">0</I32>
                              <I32 N="InconclusiveCount">0</I32>
                              <B N="OwnPassed">false</B>
                              <I32 N="OwnTotalCount">3</I32>
                              <I32 N="OwnPassedCount">0</I32>
                              <I32 N="OwnFailedCount">3</I32>
                              <I32 N="OwnSkippedCount">0</I32>
                              <I32 N="OwnPendingCount">0</I32>
                              <I32 N="OwnNotRunCount">0</I32>
                              <I32 N="OwnInconclusiveCount">0</I32>
                            </Props>
                          </Obj>
                        </LST>
                      </Obj>
                      <Obj N="Tests" RefId="211">
                        <TNRef RefId="29" />
                        <LST />
                      </Obj>
                      <S N="Result">Failed</S>
                      <I32 N="FailedCount">10</I32>
                      <I32 N="PassedCount">0</I32>
                      <I32 N="SkippedCount">0</I32>
                      <I32 N="NotRunCount">0</I32>
                      <I32 N="TotalCount">10</I32>
                      <Obj N="ErrorRecord" RefId="212">
                        <TNRef RefId="31" />
                        <LST>
                          <Obj RefId="213">
                            <TN RefId="33">
                              <T>System.Management.Automation.ErrorRecord</T>
                              <T>System.Object</T>
                            </TN>
                            <ToString>Could not find Command Get-PrivateFunction</ToString>
                            <MS>
                              <S N="DisplayErrorMessage">CommandNotFoundException: Could not find Command Get-PrivateFunction</S>
                              <S N="DisplayStackTrace"></S>
                              <Obj N="Exception" RefId="214">
                                <TN RefId="34">
                                  <T>System.Management.Automation.CommandNotFoundException</T>
                                  <T>System.Management.Automation.RuntimeException</T>
                                  <T>System.SystemException</T>
                                  <T>System.Exception</T>
                                  <T>System.Object</T>
                                </TN>
                                <ToString>System.Management.Automation.CommandNotFoundException: Could not find Command Get-PrivateFunction_x000D__x000A_   at System.Management.Automation.ExceptionHandlingOps.CheckActionPreference(FunctionContext funcContext, Exception exception)_x000D__x000A_   at Invoke-ScriptBlock(Closure, FunctionContext)</ToString>
                                <Props>
                                  <S N="ErrorRecord">Could not find Command Get-PrivateFunction</S>
                                  <S N="CommandName"></S>
                                  <B N="WasThrownFromThrowStatement">true</B>
                                  <S N="TargetSite">Void CheckActionPreference(System.Management.Automation.Language.FunctionContext, System.Exception)</S>
                                  <S N="Message">Could not find Command Get-PrivateFunction</S>
                                  <Obj N="Data" RefId="215">
                                    <TN RefId="35">
                                      <T>System.Collections.ListDictionaryInternal</T>
                                      <T>System.Object</T>
                                    </TN>
                                    <DCT>
                                      <En>
                                        <S N="Key">System.Management.Automation.Interpreter.InterpretedFrameInfo</S>
                                        <Obj N="Value" RefId="216">
                                          <TN RefId="36">
                                            <T>System.Management.Automation.Interpreter.InterpretedFrameInfo[]</T>
                                            <T>System.Array</T>
                                            <T>System.Object</T>
                                          </TN>
                                          <LST>
                                            <S>Resolve-Command</S>
                                            <S>Mock</S>
                                            <S>&lt;ScriptBlock&gt;</S>
                                            <S>&lt;ScriptBlock&gt;</S>
                                            <S>&lt;ScriptBlock&gt;</S>
                                            <S>&lt;ScriptBlock&gt;</S>
                                            <S>Invoke-InNewScriptScope</S>
                                            <S>Run-Test</S>
                                            <S>Invoke-Test</S>
                                            <S>Invoke-Pester&lt;End&gt;</S>
                                            <S>&lt;ScriptBlock&gt;</S>
                                            <S>&lt;ScriptBlock&gt;&lt;End&gt;</S>
                                            <S>&lt;ScriptBlock&gt;&lt;Begin&gt;</S>
                                            <S>&lt;ScriptBlock&gt;</S>
                                          </LST>
                                        </Obj>
                                      </En>
                                    </DCT>
                                  </Obj>
                                  <Nil N="InnerException" />
                                  <Nil N="HelpLink" />
                                  <S N="Source">System.Management.Automation</S>
                                  <I32 N="HResult">-2146233087</I32>
                                  <S N="StackTrace">   at System.Management.Automation.ExceptionHandlingOps.CheckActionPreference(FunctionContext funcContext, Exception exception)_x000D__x000A_   at Invoke-ScriptBlock(Closure, FunctionContext)</S>
                                </Props>
                              </Obj>
                              <S N="TargetObject"></S>
                              <S N="FullyQualifiedErrorId">CommandNotFoundException</S>
                              <Obj N="InvocationInfo" RefId="217">
                                <TN RefId="37">
                                  <T>System.Management.Automation.InvocationInfo</T>
                                  <T>System.Object</T>
                                </TN>
                                <ToString>System.Management.Automation.InvocationInfo</ToString>
                                <Props>
                                  <Nil N="MyCommand" />
                                  <Obj N="BoundParameters" RefId="218">
                                    <TN RefId="38">
                                      <T>System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]</T>
                                      <T>System.Object</T>
                                    </TN>
                                    <DCT />
                                  </Obj>
                                  <Obj N="UnboundArguments" RefId="219">
                                    <TNRef RefId="31" />
                                    <LST />
                                  </Obj>
                                  <I32 N="ScriptLineNumber">11642</I32>
                                  <I32 N="OffsetInLine">9</I32>
                                  <I64 N="HistoryId">18</I64>
                                  <S N="ScriptName">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1</S>
                                  <S N="Line">        throw ([System.Management.Automation.CommandNotFoundException] "Could not find Command $CommandName")_x000D__x000A_</S>
                                  <S N="Statement">throw ([System.Management.Automation.CommandNotFoundException] "Could not find Command $CommandName")</S>
                                  <S N="PositionMessage">At C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1:11642 char:9_x000D__x000A_+         throw ([System.Management.Automation.CommandNotFoundException …_x000D__x000A_+         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~</S>
                                  <S N="PSScriptRoot">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1</S>
                                  <S N="PSCommandPath">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1</S>
                                  <S N="InvocationName"></S>
                                  <I32 N="PipelineLength">0</I32>
                                  <I32 N="PipelinePosition">0</I32>
                                  <B N="ExpectingInput">false</B>
                                  <Obj N="CommandOrigin" RefId="220">
                                    <TN RefId="39">
                                      <T>System.Management.Automation.CommandOrigin</T>
                                      <T>System.Enum</T>
                                      <T>System.ValueType</T>
                                      <T>System.Object</T>
                                    </TN>
                                    <ToString>Internal</ToString>
                                    <I32>1</I32>
                                  </Obj>
                                  <Nil N="DisplayScriptPosition" />
                                </Props>
                                <MS>
                                  <Obj N="ParameterValues" RefId="221">
                                    <TNRef RefId="25" />
                                    <DCT />
                                  </Obj>
                                </MS>
                              </Obj>
                              <I32 N="ErrorCategory_Category">13</I32>
                              <S N="ErrorCategory_Activity"></S>
                              <S N="ErrorCategory_Reason">CommandNotFoundException</S>
                              <S N="ErrorCategory_TargetName"></S>
                              <S N="ErrorCategory_TargetType">String</S>
                              <S N="ErrorCategory_Message">ObjectNotFound: (:String) [], CommandNotFoundException</S>
                              <B N="SerializeExtendedInfo">false</B>
                              <S N="ErrorDetails_ScriptStackTrace">at Resolve-Command, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 11642_x000D__x000A_at Mock, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 14897_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\Unit\Public\Get-Something.tests.ps1: line 14_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1975_x000D__x000A_at Invoke-ScriptBlock, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2160_x000D__x000A_at Invoke-Block, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 940_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 893_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2024_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1985_x000D__x000A_at Invoke-ScriptBlock, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2160_x000D__x000A_at Invoke-Block, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 940_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1688_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.ps1: line 3_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 3260_x000D__x000A_at Invoke-InNewScriptScope, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 3267_x000D__x000A_at Run-Test, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1691_x000D__x000A_at Invoke-Test, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2512_x000D__x000A_at Invoke-Pester&lt;End&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 5110_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Sampler\0.118.1\tasks\Invoke-Pester.pester.build.ps1: line 906_x000D__x000A_at *Task, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 629_x000D__x000A_at *Task, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 601_x000D__x000A_at *Task, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 601_x000D__x000A_at &lt;ScriptBlock&gt;&lt;End&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 787_x000D__x000A_at &lt;ScriptBlock&gt;&lt;Begin&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\build.ps1: line 532_x000D__x000A_at &lt;ScriptBlock&gt;, &lt;No file&gt;: line 1</S>
                              <Nil N="PSMessageDetails" />
                            </MS>
                          </Obj>
                        </LST>
                      </Obj>
                      <TS N="Duration">PT0.0757012S</TS>
                      <S N="Id"></S>
                      <S N="GroupId"></S>
                      <Obj N="Tag" RefId="222">
                        <TNRef RefId="28" />
                        <LST />
                      </Obj>
                      <B N="Focus">false</B>
                      <B N="Skip">false</B>
                      <S N="ItemType">Block</S>
                      <Ref N="BlockContainer" RefId="161" />
                      <Ref N="Root" RefId="162" />
                      <B N="IsRoot">false</B>
                      <Ref N="Parent" RefId="162" />
                      <Nil N="EachTestSetup" />
                      <SBK N="OneTimeTestSetup">_x000D__x000A_        Mock -CommandName Get-PrivateFunction -MockWith {_x000D__x000A_            # This return the value passed to the Get-PrivateFunction parameter $PrivateData._x000D__x000A_            $PrivateData_x000D__x000A_        } -ModuleName $dscModuleName_x000D__x000A_    </SBK>
                      <Nil N="EachTestTeardown" />
                      <Nil N="OneTimeTestTeardown" />
                      <Nil N="EachBlockSetup" />
                      <Nil N="OneTimeBlockSetup" />
                      <Nil N="EachBlockTeardown" />
                      <Nil N="OneTimeBlockTeardown" />
                      <Obj N="Order" RefId="223">
                        <TNRef RefId="31" />
                        <LST>
                          <Ref RefId="146" />
                          <Ref RefId="176" />
                          <Ref RefId="195" />
                        </LST>
                      </Obj>
                      <B N="Passed">false</B>
                      <B N="First">true</B>
                      <B N="Last">true</B>
                      <Nil N="StandardOutput" />
                      <B N="ShouldRun">true</B>
                      <B N="Executed">true</B>
                      <DT N="ExecutedAt">2024-08-03T17:35:54.9542381-07:00</DT>
                      <B N="Exclude">false</B>
                      <B N="Include">false</B>
                      <B N="Explicit">false</B>
                      <TS N="DiscoveryDuration">PT0S</TS>
                      <TS N="FrameworkDuration">PT0.0146458S</TS>
                      <TS N="UserDuration">PT0.0610554S</TS>
                      <TS N="OwnDuration">PT0.0757012S</TS>
                      <SBK N="ScriptBlock">_x000D__x000A_    BeforeAll {_x000D__x000A_        Mock -CommandName Get-PrivateFunction -MockWith {_x000D__x000A_            # This return the value passed to the Get-PrivateFunction parameter $PrivateData._x000D__x000A_            $PrivateData_x000D__x000A_        } -ModuleName $dscModuleName_x000D__x000A_    }_x000D__x000A__x000D__x000A_    Context 'When passing values using named parameters' {_x000D__x000A_        It 'Should call the private function once' {_x000D__x000A_            { Get-Something -Data 'value' } | Should -Not -Throw_x000D__x000A__x000D__x000A_            Should -Invoke -CommandName Get-PrivateFunction -Exactly -Times 1 -Scope It -ModuleName $dscModuleName_x000D__x000A_        }_x000D__x000A__x000D__x000A_        It 'Should return a single object' {_x000D__x000A_            $return = Get-Something -Data 'value'_x000D__x000A__x000D__x000A_            ($return | Measure-Object).Count | Should -Be 1_x000D__x000A_        }_x000D__x000A__x000D__x000A_        It 'Should return the correct string value' {_x000D__x000A_            $return = Get-Something -Data 'value'_x000D__x000A__x000D__x000A_            $return | Should -Be 'value'_x000D__x000A_        }_x000D__x000A_    }_x000D__x000A__x000D__x000A_    Context 'When passing values over the pipeline' {_x000D__x000A_        It 'Should call the private function two times' {_x000D__x000A_            { 'value1', 'value2' | Get-Something } | Should -Not -Throw_x000D__x000A__x000D__x000A_            Should -Invoke -CommandName Get-PrivateFunction -Exactly -Times 2 -Scope It -ModuleName $dscModuleName_x000D__x000A_        }_x000D__x000A__x000D__x000A_        It 'Should return an array with two items' {_x000D__x000A_            $return = 'value1', 'value2' | Get-Something_x000D__x000A__x000D__x000A_            $return.Count | Should -Be 2_x000D__x000A_        }_x000D__x000A__x000D__x000A_        It 'Should return an array with the correct string values' {_x000D__x000A_            $return = 'value1', 'value2' | Get-Something_x000D__x000A__x000D__x000A_            $return[0] | Should -Be 'value1'_x000D__x000A_            $return[1] | Should -Be 'value2'_x000D__x000A_        }_x000D__x000A__x000D__x000A_        It 'Should accept values from the pipeline by property name' {_x000D__x000A_            $return = 'value1', 'value2' | ForEach-Object {_x000D__x000A_                [PSCustomObject]@{_x000D__x000A_                    Data = $__x000D__x000A_                    OtherProperty = 'other'_x000D__x000A_                }_x000D__x000A_            } | Get-Something_x000D__x000A__x000D__x000A_            $return[0] | Should -Be 'value1'_x000D__x000A_            $return[1] | Should -Be 'value2'_x000D__x000A_        }_x000D__x000A_    }_x000D__x000A__x000D__x000A_    Context 'When passing WhatIf' {_x000D__x000A_        It 'Should support the parameter WhatIf' {_x000D__x000A_            (Get-Command -Name 'Get-Something').Parameters.ContainsKey('WhatIf') | Should -Be $true_x000D__x000A_        }_x000D__x000A__x000D__x000A_        It 'Should not call the private function' {_x000D__x000A_            { Get-Something -Data 'value' -WhatIf } | Should -Not -Throw_x000D__x000A__x000D__x000A_            Should -Invoke -CommandName Get-PrivateFunction -Exactly -Times 0 -Scope It -ModuleName $dscModuleName_x000D__x000A_        }_x000D__x000A__x000D__x000A_        It 'Should return $null' {_x000D__x000A_            $return = Get-Something -Data 'value' -WhatIf_x000D__x000A__x000D__x000A_            $return | Should -BeNullOrEmpty_x000D__x000A_        }_x000D__x000A_    }_x000D__x000A_</SBK>
                      <I32 N="StartLine">12</I32>
                      <Nil N="FrameworkData" />
                      <Nil N="PluginData" />
                      <I32 N="PendingCount">0</I32>
                      <I32 N="InconclusiveCount">0</I32>
                      <B N="OwnPassed">false</B>
                      <I32 N="OwnTotalCount">0</I32>
                      <I32 N="OwnPassedCount">0</I32>
                      <I32 N="OwnFailedCount">0</I32>
                      <I32 N="OwnSkippedCount">0</I32>
                      <I32 N="OwnPendingCount">0</I32>
                      <I32 N="OwnNotRunCount">0</I32>
                      <I32 N="OwnInconclusiveCount">0</I32>
                    </Props>
                  </Obj>
                </LST>
              </Obj>
              <S N="Result">Failed</S>
              <TS N="Duration">PT0.1402828S</TS>
              <I32 N="FailedCount">10</I32>
              <I32 N="PassedCount">0</I32>
              <I32 N="SkippedCount">0</I32>
              <I32 N="InconclusiveCount">0</I32>
              <I32 N="NotRunCount">0</I32>
              <I32 N="TotalCount">10</I32>
              <Ref N="ErrorRecord" RefId="165" />
              <B N="Passed">false</B>
              <B N="OwnPassed">true</B>
              <B N="Skip">false</B>
              <B N="ShouldRun">true</B>
              <B N="Executed">true</B>
              <DT N="ExecutedAt">2024-08-03T17:35:54.9381336-07:00</DT>
              <TS N="DiscoveryDuration">PT0.0163202S</TS>
              <TS N="UserDuration">PT0.0745176S</TS>
              <TS N="FrameworkDuration">PT0.049445S</TS>
              <Nil N="StandardOutput" />
            </Props>
          </Obj>
        </LST>
      </Obj>
      <S N="Result">Failed</S>
      <I32 N="FailedCount">82</I32>
      <I32 N="FailedBlocksCount">1</I32>
      <I32 N="FailedContainersCount">0</I32>
      <I32 N="PassedCount">12</I32>
      <I32 N="SkippedCount">0</I32>
      <I32 N="InconclusiveCount">0</I32>
      <I32 N="NotRunCount">0</I32>
      <I32 N="TotalCount">94</I32>
      <TS N="Duration">PT5.1244816S</TS>
      <B N="Executed">true</B>
      <DT N="ExecutedAt">2024-08-03T17:35:49.547435-07:00</DT>
      <S N="Version">5.6.1</S>
      <S N="PSVersion">7.4.4</S>
      <Obj N="PSBoundParameters" RefId="224">
        <TN RefId="40">
          <T>System.Management.Automation.PSBoundParametersDictionary</T>
          <T>System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]</T>
          <T>System.Object</T>
        </TN>
        <DCT>
          <En>
            <S N="Key">Configuration</S>
            <Obj N="Value" RefId="225">
              <TN RefId="41">
                <T>PesterConfiguration</T>
                <T>System.Object</T>
              </TN>
              <ToString>PesterConfiguration</ToString>
              <Props>
                <Obj N="Run" RefId="226">
                  <TN RefId="42">
                    <T>Pester.RunConfiguration</T>
                    <T>Pester.ConfigurationSection</T>
                    <T>System.Object</T>
                  </TN>
                  <ToString>Run configuration.</ToString>
                  <Props>
                    <Obj N="Path" RefId="227">
                      <TN RefId="43">
                        <T>Pester.StringArrayOption</T>
                        <T>Pester.Option`1[[System.String[], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]</T>
                        <T>Pester.Option</T>
                        <T>System.Object</T>
                      </TN>
                      <ToString>Directories to be searched for tests, paths directly to test files, or combination of both. (System.String[], default: System.String[])</ToString>
                      <Props>
                        <Obj N="Default" RefId="228">
                          <TN RefId="44">
                            <T>System.String[]</T>
                            <T>System.Array</T>
                            <T>System.Object</T>
                          </TN>
                          <LST>
                            <S>.</S>
                          </LST>
                        </Obj>
                        <S N="Description">Directories to be searched for tests, paths directly to test files, or combination of both.</S>
                        <Obj N="Value" RefId="229">
                          <TNRef RefId="44" />
                          <LST>
                            <S>C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests</S>
                          </LST>
                        </Obj>
                        <B N="IsModified">true</B>
                      </Props>
                    </Obj>
                    <Obj N="ExcludePath" RefId="230">
                      <TNRef RefId="43" />
                      <ToString>Directories or files to be excluded from the run. (System.String[], default: System.String[])</ToString>
                      <Props>
                        <Obj N="Default" RefId="231">
                          <TNRef RefId="44" />
                          <LST />
                        </Obj>
                        <S N="Description">Directories or files to be excluded from the run.</S>
                        <Obj N="Value" RefId="232">
                          <TNRef RefId="44" />
                          <LST />
                        </Obj>
                        <B N="IsModified">true</B>
                      </Props>
                    </Obj>
                    <Obj N="ScriptBlock" RefId="233">
                      <TN RefId="45">
                        <T>Pester.ScriptBlockArrayOption</T>
                        <T>Pester.Option`1[[System.Management.Automation.ScriptBlock[], System.Management.Automation, Version=7.4.4.500, Culture=neutral, PublicKeyToken=31bf3856ad364e35]]</T>
                        <T>Pester.Option</T>
                        <T>System.Object</T>
                      </TN>
                      <ToString>ScriptBlocks containing tests to be executed. (System.Management.Automation.ScriptBlock[], default: System.Management.Automation.ScriptBlock[])</ToString>
                      <Props>
                        <Obj N="Default" RefId="234">
                          <TN RefId="46">
                            <T>System.Management.Automation.ScriptBlock[]</T>
                            <T>System.Array</T>
                            <T>System.Object</T>
                          </TN>
                          <LST />
                        </Obj>
                        <S N="Description">ScriptBlocks containing tests to be executed.</S>
                        <Ref N="Value" RefId="234" />
                        <B N="IsModified">false</B>
                      </Props>
                    </Obj>
                    <Obj N="Container" RefId="235">
                      <TN RefId="47">
                        <T>Pester.ContainerInfoArrayOption</T>
                        <T>Pester.Option`1[[Pester.ContainerInfo[], Pester, Version=5.6.1.0, Culture=neutral, PublicKeyToken=null]]</T>
                        <T>Pester.Option</T>
                        <T>System.Object</T>
                      </TN>
                      <ToString>ContainerInfo objects containing tests to be executed. (Pester.ContainerInfo[], default: Pester.ContainerInfo[])</ToString>
                      <Props>
                        <Obj N="Default" RefId="236">
                          <TN RefId="48">
                            <T>Pester.ContainerInfo[]</T>
                            <T>System.Array</T>
                            <T>System.Object</T>
                          </TN>
                          <LST />
                        </Obj>
                        <S N="Description">ContainerInfo objects containing tests to be executed.</S>
                        <Ref N="Value" RefId="236" />
                        <B N="IsModified">false</B>
                      </Props>
                    </Obj>
                    <Obj N="TestExtension" RefId="237">
                      <TN RefId="49">
                        <T>Pester.StringOption</T>
                        <T>Pester.Option`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]</T>
                        <T>Pester.Option</T>
                        <T>System.Object</T>
                      </TN>
                      <ToString>Filter used to identify test files. (.Tests.ps1, default: .Tests.ps1)</ToString>
                      <Props>
                        <S N="Default">.Tests.ps1</S>
                        <S N="Description">Filter used to identify test files.</S>
                        <S N="Value">.Tests.ps1</S>
                        <B N="IsModified">false</B>
                      </Props>
                    </Obj>
                    <Obj N="Exit" RefId="238">
                      <TN RefId="50">
                        <T>Pester.BoolOption</T>
                        <T>Pester.Option`1[[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]</T>
                        <T>Pester.Option</T>
                        <T>System.Object</T>
                      </TN>
                      <ToString>Exit with non-zero exit code when the test run fails. Exit code is always set to `$LASTEXITCODE` even when this option is `$false`. When used together with Throw, throwing an exception is preferred. (False, default: False)</ToString>
                      <Props>
                        <B N="Default">false</B>
                        <S N="Description">Exit with non-zero exit code when the test run fails. Exit code is always set to `$LASTEXITCODE` even when this option is `$false`. When used together with Throw, throwing an exception is preferred.</S>
                        <B N="Value">false</B>
                        <B N="IsModified">false</B>
                      </Props>
                    </Obj>
                    <Obj N="Throw" RefId="239">
                      <TNRef RefId="50" />
                      <ToString>Throw an exception when test run fails. When used together with Exit, throwing an exception is preferred. (False, default: False)</ToString>
                      <Props>
                        <B N="Default">false</B>
                        <S N="Description">Throw an exception when test run fails. When used together with Exit, throwing an exception is preferred.</S>
                        <B N="Value">false</B>
                        <B N="IsModified">false</B>
                      </Props>
                    </Obj>
                    <Obj N="PassThru" RefId="240">
                      <TNRef RefId="50" />
                      <ToString>Return result object to the pipeline after finishing the test run. (True, default: False)</ToString>
                      <Props>
                        <B N="Default">false</B>
                        <S N="Description">Return result object to the pipeline after finishing the test run.</S>
                        <B N="Value">true</B>
                        <B N="IsModified">true</B>
                      </Props>
                    </Obj>
                    <Obj N="SkipRun" RefId="241">
                      <TNRef RefId="50" />
                      <ToString>Runs the discovery phase but skips run. Use it with PassThru to get object populated with all tests. (False, default: False)</ToString>
                      <Props>
                        <B N="Default">false</B>
                        <S N="Description">Runs the discovery phase but skips run. Use it with PassThru to get object populated with all tests.</S>
                        <B N="Value">false</B>
                        <B N="IsModified">false</B>
                      </Props>
                    </Obj>
                    <Obj N="SkipRemainingOnFailure" RefId="242">
                      <TNRef RefId="49" />
                      <ToString>Skips remaining tests after failure for selected scope, options are None, Run, Container and Block. (None, default: None)</ToString>
                      <Props>
                        <S N="Default">None</S>
                        <S N="Description">Skips remaining tests after failure for selected scope, options are None, Run, Container and Block.</S>
                        <S N="Value">None</S>
                        <B N="IsModified">false</B>
                      </Props>
                    </Obj>
                  </Props>
                </Obj>
                <Obj N="Filter" RefId="243">
                  <TN RefId="51">
                    <T>Pester.FilterConfiguration</T>
                    <T>Pester.ConfigurationSection</T>
                    <T>System.Object</T>
                  </TN>
                  <ToString>Filter configuration</ToString>
                  <Props>
                    <Obj N="Tag" RefId="244">
                      <TNRef RefId="43" />
                      <ToString>Tags of Describe, Context or It to be run. (System.String[], default: System.String[])</ToString>
                      <Props>
                        <Obj N="Default" RefId="245">
                          <TNRef RefId="44" />
                          <LST />
                        </Obj>
                        <S N="Description">Tags of Describe, Context or It to be run.</S>
                        <Ref N="Value" RefId="232" />
                        <B N="IsModified">true</B>
                      </Props>
                    </Obj>
                    <Obj N="ExcludeTag" RefId="246">
                      <TNRef RefId="43" />
                      <ToString>Tags of Describe, Context or It to be excluded from the run. (System.String[], default: System.String[])</ToString>
                      <Props>
                        <Obj N="Default" RefId="247">
                          <TNRef RefId="44" />
                          <LST />
                        </Obj>
                        <S N="Description">Tags of Describe, Context or It to be excluded from the run.</S>
                        <Ref N="Value" RefId="232" />
                        <B N="IsModified">true</B>
                      </Props>
                    </Obj>
                    <Obj N="Line" RefId="248">
                      <TNRef RefId="43" />
                      <ToString>Filter by file and scriptblock start line, useful to run parsed tests programmatically to avoid problems with expanded names. Example: 'C:\tests\file1.Tests.ps1:37' (System.String[], default: System.String[])</ToString>
                      <Props>
                        <Obj N="Default" RefId="249">
                          <TNRef RefId="44" />
                          <LST />
                        </Obj>
                        <S N="Description">Filter by file and scriptblock start line, useful to run parsed tests programmatically to avoid problems with expanded names. Example: 'C:\tests\file1.Tests.ps1:37'</S>
                        <Ref N="Value" RefId="249" />
                        <B N="IsModified">false</B>
                      </Props>
                    </Obj>
                    <Obj N="ExcludeLine" RefId="250">
                      <TNRef RefId="43" />
                      <ToString>Exclude by file and scriptblock start line, takes precedence over Line. (System.String[], default: System.String[])</ToString>
                      <Props>
                        <Obj N="Default" RefId="251">
                          <TNRef RefId="44" />
                          <LST />
                        </Obj>
                        <S N="Description">Exclude by file and scriptblock start line, takes precedence over Line.</S>
                        <Ref N="Value" RefId="251" />
                        <B N="IsModified">false</B>
                      </Props>
                    </Obj>
                    <Obj N="FullName" RefId="252">
                      <TNRef RefId="43" />
                      <ToString>Full name of test with -like wildcards, joined by dot. Example: '*.describe Get-Item.test1' (System.String[], default: System.String[])</ToString>
                      <Props>
                        <Obj N="Default" RefId="253">
                          <TNRef RefId="44" />
                          <LST />
                        </Obj>
                        <S N="Description">Full name of test with -like wildcards, joined by dot. Example: '*.describe Get-Item.test1'</S>
                        <Ref N="Value" RefId="253" />
                        <B N="IsModified">false</B>
                      </Props>
                    </Obj>
                  </Props>
                </Obj>
                <Obj N="CodeCoverage" RefId="254">
                  <TN RefId="52">
                    <T>Pester.CodeCoverageConfiguration</T>
                    <T>Pester.ConfigurationSection</T>
                    <T>System.Object</T>
                  </TN>
                  <ToString>CodeCoverage configuration.</ToString>
                  <Props>
                    <Obj N="Enabled" RefId="255">
                      <TNRef RefId="50" />
                      <ToString>Enable CodeCoverage. (True, default: False)</ToString>
                      <Props>
                        <B N="Default">false</B>
                        <S N="Description">Enable CodeCoverage.</S>
                        <B N="Value">true</B>
                        <B N="IsModified">true</B>
                      </Props>
                    </Obj>
                    <Obj N="OutputFormat" RefId="256">
                      <TNRef RefId="49" />
                      <ToString>Format to use for code coverage report. Possible values: JaCoCo, CoverageGutters (JaCoCo, default: JaCoCo)</ToString>
                      <Props>
                        <S N="Default">JaCoCo</S>
                        <S N="Description">Format to use for code coverage report. Possible values: JaCoCo, CoverageGutters</S>
                        <S N="Value">JaCoCo</S>
                        <B N="IsModified">true</B>
                      </Props>
                    </Obj>
                    <Obj N="OutputPath" RefId="257">
                      <TNRef RefId="49" />
                      <ToString>Path relative to the current directory where code coverage report is saved. (C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\testResults\CodeCov_EnhancedLoggingAO_v0.0.1.Windows.PSv.7.4.4.xml, default: coverage.xml)</ToString>
                      <Props>
                        <S N="Default">coverage.xml</S>
                        <S N="Description">Path relative to the current directory where code coverage report is saved.</S>
                        <S N="Value">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\testResults\CodeCov_EnhancedLoggingAO_v0.0.1.Windows.PSv.7.4.4.xml</S>
                        <B N="IsModified">true</B>
                      </Props>
                    </Obj>
                    <Obj N="OutputEncoding" RefId="258">
                      <TNRef RefId="49" />
                      <ToString>Encoding of the output file. (UTF8, default: UTF8)</ToString>
                      <Props>
                        <S N="Default">UTF8</S>
                        <S N="Description">Encoding of the output file.</S>
                        <S N="Value">UTF8</S>
                        <B N="IsModified">true</B>
                      </Props>
                    </Obj>
                    <Obj N="Path" RefId="259">
                      <TNRef RefId="43" />
                      <ToString>Directories or files to be used for code coverage, by default the Path(s) from general settings are used, unless overridden here. (System.String[], default: System.String[])</ToString>
                      <Props>
                        <Obj N="Default" RefId="260">
                          <TNRef RefId="44" />
                          <LST />
                        </Obj>
                        <S N="Description">Directories or files to be used for code coverage, by default the Path(s) from general settings are used, unless overridden here.</S>
                        <Obj N="Value" RefId="261">
                          <TNRef RefId="44" />
                          <LST>
                            <S>C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                          </LST>
                        </Obj>
                        <B N="IsModified">true</B>
                      </Props>
                    </Obj>
                    <Obj N="ExcludeTests" RefId="262">
                      <TNRef RefId="50" />
                      <ToString>Exclude tests from code coverage. This uses the TestFilter from general configuration. (True, default: True)</ToString>
                      <Props>
                        <B N="Default">true</B>
                        <S N="Description">Exclude tests from code coverage. This uses the TestFilter from general configuration.</S>
                        <B N="Value">true</B>
                        <B N="IsModified">true</B>
                      </Props>
                    </Obj>
                    <Obj N="RecursePaths" RefId="263">
                      <TNRef RefId="50" />
                      <ToString>Will recurse through directories in the Path option. (True, default: True)</ToString>
                      <Props>
                        <B N="Default">true</B>
                        <S N="Description">Will recurse through directories in the Path option.</S>
                        <B N="Value">true</B>
                        <B N="IsModified">false</B>
                      </Props>
                    </Obj>
                    <Obj N="CoveragePercentTarget" RefId="264">
                      <TN RefId="53">
                        <T>Pester.DecimalOption</T>
                        <T>Pester.Option`1[[System.Decimal, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]</T>
                        <T>Pester.Option</T>
                        <T>System.Object</T>
                      </TN>
                      <ToString>Target percent of code coverage that you want to achieve, default 75%. (85, default: 75)</ToString>
                      <Props>
                        <D N="Default">75</D>
                        <S N="Description">Target percent of code coverage that you want to achieve, default 75%.</S>
                        <D N="Value">85</D>
                        <B N="IsModified">true</B>
                      </Props>
                    </Obj>
                    <Obj N="UseBreakpoints" RefId="265">
                      <TNRef RefId="50" />
                      <ToString>EXPERIMENTAL: When false, use Profiler based tracer to do CodeCoverage instead of using breakpoints. (True, default: True)</ToString>
                      <Props>
                        <B N="Default">true</B>
                        <S N="Description">EXPERIMENTAL: When false, use Profiler based tracer to do CodeCoverage instead of using breakpoints.</S>
                        <B N="Value">true</B>
                        <B N="IsModified">false</B>
                      </Props>
                    </Obj>
                    <Obj N="SingleHitBreakpoints" RefId="266">
                      <TNRef RefId="50" />
                      <ToString>Remove breakpoint when it is hit. (True, default: True)</ToString>
                      <Props>
                        <B N="Default">true</B>
                        <S N="Description">Remove breakpoint when it is hit.</S>
                        <B N="Value">true</B>
                        <B N="IsModified">false</B>
                      </Props>
                    </Obj>
                  </Props>
                </Obj>
                <Obj N="TestResult" RefId="267">
                  <TN RefId="54">
                    <T>Pester.TestResultConfiguration</T>
                    <T>Pester.ConfigurationSection</T>
                    <T>System.Object</T>
                  </TN>
                  <ToString>TestResult configuration.</ToString>
                  <Props>
                    <Obj N="Enabled" RefId="268">
                      <TNRef RefId="50" />
                      <ToString>Enable TestResult. (True, default: False)</ToString>
                      <Props>
                        <B N="Default">false</B>
                        <S N="Description">Enable TestResult.</S>
                        <B N="Value">true</B>
                        <B N="IsModified">true</B>
                      </Props>
                    </Obj>
                    <Obj N="OutputFormat" RefId="269">
                      <TNRef RefId="49" />
                      <ToString>Format to use for test result report. Possible values: NUnitXml, NUnit2.5, NUnit3 or JUnitXml (NUnitXML, default: NUnitXml)</ToString>
                      <Props>
                        <S N="Default">NUnitXml</S>
                        <S N="Description">Format to use for test result report. Possible values: NUnitXml, NUnit2.5, NUnit3 or JUnitXml</S>
                        <S N="Value">NUnitXML</S>
                        <B N="IsModified">true</B>
                      </Props>
                    </Obj>
                    <Obj N="OutputPath" RefId="270">
                      <TNRef RefId="49" />
                      <ToString>Path relative to the current directory where test result report is saved. (C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\testResults\NUnitXml_EnhancedLoggingAO_v0.0.1.Windows.PSv.7.4.4.xml, default: testResults.xml)</ToString>
                      <Props>
                        <S N="Default">testResults.xml</S>
                        <S N="Description">Path relative to the current directory where test result report is saved.</S>
                        <S N="Value">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\testResults\NUnitXml_EnhancedLoggingAO_v0.0.1.Windows.PSv.7.4.4.xml</S>
                        <B N="IsModified">true</B>
                      </Props>
                    </Obj>
                    <Obj N="OutputEncoding" RefId="271">
                      <TNRef RefId="49" />
                      <ToString>Encoding of the output file. (UTF8, default: UTF8)</ToString>
                      <Props>
                        <S N="Default">UTF8</S>
                        <S N="Description">Encoding of the output file.</S>
                        <S N="Value">UTF8</S>
                        <B N="IsModified">true</B>
                      </Props>
                    </Obj>
                    <Obj N="TestSuiteName" RefId="272">
                      <TNRef RefId="49" />
                      <ToString>Set the name assigned to the root 'test-suite' element. (EnhancedLoggingAO, default: Pester)</ToString>
                      <Props>
                        <S N="Default">Pester</S>
                        <S N="Description">Set the name assigned to the root 'test-suite' element.</S>
                        <S N="Value">EnhancedLoggingAO</S>
                        <B N="IsModified">true</B>
                      </Props>
                    </Obj>
                  </Props>
                </Obj>
                <Obj N="Should" RefId="273">
                  <TN RefId="55">
                    <T>Pester.ShouldConfiguration</T>
                    <T>Pester.ConfigurationSection</T>
                    <T>System.Object</T>
                  </TN>
                  <ToString>Should configuration.</ToString>
                  <Props>
                    <Obj N="ErrorAction" RefId="274">
                      <TNRef RefId="49" />
                      <ToString>Controls if Should throws on error. Use 'Stop' to throw on error, or 'Continue' to fail at the end of the test. (Stop, default: Stop)</ToString>
                      <Props>
                        <S N="Default">Stop</S>
                        <S N="Description">Controls if Should throws on error. Use 'Stop' to throw on error, or 'Continue' to fail at the end of the test.</S>
                        <S N="Value">Stop</S>
                        <B N="IsModified">false</B>
                      </Props>
                    </Obj>
                  </Props>
                </Obj>
                <Obj N="Debug" RefId="275">
                  <TN RefId="56">
                    <T>Pester.DebugConfiguration</T>
                    <T>Pester.ConfigurationSection</T>
                    <T>System.Object</T>
                  </TN>
                  <ToString>Debug configuration for Pester. ⚠ Use at your own risk!</ToString>
                  <Props>
                    <Obj N="ShowFullErrors" RefId="276">
                      <TNRef RefId="50" />
                      <ToString>Show full errors including Pester internal stack. This property is deprecated, and if set to true it will override Output.StackTraceVerbosity to 'Full'. (False, default: False)</ToString>
                      <Props>
                        <B N="Default">false</B>
                        <S N="Description">Show full errors including Pester internal stack. This property is deprecated, and if set to true it will override Output.StackTraceVerbosity to 'Full'.</S>
                        <B N="Value">false</B>
                        <B N="IsModified">false</B>
                      </Props>
                    </Obj>
                    <Obj N="WriteDebugMessages" RefId="277">
                      <TNRef RefId="50" />
                      <ToString>Write Debug messages to screen. (False, default: False)</ToString>
                      <Props>
                        <B N="Default">false</B>
                        <S N="Description">Write Debug messages to screen.</S>
                        <B N="Value">false</B>
                        <B N="IsModified">false</B>
                      </Props>
                    </Obj>
                    <Obj N="WriteDebugMessagesFrom" RefId="278">
                      <TNRef RefId="43" />
                      <ToString>Write Debug messages from a given source, WriteDebugMessages must be set to true for this to work. You can use like wildcards to get messages from multiple sources, as well as * to get everything. (System.String[], default: System.String[])</ToString>
                      <Props>
                        <Obj N="Default" RefId="279">
                          <TNRef RefId="44" />
                          <LST>
                            <S>Discovery</S>
                            <S>Skip</S>
                            <S>Mock</S>
                            <S>CodeCoverage</S>
                          </LST>
                        </Obj>
                        <S N="Description">Write Debug messages from a given source, WriteDebugMessages must be set to true for this to work. You can use like wildcards to get messages from multiple sources, as well as * to get everything.</S>
                        <Ref N="Value" RefId="279" />
                        <B N="IsModified">false</B>
                      </Props>
                    </Obj>
                    <Obj N="ShowNavigationMarkers" RefId="280">
                      <TNRef RefId="50" />
                      <ToString>Write paths after every block and test, for easy navigation in VSCode. (False, default: False)</ToString>
                      <Props>
                        <B N="Default">false</B>
                        <S N="Description">Write paths after every block and test, for easy navigation in VSCode.</S>
                        <B N="Value">false</B>
                        <B N="IsModified">false</B>
                      </Props>
                    </Obj>
                    <Obj N="ReturnRawResultObject" RefId="281">
                      <TNRef RefId="50" />
                      <ToString>Returns unfiltered result object, this is for development only. Do not rely on this object for additional properties, non-public properties will be renamed without previous notice. (False, default: False)</ToString>
                      <Props>
                        <B N="Default">false</B>
                        <S N="Description">Returns unfiltered result object, this is for development only. Do not rely on this object for additional properties, non-public properties will be renamed without previous notice.</S>
                        <B N="Value">false</B>
                        <B N="IsModified">false</B>
                      </Props>
                    </Obj>
                  </Props>
                </Obj>
                <Obj N="Output" RefId="282">
                  <TN RefId="57">
                    <T>Pester.OutputConfiguration</T>
                    <T>Pester.ConfigurationSection</T>
                    <T>System.Object</T>
                  </TN>
                  <ToString>Output configuration</ToString>
                  <Props>
                    <Obj N="Verbosity" RefId="283">
                      <TNRef RefId="49" />
                      <ToString>The verbosity of output, options are None, Normal, Detailed and Diagnostic. (Detailed, default: Normal)</ToString>
                      <Props>
                        <S N="Default">Normal</S>
                        <S N="Description">The verbosity of output, options are None, Normal, Detailed and Diagnostic.</S>
                        <S N="Value">Detailed</S>
                        <B N="IsModified">true</B>
                      </Props>
                    </Obj>
                    <Obj N="StackTraceVerbosity" RefId="284">
                      <TNRef RefId="49" />
                      <ToString>The verbosity of stacktrace output, options are None, FirstLine, Filtered and Full. (Filtered, default: Filtered)</ToString>
                      <Props>
                        <S N="Default">Filtered</S>
                        <S N="Description">The verbosity of stacktrace output, options are None, FirstLine, Filtered and Full.</S>
                        <S N="Value">Filtered</S>
                        <B N="IsModified">false</B>
                      </Props>
                    </Obj>
                    <Obj N="CIFormat" RefId="285">
                      <TNRef RefId="49" />
                      <ToString>The CI format of error output in build logs, options are None, Auto, AzureDevops and GithubActions. (Auto, default: Auto)</ToString>
                      <Props>
                        <S N="Default">Auto</S>
                        <S N="Description">The CI format of error output in build logs, options are None, Auto, AzureDevops and GithubActions.</S>
                        <S N="Value">Auto</S>
                        <B N="IsModified">false</B>
                      </Props>
                    </Obj>
                    <Obj N="CILogLevel" RefId="286">
                      <TNRef RefId="49" />
                      <ToString>The CI log level in build logs, options are Error and Warning. (Error, default: Error)</ToString>
                      <Props>
                        <S N="Default">Error</S>
                        <S N="Description">The CI log level in build logs, options are Error and Warning.</S>
                        <S N="Value">Error</S>
                        <B N="IsModified">false</B>
                      </Props>
                    </Obj>
                    <Obj N="RenderMode" RefId="287">
                      <TNRef RefId="49" />
                      <ToString>The mode used to render console output, options are Auto, Ansi, ConsoleColor and Plaintext. (Auto, default: Auto)</ToString>
                      <Props>
                        <S N="Default">Auto</S>
                        <S N="Description">The mode used to render console output, options are Auto, Ansi, ConsoleColor and Plaintext.</S>
                        <S N="Value">Auto</S>
                        <B N="IsModified">false</B>
                      </Props>
                    </Obj>
                  </Props>
                </Obj>
                <Obj N="TestDrive" RefId="288">
                  <TN RefId="58">
                    <T>Pester.TestDriveConfiguration</T>
                    <T>Pester.ConfigurationSection</T>
                    <T>System.Object</T>
                  </TN>
                  <ToString>TestDrive configuration.</ToString>
                  <Props>
                    <Obj N="Enabled" RefId="289">
                      <TNRef RefId="50" />
                      <ToString>Enable TestDrive. (True, default: True)</ToString>
                      <Props>
                        <B N="Default">true</B>
                        <S N="Description">Enable TestDrive.</S>
                        <B N="Value">true</B>
                        <B N="IsModified">false</B>
                      </Props>
                    </Obj>
                  </Props>
                </Obj>
                <Obj N="TestRegistry" RefId="290">
                  <TN RefId="59">
                    <T>Pester.TestRegistryConfiguration</T>
                    <T>Pester.ConfigurationSection</T>
                    <T>System.Object</T>
                  </TN>
                  <ToString>TestRegistry configuration.</ToString>
                  <Props>
                    <Obj N="Enabled" RefId="291">
                      <TNRef RefId="50" />
                      <ToString>Enable TestRegistry. (True, default: True)</ToString>
                      <Props>
                        <B N="Default">true</B>
                        <S N="Description">Enable TestRegistry.</S>
                        <B N="Value">true</B>
                        <B N="IsModified">false</B>
                      </Props>
                    </Obj>
                  </Props>
                </Obj>
              </Props>
            </Obj>
          </En>
        </DCT>
      </Obj>
      <Nil N="Plugins" />
      <Nil N="PluginConfiguration" />
      <Nil N="PluginData" />
      <Obj N="Configuration" RefId="292">
        <TNRef RefId="41" />
        <ToString>PesterConfiguration</ToString>
        <Props>
          <Obj N="Run" RefId="293">
            <TNRef RefId="42" />
            <ToString>Run configuration.</ToString>
            <Props>
              <Obj N="Path" RefId="294">
                <TNRef RefId="43" />
                <ToString>Directories to be searched for tests, paths directly to test files, or combination of both. (System.String[], default: System.String[])</ToString>
                <Props>
                  <Obj N="Default" RefId="295">
                    <TNRef RefId="44" />
                    <LST>
                      <S>.</S>
                    </LST>
                  </Obj>
                  <S N="Description">Directories to be searched for tests, paths directly to test files, or combination of both.</S>
                  <Ref N="Value" RefId="229" />
                  <B N="IsModified">true</B>
                </Props>
              </Obj>
              <Obj N="ExcludePath" RefId="296">
                <TNRef RefId="43" />
                <ToString>Directories or files to be excluded from the run. (System.String[], default: System.String[])</ToString>
                <Props>
                  <Obj N="Default" RefId="297">
                    <TNRef RefId="44" />
                    <LST />
                  </Obj>
                  <S N="Description">Directories or files to be excluded from the run.</S>
                  <Ref N="Value" RefId="232" />
                  <B N="IsModified">true</B>
                </Props>
              </Obj>
              <Obj N="ScriptBlock" RefId="298">
                <TNRef RefId="45" />
                <ToString>ScriptBlocks containing tests to be executed. (System.Management.Automation.ScriptBlock[], default: System.Management.Automation.ScriptBlock[])</ToString>
                <Props>
                  <Obj N="Default" RefId="299">
                    <TNRef RefId="46" />
                    <LST />
                  </Obj>
                  <S N="Description">ScriptBlocks containing tests to be executed.</S>
                  <Ref N="Value" RefId="299" />
                  <B N="IsModified">false</B>
                </Props>
              </Obj>
              <Obj N="Container" RefId="300">
                <TNRef RefId="47" />
                <ToString>ContainerInfo objects containing tests to be executed. (Pester.ContainerInfo[], default: Pester.ContainerInfo[])</ToString>
                <Props>
                  <Obj N="Default" RefId="301">
                    <TNRef RefId="48" />
                    <LST />
                  </Obj>
                  <S N="Description">ContainerInfo objects containing tests to be executed.</S>
                  <Ref N="Value" RefId="301" />
                  <B N="IsModified">false</B>
                </Props>
              </Obj>
              <Obj N="TestExtension" RefId="302">
                <TNRef RefId="49" />
                <ToString>Filter used to identify test files. (.Tests.ps1, default: .Tests.ps1)</ToString>
                <Props>
                  <S N="Default">.Tests.ps1</S>
                  <S N="Description">Filter used to identify test files.</S>
                  <S N="Value">.Tests.ps1</S>
                  <B N="IsModified">false</B>
                </Props>
              </Obj>
              <Obj N="Exit" RefId="303">
                <TNRef RefId="50" />
                <ToString>Exit with non-zero exit code when the test run fails. Exit code is always set to `$LASTEXITCODE` even when this option is `$false`. When used together with Throw, throwing an exception is preferred. (False, default: False)</ToString>
                <Props>
                  <B N="Default">false</B>
                  <S N="Description">Exit with non-zero exit code when the test run fails. Exit code is always set to `$LASTEXITCODE` even when this option is `$false`. When used together with Throw, throwing an exception is preferred.</S>
                  <B N="Value">false</B>
                  <B N="IsModified">false</B>
                </Props>
              </Obj>
              <Obj N="Throw" RefId="304">
                <TNRef RefId="50" />
                <ToString>Throw an exception when test run fails. When used together with Exit, throwing an exception is preferred. (False, default: False)</ToString>
                <Props>
                  <B N="Default">false</B>
                  <S N="Description">Throw an exception when test run fails. When used together with Exit, throwing an exception is preferred.</S>
                  <B N="Value">false</B>
                  <B N="IsModified">false</B>
                </Props>
              </Obj>
              <Obj N="PassThru" RefId="305">
                <TNRef RefId="50" />
                <ToString>Return result object to the pipeline after finishing the test run. (True, default: False)</ToString>
                <Props>
                  <B N="Default">false</B>
                  <S N="Description">Return result object to the pipeline after finishing the test run.</S>
                  <B N="Value">true</B>
                  <B N="IsModified">true</B>
                </Props>
              </Obj>
              <Obj N="SkipRun" RefId="306">
                <TNRef RefId="50" />
                <ToString>Runs the discovery phase but skips run. Use it with PassThru to get object populated with all tests. (False, default: False)</ToString>
                <Props>
                  <B N="Default">false</B>
                  <S N="Description">Runs the discovery phase but skips run. Use it with PassThru to get object populated with all tests.</S>
                  <B N="Value">false</B>
                  <B N="IsModified">false</B>
                </Props>
              </Obj>
              <Obj N="SkipRemainingOnFailure" RefId="307">
                <TNRef RefId="49" />
                <ToString>Skips remaining tests after failure for selected scope, options are None, Run, Container and Block. (None, default: None)</ToString>
                <Props>
                  <S N="Default">None</S>
                  <S N="Description">Skips remaining tests after failure for selected scope, options are None, Run, Container and Block.</S>
                  <S N="Value">None</S>
                  <B N="IsModified">false</B>
                </Props>
              </Obj>
            </Props>
          </Obj>
          <Obj N="Filter" RefId="308">
            <TNRef RefId="51" />
            <ToString>Filter configuration</ToString>
            <Props>
              <Obj N="Tag" RefId="309">
                <TNRef RefId="43" />
                <ToString>Tags of Describe, Context or It to be run. (System.String[], default: System.String[])</ToString>
                <Props>
                  <Obj N="Default" RefId="310">
                    <TNRef RefId="44" />
                    <LST />
                  </Obj>
                  <S N="Description">Tags of Describe, Context or It to be run.</S>
                  <Ref N="Value" RefId="232" />
                  <B N="IsModified">true</B>
                </Props>
              </Obj>
              <Obj N="ExcludeTag" RefId="311">
                <TNRef RefId="43" />
                <ToString>Tags of Describe, Context or It to be excluded from the run. (System.String[], default: System.String[])</ToString>
                <Props>
                  <Obj N="Default" RefId="312">
                    <TNRef RefId="44" />
                    <LST />
                  </Obj>
                  <S N="Description">Tags of Describe, Context or It to be excluded from the run.</S>
                  <Ref N="Value" RefId="232" />
                  <B N="IsModified">true</B>
                </Props>
              </Obj>
              <Obj N="Line" RefId="313">
                <TNRef RefId="43" />
                <ToString>Filter by file and scriptblock start line, useful to run parsed tests programmatically to avoid problems with expanded names. Example: 'C:\tests\file1.Tests.ps1:37' (System.String[], default: System.String[])</ToString>
                <Props>
                  <Obj N="Default" RefId="314">
                    <TNRef RefId="44" />
                    <LST />
                  </Obj>
                  <S N="Description">Filter by file and scriptblock start line, useful to run parsed tests programmatically to avoid problems with expanded names. Example: 'C:\tests\file1.Tests.ps1:37'</S>
                  <Ref N="Value" RefId="314" />
                  <B N="IsModified">false</B>
                </Props>
              </Obj>
              <Obj N="ExcludeLine" RefId="315">
                <TNRef RefId="43" />
                <ToString>Exclude by file and scriptblock start line, takes precedence over Line. (System.String[], default: System.String[])</ToString>
                <Props>
                  <Obj N="Default" RefId="316">
                    <TNRef RefId="44" />
                    <LST />
                  </Obj>
                  <S N="Description">Exclude by file and scriptblock start line, takes precedence over Line.</S>
                  <Ref N="Value" RefId="316" />
                  <B N="IsModified">false</B>
                </Props>
              </Obj>
              <Obj N="FullName" RefId="317">
                <TNRef RefId="43" />
                <ToString>Full name of test with -like wildcards, joined by dot. Example: '*.describe Get-Item.test1' (System.String[], default: System.String[])</ToString>
                <Props>
                  <Obj N="Default" RefId="318">
                    <TNRef RefId="44" />
                    <LST />
                  </Obj>
                  <S N="Description">Full name of test with -like wildcards, joined by dot. Example: '*.describe Get-Item.test1'</S>
                  <Ref N="Value" RefId="318" />
                  <B N="IsModified">false</B>
                </Props>
              </Obj>
            </Props>
          </Obj>
          <Obj N="CodeCoverage" RefId="319">
            <TNRef RefId="52" />
            <ToString>CodeCoverage configuration.</ToString>
            <Props>
              <Obj N="Enabled" RefId="320">
                <TNRef RefId="50" />
                <ToString>Enable CodeCoverage. (True, default: False)</ToString>
                <Props>
                  <B N="Default">false</B>
                  <S N="Description">Enable CodeCoverage.</S>
                  <B N="Value">true</B>
                  <B N="IsModified">true</B>
                </Props>
              </Obj>
              <Obj N="OutputFormat" RefId="321">
                <TNRef RefId="49" />
                <ToString>Format to use for code coverage report. Possible values: JaCoCo, CoverageGutters (JaCoCo, default: JaCoCo)</ToString>
                <Props>
                  <S N="Default">JaCoCo</S>
                  <S N="Description">Format to use for code coverage report. Possible values: JaCoCo, CoverageGutters</S>
                  <S N="Value">JaCoCo</S>
                  <B N="IsModified">true</B>
                </Props>
              </Obj>
              <Obj N="OutputPath" RefId="322">
                <TNRef RefId="49" />
                <ToString>Path relative to the current directory where code coverage report is saved. (C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\testResults\CodeCov_EnhancedLoggingAO_v0.0.1.Windows.PSv.7.4.4.xml, default: coverage.xml)</ToString>
                <Props>
                  <S N="Default">coverage.xml</S>
                  <S N="Description">Path relative to the current directory where code coverage report is saved.</S>
                  <S N="Value">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\testResults\CodeCov_EnhancedLoggingAO_v0.0.1.Windows.PSv.7.4.4.xml</S>
                  <B N="IsModified">true</B>
                </Props>
              </Obj>
              <Obj N="OutputEncoding" RefId="323">
                <TNRef RefId="49" />
                <ToString>Encoding of the output file. (UTF8, default: UTF8)</ToString>
                <Props>
                  <S N="Default">UTF8</S>
                  <S N="Description">Encoding of the output file.</S>
                  <S N="Value">UTF8</S>
                  <B N="IsModified">true</B>
                </Props>
              </Obj>
              <Obj N="Path" RefId="324">
                <TNRef RefId="43" />
                <ToString>Directories or files to be used for code coverage, by default the Path(s) from general settings are used, unless overridden here. (System.String[], default: System.String[])</ToString>
                <Props>
                  <Obj N="Default" RefId="325">
                    <TNRef RefId="44" />
                    <LST />
                  </Obj>
                  <S N="Description">Directories or files to be used for code coverage, by default the Path(s) from general settings are used, unless overridden here.</S>
                  <Ref N="Value" RefId="261" />
                  <B N="IsModified">true</B>
                </Props>
              </Obj>
              <Obj N="ExcludeTests" RefId="326">
                <TNRef RefId="50" />
                <ToString>Exclude tests from code coverage. This uses the TestFilter from general configuration. (True, default: True)</ToString>
                <Props>
                  <B N="Default">true</B>
                  <S N="Description">Exclude tests from code coverage. This uses the TestFilter from general configuration.</S>
                  <B N="Value">true</B>
                  <B N="IsModified">true</B>
                </Props>
              </Obj>
              <Obj N="RecursePaths" RefId="327">
                <TNRef RefId="50" />
                <ToString>Will recurse through directories in the Path option. (True, default: True)</ToString>
                <Props>
                  <B N="Default">true</B>
                  <S N="Description">Will recurse through directories in the Path option.</S>
                  <B N="Value">true</B>
                  <B N="IsModified">false</B>
                </Props>
              </Obj>
              <Obj N="CoveragePercentTarget" RefId="328">
                <TNRef RefId="53" />
                <ToString>Target percent of code coverage that you want to achieve, default 75%. (85, default: 75)</ToString>
                <Props>
                  <D N="Default">75</D>
                  <S N="Description">Target percent of code coverage that you want to achieve, default 75%.</S>
                  <D N="Value">85</D>
                  <B N="IsModified">true</B>
                </Props>
              </Obj>
              <Obj N="UseBreakpoints" RefId="329">
                <TNRef RefId="50" />
                <ToString>EXPERIMENTAL: When false, use Profiler based tracer to do CodeCoverage instead of using breakpoints. (True, default: True)</ToString>
                <Props>
                  <B N="Default">true</B>
                  <S N="Description">EXPERIMENTAL: When false, use Profiler based tracer to do CodeCoverage instead of using breakpoints.</S>
                  <B N="Value">true</B>
                  <B N="IsModified">false</B>
                </Props>
              </Obj>
              <Obj N="SingleHitBreakpoints" RefId="330">
                <TNRef RefId="50" />
                <ToString>Remove breakpoint when it is hit. (True, default: True)</ToString>
                <Props>
                  <B N="Default">true</B>
                  <S N="Description">Remove breakpoint when it is hit.</S>
                  <B N="Value">true</B>
                  <B N="IsModified">false</B>
                </Props>
              </Obj>
            </Props>
          </Obj>
          <Obj N="TestResult" RefId="331">
            <TNRef RefId="54" />
            <ToString>TestResult configuration.</ToString>
            <Props>
              <Obj N="Enabled" RefId="332">
                <TNRef RefId="50" />
                <ToString>Enable TestResult. (True, default: False)</ToString>
                <Props>
                  <B N="Default">false</B>
                  <S N="Description">Enable TestResult.</S>
                  <B N="Value">true</B>
                  <B N="IsModified">true</B>
                </Props>
              </Obj>
              <Obj N="OutputFormat" RefId="333">
                <TNRef RefId="49" />
                <ToString>Format to use for test result report. Possible values: NUnitXml, NUnit2.5, NUnit3 or JUnitXml (NUnitXML, default: NUnitXml)</ToString>
                <Props>
                  <S N="Default">NUnitXml</S>
                  <S N="Description">Format to use for test result report. Possible values: NUnitXml, NUnit2.5, NUnit3 or JUnitXml</S>
                  <S N="Value">NUnitXML</S>
                  <B N="IsModified">true</B>
                </Props>
              </Obj>
              <Obj N="OutputPath" RefId="334">
                <TNRef RefId="49" />
                <ToString>Path relative to the current directory where test result report is saved. (C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\testResults\NUnitXml_EnhancedLoggingAO_v0.0.1.Windows.PSv.7.4.4.xml, default: testResults.xml)</ToString>
                <Props>
                  <S N="Default">testResults.xml</S>
                  <S N="Description">Path relative to the current directory where test result report is saved.</S>
                  <S N="Value">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\testResults\NUnitXml_EnhancedLoggingAO_v0.0.1.Windows.PSv.7.4.4.xml</S>
                  <B N="IsModified">true</B>
                </Props>
              </Obj>
              <Obj N="OutputEncoding" RefId="335">
                <TNRef RefId="49" />
                <ToString>Encoding of the output file. (UTF8, default: UTF8)</ToString>
                <Props>
                  <S N="Default">UTF8</S>
                  <S N="Description">Encoding of the output file.</S>
                  <S N="Value">UTF8</S>
                  <B N="IsModified">true</B>
                </Props>
              </Obj>
              <Obj N="TestSuiteName" RefId="336">
                <TNRef RefId="49" />
                <ToString>Set the name assigned to the root 'test-suite' element. (EnhancedLoggingAO, default: Pester)</ToString>
                <Props>
                  <S N="Default">Pester</S>
                  <S N="Description">Set the name assigned to the root 'test-suite' element.</S>
                  <S N="Value">EnhancedLoggingAO</S>
                  <B N="IsModified">true</B>
                </Props>
              </Obj>
            </Props>
          </Obj>
          <Obj N="Should" RefId="337">
            <TNRef RefId="55" />
            <ToString>Should configuration.</ToString>
            <Props>
              <Obj N="ErrorAction" RefId="338">
                <TNRef RefId="49" />
                <ToString>Controls if Should throws on error. Use 'Stop' to throw on error, or 'Continue' to fail at the end of the test. (Stop, default: Stop)</ToString>
                <Props>
                  <S N="Default">Stop</S>
                  <S N="Description">Controls if Should throws on error. Use 'Stop' to throw on error, or 'Continue' to fail at the end of the test.</S>
                  <S N="Value">Stop</S>
                  <B N="IsModified">false</B>
                </Props>
              </Obj>
            </Props>
          </Obj>
          <Obj N="Debug" RefId="339">
            <TNRef RefId="56" />
            <ToString>Debug configuration for Pester. ⚠ Use at your own risk!</ToString>
            <Props>
              <Obj N="ShowFullErrors" RefId="340">
                <TNRef RefId="50" />
                <ToString>Show full errors including Pester internal stack. This property is deprecated, and if set to true it will override Output.StackTraceVerbosity to 'Full'. (False, default: False)</ToString>
                <Props>
                  <B N="Default">false</B>
                  <S N="Description">Show full errors including Pester internal stack. This property is deprecated, and if set to true it will override Output.StackTraceVerbosity to 'Full'.</S>
                  <B N="Value">false</B>
                  <B N="IsModified">false</B>
                </Props>
              </Obj>
              <Obj N="WriteDebugMessages" RefId="341">
                <TNRef RefId="50" />
                <ToString>Write Debug messages to screen. (False, default: False)</ToString>
                <Props>
                  <B N="Default">false</B>
                  <S N="Description">Write Debug messages to screen.</S>
                  <B N="Value">false</B>
                  <B N="IsModified">false</B>
                </Props>
              </Obj>
              <Obj N="WriteDebugMessagesFrom" RefId="342">
                <TNRef RefId="43" />
                <ToString>Write Debug messages from a given source, WriteDebugMessages must be set to true for this to work. You can use like wildcards to get messages from multiple sources, as well as * to get everything. (System.String[], default: System.String[])</ToString>
                <Props>
                  <Obj N="Default" RefId="343">
                    <TNRef RefId="44" />
                    <LST>
                      <S>Discovery</S>
                      <S>Skip</S>
                      <S>Mock</S>
                      <S>CodeCoverage</S>
                    </LST>
                  </Obj>
                  <S N="Description">Write Debug messages from a given source, WriteDebugMessages must be set to true for this to work. You can use like wildcards to get messages from multiple sources, as well as * to get everything.</S>
                  <Ref N="Value" RefId="343" />
                  <B N="IsModified">false</B>
                </Props>
              </Obj>
              <Obj N="ShowNavigationMarkers" RefId="344">
                <TNRef RefId="50" />
                <ToString>Write paths after every block and test, for easy navigation in VSCode. (False, default: False)</ToString>
                <Props>
                  <B N="Default">false</B>
                  <S N="Description">Write paths after every block and test, for easy navigation in VSCode.</S>
                  <B N="Value">false</B>
                  <B N="IsModified">false</B>
                </Props>
              </Obj>
              <Obj N="ReturnRawResultObject" RefId="345">
                <TNRef RefId="50" />
                <ToString>Returns unfiltered result object, this is for development only. Do not rely on this object for additional properties, non-public properties will be renamed without previous notice. (False, default: False)</ToString>
                <Props>
                  <B N="Default">false</B>
                  <S N="Description">Returns unfiltered result object, this is for development only. Do not rely on this object for additional properties, non-public properties will be renamed without previous notice.</S>
                  <B N="Value">false</B>
                  <B N="IsModified">false</B>
                </Props>
              </Obj>
            </Props>
          </Obj>
          <Obj N="Output" RefId="346">
            <TNRef RefId="57" />
            <ToString>Output configuration</ToString>
            <Props>
              <Obj N="Verbosity" RefId="347">
                <TNRef RefId="49" />
                <ToString>The verbosity of output, options are None, Normal, Detailed and Diagnostic. (Detailed, default: Normal)</ToString>
                <Props>
                  <S N="Default">Normal</S>
                  <S N="Description">The verbosity of output, options are None, Normal, Detailed and Diagnostic.</S>
                  <S N="Value">Detailed</S>
                  <B N="IsModified">true</B>
                </Props>
              </Obj>
              <Obj N="StackTraceVerbosity" RefId="348">
                <TNRef RefId="49" />
                <ToString>The verbosity of stacktrace output, options are None, FirstLine, Filtered and Full. (Filtered, default: Filtered)</ToString>
                <Props>
                  <S N="Default">Filtered</S>
                  <S N="Description">The verbosity of stacktrace output, options are None, FirstLine, Filtered and Full.</S>
                  <S N="Value">Filtered</S>
                  <B N="IsModified">false</B>
                </Props>
              </Obj>
              <Obj N="CIFormat" RefId="349">
                <TNRef RefId="49" />
                <ToString>The CI format of error output in build logs, options are None, Auto, AzureDevops and GithubActions. (None, default: Auto)</ToString>
                <Props>
                  <S N="Default">Auto</S>
                  <S N="Description">The CI format of error output in build logs, options are None, Auto, AzureDevops and GithubActions.</S>
                  <S N="Value">None</S>
                  <B N="IsModified">true</B>
                </Props>
              </Obj>
              <Obj N="CILogLevel" RefId="350">
                <TNRef RefId="49" />
                <ToString>The CI log level in build logs, options are Error and Warning. (Error, default: Error)</ToString>
                <Props>
                  <S N="Default">Error</S>
                  <S N="Description">The CI log level in build logs, options are Error and Warning.</S>
                  <S N="Value">Error</S>
                  <B N="IsModified">false</B>
                </Props>
              </Obj>
              <Obj N="RenderMode" RefId="351">
                <TNRef RefId="49" />
                <ToString>The mode used to render console output, options are Auto, Ansi, ConsoleColor and Plaintext. (Ansi, default: Auto)</ToString>
                <Props>
                  <S N="Default">Auto</S>
                  <S N="Description">The mode used to render console output, options are Auto, Ansi, ConsoleColor and Plaintext.</S>
                  <S N="Value">Ansi</S>
                  <B N="IsModified">true</B>
                </Props>
              </Obj>
            </Props>
          </Obj>
          <Obj N="TestDrive" RefId="352">
            <TNRef RefId="58" />
            <ToString>TestDrive configuration.</ToString>
            <Props>
              <Obj N="Enabled" RefId="353">
                <TNRef RefId="50" />
                <ToString>Enable TestDrive. (True, default: True)</ToString>
                <Props>
                  <B N="Default">true</B>
                  <S N="Description">Enable TestDrive.</S>
                  <B N="Value">true</B>
                  <B N="IsModified">false</B>
                </Props>
              </Obj>
            </Props>
          </Obj>
          <Obj N="TestRegistry" RefId="354">
            <TNRef RefId="59" />
            <ToString>TestRegistry configuration.</ToString>
            <Props>
              <Obj N="Enabled" RefId="355">
                <TNRef RefId="50" />
                <ToString>Enable TestRegistry. (True, default: True)</ToString>
                <Props>
                  <B N="Default">true</B>
                  <S N="Description">Enable TestRegistry.</S>
                  <B N="Value">true</B>
                  <B N="IsModified">false</B>
                </Props>
              </Obj>
            </Props>
          </Obj>
        </Props>
      </Obj>
      <TS N="DiscoveryDuration">PT0.1784266S</TS>
      <TS N="UserDuration">PT3.3589033S</TS>
      <TS N="FrameworkDuration">PT1.5871517S</TS>
      <Obj N="Failed" RefId="356">
        <TNRef RefId="29" />
        <LST>
          <Obj RefId="357">
            <TNRef RefId="30" />
            <ToString>[-] Should have a unit test for Add-Step</ToString>
            <Props>
              <S N="Name">Should have a unit test for &lt;Name&gt;</S>
              <Obj N="Path" RefId="358">
                <TNRef RefId="28" />
                <LST>
                  <S>Quality for module</S>
                  <S>Should have a unit test for &lt;Name&gt;</S>
                </LST>
              </Obj>
              <Obj N="Data" RefId="359">
                <TNRef RefId="25" />
                <DCT>
                  <En>
                    <S N="Key">Name</S>
                    <S N="Value">Add-Step</S>
                  </En>
                </DCT>
              </Obj>
              <S N="ExpandedName">Should have a unit test for Add-Step</S>
              <S N="ExpandedPath">Quality for module.Should have a unit test for Add-Step</S>
              <S N="Result">Failed</S>
              <Obj N="ErrorRecord" RefId="360">
                <TNRef RefId="31" />
                <LST>
                  <Obj RefId="361">
                    <TNRef RefId="33" />
                    <ToString>Expected a value, but got $null or empty.</ToString>
                    <MS>
                      <S N="DisplayErrorMessage">Expected a value, but got $null or empty.</S>
                      <S N="DisplayStackTrace">at Get-ChildItem -Path 'tests\' -Recurse -Include "$Name.Tests.ps1" | Should -Not -BeNullOrEmpty, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:117_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:117</S>
                      <Obj N="Exception" RefId="362">
                        <TN RefId="60">
                          <T>System.Exception</T>
                          <T>System.Object</T>
                        </TN>
                        <ToString>System.Exception: Expected a value, but got $null or empty.</ToString>
                        <Props>
                          <Nil N="TargetSite" />
                          <S N="Message">Expected a value, but got $null or empty.</S>
                          <Obj N="Data" RefId="363">
                            <TNRef RefId="35" />
                            <DCT />
                          </Obj>
                          <Nil N="InnerException" />
                          <Nil N="HelpLink" />
                          <Nil N="Source" />
                          <I32 N="HResult">-2146233088</I32>
                          <Nil N="StackTrace" />
                        </Props>
                      </Obj>
                      <Obj N="TargetObject" RefId="364">
                        <TNRef RefId="38" />
                        <DCT>
                          <En>
                            <S N="Key">Message</S>
                            <S N="Value">Expected a value, but got $null or empty.</S>
                          </En>
                          <En>
                            <S N="Key">File</S>
                            <S N="Value">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1</S>
                          </En>
                          <En>
                            <S N="Key">Line</S>
                            <S N="Value">117</S>
                          </En>
                          <En>
                            <S N="Key">LineText</S>
                            <S N="Value">        Get-ChildItem -Path 'tests\' -Recurse -Include "$Name.Tests.ps1" | Should -Not -BeNullOrEmpty</S>
                          </En>
                          <En>
                            <S N="Key">Terminating</S>
                            <B N="Value">true</B>
                          </En>
                          <En>
                            <S N="Key">ShouldResult</S>
                            <Obj N="Value" RefId="365">
                              <TN RefId="61">
                                <T>Pester.ShouldResult</T>
                                <T>System.Object</T>
                              </TN>
                              <ToString>Pester.ShouldResult</ToString>
                              <Props>
                                <B N="Succeeded">false</B>
                                <S N="FailureMessage">Expected a value, but got $null or empty.</S>
                                <Obj N="ExpectResult" RefId="366">
                                  <TN RefId="62">
                                    <T>Pester.ShouldExpectResult</T>
                                    <T>System.Object</T>
                                  </TN>
                                  <ToString>Expected: '$null or empty' Actual: $null Because: </ToString>
                                  <Props>
                                    <S N="Actual">$null</S>
                                    <S N="Expected">'$null or empty'</S>
                                    <S N="Because"></S>
                                  </Props>
                                </Obj>
                              </Props>
                            </Obj>
                          </En>
                        </DCT>
                      </Obj>
                      <S N="FullyQualifiedErrorId">PesterAssertionFailed</S>
                      <Obj N="InvocationInfo" RefId="367">
                        <TNRef RefId="37" />
                        <ToString>System.Management.Automation.InvocationInfo</ToString>
                        <Props>
                          <Nil N="MyCommand" />
                          <Obj N="BoundParameters" RefId="368">
                            <TNRef RefId="38" />
                            <DCT />
                          </Obj>
                          <Obj N="UnboundArguments" RefId="369">
                            <TNRef RefId="31" />
                            <LST />
                          </Obj>
                          <I32 N="ScriptLineNumber">8392</I32>
                          <I32 N="OffsetInLine">13</I32>
                          <I64 N="HistoryId">18</I64>
                          <S N="ScriptName">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1</S>
                          <S N="Line">            throw $errorRecord_x000D__x000A_</S>
                          <S N="Statement">throw $errorRecord</S>
                          <S N="PositionMessage">At C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1:8392 char:13_x000D__x000A_+             throw $errorRecord_x000D__x000A_+             ~~~~~~~~~~~~~~~~~~</S>
                          <S N="PSScriptRoot">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1</S>
                          <S N="PSCommandPath">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1</S>
                          <S N="InvocationName"></S>
                          <I32 N="PipelineLength">0</I32>
                          <I32 N="PipelinePosition">0</I32>
                          <B N="ExpectingInput">false</B>
                          <Obj N="CommandOrigin" RefId="370">
                            <TNRef RefId="39" />
                            <ToString>Internal</ToString>
                            <I32>1</I32>
                          </Obj>
                          <Nil N="DisplayScriptPosition" />
                        </Props>
                        <MS>
                          <Obj N="ParameterValues" RefId="371">
                            <TNRef RefId="25" />
                            <DCT />
                          </Obj>
                        </MS>
                      </Obj>
                      <I32 N="ErrorCategory_Category">8</I32>
                      <S N="ErrorCategory_Activity"></S>
                      <S N="ErrorCategory_Reason">Exception</S>
                      <S N="ErrorCategory_TargetName">System.Collections.Generic.Dictionary`2[System.String,System.Object]</S>
                      <S N="ErrorCategory_TargetType">Dictionary`2</S>
                      <S N="ErrorCategory_Message">InvalidResult: (System.Collections.…ring,System.Object]:Dictionary`2) [], Exception</S>
                      <B N="SerializeExtendedInfo">false</B>
                      <S N="ErrorDetails_ScriptStackTrace">at Invoke-Assertion, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 8392_x000D__x000A_at Should&lt;End&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 8328_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1: line 117_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2024_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1985_x000D__x000A_at Invoke-ScriptBlock, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2157_x000D__x000A_at Invoke-TestItem, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1199_x000D__x000A_at Invoke-Block, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 835_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 893_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2024_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1985_x000D__x000A_at Invoke-ScriptBlock, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2160_x000D__x000A_at Invoke-Block, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 940_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 893_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2024_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1985_x000D__x000A_at Invoke-ScriptBlock, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2160_x000D__x000A_at Invoke-Block, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 940_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1688_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.ps1: line 3_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 3260_x000D__x000A_at Invoke-InNewScriptScope, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 3267_x000D__x000A_at Run-Test, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1691_x000D__x000A_at Invoke-Test, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2512_x000D__x000A_at Invoke-Pester&lt;End&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 5110_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Sampler\0.118.1\tasks\Invoke-Pester.pester.build.ps1: line 906_x000D__x000A_at *Task, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 629_x000D__x000A_at *Task, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 601_x000D__x000A_at *Task, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 601_x000D__x000A_at &lt;ScriptBlock&gt;&lt;End&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 787_x000D__x000A_at &lt;ScriptBlock&gt;&lt;Begin&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\build.ps1: line 532_x000D__x000A_at &lt;ScriptBlock&gt;, &lt;No file&gt;: line 1</S>
                      <Nil N="PSMessageDetails" />
                    </MS>
                  </Obj>
                </LST>
              </Obj>
              <Nil N="StandardOutput" />
              <TS N="Duration">PT0.040599S</TS>
              <S N="ItemType">Test</S>
              <S N="Id">116:5</S>
              <S N="GroupId">116:5</S>
              <SBK N="ScriptBlock">_x000D__x000A_        Get-ChildItem -Path 'tests\' -Recurse -Include "$Name.Tests.ps1" | Should -Not -BeNullOrEmpty_x000D__x000A_    </SBK>
              <Nil N="Tag" />
              <B N="Focus">false</B>
              <B N="Skip">false</B>
              <Ref N="Block" RefId="60" />
              <B N="First">true</B>
              <B N="Last">false</B>
              <B N="Include">false</B>
              <B N="Exclude">false</B>
              <B N="Explicit">false</B>
              <B N="ShouldRun">true</B>
              <I32 N="StartLine">116</I32>
              <B N="Executed">true</B>
              <DT N="ExecutedAt">2024-08-03T17:35:50.3194424-07:00</DT>
              <B N="Passed">false</B>
              <B N="Skipped">false</B>
              <B N="Inconclusive">false</B>
              <TS N="UserDuration">PT0.0235428S</TS>
              <TS N="FrameworkDuration">PT0.0170562S</TS>
              <Nil N="PluginData" />
              <Nil N="FrameworkData" />
            </Props>
          </Obj>
          <Obj RefId="372">
            <TNRef RefId="30" />
            <ToString>[-] Should have a unit test for AppendCSVLog</ToString>
            <Props>
              <S N="Name">Should have a unit test for &lt;Name&gt;</S>
              <Obj N="Path" RefId="373">
                <TNRef RefId="28" />
                <LST>
                  <S>Quality for module</S>
                  <S>Should have a unit test for &lt;Name&gt;</S>
                </LST>
              </Obj>
              <Obj N="Data" RefId="374">
                <TNRef RefId="25" />
                <DCT>
                  <En>
                    <S N="Key">Name</S>
                    <S N="Value">AppendCSVLog</S>
                  </En>
                </DCT>
              </Obj>
              <S N="ExpandedName">Should have a unit test for AppendCSVLog</S>
              <S N="ExpandedPath">Quality for module.Should have a unit test for AppendCSVLog</S>
              <S N="Result">Failed</S>
              <Obj N="ErrorRecord" RefId="375">
                <TNRef RefId="31" />
                <LST>
                  <Obj RefId="376">
                    <TNRef RefId="33" />
                    <ToString>Expected a value, but got $null or empty.</ToString>
                    <MS>
                      <S N="DisplayErrorMessage">Expected a value, but got $null or empty.</S>
                      <S N="DisplayStackTrace">at Get-ChildItem -Path 'tests\' -Recurse -Include "$Name.Tests.ps1" | Should -Not -BeNullOrEmpty, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:117_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:117</S>
                      <Obj N="Exception" RefId="377">
                        <TNRef RefId="60" />
                        <ToString>System.Exception: Expected a value, but got $null or empty.</ToString>
                        <Props>
                          <Nil N="TargetSite" />
                          <S N="Message">Expected a value, but got $null or empty.</S>
                          <Obj N="Data" RefId="378">
                            <TNRef RefId="35" />
                            <DCT />
                          </Obj>
                          <Nil N="InnerException" />
                          <Nil N="HelpLink" />
                          <Nil N="Source" />
                          <I32 N="HResult">-2146233088</I32>
                          <Nil N="StackTrace" />
                        </Props>
                      </Obj>
                      <Obj N="TargetObject" RefId="379">
                        <TNRef RefId="38" />
                        <DCT>
                          <En>
                            <S N="Key">Message</S>
                            <S N="Value">Expected a value, but got $null or empty.</S>
                          </En>
                          <En>
                            <S N="Key">File</S>
                            <S N="Value">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1</S>
                          </En>
                          <En>
                            <S N="Key">Line</S>
                            <S N="Value">117</S>
                          </En>
                          <En>
                            <S N="Key">LineText</S>
                            <S N="Value">        Get-ChildItem -Path 'tests\' -Recurse -Include "$Name.Tests.ps1" | Should -Not -BeNullOrEmpty</S>
                          </En>
                          <En>
                            <S N="Key">Terminating</S>
                            <B N="Value">true</B>
                          </En>
                          <En>
                            <S N="Key">ShouldResult</S>
                            <Obj N="Value" RefId="380">
                              <TNRef RefId="61" />
                              <ToString>Pester.ShouldResult</ToString>
                              <Props>
                                <B N="Succeeded">false</B>
                                <S N="FailureMessage">Expected a value, but got $null or empty.</S>
                                <Obj N="ExpectResult" RefId="381">
                                  <TNRef RefId="62" />
                                  <ToString>Expected: '$null or empty' Actual: $null Because: </ToString>
                                  <Props>
                                    <S N="Actual">$null</S>
                                    <S N="Expected">'$null or empty'</S>
                                    <S N="Because"></S>
                                  </Props>
                                </Obj>
                              </Props>
                            </Obj>
                          </En>
                        </DCT>
                      </Obj>
                      <S N="FullyQualifiedErrorId">PesterAssertionFailed</S>
                      <Obj N="InvocationInfo" RefId="382">
                        <TNRef RefId="37" />
                        <ToString>System.Management.Automation.InvocationInfo</ToString>
                        <Props>
                          <Nil N="MyCommand" />
                          <Obj N="BoundParameters" RefId="383">
                            <TNRef RefId="38" />
                            <DCT />
                          </Obj>
                          <Obj N="UnboundArguments" RefId="384">
                            <TNRef RefId="31" />
                            <LST />
                          </Obj>
                          <I32 N="ScriptLineNumber">8392</I32>
                          <I32 N="OffsetInLine">13</I32>
                          <I64 N="HistoryId">18</I64>
                          <S N="ScriptName">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1</S>
                          <S N="Line">            throw $errorRecord_x000D__x000A_</S>
                          <S N="Statement">throw $errorRecord</S>
                          <S N="PositionMessage">At C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1:8392 char:13_x000D__x000A_+             throw $errorRecord_x000D__x000A_+             ~~~~~~~~~~~~~~~~~~</S>
                          <S N="PSScriptRoot">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1</S>
                          <S N="PSCommandPath">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1</S>
                          <S N="InvocationName"></S>
                          <I32 N="PipelineLength">0</I32>
                          <I32 N="PipelinePosition">0</I32>
                          <B N="ExpectingInput">false</B>
                          <Obj N="CommandOrigin" RefId="385">
                            <TNRef RefId="39" />
                            <ToString>Internal</ToString>
                            <I32>1</I32>
                          </Obj>
                          <Nil N="DisplayScriptPosition" />
                        </Props>
                        <MS>
                          <Obj N="ParameterValues" RefId="386">
                            <TNRef RefId="25" />
                            <DCT />
                          </Obj>
                        </MS>
                      </Obj>
                      <I32 N="ErrorCategory_Category">8</I32>
                      <S N="ErrorCategory_Activity"></S>
                      <S N="ErrorCategory_Reason">Exception</S>
                      <S N="ErrorCategory_TargetName">System.Collections.Generic.Dictionary`2[System.String,System.Object]</S>
                      <S N="ErrorCategory_TargetType">Dictionary`2</S>
                      <S N="ErrorCategory_Message">InvalidResult: (System.Collections.…ring,System.Object]:Dictionary`2) [], Exception</S>
                      <B N="SerializeExtendedInfo">false</B>
                      <S N="ErrorDetails_ScriptStackTrace">at Invoke-Assertion, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 8392_x000D__x000A_at Should&lt;End&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 8328_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1: line 117_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2024_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1985_x000D__x000A_at Invoke-ScriptBlock, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2157_x000D__x000A_at Invoke-TestItem, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1199_x000D__x000A_at Invoke-Block, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 835_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 893_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2024_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1985_x000D__x000A_at Invoke-ScriptBlock, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2160_x000D__x000A_at Invoke-Block, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 940_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 893_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2024_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1985_x000D__x000A_at Invoke-ScriptBlock, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2160_x000D__x000A_at Invoke-Block, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 940_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1688_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.ps1: line 3_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 3260_x000D__x000A_at Invoke-InNewScriptScope, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 3267_x000D__x000A_at Run-Test, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1691_x000D__x000A_at Invoke-Test, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2512_x000D__x000A_at Invoke-Pester&lt;End&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 5110_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Sampler\0.118.1\tasks\Invoke-Pester.pester.build.ps1: line 906_x000D__x000A_at *Task, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 629_x000D__x000A_at *Task, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 601_x000D__x000A_at *Task, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 601_x000D__x000A_at &lt;ScriptBlock&gt;&lt;End&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 787_x000D__x000A_at &lt;ScriptBlock&gt;&lt;Begin&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\build.ps1: line 532_x000D__x000A_at &lt;ScriptBlock&gt;, &lt;No file&gt;: line 1</S>
                      <Nil N="PSMessageDetails" />
                    </MS>
                  </Obj>
                </LST>
              </Obj>
              <Nil N="StandardOutput" />
              <TS N="Duration">PT0.0074403S</TS>
              <S N="ItemType">Test</S>
              <S N="Id">116:5</S>
              <S N="GroupId">116:5</S>
              <SBK N="ScriptBlock">_x000D__x000A_        Get-ChildItem -Path 'tests\' -Recurse -Include "$Name.Tests.ps1" | Should -Not -BeNullOrEmpty_x000D__x000A_    </SBK>
              <Nil N="Tag" />
              <B N="Focus">false</B>
              <B N="Skip">false</B>
              <Ref N="Block" RefId="60" />
              <B N="First">false</B>
              <B N="Last">false</B>
              <B N="Include">false</B>
              <B N="Exclude">false</B>
              <B N="Explicit">false</B>
              <B N="ShouldRun">true</B>
              <I32 N="StartLine">116</I32>
              <B N="Executed">true</B>
              <DT N="ExecutedAt">2024-08-03T17:35:50.3601127-07:00</DT>
              <B N="Passed">false</B>
              <B N="Skipped">false</B>
              <B N="Inconclusive">false</B>
              <TS N="UserDuration">PT0.0031815S</TS>
              <TS N="FrameworkDuration">PT0.0042588S</TS>
              <Nil N="PluginData" />
              <Nil N="FrameworkData" />
            </Props>
          </Obj>
          <Obj RefId="387">
            <TNRef RefId="30" />
            <ToString>[-] Should have a unit test for CreateEventLogSource</ToString>
            <Props>
              <S N="Name">Should have a unit test for &lt;Name&gt;</S>
              <Obj N="Path" RefId="388">
                <TNRef RefId="28" />
                <LST>
                  <S>Quality for module</S>
                  <S>Should have a unit test for &lt;Name&gt;</S>
                </LST>
              </Obj>
              <Obj N="Data" RefId="389">
                <TNRef RefId="25" />
                <DCT>
                  <En>
                    <S N="Key">Name</S>
                    <S N="Value">CreateEventLogSource</S>
                  </En>
                </DCT>
              </Obj>
              <S N="ExpandedName">Should have a unit test for CreateEventLogSource</S>
              <S N="ExpandedPath">Quality for module.Should have a unit test for CreateEventLogSource</S>
              <S N="Result">Failed</S>
              <Obj N="ErrorRecord" RefId="390">
                <TNRef RefId="31" />
                <LST>
                  <Obj RefId="391">
                    <TNRef RefId="33" />
                    <ToString>Expected a value, but got $null or empty.</ToString>
                    <MS>
                      <S N="DisplayErrorMessage">Expected a value, but got $null or empty.</S>
                      <S N="DisplayStackTrace">at Get-ChildItem -Path 'tests\' -Recurse -Include "$Name.Tests.ps1" | Should -Not -BeNullOrEmpty, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:117_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:117</S>
                      <Obj N="Exception" RefId="392">
                        <TNRef RefId="60" />
                        <ToString>System.Exception: Expected a value, but got $null or empty.</ToString>
                        <Props>
                          <Nil N="TargetSite" />
                          <S N="Message">Expected a value, but got $null or empty.</S>
                          <Obj N="Data" RefId="393">
                            <TNRef RefId="35" />
                            <DCT />
                          </Obj>
                          <Nil N="InnerException" />
                          <Nil N="HelpLink" />
                          <Nil N="Source" />
                          <I32 N="HResult">-2146233088</I32>
                          <Nil N="StackTrace" />
                        </Props>
                      </Obj>
                      <Obj N="TargetObject" RefId="394">
                        <TNRef RefId="38" />
                        <DCT>
                          <En>
                            <S N="Key">Message</S>
                            <S N="Value">Expected a value, but got $null or empty.</S>
                          </En>
                          <En>
                            <S N="Key">File</S>
                            <S N="Value">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1</S>
                          </En>
                          <En>
                            <S N="Key">Line</S>
                            <S N="Value">117</S>
                          </En>
                          <En>
                            <S N="Key">LineText</S>
                            <S N="Value">        Get-ChildItem -Path 'tests\' -Recurse -Include "$Name.Tests.ps1" | Should -Not -BeNullOrEmpty</S>
                          </En>
                          <En>
                            <S N="Key">Terminating</S>
                            <B N="Value">true</B>
                          </En>
                          <En>
                            <S N="Key">ShouldResult</S>
                            <Obj N="Value" RefId="395">
                              <TNRef RefId="61" />
                              <ToString>Pester.ShouldResult</ToString>
                              <Props>
                                <B N="Succeeded">false</B>
                                <S N="FailureMessage">Expected a value, but got $null or empty.</S>
                                <Obj N="ExpectResult" RefId="396">
                                  <TNRef RefId="62" />
                                  <ToString>Expected: '$null or empty' Actual: $null Because: </ToString>
                                  <Props>
                                    <S N="Actual">$null</S>
                                    <S N="Expected">'$null or empty'</S>
                                    <S N="Because"></S>
                                  </Props>
                                </Obj>
                              </Props>
                            </Obj>
                          </En>
                        </DCT>
                      </Obj>
                      <S N="FullyQualifiedErrorId">PesterAssertionFailed</S>
                      <Obj N="InvocationInfo" RefId="397">
                        <TNRef RefId="37" />
                        <ToString>System.Management.Automation.InvocationInfo</ToString>
                        <Props>
                          <Nil N="MyCommand" />
                          <Obj N="BoundParameters" RefId="398">
                            <TNRef RefId="38" />
                            <DCT />
                          </Obj>
                          <Obj N="UnboundArguments" RefId="399">
                            <TNRef RefId="31" />
                            <LST />
                          </Obj>
                          <I32 N="ScriptLineNumber">8392</I32>
                          <I32 N="OffsetInLine">13</I32>
                          <I64 N="HistoryId">18</I64>
                          <S N="ScriptName">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1</S>
                          <S N="Line">            throw $errorRecord_x000D__x000A_</S>
                          <S N="Statement">throw $errorRecord</S>
                          <S N="PositionMessage">At C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1:8392 char:13_x000D__x000A_+             throw $errorRecord_x000D__x000A_+             ~~~~~~~~~~~~~~~~~~</S>
                          <S N="PSScriptRoot">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1</S>
                          <S N="PSCommandPath">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1</S>
                          <S N="InvocationName"></S>
                          <I32 N="PipelineLength">0</I32>
                          <I32 N="PipelinePosition">0</I32>
                          <B N="ExpectingInput">false</B>
                          <Obj N="CommandOrigin" RefId="400">
                            <TNRef RefId="39" />
                            <ToString>Internal</ToString>
                            <I32>1</I32>
                          </Obj>
                          <Nil N="DisplayScriptPosition" />
                        </Props>
                        <MS>
                          <Obj N="ParameterValues" RefId="401">
                            <TNRef RefId="25" />
                            <DCT />
                          </Obj>
                        </MS>
                      </Obj>
                      <I32 N="ErrorCategory_Category">8</I32>
                      <S N="ErrorCategory_Activity"></S>
                      <S N="ErrorCategory_Reason">Exception</S>
                      <S N="ErrorCategory_TargetName">System.Collections.Generic.Dictionary`2[System.String,System.Object]</S>
                      <S N="ErrorCategory_TargetType">Dictionary`2</S>
                      <S N="ErrorCategory_Message">InvalidResult: (System.Collections.…ring,System.Object]:Dictionary`2) [], Exception</S>
                      <B N="SerializeExtendedInfo">false</B>
                      <S N="ErrorDetails_ScriptStackTrace">at Invoke-Assertion, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 8392_x000D__x000A_at Should&lt;End&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 8328_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1: line 117_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2024_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1985_x000D__x000A_at Invoke-ScriptBlock, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2157_x000D__x000A_at Invoke-TestItem, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1199_x000D__x000A_at Invoke-Block, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 835_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 893_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2024_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1985_x000D__x000A_at Invoke-ScriptBlock, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2160_x000D__x000A_at Invoke-Block, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 940_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 893_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2024_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1985_x000D__x000A_at Invoke-ScriptBlock, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2160_x000D__x000A_at Invoke-Block, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 940_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1688_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.ps1: line 3_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 3260_x000D__x000A_at Invoke-InNewScriptScope, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 3267_x000D__x000A_at Run-Test, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1691_x000D__x000A_at Invoke-Test, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2512_x000D__x000A_at Invoke-Pester&lt;End&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 5110_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Sampler\0.118.1\tasks\Invoke-Pester.pester.build.ps1: line 906_x000D__x000A_at *Task, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 629_x000D__x000A_at *Task, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 601_x000D__x000A_at *Task, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 601_x000D__x000A_at &lt;ScriptBlock&gt;&lt;End&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 787_x000D__x000A_at &lt;ScriptBlock&gt;&lt;Begin&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\build.ps1: line 532_x000D__x000A_at &lt;ScriptBlock&gt;, &lt;No file&gt;: line 1</S>
                      <Nil N="PSMessageDetails" />
                    </MS>
                  </Obj>
                </LST>
              </Obj>
              <Nil N="StandardOutput" />
              <TS N="Duration">PT0.0073446S</TS>
              <S N="ItemType">Test</S>
              <S N="Id">116:5</S>
              <S N="GroupId">116:5</S>
              <SBK N="ScriptBlock">_x000D__x000A_        Get-ChildItem -Path 'tests\' -Recurse -Include "$Name.Tests.ps1" | Should -Not -BeNullOrEmpty_x000D__x000A_    </SBK>
              <Nil N="Tag" />
              <B N="Focus">false</B>
              <B N="Skip">false</B>
              <Ref N="Block" RefId="60" />
              <B N="First">false</B>
              <B N="Last">false</B>
              <B N="Include">false</B>
              <B N="Exclude">false</B>
              <B N="Explicit">false</B>
              <B N="ShouldRun">true</B>
              <I32 N="StartLine">116</I32>
              <B N="Executed">true</B>
              <DT N="ExecutedAt">2024-08-03T17:35:50.3675676-07:00</DT>
              <B N="Passed">false</B>
              <B N="Skipped">false</B>
              <B N="Inconclusive">false</B>
              <TS N="UserDuration">PT0.0029968S</TS>
              <TS N="FrameworkDuration">PT0.0043478S</TS>
              <Nil N="PluginData" />
              <Nil N="FrameworkData" />
            </Props>
          </Obj>
          <Obj RefId="402">
            <TNRef RefId="30" />
            <ToString>[-] Should have a unit test for CreateEventSourceAndLog</ToString>
            <Props>
              <S N="Name">Should have a unit test for &lt;Name&gt;</S>
              <Obj N="Path" RefId="403">
                <TNRef RefId="28" />
                <LST>
                  <S>Quality for module</S>
                  <S>Should have a unit test for &lt;Name&gt;</S>
                </LST>
              </Obj>
              <Obj N="Data" RefId="404">
                <TNRef RefId="25" />
                <DCT>
                  <En>
                    <S N="Key">Name</S>
                    <S N="Value">CreateEventSourceAndLog</S>
                  </En>
                </DCT>
              </Obj>
              <S N="ExpandedName">Should have a unit test for CreateEventSourceAndLog</S>
              <S N="ExpandedPath">Quality for module.Should have a unit test for CreateEventSourceAndLog</S>
              <S N="Result">Failed</S>
              <Obj N="ErrorRecord" RefId="405">
                <TNRef RefId="31" />
                <LST>
                  <Obj RefId="406">
                    <TNRef RefId="33" />
                    <ToString>Expected a value, but got $null or empty.</ToString>
                    <MS>
                      <S N="DisplayErrorMessage">Expected a value, but got $null or empty.</S>
                      <S N="DisplayStackTrace">at Get-ChildItem -Path 'tests\' -Recurse -Include "$Name.Tests.ps1" | Should -Not -BeNullOrEmpty, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:117_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:117</S>
                      <Obj N="Exception" RefId="407">
                        <TNRef RefId="60" />
                        <ToString>System.Exception: Expected a value, but got $null or empty.</ToString>
                        <Props>
                          <Nil N="TargetSite" />
                          <S N="Message">Expected a value, but got $null or empty.</S>
                          <Obj N="Data" RefId="408">
                            <TNRef RefId="35" />
                            <DCT />
                          </Obj>
                          <Nil N="InnerException" />
                          <Nil N="HelpLink" />
                          <Nil N="Source" />
                          <I32 N="HResult">-2146233088</I32>
                          <Nil N="StackTrace" />
                        </Props>
                      </Obj>
                      <Obj N="TargetObject" RefId="409">
                        <TNRef RefId="38" />
                        <DCT>
                          <En>
                            <S N="Key">Message</S>
                            <S N="Value">Expected a value, but got $null or empty.</S>
                          </En>
                          <En>
                            <S N="Key">File</S>
                            <S N="Value">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1</S>
                          </En>
                          <En>
                            <S N="Key">Line</S>
                            <S N="Value">117</S>
                          </En>
                          <En>
                            <S N="Key">LineText</S>
                            <S N="Value">        Get-ChildItem -Path 'tests\' -Recurse -Include "$Name.Tests.ps1" | Should -Not -BeNullOrEmpty</S>
                          </En>
                          <En>
                            <S N="Key">Terminating</S>
                            <B N="Value">true</B>
                          </En>
                          <En>
                            <S N="Key">ShouldResult</S>
                            <Obj N="Value" RefId="410">
                              <TNRef RefId="61" />
                              <ToString>Pester.ShouldResult</ToString>
                              <Props>
                                <B N="Succeeded">false</B>
                                <S N="FailureMessage">Expected a value, but got $null or empty.</S>
                                <Obj N="ExpectResult" RefId="411">
                                  <TNRef RefId="62" />
                                  <ToString>Expected: '$null or empty' Actual: $null Because: </ToString>
                                  <Props>
                                    <S N="Actual">$null</S>
                                    <S N="Expected">'$null or empty'</S>
                                    <S N="Because"></S>
                                  </Props>
                                </Obj>
                              </Props>
                            </Obj>
                          </En>
                        </DCT>
                      </Obj>
                      <S N="FullyQualifiedErrorId">PesterAssertionFailed</S>
                      <Obj N="InvocationInfo" RefId="412">
                        <TNRef RefId="37" />
                        <ToString>System.Management.Automation.InvocationInfo</ToString>
                        <Props>
                          <Nil N="MyCommand" />
                          <Obj N="BoundParameters" RefId="413">
                            <TNRef RefId="38" />
                            <DCT />
                          </Obj>
                          <Obj N="UnboundArguments" RefId="414">
                            <TNRef RefId="31" />
                            <LST />
                          </Obj>
                          <I32 N="ScriptLineNumber">8392</I32>
                          <I32 N="OffsetInLine">13</I32>
                          <I64 N="HistoryId">18</I64>
                          <S N="ScriptName">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1</S>
                          <S N="Line">            throw $errorRecord_x000D__x000A_</S>
                          <S N="Statement">throw $errorRecord</S>
                          <S N="PositionMessage">At C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1:8392 char:13_x000D__x000A_+             throw $errorRecord_x000D__x000A_+             ~~~~~~~~~~~~~~~~~~</S>
                          <S N="PSScriptRoot">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1</S>
                          <S N="PSCommandPath">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1</S>
                          <S N="InvocationName"></S>
                          <I32 N="PipelineLength">0</I32>
                          <I32 N="PipelinePosition">0</I32>
                          <B N="ExpectingInput">false</B>
                          <Obj N="CommandOrigin" RefId="415">
                            <TNRef RefId="39" />
                            <ToString>Internal</ToString>
                            <I32>1</I32>
                          </Obj>
                          <Nil N="DisplayScriptPosition" />
                        </Props>
                        <MS>
                          <Obj N="ParameterValues" RefId="416">
                            <TNRef RefId="25" />
                            <DCT />
                          </Obj>
                        </MS>
                      </Obj>
                      <I32 N="ErrorCategory_Category">8</I32>
                      <S N="ErrorCategory_Activity"></S>
                      <S N="ErrorCategory_Reason">Exception</S>
                      <S N="ErrorCategory_TargetName">System.Collections.Generic.Dictionary`2[System.String,System.Object]</S>
                      <S N="ErrorCategory_TargetType">Dictionary`2</S>
                      <S N="ErrorCategory_Message">InvalidResult: (System.Collections.…ring,System.Object]:Dictionary`2) [], Exception</S>
                      <B N="SerializeExtendedInfo">false</B>
                      <S N="ErrorDetails_ScriptStackTrace">at Invoke-Assertion, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 8392_x000D__x000A_at Should&lt;End&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 8328_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1: line 117_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2024_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1985_x000D__x000A_at Invoke-ScriptBlock, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2157_x000D__x000A_at Invoke-TestItem, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1199_x000D__x000A_at Invoke-Block, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 835_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 893_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2024_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1985_x000D__x000A_at Invoke-ScriptBlock, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2160_x000D__x000A_at Invoke-Block, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 940_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 893_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2024_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1985_x000D__x000A_at Invoke-ScriptBlock, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2160_x000D__x000A_at Invoke-Block, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 940_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1688_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.ps1: line 3_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 3260_x000D__x000A_at Invoke-InNewScriptScope, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 3267_x000D__x000A_at Run-Test, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1691_x000D__x000A_at Invoke-Test, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2512_x000D__x000A_at Invoke-Pester&lt;End&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 5110_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Sampler\0.118.1\tasks\Invoke-Pester.pester.build.ps1: line 906_x000D__x000A_at *Task, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 629_x000D__x000A_at *Task, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 601_x000D__x000A_at *Task, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 601_x000D__x000A_at &lt;ScriptBlock&gt;&lt;End&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 787_x000D__x000A_at &lt;ScriptBlock&gt;&lt;Begin&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\build.ps1: line 532_x000D__x000A_at &lt;ScriptBlock&gt;, &lt;No file&gt;: line 1</S>
                      <Nil N="PSMessageDetails" />
                    </MS>
                  </Obj>
                </LST>
              </Obj>
              <Nil N="StandardOutput" />
              <TS N="Duration">PT0.0070716S</TS>
              <S N="ItemType">Test</S>
              <S N="Id">116:5</S>
              <S N="GroupId">116:5</S>
              <SBK N="ScriptBlock">_x000D__x000A_        Get-ChildItem -Path 'tests\' -Recurse -Include "$Name.Tests.ps1" | Should -Not -BeNullOrEmpty_x000D__x000A_    </SBK>
              <Nil N="Tag" />
              <B N="Focus">false</B>
              <B N="Skip">false</B>
              <Ref N="Block" RefId="60" />
              <B N="First">false</B>
              <B N="Last">false</B>
              <B N="Include">false</B>
              <B N="Exclude">false</B>
              <B N="Explicit">false</B>
              <B N="ShouldRun">true</B>
              <I32 N="StartLine">116</I32>
              <B N="Executed">true</B>
              <DT N="ExecutedAt">2024-08-03T17:35:50.374943-07:00</DT>
              <B N="Passed">false</B>
              <B N="Skipped">false</B>
              <B N="Inconclusive">false</B>
              <TS N="UserDuration">PT0.0031185S</TS>
              <TS N="FrameworkDuration">PT0.0039531S</TS>
              <Nil N="PluginData" />
              <Nil N="FrameworkData" />
            </Props>
          </Obj>
          <Obj RefId="417">
            <TNRef RefId="30" />
            <ToString>[-] Should have a unit test for Export-Data</ToString>
            <Props>
              <S N="Name">Should have a unit test for &lt;Name&gt;</S>
              <Obj N="Path" RefId="418">
                <TNRef RefId="28" />
                <LST>
                  <S>Quality for module</S>
                  <S>Should have a unit test for &lt;Name&gt;</S>
                </LST>
              </Obj>
              <Obj N="Data" RefId="419">
                <TNRef RefId="25" />
                <DCT>
                  <En>
                    <S N="Key">Name</S>
                    <S N="Value">Export-Data</S>
                  </En>
                </DCT>
              </Obj>
              <S N="ExpandedName">Should have a unit test for Export-Data</S>
              <S N="ExpandedPath">Quality for module.Should have a unit test for Export-Data</S>
              <S N="Result">Failed</S>
              <Obj N="ErrorRecord" RefId="420">
                <TNRef RefId="31" />
                <LST>
                  <Obj RefId="421">
                    <TNRef RefId="33" />
                    <ToString>Expected a value, but got $null or empty.</ToString>
                    <MS>
                      <S N="DisplayErrorMessage">Expected a value, but got $null or empty.</S>
                      <S N="DisplayStackTrace">at Get-ChildItem -Path 'tests\' -Recurse -Include "$Name.Tests.ps1" | Should -Not -BeNullOrEmpty, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:117_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:117</S>
                      <Obj N="Exception" RefId="422">
                        <TNRef RefId="60" />
                        <ToString>System.Exception: Expected a value, but got $null or empty.</ToString>
                        <Props>
                          <Nil N="TargetSite" />
                          <S N="Message">Expected a value, but got $null or empty.</S>
                          <Obj N="Data" RefId="423">
                            <TNRef RefId="35" />
                            <DCT />
                          </Obj>
                          <Nil N="InnerException" />
                          <Nil N="HelpLink" />
                          <Nil N="Source" />
                          <I32 N="HResult">-2146233088</I32>
                          <Nil N="StackTrace" />
                        </Props>
                      </Obj>
                      <Obj N="TargetObject" RefId="424">
                        <TNRef RefId="38" />
                        <DCT>
                          <En>
                            <S N="Key">Message</S>
                            <S N="Value">Expected a value, but got $null or empty.</S>
                          </En>
                          <En>
                            <S N="Key">File</S>
                            <S N="Value">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1</S>
                          </En>
                          <En>
                            <S N="Key">Line</S>
                            <S N="Value">117</S>
                          </En>
                          <En>
                            <S N="Key">LineText</S>
                            <S N="Value">        Get-ChildItem -Path 'tests\' -Recurse -Include "$Name.Tests.ps1" | Should -Not -BeNullOrEmpty</S>
                          </En>
                          <En>
                            <S N="Key">Terminating</S>
                            <B N="Value">true</B>
                          </En>
                          <En>
                            <S N="Key">ShouldResult</S>
                            <Obj N="Value" RefId="425">
                              <TNRef RefId="61" />
                              <ToString>Pester.ShouldResult</ToString>
                              <Props>
                                <B N="Succeeded">false</B>
                                <S N="FailureMessage">Expected a value, but got $null or empty.</S>
                                <Obj N="ExpectResult" RefId="426">
                                  <TNRef RefId="62" />
                                  <ToString>Expected: '$null or empty' Actual: $null Because: </ToString>
                                  <Props>
                                    <S N="Actual">$null</S>
                                    <S N="Expected">'$null or empty'</S>
                                    <S N="Because"></S>
                                  </Props>
                                </Obj>
                              </Props>
                            </Obj>
                          </En>
                        </DCT>
                      </Obj>
                      <S N="FullyQualifiedErrorId">PesterAssertionFailed</S>
                      <Obj N="InvocationInfo" RefId="427">
                        <TNRef RefId="37" />
                        <ToString>System.Management.Automation.InvocationInfo</ToString>
                        <Props>
                          <Nil N="MyCommand" />
                          <Obj N="BoundParameters" RefId="428">
                            <TNRef RefId="38" />
                            <DCT />
                          </Obj>
                          <Obj N="UnboundArguments" RefId="429">
                            <TNRef RefId="31" />
                            <LST />
                          </Obj>
                          <I32 N="ScriptLineNumber">8392</I32>
                          <I32 N="OffsetInLine">13</I32>
                          <I64 N="HistoryId">18</I64>
                          <S N="ScriptName">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1</S>
                          <S N="Line">            throw $errorRecord_x000D__x000A_</S>
                          <S N="Statement">throw $errorRecord</S>
                          <S N="PositionMessage">At C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1:8392 char:13_x000D__x000A_+             throw $errorRecord_x000D__x000A_+             ~~~~~~~~~~~~~~~~~~</S>
                          <S N="PSScriptRoot">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1</S>
                          <S N="PSCommandPath">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1</S>
                          <S N="InvocationName"></S>
                          <I32 N="PipelineLength">0</I32>
                          <I32 N="PipelinePosition">0</I32>
                          <B N="ExpectingInput">false</B>
                          <Obj N="CommandOrigin" RefId="430">
                            <TNRef RefId="39" />
                            <ToString>Internal</ToString>
                            <I32>1</I32>
                          </Obj>
                          <Nil N="DisplayScriptPosition" />
                        </Props>
                        <MS>
                          <Obj N="ParameterValues" RefId="431">
                            <TNRef RefId="25" />
                            <DCT />
                          </Obj>
                        </MS>
                      </Obj>
                      <I32 N="ErrorCategory_Category">8</I32>
                      <S N="ErrorCategory_Activity"></S>
                      <S N="ErrorCategory_Reason">Exception</S>
                      <S N="ErrorCategory_TargetName">System.Collections.Generic.Dictionary`2[System.String,System.Object]</S>
                      <S N="ErrorCategory_TargetType">Dictionary`2</S>
                      <S N="ErrorCategory_Message">InvalidResult: (System.Collections.…ring,System.Object]:Dictionary`2) [], Exception</S>
                      <B N="SerializeExtendedInfo">false</B>
                      <S N="ErrorDetails_ScriptStackTrace">at Invoke-Assertion, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 8392_x000D__x000A_at Should&lt;End&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 8328_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1: line 117_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2024_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1985_x000D__x000A_at Invoke-ScriptBlock, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2157_x000D__x000A_at Invoke-TestItem, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1199_x000D__x000A_at Invoke-Block, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 835_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 893_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2024_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1985_x000D__x000A_at Invoke-ScriptBlock, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2160_x000D__x000A_at Invoke-Block, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 940_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 893_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2024_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1985_x000D__x000A_at Invoke-ScriptBlock, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2160_x000D__x000A_at Invoke-Block, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 940_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1688_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.ps1: line 3_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 3260_x000D__x000A_at Invoke-InNewScriptScope, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 3267_x000D__x000A_at Run-Test, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1691_x000D__x000A_at Invoke-Test, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2512_x000D__x000A_at Invoke-Pester&lt;End&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 5110_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Sampler\0.118.1\tasks\Invoke-Pester.pester.build.ps1: line 906_x000D__x000A_at *Task, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 629_x000D__x000A_at *Task, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 601_x000D__x000A_at *Task, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 601_x000D__x000A_at &lt;ScriptBlock&gt;&lt;End&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 787_x000D__x000A_at &lt;ScriptBlock&gt;&lt;Begin&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\build.ps1: line 532_x000D__x000A_at &lt;ScriptBlock&gt;, &lt;No file&gt;: line 1</S>
                      <Nil N="PSMessageDetails" />
                    </MS>
                  </Obj>
                </LST>
              </Obj>
              <Nil N="StandardOutput" />
              <TS N="Duration">PT0.0085838S</TS>
              <S N="ItemType">Test</S>
              <S N="Id">116:5</S>
              <S N="GroupId">116:5</S>
              <SBK N="ScriptBlock">_x000D__x000A_        Get-ChildItem -Path 'tests\' -Recurse -Include "$Name.Tests.ps1" | Should -Not -BeNullOrEmpty_x000D__x000A_    </SBK>
              <Nil N="Tag" />
              <B N="Focus">false</B>
              <B N="Skip">false</B>
              <Ref N="Block" RefId="60" />
              <B N="First">false</B>
              <B N="Last">false</B>
              <B N="Include">false</B>
              <B N="Exclude">false</B>
              <B N="Explicit">false</B>
              <B N="ShouldRun">true</B>
              <I32 N="StartLine">116</I32>
              <B N="Executed">true</B>
              <DT N="ExecutedAt">2024-08-03T17:35:50.382049-07:00</DT>
              <B N="Passed">false</B>
              <B N="Skipped">false</B>
              <B N="Inconclusive">false</B>
              <TS N="UserDuration">PT0.0034422S</TS>
              <TS N="FrameworkDuration">PT0.0051416S</TS>
              <Nil N="PluginData" />
              <Nil N="FrameworkData" />
            </Props>
          </Obj>
          <Obj RefId="432">
            <TNRef RefId="30" />
            <ToString>[-] Should have a unit test for Export-EventLog</ToString>
            <Props>
              <S N="Name">Should have a unit test for &lt;Name&gt;</S>
              <Obj N="Path" RefId="433">
                <TNRef RefId="28" />
                <LST>
                  <S>Quality for module</S>
                  <S>Should have a unit test for &lt;Name&gt;</S>
                </LST>
              </Obj>
              <Obj N="Data" RefId="434">
                <TNRef RefId="25" />
                <DCT>
                  <En>
                    <S N="Key">Name</S>
                    <S N="Value">Export-EventLog</S>
                  </En>
                </DCT>
              </Obj>
              <S N="ExpandedName">Should have a unit test for Export-EventLog</S>
              <S N="ExpandedPath">Quality for module.Should have a unit test for Export-EventLog</S>
              <S N="Result">Failed</S>
              <Obj N="ErrorRecord" RefId="435">
                <TNRef RefId="31" />
                <LST>
                  <Obj RefId="436">
                    <TNRef RefId="33" />
                    <ToString>Expected a value, but got $null or empty.</ToString>
                    <MS>
                      <S N="DisplayErrorMessage">Expected a value, but got $null or empty.</S>
                      <S N="DisplayStackTrace">at Get-ChildItem -Path 'tests\' -Recurse -Include "$Name.Tests.ps1" | Should -Not -BeNullOrEmpty, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:117_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:117</S>
                      <Obj N="Exception" RefId="437">
                        <TNRef RefId="60" />
                        <ToString>System.Exception: Expected a value, but got $null or empty.</ToString>
                        <Props>
                          <Nil N="TargetSite" />
                          <S N="Message">Expected a value, but got $null or empty.</S>
                          <Obj N="Data" RefId="438">
                            <TNRef RefId="35" />
                            <DCT />
                          </Obj>
                          <Nil N="InnerException" />
                          <Nil N="HelpLink" />
                          <Nil N="Source" />
                          <I32 N="HResult">-2146233088</I32>
                          <Nil N="StackTrace" />
                        </Props>
                      </Obj>
                      <Obj N="TargetObject" RefId="439">
                        <TNRef RefId="38" />
                        <DCT>
                          <En>
                            <S N="Key">Message</S>
                            <S N="Value">Expected a value, but got $null or empty.</S>
                          </En>
                          <En>
                            <S N="Key">File</S>
                            <S N="Value">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1</S>
                          </En>
                          <En>
                            <S N="Key">Line</S>
                            <S N="Value">117</S>
                          </En>
                          <En>
                            <S N="Key">LineText</S>
                            <S N="Value">        Get-ChildItem -Path 'tests\' -Recurse -Include "$Name.Tests.ps1" | Should -Not -BeNullOrEmpty</S>
                          </En>
                          <En>
                            <S N="Key">Terminating</S>
                            <B N="Value">true</B>
                          </En>
                          <En>
                            <S N="Key">ShouldResult</S>
                            <Obj N="Value" RefId="440">
                              <TNRef RefId="61" />
                              <ToString>Pester.ShouldResult</ToString>
                              <Props>
                                <B N="Succeeded">false</B>
                                <S N="FailureMessage">Expected a value, but got $null or empty.</S>
                                <Obj N="ExpectResult" RefId="441">
                                  <TNRef RefId="62" />
                                  <ToString>Expected: '$null or empty' Actual: $null Because: </ToString>
                                  <Props>
                                    <S N="Actual">$null</S>
                                    <S N="Expected">'$null or empty'</S>
                                    <S N="Because"></S>
                                  </Props>
                                </Obj>
                              </Props>
                            </Obj>
                          </En>
                        </DCT>
                      </Obj>
                      <S N="FullyQualifiedErrorId">PesterAssertionFailed</S>
                      <Obj N="InvocationInfo" RefId="442">
                        <TNRef RefId="37" />
                        <ToString>System.Management.Automation.InvocationInfo</ToString>
                        <Props>
                          <Nil N="MyCommand" />
                          <Obj N="BoundParameters" RefId="443">
                            <TNRef RefId="38" />
                            <DCT />
                          </Obj>
                          <Obj N="UnboundArguments" RefId="444">
                            <TNRef RefId="31" />
                            <LST />
                          </Obj>
                          <I32 N="ScriptLineNumber">8392</I32>
                          <I32 N="OffsetInLine">13</I32>
                          <I64 N="HistoryId">18</I64>
                          <S N="ScriptName">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1</S>
                          <S N="Line">            throw $errorRecord_x000D__x000A_</S>
                          <S N="Statement">throw $errorRecord</S>
                          <S N="PositionMessage">At C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1:8392 char:13_x000D__x000A_+             throw $errorRecord_x000D__x000A_+             ~~~~~~~~~~~~~~~~~~</S>
                          <S N="PSScriptRoot">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1</S>
                          <S N="PSCommandPath">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1</S>
                          <S N="InvocationName"></S>
                          <I32 N="PipelineLength">0</I32>
                          <I32 N="PipelinePosition">0</I32>
                          <B N="ExpectingInput">false</B>
                          <Obj N="CommandOrigin" RefId="445">
                            <TNRef RefId="39" />
                            <ToString>Internal</ToString>
                            <I32>1</I32>
                          </Obj>
                          <Nil N="DisplayScriptPosition" />
                        </Props>
                        <MS>
                          <Obj N="ParameterValues" RefId="446">
                            <TNRef RefId="25" />
                            <DCT />
                          </Obj>
                        </MS>
                      </Obj>
                      <I32 N="ErrorCategory_Category">8</I32>
                      <S N="ErrorCategory_Activity"></S>
                      <S N="ErrorCategory_Reason">Exception</S>
                      <S N="ErrorCategory_TargetName">System.Collections.Generic.Dictionary`2[System.String,System.Object]</S>
                      <S N="ErrorCategory_TargetType">Dictionary`2</S>
                      <S N="ErrorCategory_Message">InvalidResult: (System.Collections.…ring,System.Object]:Dictionary`2) [], Exception</S>
                      <B N="SerializeExtendedInfo">false</B>
                      <S N="ErrorDetails_ScriptStackTrace">at Invoke-Assertion, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 8392_x000D__x000A_at Should&lt;End&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 8328_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1: line 117_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2024_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1985_x000D__x000A_at Invoke-ScriptBlock, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2157_x000D__x000A_at Invoke-TestItem, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1199_x000D__x000A_at Invoke-Block, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 835_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 893_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2024_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1985_x000D__x000A_at Invoke-ScriptBlock, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2160_x000D__x000A_at Invoke-Block, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 940_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 893_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2024_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1985_x000D__x000A_at Invoke-ScriptBlock, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2160_x000D__x000A_at Invoke-Block, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 940_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1688_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.ps1: line 3_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 3260_x000D__x000A_at Invoke-InNewScriptScope, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 3267_x000D__x000A_at Run-Test, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1691_x000D__x000A_at Invoke-Test, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2512_x000D__x000A_at Invoke-Pester&lt;End&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 5110_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Sampler\0.118.1\tasks\Invoke-Pester.pester.build.ps1: line 906_x000D__x000A_at *Task, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 629_x000D__x000A_at *Task, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 601_x000D__x000A_at *Task, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 601_x000D__x000A_at &lt;ScriptBlock&gt;&lt;End&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 787_x000D__x000A_at &lt;ScriptBlock&gt;&lt;Begin&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\build.ps1: line 532_x000D__x000A_at &lt;ScriptBlock&gt;, &lt;No file&gt;: line 1</S>
                      <Nil N="PSMessageDetails" />
                    </MS>
                  </Obj>
                </LST>
              </Obj>
              <Nil N="StandardOutput" />
              <TS N="Duration">PT0.0125721S</TS>
              <S N="ItemType">Test</S>
              <S N="Id">116:5</S>
              <S N="GroupId">116:5</S>
              <SBK N="ScriptBlock">_x000D__x000A_        Get-ChildItem -Path 'tests\' -Recurse -Include "$Name.Tests.ps1" | Should -Not -BeNullOrEmpty_x000D__x000A_    </SBK>
              <Nil N="Tag" />
              <B N="Focus">false</B>
              <B N="Skip">false</B>
              <Ref N="Block" RefId="60" />
              <B N="First">false</B>
              <B N="Last">false</B>
              <B N="Include">false</B>
              <B N="Exclude">false</B>
              <B N="Explicit">false</B>
              <B N="ShouldRun">true</B>
              <I32 N="StartLine">116</I32>
              <B N="Executed">true</B>
              <DT N="ExecutedAt">2024-08-03T17:35:50.3906813-07:00</DT>
              <B N="Passed">false</B>
              <B N="Skipped">false</B>
              <B N="Inconclusive">false</B>
              <TS N="UserDuration">PT0.0078555S</TS>
              <TS N="FrameworkDuration">PT0.0047166S</TS>
              <Nil N="PluginData" />
              <Nil N="FrameworkData" />
            </Props>
          </Obj>
          <Obj RefId="447">
            <TNRef RefId="30" />
            <ToString>[-] Should have a unit test for Handle-Error</ToString>
            <Props>
              <S N="Name">Should have a unit test for &lt;Name&gt;</S>
              <Obj N="Path" RefId="448">
                <TNRef RefId="28" />
                <LST>
                  <S>Quality for module</S>
                  <S>Should have a unit test for &lt;Name&gt;</S>
                </LST>
              </Obj>
              <Obj N="Data" RefId="449">
                <TNRef RefId="25" />
                <DCT>
                  <En>
                    <S N="Key">Name</S>
                    <S N="Value">Handle-Error</S>
                  </En>
                </DCT>
              </Obj>
              <S N="ExpandedName">Should have a unit test for Handle-Error</S>
              <S N="ExpandedPath">Quality for module.Should have a unit test for Handle-Error</S>
              <S N="Result">Failed</S>
              <Obj N="ErrorRecord" RefId="450">
                <TNRef RefId="31" />
                <LST>
                  <Obj RefId="451">
                    <TNRef RefId="33" />
                    <ToString>Expected a value, but got $null or empty.</ToString>
                    <MS>
                      <S N="DisplayErrorMessage">Expected a value, but got $null or empty.</S>
                      <S N="DisplayStackTrace">at Get-ChildItem -Path 'tests\' -Recurse -Include "$Name.Tests.ps1" | Should -Not -BeNullOrEmpty, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:117_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:117</S>
                      <Obj N="Exception" RefId="452">
                        <TNRef RefId="60" />
                        <ToString>System.Exception: Expected a value, but got $null or empty.</ToString>
                        <Props>
                          <Nil N="TargetSite" />
                          <S N="Message">Expected a value, but got $null or empty.</S>
                          <Obj N="Data" RefId="453">
                            <TNRef RefId="35" />
                            <DCT />
                          </Obj>
                          <Nil N="InnerException" />
                          <Nil N="HelpLink" />
                          <Nil N="Source" />
                          <I32 N="HResult">-2146233088</I32>
                          <Nil N="StackTrace" />
                        </Props>
                      </Obj>
                      <Obj N="TargetObject" RefId="454">
                        <TNRef RefId="38" />
                        <DCT>
                          <En>
                            <S N="Key">Message</S>
                            <S N="Value">Expected a value, but got $null or empty.</S>
                          </En>
                          <En>
                            <S N="Key">File</S>
                            <S N="Value">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1</S>
                          </En>
                          <En>
                            <S N="Key">Line</S>
                            <S N="Value">117</S>
                          </En>
                          <En>
                            <S N="Key">LineText</S>
                            <S N="Value">        Get-ChildItem -Path 'tests\' -Recurse -Include "$Name.Tests.ps1" | Should -Not -BeNullOrEmpty</S>
                          </En>
                          <En>
                            <S N="Key">Terminating</S>
                            <B N="Value">true</B>
                          </En>
                          <En>
                            <S N="Key">ShouldResult</S>
                            <Obj N="Value" RefId="455">
                              <TNRef RefId="61" />
                              <ToString>Pester.ShouldResult</ToString>
                              <Props>
                                <B N="Succeeded">false</B>
                                <S N="FailureMessage">Expected a value, but got $null or empty.</S>
                                <Obj N="ExpectResult" RefId="456">
                                  <TNRef RefId="62" />
                                  <ToString>Expected: '$null or empty' Actual: $null Because: </ToString>
                                  <Props>
                                    <S N="Actual">$null</S>
                                    <S N="Expected">'$null or empty'</S>
                                    <S N="Because"></S>
                                  </Props>
                                </Obj>
                              </Props>
                            </Obj>
                          </En>
                        </DCT>
                      </Obj>
                      <S N="FullyQualifiedErrorId">PesterAssertionFailed</S>
                      <Obj N="InvocationInfo" RefId="457">
                        <TNRef RefId="37" />
                        <ToString>System.Management.Automation.InvocationInfo</ToString>
                        <Props>
                          <Nil N="MyCommand" />
                          <Obj N="BoundParameters" RefId="458">
                            <TNRef RefId="38" />
                            <DCT />
                          </Obj>
                          <Obj N="UnboundArguments" RefId="459">
                            <TNRef RefId="31" />
                            <LST />
                          </Obj>
                          <I32 N="ScriptLineNumber">8392</I32>
                          <I32 N="OffsetInLine">13</I32>
                          <I64 N="HistoryId">18</I64>
                          <S N="ScriptName">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1</S>
                          <S N="Line">            throw $errorRecord_x000D__x000A_</S>
                          <S N="Statement">throw $errorRecord</S>
                          <S N="PositionMessage">At C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1:8392 char:13_x000D__x000A_+             throw $errorRecord_x000D__x000A_+             ~~~~~~~~~~~~~~~~~~</S>
                          <S N="PSScriptRoot">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1</S>
                          <S N="PSCommandPath">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1</S>
                          <S N="InvocationName"></S>
                          <I32 N="PipelineLength">0</I32>
                          <I32 N="PipelinePosition">0</I32>
                          <B N="ExpectingInput">false</B>
                          <Obj N="CommandOrigin" RefId="460">
                            <TNRef RefId="39" />
                            <ToString>Internal</ToString>
                            <I32>1</I32>
                          </Obj>
                          <Nil N="DisplayScriptPosition" />
                        </Props>
                        <MS>
                          <Obj N="ParameterValues" RefId="461">
                            <TNRef RefId="25" />
                            <DCT />
                          </Obj>
                        </MS>
                      </Obj>
                      <I32 N="ErrorCategory_Category">8</I32>
                      <S N="ErrorCategory_Activity"></S>
                      <S N="ErrorCategory_Reason">Exception</S>
                      <S N="ErrorCategory_TargetName">System.Collections.Generic.Dictionary`2[System.String,System.Object]</S>
                      <S N="ErrorCategory_TargetType">Dictionary`2</S>
                      <S N="ErrorCategory_Message">InvalidResult: (System.Collections.…ring,System.Object]:Dictionary`2) [], Exception</S>
                      <B N="SerializeExtendedInfo">false</B>
                      <S N="ErrorDetails_ScriptStackTrace">at Invoke-Assertion, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 8392_x000D__x000A_at Should&lt;End&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 8328_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1: line 117_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2024_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1985_x000D__x000A_at Invoke-ScriptBlock, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2157_x000D__x000A_at Invoke-TestItem, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1199_x000D__x000A_at Invoke-Block, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 835_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 893_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2024_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1985_x000D__x000A_at Invoke-ScriptBlock, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2160_x000D__x000A_at Invoke-Block, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 940_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 893_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2024_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1985_x000D__x000A_at Invoke-ScriptBlock, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2160_x000D__x000A_at Invoke-Block, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 940_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1688_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.ps1: line 3_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 3260_x000D__x000A_at Invoke-InNewScriptScope, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 3267_x000D__x000A_at Run-Test, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1691_x000D__x000A_at Invoke-Test, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2512_x000D__x000A_at Invoke-Pester&lt;End&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 5110_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Sampler\0.118.1\tasks\Invoke-Pester.pester.build.ps1: line 906_x000D__x000A_at *Task, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 629_x000D__x000A_at *Task, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 601_x000D__x000A_at *Task, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 601_x000D__x000A_at &lt;ScriptBlock&gt;&lt;End&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 787_x000D__x000A_at &lt;ScriptBlock&gt;&lt;Begin&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\build.ps1: line 532_x000D__x000A_at &lt;ScriptBlock&gt;, &lt;No file&gt;: line 1</S>
                      <Nil N="PSMessageDetails" />
                    </MS>
                  </Obj>
                </LST>
              </Obj>
              <Nil N="StandardOutput" />
              <TS N="Duration">PT0.0077834S</TS>
              <S N="ItemType">Test</S>
              <S N="Id">116:5</S>
              <S N="GroupId">116:5</S>
              <SBK N="ScriptBlock">_x000D__x000A_        Get-ChildItem -Path 'tests\' -Recurse -Include "$Name.Tests.ps1" | Should -Not -BeNullOrEmpty_x000D__x000A_    </SBK>
              <Nil N="Tag" />
              <B N="Focus">false</B>
              <B N="Skip">false</B>
              <Ref N="Block" RefId="60" />
              <B N="First">false</B>
              <B N="Last">false</B>
              <B N="Include">false</B>
              <B N="Exclude">false</B>
              <B N="Explicit">false</B>
              <B N="ShouldRun">true</B>
              <I32 N="StartLine">116</I32>
              <B N="Executed">true</B>
              <DT N="ExecutedAt">2024-08-03T17:35:50.4032789-07:00</DT>
              <B N="Passed">false</B>
              <B N="Skipped">false</B>
              <B N="Inconclusive">false</B>
              <TS N="UserDuration">PT0.0032151S</TS>
              <TS N="FrameworkDuration">PT0.0045683S</TS>
              <Nil N="PluginData" />
              <Nil N="FrameworkData" />
            </Props>
          </Obj>
          <Obj RefId="462">
            <TNRef RefId="30" />
            <ToString>[-] Should have a unit test for Initialize-CSVDirectory</ToString>
            <Props>
              <S N="Name">Should have a unit test for &lt;Name&gt;</S>
              <Obj N="Path" RefId="463">
                <TNRef RefId="28" />
                <LST>
                  <S>Quality for module</S>
                  <S>Should have a unit test for &lt;Name&gt;</S>
                </LST>
              </Obj>
              <Obj N="Data" RefId="464">
                <TNRef RefId="25" />
                <DCT>
                  <En>
                    <S N="Key">Name</S>
                    <S N="Value">Initialize-CSVDirectory</S>
                  </En>
                </DCT>
              </Obj>
              <S N="ExpandedName">Should have a unit test for Initialize-CSVDirectory</S>
              <S N="ExpandedPath">Quality for module.Should have a unit test for Initialize-CSVDirectory</S>
              <S N="Result">Failed</S>
              <Obj N="ErrorRecord" RefId="465">
                <TNRef RefId="31" />
                <LST>
                  <Obj RefId="466">
                    <TNRef RefId="33" />
                    <ToString>Expected a value, but got $null or empty.</ToString>
                    <MS>
                      <S N="DisplayErrorMessage">Expected a value, but got $null or empty.</S>
                      <S N="DisplayStackTrace">at Get-ChildItem -Path 'tests\' -Recurse -Include "$Name.Tests.ps1" | Should -Not -BeNullOrEmpty, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:117_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:117</S>
                      <Obj N="Exception" RefId="467">
                        <TNRef RefId="60" />
                        <ToString>System.Exception: Expected a value, but got $null or empty.</ToString>
                        <Props>
                          <Nil N="TargetSite" />
                          <S N="Message">Expected a value, but got $null or empty.</S>
                          <Obj N="Data" RefId="468">
                            <TNRef RefId="35" />
                            <DCT />
                          </Obj>
                          <Nil N="InnerException" />
                          <Nil N="HelpLink" />
                          <Nil N="Source" />
                          <I32 N="HResult">-2146233088</I32>
                          <Nil N="StackTrace" />
                        </Props>
                      </Obj>
                      <Obj N="TargetObject" RefId="469">
                        <TNRef RefId="38" />
                        <DCT>
                          <En>
                            <S N="Key">Message</S>
                            <S N="Value">Expected a value, but got $null or empty.</S>
                          </En>
                          <En>
                            <S N="Key">File</S>
                            <S N="Value">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1</S>
                          </En>
                          <En>
                            <S N="Key">Line</S>
                            <S N="Value">117</S>
                          </En>
                          <En>
                            <S N="Key">LineText</S>
                            <S N="Value">        Get-ChildItem -Path 'tests\' -Recurse -Include "$Name.Tests.ps1" | Should -Not -BeNullOrEmpty</S>
                          </En>
                          <En>
                            <S N="Key">Terminating</S>
                            <B N="Value">true</B>
                          </En>
                          <En>
                            <S N="Key">ShouldResult</S>
                            <Obj N="Value" RefId="470">
                              <TNRef RefId="61" />
                              <ToString>Pester.ShouldResult</ToString>
                              <Props>
                                <B N="Succeeded">false</B>
                                <S N="FailureMessage">Expected a value, but got $null or empty.</S>
                                <Obj N="ExpectResult" RefId="471">
                                  <TNRef RefId="62" />
                                  <ToString>Expected: '$null or empty' Actual: $null Because: </ToString>
                                  <Props>
                                    <S N="Actual">$null</S>
                                    <S N="Expected">'$null or empty'</S>
                                    <S N="Because"></S>
                                  </Props>
                                </Obj>
                              </Props>
                            </Obj>
                          </En>
                        </DCT>
                      </Obj>
                      <S N="FullyQualifiedErrorId">PesterAssertionFailed</S>
                      <Obj N="InvocationInfo" RefId="472">
                        <TNRef RefId="37" />
                        <ToString>System.Management.Automation.InvocationInfo</ToString>
                        <Props>
                          <Nil N="MyCommand" />
                          <Obj N="BoundParameters" RefId="473">
                            <TNRef RefId="38" />
                            <DCT />
                          </Obj>
                          <Obj N="UnboundArguments" RefId="474">
                            <TNRef RefId="31" />
                            <LST />
                          </Obj>
                          <I32 N="ScriptLineNumber">8392</I32>
                          <I32 N="OffsetInLine">13</I32>
                          <I64 N="HistoryId">18</I64>
                          <S N="ScriptName">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1</S>
                          <S N="Line">            throw $errorRecord_x000D__x000A_</S>
                          <S N="Statement">throw $errorRecord</S>
                          <S N="PositionMessage">At C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1:8392 char:13_x000D__x000A_+             throw $errorRecord_x000D__x000A_+             ~~~~~~~~~~~~~~~~~~</S>
                          <S N="PSScriptRoot">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1</S>
                          <S N="PSCommandPath">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1</S>
                          <S N="InvocationName"></S>
                          <I32 N="PipelineLength">0</I32>
                          <I32 N="PipelinePosition">0</I32>
                          <B N="ExpectingInput">false</B>
                          <Obj N="CommandOrigin" RefId="475">
                            <TNRef RefId="39" />
                            <ToString>Internal</ToString>
                            <I32>1</I32>
                          </Obj>
                          <Nil N="DisplayScriptPosition" />
                        </Props>
                        <MS>
                          <Obj N="ParameterValues" RefId="476">
                            <TNRef RefId="25" />
                            <DCT />
                          </Obj>
                        </MS>
                      </Obj>
                      <I32 N="ErrorCategory_Category">8</I32>
                      <S N="ErrorCategory_Activity"></S>
                      <S N="ErrorCategory_Reason">Exception</S>
                      <S N="ErrorCategory_TargetName">System.Collections.Generic.Dictionary`2[System.String,System.Object]</S>
                      <S N="ErrorCategory_TargetType">Dictionary`2</S>
                      <S N="ErrorCategory_Message">InvalidResult: (System.Collections.…ring,System.Object]:Dictionary`2) [], Exception</S>
                      <B N="SerializeExtendedInfo">false</B>
                      <S N="ErrorDetails_ScriptStackTrace">at Invoke-Assertion, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 8392_x000D__x000A_at Should&lt;End&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 8328_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1: line 117_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2024_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1985_x000D__x000A_at Invoke-ScriptBlock, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2157_x000D__x000A_at Invoke-TestItem, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1199_x000D__x000A_at Invoke-Block, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 835_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 893_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2024_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1985_x000D__x000A_at Invoke-ScriptBlock, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2160_x000D__x000A_at Invoke-Block, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 940_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 893_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2024_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1985_x000D__x000A_at Invoke-ScriptBlock, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2160_x000D__x000A_at Invoke-Block, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 940_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1688_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.ps1: line 3_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 3260_x000D__x000A_at Invoke-InNewScriptScope, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 3267_x000D__x000A_at Run-Test, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1691_x000D__x000A_at Invoke-Test, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2512_x000D__x000A_at Invoke-Pester&lt;End&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 5110_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Sampler\0.118.1\tasks\Invoke-Pester.pester.build.ps1: line 906_x000D__x000A_at *Task, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 629_x000D__x000A_at *Task, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 601_x000D__x000A_at *Task, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 601_x000D__x000A_at &lt;ScriptBlock&gt;&lt;End&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 787_x000D__x000A_at &lt;ScriptBlock&gt;&lt;Begin&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\build.ps1: line 532_x000D__x000A_at &lt;ScriptBlock&gt;, &lt;No file&gt;: line 1</S>
                      <Nil N="PSMessageDetails" />
                    </MS>
                  </Obj>
                </LST>
              </Obj>
              <Nil N="StandardOutput" />
              <TS N="Duration">PT0.0078094S</TS>
              <S N="ItemType">Test</S>
              <S N="Id">116:5</S>
              <S N="GroupId">116:5</S>
              <SBK N="ScriptBlock">_x000D__x000A_        Get-ChildItem -Path 'tests\' -Recurse -Include "$Name.Tests.ps1" | Should -Not -BeNullOrEmpty_x000D__x000A_    </SBK>
              <Nil N="Tag" />
              <B N="Focus">false</B>
              <B N="Skip">false</B>
              <Ref N="Block" RefId="60" />
              <B N="First">false</B>
              <B N="Last">false</B>
              <B N="Include">false</B>
              <B N="Exclude">false</B>
              <B N="Explicit">false</B>
              <B N="ShouldRun">true</B>
              <I32 N="StartLine">116</I32>
              <B N="Executed">true</B>
              <DT N="ExecutedAt">2024-08-03T17:35:50.4110921-07:00</DT>
              <B N="Passed">false</B>
              <B N="Skipped">false</B>
              <B N="Inconclusive">false</B>
              <TS N="UserDuration">PT0.0031729S</TS>
              <TS N="FrameworkDuration">PT0.0046365S</TS>
              <Nil N="PluginData" />
              <Nil N="FrameworkData" />
            </Props>
          </Obj>
          <Obj RefId="477">
            <TNRef RefId="30" />
            <ToString>[-] Should have a unit test for Initialize-ScriptAndLogging</ToString>
            <Props>
              <S N="Name">Should have a unit test for &lt;Name&gt;</S>
              <Obj N="Path" RefId="478">
                <TNRef RefId="28" />
                <LST>
                  <S>Quality for module</S>
                  <S>Should have a unit test for &lt;Name&gt;</S>
                </LST>
              </Obj>
              <Obj N="Data" RefId="479">
                <TNRef RefId="25" />
                <DCT>
                  <En>
                    <S N="Key">Name</S>
                    <S N="Value">Initialize-ScriptAndLogging</S>
                  </En>
                </DCT>
              </Obj>
              <S N="ExpandedName">Should have a unit test for Initialize-ScriptAndLogging</S>
              <S N="ExpandedPath">Quality for module.Should have a unit test for Initialize-ScriptAndLogging</S>
              <S N="Result">Failed</S>
              <Obj N="ErrorRecord" RefId="480">
                <TNRef RefId="31" />
                <LST>
                  <Obj RefId="481">
                    <TNRef RefId="33" />
                    <ToString>Expected a value, but got $null or empty.</ToString>
                    <MS>
                      <S N="DisplayErrorMessage">Expected a value, but got $null or empty.</S>
                      <S N="DisplayStackTrace">at Get-ChildItem -Path 'tests\' -Recurse -Include "$Name.Tests.ps1" | Should -Not -BeNullOrEmpty, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:117_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:117</S>
                      <Obj N="Exception" RefId="482">
                        <TNRef RefId="60" />
                        <ToString>System.Exception: Expected a value, but got $null or empty.</ToString>
                        <Props>
                          <Nil N="TargetSite" />
                          <S N="Message">Expected a value, but got $null or empty.</S>
                          <Obj N="Data" RefId="483">
                            <TNRef RefId="35" />
                            <DCT />
                          </Obj>
                          <Nil N="InnerException" />
                          <Nil N="HelpLink" />
                          <Nil N="Source" />
                          <I32 N="HResult">-2146233088</I32>
                          <Nil N="StackTrace" />
                        </Props>
                      </Obj>
                      <Obj N="TargetObject" RefId="484">
                        <TNRef RefId="38" />
                        <DCT>
                          <En>
                            <S N="Key">Message</S>
                            <S N="Value">Expected a value, but got $null or empty.</S>
                          </En>
                          <En>
                            <S N="Key">File</S>
                            <S N="Value">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1</S>
                          </En>
                          <En>
                            <S N="Key">Line</S>
                            <S N="Value">117</S>
                          </En>
                          <En>
                            <S N="Key">LineText</S>
                            <S N="Value">        Get-ChildItem -Path 'tests\' -Recurse -Include "$Name.Tests.ps1" | Should -Not -BeNullOrEmpty</S>
                          </En>
                          <En>
                            <S N="Key">Terminating</S>
                            <B N="Value">true</B>
                          </En>
                          <En>
                            <S N="Key">ShouldResult</S>
                            <Obj N="Value" RefId="485">
                              <TNRef RefId="61" />
                              <ToString>Pester.ShouldResult</ToString>
                              <Props>
                                <B N="Succeeded">false</B>
                                <S N="FailureMessage">Expected a value, but got $null or empty.</S>
                                <Obj N="ExpectResult" RefId="486">
                                  <TNRef RefId="62" />
                                  <ToString>Expected: '$null or empty' Actual: $null Because: </ToString>
                                  <Props>
                                    <S N="Actual">$null</S>
                                    <S N="Expected">'$null or empty'</S>
                                    <S N="Because"></S>
                                  </Props>
                                </Obj>
                              </Props>
                            </Obj>
                          </En>
                        </DCT>
                      </Obj>
                      <S N="FullyQualifiedErrorId">PesterAssertionFailed</S>
                      <Obj N="InvocationInfo" RefId="487">
                        <TNRef RefId="37" />
                        <ToString>System.Management.Automation.InvocationInfo</ToString>
                        <Props>
                          <Nil N="MyCommand" />
                          <Obj N="BoundParameters" RefId="488">
                            <TNRef RefId="38" />
                            <DCT />
                          </Obj>
                          <Obj N="UnboundArguments" RefId="489">
                            <TNRef RefId="31" />
                            <LST />
                          </Obj>
                          <I32 N="ScriptLineNumber">8392</I32>
                          <I32 N="OffsetInLine">13</I32>
                          <I64 N="HistoryId">18</I64>
                          <S N="ScriptName">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1</S>
                          <S N="Line">            throw $errorRecord_x000D__x000A_</S>
                          <S N="Statement">throw $errorRecord</S>
                          <S N="PositionMessage">At C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1:8392 char:13_x000D__x000A_+             throw $errorRecord_x000D__x000A_+             ~~~~~~~~~~~~~~~~~~</S>
                          <S N="PSScriptRoot">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1</S>
                          <S N="PSCommandPath">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1</S>
                          <S N="InvocationName"></S>
                          <I32 N="PipelineLength">0</I32>
                          <I32 N="PipelinePosition">0</I32>
                          <B N="ExpectingInput">false</B>
                          <Obj N="CommandOrigin" RefId="490">
                            <TNRef RefId="39" />
                            <ToString>Internal</ToString>
                            <I32>1</I32>
                          </Obj>
                          <Nil N="DisplayScriptPosition" />
                        </Props>
                        <MS>
                          <Obj N="ParameterValues" RefId="491">
                            <TNRef RefId="25" />
                            <DCT />
                          </Obj>
                        </MS>
                      </Obj>
                      <I32 N="ErrorCategory_Category">8</I32>
                      <S N="ErrorCategory_Activity"></S>
                      <S N="ErrorCategory_Reason">Exception</S>
                      <S N="ErrorCategory_TargetName">System.Collections.Generic.Dictionary`2[System.String,System.Object]</S>
                      <S N="ErrorCategory_TargetType">Dictionary`2</S>
                      <S N="ErrorCategory_Message">InvalidResult: (System.Collections.…ring,System.Object]:Dictionary`2) [], Exception</S>
                      <B N="SerializeExtendedInfo">false</B>
                      <S N="ErrorDetails_ScriptStackTrace">at Invoke-Assertion, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 8392_x000D__x000A_at Should&lt;End&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 8328_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1: line 117_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2024_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1985_x000D__x000A_at Invoke-ScriptBlock, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2157_x000D__x000A_at Invoke-TestItem, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1199_x000D__x000A_at Invoke-Block, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 835_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 893_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2024_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1985_x000D__x000A_at Invoke-ScriptBlock, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2160_x000D__x000A_at Invoke-Block, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 940_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 893_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2024_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1985_x000D__x000A_at Invoke-ScriptBlock, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2160_x000D__x000A_at Invoke-Block, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 940_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1688_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.ps1: line 3_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 3260_x000D__x000A_at Invoke-InNewScriptScope, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 3267_x000D__x000A_at Run-Test, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1691_x000D__x000A_at Invoke-Test, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2512_x000D__x000A_at Invoke-Pester&lt;End&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 5110_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Sampler\0.118.1\tasks\Invoke-Pester.pester.build.ps1: line 906_x000D__x000A_at *Task, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 629_x000D__x000A_at *Task, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 601_x000D__x000A_at *Task, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 601_x000D__x000A_at &lt;ScriptBlock&gt;&lt;End&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 787_x000D__x000A_at &lt;ScriptBlock&gt;&lt;Begin&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\build.ps1: line 532_x000D__x000A_at &lt;ScriptBlock&gt;, &lt;No file&gt;: line 1</S>
                      <Nil N="PSMessageDetails" />
                    </MS>
                  </Obj>
                </LST>
              </Obj>
              <Nil N="StandardOutput" />
              <TS N="Duration">PT0.0084693S</TS>
              <S N="ItemType">Test</S>
              <S N="Id">116:5</S>
              <S N="GroupId">116:5</S>
              <SBK N="ScriptBlock">_x000D__x000A_        Get-ChildItem -Path 'tests\' -Recurse -Include "$Name.Tests.ps1" | Should -Not -BeNullOrEmpty_x000D__x000A_    </SBK>
              <Nil N="Tag" />
              <B N="Focus">false</B>
              <B N="Skip">false</B>
              <Ref N="Block" RefId="60" />
              <B N="First">false</B>
              <B N="Last">false</B>
              <B N="Include">false</B>
              <B N="Exclude">false</B>
              <B N="Explicit">false</B>
              <B N="ShouldRun">true</B>
              <I32 N="StartLine">116</I32>
              <B N="Executed">true</B>
              <DT N="ExecutedAt">2024-08-03T17:35:50.4189392-07:00</DT>
              <B N="Passed">false</B>
              <B N="Skipped">false</B>
              <B N="Inconclusive">false</B>
              <TS N="UserDuration">PT0.0034732S</TS>
              <TS N="FrameworkDuration">PT0.0049961S</TS>
              <Nil N="PluginData" />
              <Nil N="FrameworkData" />
            </Props>
          </Obj>
          <Obj RefId="492">
            <TNRef RefId="30" />
            <ToString>[-] Should have a unit test for Log-And-Execute-Step</ToString>
            <Props>
              <S N="Name">Should have a unit test for &lt;Name&gt;</S>
              <Obj N="Path" RefId="493">
                <TNRef RefId="28" />
                <LST>
                  <S>Quality for module</S>
                  <S>Should have a unit test for &lt;Name&gt;</S>
                </LST>
              </Obj>
              <Obj N="Data" RefId="494">
                <TNRef RefId="25" />
                <DCT>
                  <En>
                    <S N="Key">Name</S>
                    <S N="Value">Log-And-Execute-Step</S>
                  </En>
                </DCT>
              </Obj>
              <S N="ExpandedName">Should have a unit test for Log-And-Execute-Step</S>
              <S N="ExpandedPath">Quality for module.Should have a unit test for Log-And-Execute-Step</S>
              <S N="Result">Failed</S>
              <Obj N="ErrorRecord" RefId="495">
                <TNRef RefId="31" />
                <LST>
                  <Obj RefId="496">
                    <TNRef RefId="33" />
                    <ToString>Expected a value, but got $null or empty.</ToString>
                    <MS>
                      <S N="DisplayErrorMessage">Expected a value, but got $null or empty.</S>
                      <S N="DisplayStackTrace">at Get-ChildItem -Path 'tests\' -Recurse -Include "$Name.Tests.ps1" | Should -Not -BeNullOrEmpty, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:117_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:117</S>
                      <Obj N="Exception" RefId="497">
                        <TNRef RefId="60" />
                        <ToString>System.Exception: Expected a value, but got $null or empty.</ToString>
                        <Props>
                          <Nil N="TargetSite" />
                          <S N="Message">Expected a value, but got $null or empty.</S>
                          <Obj N="Data" RefId="498">
                            <TNRef RefId="35" />
                            <DCT />
                          </Obj>
                          <Nil N="InnerException" />
                          <Nil N="HelpLink" />
                          <Nil N="Source" />
                          <I32 N="HResult">-2146233088</I32>
                          <Nil N="StackTrace" />
                        </Props>
                      </Obj>
                      <Obj N="TargetObject" RefId="499">
                        <TNRef RefId="38" />
                        <DCT>
                          <En>
                            <S N="Key">Message</S>
                            <S N="Value">Expected a value, but got $null or empty.</S>
                          </En>
                          <En>
                            <S N="Key">File</S>
                            <S N="Value">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1</S>
                          </En>
                          <En>
                            <S N="Key">Line</S>
                            <S N="Value">117</S>
                          </En>
                          <En>
                            <S N="Key">LineText</S>
                            <S N="Value">        Get-ChildItem -Path 'tests\' -Recurse -Include "$Name.Tests.ps1" | Should -Not -BeNullOrEmpty</S>
                          </En>
                          <En>
                            <S N="Key">Terminating</S>
                            <B N="Value">true</B>
                          </En>
                          <En>
                            <S N="Key">ShouldResult</S>
                            <Obj N="Value" RefId="500">
                              <TNRef RefId="61" />
                              <ToString>Pester.ShouldResult</ToString>
                              <Props>
                                <B N="Succeeded">false</B>
                                <S N="FailureMessage">Expected a value, but got $null or empty.</S>
                                <Obj N="ExpectResult" RefId="501">
                                  <TNRef RefId="62" />
                                  <ToString>Expected: '$null or empty' Actual: $null Because: </ToString>
                                  <Props>
                                    <S N="Actual">$null</S>
                                    <S N="Expected">'$null or empty'</S>
                                    <S N="Because"></S>
                                  </Props>
                                </Obj>
                              </Props>
                            </Obj>
                          </En>
                        </DCT>
                      </Obj>
                      <S N="FullyQualifiedErrorId">PesterAssertionFailed</S>
                      <Obj N="InvocationInfo" RefId="502">
                        <TNRef RefId="37" />
                        <ToString>System.Management.Automation.InvocationInfo</ToString>
                        <Props>
                          <Nil N="MyCommand" />
                          <Obj N="BoundParameters" RefId="503">
                            <TNRef RefId="38" />
                            <DCT />
                          </Obj>
                          <Obj N="UnboundArguments" RefId="504">
                            <TNRef RefId="31" />
                            <LST />
                          </Obj>
                          <I32 N="ScriptLineNumber">8392</I32>
                          <I32 N="OffsetInLine">13</I32>
                          <I64 N="HistoryId">18</I64>
                          <S N="ScriptName">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1</S>
                          <S N="Line">            throw $errorRecord_x000D__x000A_</S>
                          <S N="Statement">throw $errorRecord</S>
                          <S N="PositionMessage">At C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1:8392 char:13_x000D__x000A_+             throw $errorRecord_x000D__x000A_+             ~~~~~~~~~~~~~~~~~~</S>
                          <S N="PSScriptRoot">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1</S>
                          <S N="PSCommandPath">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1</S>
                          <S N="InvocationName"></S>
                          <I32 N="PipelineLength">0</I32>
                          <I32 N="PipelinePosition">0</I32>
                          <B N="ExpectingInput">false</B>
                          <Obj N="CommandOrigin" RefId="505">
                            <TNRef RefId="39" />
                            <ToString>Internal</ToString>
                            <I32>1</I32>
                          </Obj>
                          <Nil N="DisplayScriptPosition" />
                        </Props>
                        <MS>
                          <Obj N="ParameterValues" RefId="506">
                            <TNRef RefId="25" />
                            <DCT />
                          </Obj>
                        </MS>
                      </Obj>
                      <I32 N="ErrorCategory_Category">8</I32>
                      <S N="ErrorCategory_Activity"></S>
                      <S N="ErrorCategory_Reason">Exception</S>
                      <S N="ErrorCategory_TargetName">System.Collections.Generic.Dictionary`2[System.String,System.Object]</S>
                      <S N="ErrorCategory_TargetType">Dictionary`2</S>
                      <S N="ErrorCategory_Message">InvalidResult: (System.Collections.…ring,System.Object]:Dictionary`2) [], Exception</S>
                      <B N="SerializeExtendedInfo">false</B>
                      <S N="ErrorDetails_ScriptStackTrace">at Invoke-Assertion, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 8392_x000D__x000A_at Should&lt;End&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 8328_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1: line 117_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2024_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1985_x000D__x000A_at Invoke-ScriptBlock, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2157_x000D__x000A_at Invoke-TestItem, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1199_x000D__x000A_at Invoke-Block, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 835_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 893_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2024_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1985_x000D__x000A_at Invoke-ScriptBlock, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2160_x000D__x000A_at Invoke-Block, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 940_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 893_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2024_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1985_x000D__x000A_at Invoke-ScriptBlock, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2160_x000D__x000A_at Invoke-Block, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 940_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1688_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.ps1: line 3_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 3260_x000D__x000A_at Invoke-InNewScriptScope, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 3267_x000D__x000A_at Run-Test, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1691_x000D__x000A_at Invoke-Test, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2512_x000D__x000A_at Invoke-Pester&lt;End&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 5110_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Sampler\0.118.1\tasks\Invoke-Pester.pester.build.ps1: line 906_x000D__x000A_at *Task, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 629_x000D__x000A_at *Task, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 601_x000D__x000A_at *Task, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 601_x000D__x000A_at &lt;ScriptBlock&gt;&lt;End&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 787_x000D__x000A_at &lt;ScriptBlock&gt;&lt;Begin&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\build.ps1: line 532_x000D__x000A_at &lt;ScriptBlock&gt;, &lt;No file&gt;: line 1</S>
                      <Nil N="PSMessageDetails" />
                    </MS>
                  </Obj>
                </LST>
              </Obj>
              <Nil N="StandardOutput" />
              <TS N="Duration">PT0.0087145S</TS>
              <S N="ItemType">Test</S>
              <S N="Id">116:5</S>
              <S N="GroupId">116:5</S>
              <SBK N="ScriptBlock">_x000D__x000A_        Get-ChildItem -Path 'tests\' -Recurse -Include "$Name.Tests.ps1" | Should -Not -BeNullOrEmpty_x000D__x000A_    </SBK>
              <Nil N="Tag" />
              <B N="Focus">false</B>
              <B N="Skip">false</B>
              <Ref N="Block" RefId="60" />
              <B N="First">false</B>
              <B N="Last">false</B>
              <B N="Include">false</B>
              <B N="Exclude">false</B>
              <B N="Explicit">false</B>
              <B N="ShouldRun">true</B>
              <I32 N="StartLine">116</I32>
              <B N="Executed">true</B>
              <DT N="ExecutedAt">2024-08-03T17:35:50.4274416-07:00</DT>
              <B N="Passed">false</B>
              <B N="Skipped">false</B>
              <B N="Inconclusive">false</B>
              <TS N="UserDuration">PT0.0054062S</TS>
              <TS N="FrameworkDuration">PT0.0033083S</TS>
              <Nil N="PluginData" />
              <Nil N="FrameworkData" />
            </Props>
          </Obj>
          <Obj RefId="507">
            <TNRef RefId="30" />
            <ToString>[-] Should have a unit test for Log-Params</ToString>
            <Props>
              <S N="Name">Should have a unit test for &lt;Name&gt;</S>
              <Obj N="Path" RefId="508">
                <TNRef RefId="28" />
                <LST>
                  <S>Quality for module</S>
                  <S>Should have a unit test for &lt;Name&gt;</S>
                </LST>
              </Obj>
              <Obj N="Data" RefId="509">
                <TNRef RefId="25" />
                <DCT>
                  <En>
                    <S N="Key">Name</S>
                    <S N="Value">Log-Params</S>
                  </En>
                </DCT>
              </Obj>
              <S N="ExpandedName">Should have a unit test for Log-Params</S>
              <S N="ExpandedPath">Quality for module.Should have a unit test for Log-Params</S>
              <S N="Result">Failed</S>
              <Obj N="ErrorRecord" RefId="510">
                <TNRef RefId="31" />
                <LST>
                  <Obj RefId="511">
                    <TNRef RefId="33" />
                    <ToString>Expected a value, but got $null or empty.</ToString>
                    <MS>
                      <S N="DisplayErrorMessage">Expected a value, but got $null or empty.</S>
                      <S N="DisplayStackTrace">at Get-ChildItem -Path 'tests\' -Recurse -Include "$Name.Tests.ps1" | Should -Not -BeNullOrEmpty, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:117_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:117</S>
                      <Obj N="Exception" RefId="512">
                        <TNRef RefId="60" />
                        <ToString>System.Exception: Expected a value, but got $null or empty.</ToString>
                        <Props>
                          <Nil N="TargetSite" />
                          <S N="Message">Expected a value, but got $null or empty.</S>
                          <Obj N="Data" RefId="513">
                            <TNRef RefId="35" />
                            <DCT />
                          </Obj>
                          <Nil N="InnerException" />
                          <Nil N="HelpLink" />
                          <Nil N="Source" />
                          <I32 N="HResult">-2146233088</I32>
                          <Nil N="StackTrace" />
                        </Props>
                      </Obj>
                      <Obj N="TargetObject" RefId="514">
                        <TNRef RefId="38" />
                        <DCT>
                          <En>
                            <S N="Key">Message</S>
                            <S N="Value">Expected a value, but got $null or empty.</S>
                          </En>
                          <En>
                            <S N="Key">File</S>
                            <S N="Value">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1</S>
                          </En>
                          <En>
                            <S N="Key">Line</S>
                            <S N="Value">117</S>
                          </En>
                          <En>
                            <S N="Key">LineText</S>
                            <S N="Value">        Get-ChildItem -Path 'tests\' -Recurse -Include "$Name.Tests.ps1" | Should -Not -BeNullOrEmpty</S>
                          </En>
                          <En>
                            <S N="Key">Terminating</S>
                            <B N="Value">true</B>
                          </En>
                          <En>
                            <S N="Key">ShouldResult</S>
                            <Obj N="Value" RefId="515">
                              <TNRef RefId="61" />
                              <ToString>Pester.ShouldResult</ToString>
                              <Props>
                                <B N="Succeeded">false</B>
                                <S N="FailureMessage">Expected a value, but got $null or empty.</S>
                                <Obj N="ExpectResult" RefId="516">
                                  <TNRef RefId="62" />
                                  <ToString>Expected: '$null or empty' Actual: $null Because: </ToString>
                                  <Props>
                                    <S N="Actual">$null</S>
                                    <S N="Expected">'$null or empty'</S>
                                    <S N="Because"></S>
                                  </Props>
                                </Obj>
                              </Props>
                            </Obj>
                          </En>
                        </DCT>
                      </Obj>
                      <S N="FullyQualifiedErrorId">PesterAssertionFailed</S>
                      <Obj N="InvocationInfo" RefId="517">
                        <TNRef RefId="37" />
                        <ToString>System.Management.Automation.InvocationInfo</ToString>
                        <Props>
                          <Nil N="MyCommand" />
                          <Obj N="BoundParameters" RefId="518">
                            <TNRef RefId="38" />
                            <DCT />
                          </Obj>
                          <Obj N="UnboundArguments" RefId="519">
                            <TNRef RefId="31" />
                            <LST />
                          </Obj>
                          <I32 N="ScriptLineNumber">8392</I32>
                          <I32 N="OffsetInLine">13</I32>
                          <I64 N="HistoryId">18</I64>
                          <S N="ScriptName">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1</S>
                          <S N="Line">            throw $errorRecord_x000D__x000A_</S>
                          <S N="Statement">throw $errorRecord</S>
                          <S N="PositionMessage">At C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1:8392 char:13_x000D__x000A_+             throw $errorRecord_x000D__x000A_+             ~~~~~~~~~~~~~~~~~~</S>
                          <S N="PSScriptRoot">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1</S>
                          <S N="PSCommandPath">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1</S>
                          <S N="InvocationName"></S>
                          <I32 N="PipelineLength">0</I32>
                          <I32 N="PipelinePosition">0</I32>
                          <B N="ExpectingInput">false</B>
                          <Obj N="CommandOrigin" RefId="520">
                            <TNRef RefId="39" />
                            <ToString>Internal</ToString>
                            <I32>1</I32>
                          </Obj>
                          <Nil N="DisplayScriptPosition" />
                        </Props>
                        <MS>
                          <Obj N="ParameterValues" RefId="521">
                            <TNRef RefId="25" />
                            <DCT />
                          </Obj>
                        </MS>
                      </Obj>
                      <I32 N="ErrorCategory_Category">8</I32>
                      <S N="ErrorCategory_Activity"></S>
                      <S N="ErrorCategory_Reason">Exception</S>
                      <S N="ErrorCategory_TargetName">System.Collections.Generic.Dictionary`2[System.String,System.Object]</S>
                      <S N="ErrorCategory_TargetType">Dictionary`2</S>
                      <S N="ErrorCategory_Message">InvalidResult: (System.Collections.…ring,System.Object]:Dictionary`2) [], Exception</S>
                      <B N="SerializeExtendedInfo">false</B>
                      <S N="ErrorDetails_ScriptStackTrace">at Invoke-Assertion, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 8392_x000D__x000A_at Should&lt;End&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 8328_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1: line 117_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2024_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1985_x000D__x000A_at Invoke-ScriptBlock, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2157_x000D__x000A_at Invoke-TestItem, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1199_x000D__x000A_at Invoke-Block, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 835_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 893_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2024_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1985_x000D__x000A_at Invoke-ScriptBlock, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2160_x000D__x000A_at Invoke-Block, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 940_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 893_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2024_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1985_x000D__x000A_at Invoke-ScriptBlock, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2160_x000D__x000A_at Invoke-Block, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 940_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1688_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.ps1: line 3_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 3260_x000D__x000A_at Invoke-InNewScriptScope, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 3267_x000D__x000A_at Run-Test, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1691_x000D__x000A_at Invoke-Test, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2512_x000D__x000A_at Invoke-Pester&lt;End&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 5110_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Sampler\0.118.1\tasks\Invoke-Pester.pester.build.ps1: line 906_x000D__x000A_at *Task, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 629_x000D__x000A_at *Task, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 601_x000D__x000A_at *Task, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 601_x000D__x000A_at &lt;ScriptBlock&gt;&lt;End&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 787_x000D__x000A_at &lt;ScriptBlock&gt;&lt;Begin&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\build.ps1: line 532_x000D__x000A_at &lt;ScriptBlock&gt;, &lt;No file&gt;: line 1</S>
                      <Nil N="PSMessageDetails" />
                    </MS>
                  </Obj>
                </LST>
              </Obj>
              <Nil N="StandardOutput" />
              <TS N="Duration">PT0.0067034S</TS>
              <S N="ItemType">Test</S>
              <S N="Id">116:5</S>
              <S N="GroupId">116:5</S>
              <SBK N="ScriptBlock">_x000D__x000A_        Get-ChildItem -Path 'tests\' -Recurse -Include "$Name.Tests.ps1" | Should -Not -BeNullOrEmpty_x000D__x000A_    </SBK>
              <Nil N="Tag" />
              <B N="Focus">false</B>
              <B N="Skip">false</B>
              <Ref N="Block" RefId="60" />
              <B N="First">false</B>
              <B N="Last">false</B>
              <B N="Include">false</B>
              <B N="Exclude">false</B>
              <B N="Explicit">false</B>
              <B N="ShouldRun">true</B>
              <I32 N="StartLine">116</I32>
              <B N="Executed">true</B>
              <DT N="ExecutedAt">2024-08-03T17:35:50.4362027-07:00</DT>
              <B N="Passed">false</B>
              <B N="Skipped">false</B>
              <B N="Inconclusive">false</B>
              <TS N="UserDuration">PT0.0033956S</TS>
              <TS N="FrameworkDuration">PT0.0033078S</TS>
              <Nil N="PluginData" />
              <Nil N="FrameworkData" />
            </Props>
          </Obj>
          <Obj RefId="522">
            <TNRef RefId="30" />
            <ToString>[-] Should have a unit test for Write-EnhancedLog</ToString>
            <Props>
              <S N="Name">Should have a unit test for &lt;Name&gt;</S>
              <Obj N="Path" RefId="523">
                <TNRef RefId="28" />
                <LST>
                  <S>Quality for module</S>
                  <S>Should have a unit test for &lt;Name&gt;</S>
                </LST>
              </Obj>
              <Obj N="Data" RefId="524">
                <TNRef RefId="25" />
                <DCT>
                  <En>
                    <S N="Key">Name</S>
                    <S N="Value">Write-EnhancedLog</S>
                  </En>
                </DCT>
              </Obj>
              <S N="ExpandedName">Should have a unit test for Write-EnhancedLog</S>
              <S N="ExpandedPath">Quality for module.Should have a unit test for Write-EnhancedLog</S>
              <S N="Result">Failed</S>
              <Obj N="ErrorRecord" RefId="525">
                <TNRef RefId="31" />
                <LST>
                  <Obj RefId="526">
                    <TNRef RefId="33" />
                    <ToString>Expected a value, but got $null or empty.</ToString>
                    <MS>
                      <S N="DisplayErrorMessage">Expected a value, but got $null or empty.</S>
                      <S N="DisplayStackTrace">at Get-ChildItem -Path 'tests\' -Recurse -Include "$Name.Tests.ps1" | Should -Not -BeNullOrEmpty, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:117_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:117</S>
                      <Obj N="Exception" RefId="527">
                        <TNRef RefId="60" />
                        <ToString>System.Exception: Expected a value, but got $null or empty.</ToString>
                        <Props>
                          <Nil N="TargetSite" />
                          <S N="Message">Expected a value, but got $null or empty.</S>
                          <Obj N="Data" RefId="528">
                            <TNRef RefId="35" />
                            <DCT />
                          </Obj>
                          <Nil N="InnerException" />
                          <Nil N="HelpLink" />
                          <Nil N="Source" />
                          <I32 N="HResult">-2146233088</I32>
                          <Nil N="StackTrace" />
                        </Props>
                      </Obj>
                      <Obj N="TargetObject" RefId="529">
                        <TNRef RefId="38" />
                        <DCT>
                          <En>
                            <S N="Key">Message</S>
                            <S N="Value">Expected a value, but got $null or empty.</S>
                          </En>
                          <En>
                            <S N="Key">File</S>
                            <S N="Value">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1</S>
                          </En>
                          <En>
                            <S N="Key">Line</S>
                            <S N="Value">117</S>
                          </En>
                          <En>
                            <S N="Key">LineText</S>
                            <S N="Value">        Get-ChildItem -Path 'tests\' -Recurse -Include "$Name.Tests.ps1" | Should -Not -BeNullOrEmpty</S>
                          </En>
                          <En>
                            <S N="Key">Terminating</S>
                            <B N="Value">true</B>
                          </En>
                          <En>
                            <S N="Key">ShouldResult</S>
                            <Obj N="Value" RefId="530">
                              <TNRef RefId="61" />
                              <ToString>Pester.ShouldResult</ToString>
                              <Props>
                                <B N="Succeeded">false</B>
                                <S N="FailureMessage">Expected a value, but got $null or empty.</S>
                                <Obj N="ExpectResult" RefId="531">
                                  <TNRef RefId="62" />
                                  <ToString>Expected: '$null or empty' Actual: $null Because: </ToString>
                                  <Props>
                                    <S N="Actual">$null</S>
                                    <S N="Expected">'$null or empty'</S>
                                    <S N="Because"></S>
                                  </Props>
                                </Obj>
                              </Props>
                            </Obj>
                          </En>
                        </DCT>
                      </Obj>
                      <S N="FullyQualifiedErrorId">PesterAssertionFailed</S>
                      <Obj N="InvocationInfo" RefId="532">
                        <TNRef RefId="37" />
                        <ToString>System.Management.Automation.InvocationInfo</ToString>
                        <Props>
                          <Nil N="MyCommand" />
                          <Obj N="BoundParameters" RefId="533">
                            <TNRef RefId="38" />
                            <DCT />
                          </Obj>
                          <Obj N="UnboundArguments" RefId="534">
                            <TNRef RefId="31" />
                            <LST />
                          </Obj>
                          <I32 N="ScriptLineNumber">8392</I32>
                          <I32 N="OffsetInLine">13</I32>
                          <I64 N="HistoryId">18</I64>
                          <S N="ScriptName">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1</S>
                          <S N="Line">            throw $errorRecord_x000D__x000A_</S>
                          <S N="Statement">throw $errorRecord</S>
                          <S N="PositionMessage">At C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1:8392 char:13_x000D__x000A_+             throw $errorRecord_x000D__x000A_+             ~~~~~~~~~~~~~~~~~~</S>
                          <S N="PSScriptRoot">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1</S>
                          <S N="PSCommandPath">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1</S>
                          <S N="InvocationName"></S>
                          <I32 N="PipelineLength">0</I32>
                          <I32 N="PipelinePosition">0</I32>
                          <B N="ExpectingInput">false</B>
                          <Obj N="CommandOrigin" RefId="535">
                            <TNRef RefId="39" />
                            <ToString>Internal</ToString>
                            <I32>1</I32>
                          </Obj>
                          <Nil N="DisplayScriptPosition" />
                        </Props>
                        <MS>
                          <Obj N="ParameterValues" RefId="536">
                            <TNRef RefId="25" />
                            <DCT />
                          </Obj>
                        </MS>
                      </Obj>
                      <I32 N="ErrorCategory_Category">8</I32>
                      <S N="ErrorCategory_Activity"></S>
                      <S N="ErrorCategory_Reason">Exception</S>
                      <S N="ErrorCategory_TargetName">System.Collections.Generic.Dictionary`2[System.String,System.Object]</S>
                      <S N="ErrorCategory_TargetType">Dictionary`2</S>
                      <S N="ErrorCategory_Message">InvalidResult: (System.Collections.…ring,System.Object]:Dictionary`2) [], Exception</S>
                      <B N="SerializeExtendedInfo">false</B>
                      <S N="ErrorDetails_ScriptStackTrace">at Invoke-Assertion, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 8392_x000D__x000A_at Should&lt;End&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 8328_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1: line 117_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2024_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1985_x000D__x000A_at Invoke-ScriptBlock, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2157_x000D__x000A_at Invoke-TestItem, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1199_x000D__x000A_at Invoke-Block, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 835_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 893_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2024_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1985_x000D__x000A_at Invoke-ScriptBlock, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2160_x000D__x000A_at Invoke-Block, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 940_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 893_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2024_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1985_x000D__x000A_at Invoke-ScriptBlock, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2160_x000D__x000A_at Invoke-Block, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 940_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1688_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.ps1: line 3_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 3260_x000D__x000A_at Invoke-InNewScriptScope, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 3267_x000D__x000A_at Run-Test, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1691_x000D__x000A_at Invoke-Test, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2512_x000D__x000A_at Invoke-Pester&lt;End&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 5110_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Sampler\0.118.1\tasks\Invoke-Pester.pester.build.ps1: line 906_x000D__x000A_at *Task, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 629_x000D__x000A_at *Task, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 601_x000D__x000A_at *Task, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 601_x000D__x000A_at &lt;ScriptBlock&gt;&lt;End&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 787_x000D__x000A_at &lt;ScriptBlock&gt;&lt;Begin&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\build.ps1: line 532_x000D__x000A_at &lt;ScriptBlock&gt;, &lt;No file&gt;: line 1</S>
                      <Nil N="PSMessageDetails" />
                    </MS>
                  </Obj>
                </LST>
              </Obj>
              <Nil N="StandardOutput" />
              <TS N="Duration">PT0.0076681S</TS>
              <S N="ItemType">Test</S>
              <S N="Id">116:5</S>
              <S N="GroupId">116:5</S>
              <SBK N="ScriptBlock">_x000D__x000A_        Get-ChildItem -Path 'tests\' -Recurse -Include "$Name.Tests.ps1" | Should -Not -BeNullOrEmpty_x000D__x000A_    </SBK>
              <Nil N="Tag" />
              <B N="Focus">false</B>
              <B N="Skip">false</B>
              <Ref N="Block" RefId="60" />
              <B N="First">false</B>
              <B N="Last">false</B>
              <B N="Include">false</B>
              <B N="Exclude">false</B>
              <B N="Explicit">false</B>
              <B N="ShouldRun">true</B>
              <I32 N="StartLine">116</I32>
              <B N="Executed">true</B>
              <DT N="ExecutedAt">2024-08-03T17:35:50.4429368-07:00</DT>
              <B N="Passed">false</B>
              <B N="Skipped">false</B>
              <B N="Inconclusive">false</B>
              <TS N="UserDuration">PT0.004292S</TS>
              <TS N="FrameworkDuration">PT0.0033761S</TS>
              <Nil N="PluginData" />
              <Nil N="FrameworkData" />
            </Props>
          </Obj>
          <Obj RefId="537">
            <TNRef RefId="30" />
            <ToString>[-] Should have a unit test for Write-EventLogMessage</ToString>
            <Props>
              <S N="Name">Should have a unit test for &lt;Name&gt;</S>
              <Obj N="Path" RefId="538">
                <TNRef RefId="28" />
                <LST>
                  <S>Quality for module</S>
                  <S>Should have a unit test for &lt;Name&gt;</S>
                </LST>
              </Obj>
              <Obj N="Data" RefId="539">
                <TNRef RefId="25" />
                <DCT>
                  <En>
                    <S N="Key">Name</S>
                    <S N="Value">Write-EventLogMessage</S>
                  </En>
                </DCT>
              </Obj>
              <S N="ExpandedName">Should have a unit test for Write-EventLogMessage</S>
              <S N="ExpandedPath">Quality for module.Should have a unit test for Write-EventLogMessage</S>
              <S N="Result">Failed</S>
              <Obj N="ErrorRecord" RefId="540">
                <TNRef RefId="31" />
                <LST>
                  <Obj RefId="541">
                    <TNRef RefId="33" />
                    <ToString>Expected a value, but got $null or empty.</ToString>
                    <MS>
                      <S N="DisplayErrorMessage">Expected a value, but got $null or empty.</S>
                      <S N="DisplayStackTrace">at Get-ChildItem -Path 'tests\' -Recurse -Include "$Name.Tests.ps1" | Should -Not -BeNullOrEmpty, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:117_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:117</S>
                      <Obj N="Exception" RefId="542">
                        <TNRef RefId="60" />
                        <ToString>System.Exception: Expected a value, but got $null or empty.</ToString>
                        <Props>
                          <Nil N="TargetSite" />
                          <S N="Message">Expected a value, but got $null or empty.</S>
                          <Obj N="Data" RefId="543">
                            <TNRef RefId="35" />
                            <DCT />
                          </Obj>
                          <Nil N="InnerException" />
                          <Nil N="HelpLink" />
                          <Nil N="Source" />
                          <I32 N="HResult">-2146233088</I32>
                          <Nil N="StackTrace" />
                        </Props>
                      </Obj>
                      <Obj N="TargetObject" RefId="544">
                        <TNRef RefId="38" />
                        <DCT>
                          <En>
                            <S N="Key">Message</S>
                            <S N="Value">Expected a value, but got $null or empty.</S>
                          </En>
                          <En>
                            <S N="Key">File</S>
                            <S N="Value">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1</S>
                          </En>
                          <En>
                            <S N="Key">Line</S>
                            <S N="Value">117</S>
                          </En>
                          <En>
                            <S N="Key">LineText</S>
                            <S N="Value">        Get-ChildItem -Path 'tests\' -Recurse -Include "$Name.Tests.ps1" | Should -Not -BeNullOrEmpty</S>
                          </En>
                          <En>
                            <S N="Key">Terminating</S>
                            <B N="Value">true</B>
                          </En>
                          <En>
                            <S N="Key">ShouldResult</S>
                            <Obj N="Value" RefId="545">
                              <TNRef RefId="61" />
                              <ToString>Pester.ShouldResult</ToString>
                              <Props>
                                <B N="Succeeded">false</B>
                                <S N="FailureMessage">Expected a value, but got $null or empty.</S>
                                <Obj N="ExpectResult" RefId="546">
                                  <TNRef RefId="62" />
                                  <ToString>Expected: '$null or empty' Actual: $null Because: </ToString>
                                  <Props>
                                    <S N="Actual">$null</S>
                                    <S N="Expected">'$null or empty'</S>
                                    <S N="Because"></S>
                                  </Props>
                                </Obj>
                              </Props>
                            </Obj>
                          </En>
                        </DCT>
                      </Obj>
                      <S N="FullyQualifiedErrorId">PesterAssertionFailed</S>
                      <Obj N="InvocationInfo" RefId="547">
                        <TNRef RefId="37" />
                        <ToString>System.Management.Automation.InvocationInfo</ToString>
                        <Props>
                          <Nil N="MyCommand" />
                          <Obj N="BoundParameters" RefId="548">
                            <TNRef RefId="38" />
                            <DCT />
                          </Obj>
                          <Obj N="UnboundArguments" RefId="549">
                            <TNRef RefId="31" />
                            <LST />
                          </Obj>
                          <I32 N="ScriptLineNumber">8392</I32>
                          <I32 N="OffsetInLine">13</I32>
                          <I64 N="HistoryId">18</I64>
                          <S N="ScriptName">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1</S>
                          <S N="Line">            throw $errorRecord_x000D__x000A_</S>
                          <S N="Statement">throw $errorRecord</S>
                          <S N="PositionMessage">At C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1:8392 char:13_x000D__x000A_+             throw $errorRecord_x000D__x000A_+             ~~~~~~~~~~~~~~~~~~</S>
                          <S N="PSScriptRoot">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1</S>
                          <S N="PSCommandPath">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1</S>
                          <S N="InvocationName"></S>
                          <I32 N="PipelineLength">0</I32>
                          <I32 N="PipelinePosition">0</I32>
                          <B N="ExpectingInput">false</B>
                          <Obj N="CommandOrigin" RefId="550">
                            <TNRef RefId="39" />
                            <ToString>Internal</ToString>
                            <I32>1</I32>
                          </Obj>
                          <Nil N="DisplayScriptPosition" />
                        </Props>
                        <MS>
                          <Obj N="ParameterValues" RefId="551">
                            <TNRef RefId="25" />
                            <DCT />
                          </Obj>
                        </MS>
                      </Obj>
                      <I32 N="ErrorCategory_Category">8</I32>
                      <S N="ErrorCategory_Activity"></S>
                      <S N="ErrorCategory_Reason">Exception</S>
                      <S N="ErrorCategory_TargetName">System.Collections.Generic.Dictionary`2[System.String,System.Object]</S>
                      <S N="ErrorCategory_TargetType">Dictionary`2</S>
                      <S N="ErrorCategory_Message">InvalidResult: (System.Collections.…ring,System.Object]:Dictionary`2) [], Exception</S>
                      <B N="SerializeExtendedInfo">false</B>
                      <S N="ErrorDetails_ScriptStackTrace">at Invoke-Assertion, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 8392_x000D__x000A_at Should&lt;End&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 8328_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1: line 117_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2024_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1985_x000D__x000A_at Invoke-ScriptBlock, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2157_x000D__x000A_at Invoke-TestItem, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1199_x000D__x000A_at Invoke-Block, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 835_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 893_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2024_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1985_x000D__x000A_at Invoke-ScriptBlock, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2160_x000D__x000A_at Invoke-Block, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 940_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 893_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2024_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1985_x000D__x000A_at Invoke-ScriptBlock, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2160_x000D__x000A_at Invoke-Block, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 940_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1688_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.ps1: line 3_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 3260_x000D__x000A_at Invoke-InNewScriptScope, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 3267_x000D__x000A_at Run-Test, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1691_x000D__x000A_at Invoke-Test, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2512_x000D__x000A_at Invoke-Pester&lt;End&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 5110_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Sampler\0.118.1\tasks\Invoke-Pester.pester.build.ps1: line 906_x000D__x000A_at *Task, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 629_x000D__x000A_at *Task, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 601_x000D__x000A_at *Task, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 601_x000D__x000A_at &lt;ScriptBlock&gt;&lt;End&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 787_x000D__x000A_at &lt;ScriptBlock&gt;&lt;Begin&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\build.ps1: line 532_x000D__x000A_at &lt;ScriptBlock&gt;, &lt;No file&gt;: line 1</S>
                      <Nil N="PSMessageDetails" />
                    </MS>
                  </Obj>
                </LST>
              </Obj>
              <Nil N="StandardOutput" />
              <TS N="Duration">PT0.0063352S</TS>
              <S N="ItemType">Test</S>
              <S N="Id">116:5</S>
              <S N="GroupId">116:5</S>
              <SBK N="ScriptBlock">_x000D__x000A_        Get-ChildItem -Path 'tests\' -Recurse -Include "$Name.Tests.ps1" | Should -Not -BeNullOrEmpty_x000D__x000A_    </SBK>
              <Nil N="Tag" />
              <B N="Focus">false</B>
              <B N="Skip">false</B>
              <Ref N="Block" RefId="60" />
              <B N="First">false</B>
              <B N="Last">false</B>
              <B N="Include">false</B>
              <B N="Exclude">false</B>
              <B N="Explicit">false</B>
              <B N="ShouldRun">true</B>
              <I32 N="StartLine">116</I32>
              <B N="Executed">true</B>
              <DT N="ExecutedAt">2024-08-03T17:35:50.4506369-07:00</DT>
              <B N="Passed">false</B>
              <B N="Skipped">false</B>
              <B N="Inconclusive">false</B>
              <TS N="UserDuration">PT0.0032511S</TS>
              <TS N="FrameworkDuration">PT0.0030841S</TS>
              <Nil N="PluginData" />
              <Nil N="FrameworkData" />
            </Props>
          </Obj>
          <Obj RefId="552">
            <TNRef RefId="30" />
            <ToString>[-] Should pass Script Analyzer for Add-Step</ToString>
            <Props>
              <S N="Name">Should pass Script Analyzer for &lt;Name&gt;</S>
              <Obj N="Path" RefId="553">
                <TNRef RefId="28" />
                <LST>
                  <S>Quality for module</S>
                  <S>Should pass Script Analyzer for &lt;Name&gt;</S>
                </LST>
              </Obj>
              <Ref N="Data" RefId="359" />
              <S N="ExpandedName">Should pass Script Analyzer for Add-Step</S>
              <S N="ExpandedPath">Quality for module.Should pass Script Analyzer for Add-Step</S>
              <S N="Result">Failed</S>
              <Obj N="ErrorRecord" RefId="554">
                <TNRef RefId="31" />
                <LST>
                  <Obj RefId="555">
                    <TNRef RefId="33" />
                    <ToString>Expected $null or empty, because some rule triggered._x000D__x000A__x000D__x000A_ _x000D__x000A_RuleName          Severity ScriptName   Line Message_x000D__x000A_--------          -------- ----------   ---- -------_x000D__x000A_PSAvoidGlobalVars Warning  Add-Step.ps1 27   Found global variable 'global:steps'., but got Found global variable 'global:steps'..</ToString>
                    <MS>
                      <S N="DisplayErrorMessage">Expected $null or empty, because some rule triggered._x000D__x000A_ _x000D__x000A_RuleName          Severity ScriptName   Line Message_x000D__x000A_--------          -------- ----------   ---- -------_x000D__x000A_PSAvoidGlobalVars Warning  Add-Step.ps1 27   Found global variable 'global:steps'., but got Found global variable 'global:steps'..</S>
                      <S N="DisplayStackTrace">at $pssaResult | Should -BeNullOrEmpty -Because `, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:125_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:125</S>
                      <Obj N="Exception" RefId="556">
                        <TNRef RefId="60" />
                        <ToString>System.Exception: Expected $null or empty, because some rule triggered._x000D__x000A__x000D__x000A_ _x000D__x000A_RuleName          Severity ScriptName   Line Message_x000D__x000A_--------          -------- ----------   ---- -------_x000D__x000A_PSAvoidGlobalVars Warning  Add-Step.ps1 27   Found global variable 'global:steps'., but got Found global variable 'global:steps'..</ToString>
                        <Props>
                          <Nil N="TargetSite" />
                          <S N="Message">Expected $null or empty, because some rule triggered._x000D__x000A__x000D__x000A_ _x000D__x000A_RuleName          Severity ScriptName   Line Message_x000D__x000A_--------          -------- ----------   ---- -------_x000D__x000A_PSAvoidGlobalVars Warning  Add-Step.ps1 27   Found global variable 'global:steps'., but got Found global variable 'global:steps'..</S>
                          <Obj N="Data" RefId="557">
                            <TNRef RefId="35" />
                            <DCT />
                          </Obj>
                          <Nil N="InnerException" />
                          <Nil N="HelpLink" />
                          <Nil N="Source" />
                          <I32 N="HResult">-2146233088</I32>
                          <Nil N="StackTrace" />
                        </Props>
                      </Obj>
                      <Obj N="TargetObject" RefId="558">
                        <TNRef RefId="38" />
                        <DCT>
                          <En>
                            <S N="Key">Message</S>
                            <S N="Value">Expected $null or empty, because some rule triggered._x000D__x000A__x000D__x000A_ _x000D__x000A_RuleName          Severity ScriptName   Line Message_x000D__x000A_--------          -------- ----------   ---- -------_x000D__x000A_PSAvoidGlobalVars Warning  Add-Step.ps1 27   Found global variable 'global:steps'., but got Found global variable 'global:steps'..</S>
                          </En>
                          <En>
                            <S N="Key">File</S>
                            <S N="Value">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1</S>
                          </En>
                          <En>
                            <S N="Key">Line</S>
                            <S N="Value">125</S>
                          </En>
                          <En>
                            <S N="Key">LineText</S>
                            <S N="Value">        $pssaResult | Should -BeNullOrEmpty -Because `</S>
                          </En>
                          <En>
                            <S N="Key">Terminating</S>
                            <B N="Value">true</B>
                          </En>
                          <En>
                            <S N="Key">ShouldResult</S>
                            <Obj N="Value" RefId="559">
                              <TNRef RefId="61" />
                              <ToString>Pester.ShouldResult</ToString>
                              <Props>
                                <B N="Succeeded">false</B>
                                <S N="FailureMessage">Expected $null or empty, because some rule triggered._x000D__x000A__x000D__x000A_ _x000D__x000A_RuleName          Severity ScriptName   Line Message_x000D__x000A_--------          -------- ----------   ---- -------_x000D__x000A_PSAvoidGlobalVars Warning  Add-Step.ps1 27   Found global variable 'global:steps'., but got Found global variable 'global:steps'..</S>
                                <Obj N="ExpectResult" RefId="560">
                                  <TNRef RefId="62" />
                                  <ToString>Expected: 'a value' Actual: @(Found global variable 'global:steps'.) Because: some rule triggered._x000D__x000A__x000D__x000A_ _x000D__x000A_RuleName          Severity ScriptName   Line Message_x000D__x000A_--------          -------- ----------   ---- -------_x000D__x000A_PSAvoidGlobalVars Warning  Add-Step.ps1 27   Found global variable 'global:steps'._x000D__x000A__x000D__x000A_</ToString>
                                  <Props>
                                    <S N="Actual">@(Found global variable 'global:steps'.)</S>
                                    <S N="Expected">'a value'</S>
                                    <S N="Because">some rule triggered._x000D__x000A__x000D__x000A_ _x000D__x000A_RuleName          Severity ScriptName   Line Message_x000D__x000A_--------          -------- ----------   ---- -------_x000D__x000A_PSAvoidGlobalVars Warning  Add-Step.ps1 27   Found global variable 'global:steps'._x000D__x000A__x000D__x000A_</S>
                                  </Props>
                                </Obj>
                              </Props>
                            </Obj>
                          </En>
                        </DCT>
                      </Obj>
                      <S N="FullyQualifiedErrorId">PesterAssertionFailed</S>
                      <Obj N="InvocationInfo" RefId="561">
                        <TNRef RefId="37" />
                        <ToString>System.Management.Automation.InvocationInfo</ToString>
                        <Props>
                          <Nil N="MyCommand" />
                          <Obj N="BoundParameters" RefId="562">
                            <TNRef RefId="38" />
                            <DCT />
                          </Obj>
                          <Obj N="UnboundArguments" RefId="563">
                            <TNRef RefId="31" />
                            <LST />
                          </Obj>
                          <I32 N="ScriptLineNumber">8392</I32>
                          <I32 N="OffsetInLine">13</I32>
                          <I64 N="HistoryId">18</I64>
                          <S N="ScriptName">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1</S>
                          <S N="Line">            throw $errorRecord_x000D__x000A_</S>
                          <S N="Statement">throw $errorRecord</S>
                          <S N="PositionMessage">At C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1:8392 char:13_x000D__x000A_+             throw $errorRecord_x000D__x000A_+             ~~~~~~~~~~~~~~~~~~</S>
                          <S N="PSScriptRoot">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1</S>
                          <S N="PSCommandPath">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1</S>
                          <S N="InvocationName"></S>
                          <I32 N="PipelineLength">0</I32>
                          <I32 N="PipelinePosition">0</I32>
                          <B N="ExpectingInput">false</B>
                          <Obj N="CommandOrigin" RefId="564">
                            <TNRef RefId="39" />
                            <ToString>Internal</ToString>
                            <I32>1</I32>
                          </Obj>
                          <Nil N="DisplayScriptPosition" />
                        </Props>
                        <MS>
                          <Obj N="ParameterValues" RefId="565">
                            <TNRef RefId="25" />
                            <DCT />
                          </Obj>
                        </MS>
                      </Obj>
                      <I32 N="ErrorCategory_Category">8</I32>
                      <S N="ErrorCategory_Activity"></S>
                      <S N="ErrorCategory_Reason">Exception</S>
                      <S N="ErrorCategory_TargetName">System.Collections.Generic.Dictionary`2[System.String,System.Object]</S>
                      <S N="ErrorCategory_TargetType">Dictionary`2</S>
                      <S N="ErrorCategory_Message">InvalidResult: (System.Collections.…ring,System.Object]:Dictionary`2) [], Exception</S>
                      <B N="SerializeExtendedInfo">false</B>
                      <S N="ErrorDetails_ScriptStackTrace">at Invoke-Assertion, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 8392_x000D__x000A_at Should&lt;End&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 8331_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1: line 125_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2024_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1985_x000D__x000A_at Invoke-ScriptBlock, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2157_x000D__x000A_at Invoke-TestItem, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1199_x000D__x000A_at Invoke-Block, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 835_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 893_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2024_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1985_x000D__x000A_at Invoke-ScriptBlock, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2160_x000D__x000A_at Invoke-Block, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 940_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 893_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2024_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1985_x000D__x000A_at Invoke-ScriptBlock, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2160_x000D__x000A_at Invoke-Block, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 940_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1688_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.ps1: line 3_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 3260_x000D__x000A_at Invoke-InNewScriptScope, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 3267_x000D__x000A_at Run-Test, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1691_x000D__x000A_at Invoke-Test, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2512_x000D__x000A_at Invoke-Pester&lt;End&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 5110_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Sampler\0.118.1\tasks\Invoke-Pester.pester.build.ps1: line 906_x000D__x000A_at *Task, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 629_x000D__x000A_at *Task, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 601_x000D__x000A_at *Task, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 601_x000D__x000A_at &lt;ScriptBlock&gt;&lt;End&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 787_x000D__x000A_at &lt;ScriptBlock&gt;&lt;Begin&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\build.ps1: line 532_x000D__x000A_at &lt;ScriptBlock&gt;, &lt;No file&gt;: line 1</S>
                      <Nil N="PSMessageDetails" />
                    </MS>
                  </Obj>
                </LST>
              </Obj>
              <Nil N="StandardOutput" />
              <TS N="Duration">PT0.0632335S</TS>
              <S N="ItemType">Test</S>
              <S N="Id">120:5</S>
              <S N="GroupId">120:5</S>
              <SBK N="ScriptBlock">_x000D__x000A_        $functionFile = Get-ChildItem -Path $sourcePath -Recurse -Include "$Name.ps1"_x000D__x000A__x000D__x000A_        $pssaResult = (Invoke-ScriptAnalyzer -Path $functionFile.FullName)_x000D__x000A_        $report = $pssaResult | Format-Table -AutoSize | Out-String -Width 110_x000D__x000A_        $pssaResult | Should -BeNullOrEmpty -Because `_x000D__x000A_            "some rule triggered.`r`n`r`n $report"_x000D__x000A_    </SBK>
              <Nil N="Tag" />
              <B N="Focus">false</B>
              <B N="Skip">false</B>
              <Ref N="Block" RefId="60" />
              <B N="First">false</B>
              <B N="Last">false</B>
              <B N="Include">false</B>
              <B N="Exclude">false</B>
              <B N="Explicit">false</B>
              <B N="ShouldRun">true</B>
              <I32 N="StartLine">120</I32>
              <B N="Executed">true</B>
              <DT N="ExecutedAt">2024-08-03T17:35:50.4569967-07:00</DT>
              <B N="Passed">false</B>
              <B N="Skipped">false</B>
              <B N="Inconclusive">false</B>
              <TS N="UserDuration">PT0.0584345S</TS>
              <TS N="FrameworkDuration">PT0.004799S</TS>
              <Nil N="PluginData" />
              <Nil N="FrameworkData" />
            </Props>
          </Obj>
          <Obj RefId="566">
            <TNRef RefId="30" />
            <ToString>[-] Should pass Script Analyzer for AppendCSVLog</ToString>
            <Props>
              <S N="Name">Should pass Script Analyzer for &lt;Name&gt;</S>
              <Obj N="Path" RefId="567">
                <TNRef RefId="28" />
                <LST>
                  <S>Quality for module</S>
                  <S>Should pass Script Analyzer for &lt;Name&gt;</S>
                </LST>
              </Obj>
              <Ref N="Data" RefId="374" />
              <S N="ExpandedName">Should pass Script Analyzer for AppendCSVLog</S>
              <S N="ExpandedPath">Quality for module.Should pass Script Analyzer for AppendCSVLog</S>
              <S N="Result">Failed</S>
              <Obj N="ErrorRecord" RefId="568">
                <TNRef RefId="31" />
                <LST>
                  <Obj RefId="569">
                    <TNRef RefId="33" />
                    <ToString>Expected $null or empty, because some rule triggered._x000D__x000A__x000D__x000A_ _x000D__x000A_RuleName                  Severity    ScriptName       Line Message_x000D__x000A_--------                  --------    ----------       ---- -------_x000D__x000A_PSAvoidTrailingWhitespace Information AppendCSVLog.ps1 5    Line has trailing whitespace_x000D__x000A_PSAvoidTrailingWhitespace Information AppendCSVLog.ps1 7    Line has trailing whitespace_x000D__x000A_PSAvoidTrailingWhitespace Information AppendCSVLog.ps1 13   Line has trailing whitespace, but got @(Line has trailing whitespace, Line has trailing whitespace, Line has trailing whitespace).</ToString>
                    <MS>
                      <S N="DisplayErrorMessage">Expected $null or empty, because some rule triggered._x000D__x000A_ _x000D__x000A_RuleName                  Severity    ScriptName       Line Message_x000D__x000A_--------                  --------    ----------       ---- -------_x000D__x000A_PSAvoidTrailingWhitespace Information AppendCSVLog.ps1 5    Line has trailing whitespace_x000D__x000A_PSAvoidTrailingWhitespace Information AppendCSVLog.ps1 7    Line has trailing whitespace_x000D__x000A_PSAvoidTrailingWhitespace Information AppendCSVLog.ps1 13   Line has trailing whitespace, but got @(Line has trailing whitespace, Line has trailing whitespace, Line has trailing whitespace).</S>
                      <S N="DisplayStackTrace">at $pssaResult | Should -BeNullOrEmpty -Because `, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:125_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:125</S>
                      <Obj N="Exception" RefId="570">
                        <TNRef RefId="60" />
                        <ToString>System.Exception: Expected $null or empty, because some rule triggered._x000D__x000A__x000D__x000A_ _x000D__x000A_RuleName                  Severity    ScriptName       Line Message_x000D__x000A_--------                  --------    ----------       ---- -------_x000D__x000A_PSAvoidTrailingWhitespace Information AppendCSVLog.ps1 5    Line has trailing whitespace_x000D__x000A_PSAvoidTrailingWhitespace Information AppendCSVLog.ps1 7    Line has trailing whitespace_x000D__x000A_PSAvoidTrailingWhitespace Information AppendCSVLog.ps1 13   Line has trailing whitespace, but got @(Line has trailing whitespace, Line has trailing whitespace, Line has trailing whitespace).</ToString>
                        <Props>
                          <Nil N="TargetSite" />
                          <S N="Message">Expected $null or empty, because some rule triggered._x000D__x000A__x000D__x000A_ _x000D__x000A_RuleName                  Severity    ScriptName       Line Message_x000D__x000A_--------                  --------    ----------       ---- -------_x000D__x000A_PSAvoidTrailingWhitespace Information AppendCSVLog.ps1 5    Line has trailing whitespace_x000D__x000A_PSAvoidTrailingWhitespace Information AppendCSVLog.ps1 7    Line has trailing whitespace_x000D__x000A_PSAvoidTrailingWhitespace Information AppendCSVLog.ps1 13   Line has trailing whitespace, but got @(Line has trailing whitespace, Line has trailing whitespace, Line has trailing whitespace).</S>
                          <Obj N="Data" RefId="571">
                            <TNRef RefId="35" />
                            <DCT />
                          </Obj>
                          <Nil N="InnerException" />
                          <Nil N="HelpLink" />
                          <Nil N="Source" />
                          <I32 N="HResult">-2146233088</I32>
                          <Nil N="StackTrace" />
                        </Props>
                      </Obj>
                      <Obj N="TargetObject" RefId="572">
                        <TNRef RefId="38" />
                        <DCT>
                          <En>
                            <S N="Key">Message</S>
                            <S N="Value">Expected $null or empty, because some rule triggered._x000D__x000A__x000D__x000A_ _x000D__x000A_RuleName                  Severity    ScriptName       Line Message_x000D__x000A_--------                  --------    ----------       ---- -------_x000D__x000A_PSAvoidTrailingWhitespace Information AppendCSVLog.ps1 5    Line has trailing whitespace_x000D__x000A_PSAvoidTrailingWhitespace Information AppendCSVLog.ps1 7    Line has trailing whitespace_x000D__x000A_PSAvoidTrailingWhitespace Information AppendCSVLog.ps1 13   Line has trailing whitespace, but got @(Line has trailing whitespace, Line has trailing whitespace, Line has trailing whitespace).</S>
                          </En>
                          <En>
                            <S N="Key">File</S>
                            <S N="Value">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1</S>
                          </En>
                          <En>
                            <S N="Key">Line</S>
                            <S N="Value">125</S>
                          </En>
                          <En>
                            <S N="Key">LineText</S>
                            <S N="Value">        $pssaResult | Should -BeNullOrEmpty -Because `</S>
                          </En>
                          <En>
                            <S N="Key">Terminating</S>
                            <B N="Value">true</B>
                          </En>
                          <En>
                            <S N="Key">ShouldResult</S>
                            <Obj N="Value" RefId="573">
                              <TNRef RefId="61" />
                              <ToString>Pester.ShouldResult</ToString>
                              <Props>
                                <B N="Succeeded">false</B>
                                <S N="FailureMessage">Expected $null or empty, because some rule triggered._x000D__x000A__x000D__x000A_ _x000D__x000A_RuleName                  Severity    ScriptName       Line Message_x000D__x000A_--------                  --------    ----------       ---- -------_x000D__x000A_PSAvoidTrailingWhitespace Information AppendCSVLog.ps1 5    Line has trailing whitespace_x000D__x000A_PSAvoidTrailingWhitespace Information AppendCSVLog.ps1 7    Line has trailing whitespace_x000D__x000A_PSAvoidTrailingWhitespace Information AppendCSVLog.ps1 13   Line has trailing whitespace, but got @(Line has trailing whitespace, Line has trailing whitespace, Line has trailing whitespace).</S>
                                <Obj N="ExpectResult" RefId="574">
                                  <TNRef RefId="62" />
                                  <ToString>Expected: 'a value' Actual: @(Line has trailing whitespace, Line has trailing whitespace, Line has trailing whitespace) Because: some rule triggered._x000D__x000A__x000D__x000A_ _x000D__x000A_RuleName                  Severity    ScriptName       Line Message_x000D__x000A_--------                  --------    ----------       ---- -------_x000D__x000A_PSAvoidTrailingWhitespace Information AppendCSVLog.ps1 5    Line has trailing whitespace_x000D__x000A_PSAvoidTrailingWhitespace Information AppendCSVLog.ps1 7    Line has trailing whitespace_x000D__x000A_PSAvoidTrailingWhitespace Information AppendCSVLog.ps1 13   Line has trailing whitespace_x000D__x000A__x000D__x000A_</ToString>
                                  <Props>
                                    <S N="Actual">@(Line has trailing whitespace, Line has trailing whitespace, Line has trailing whitespace)</S>
                                    <S N="Expected">'a value'</S>
                                    <S N="Because">some rule triggered._x000D__x000A__x000D__x000A_ _x000D__x000A_RuleName                  Severity    ScriptName       Line Message_x000D__x000A_--------                  --------    ----------       ---- -------_x000D__x000A_PSAvoidTrailingWhitespace Information AppendCSVLog.ps1 5    Line has trailing whitespace_x000D__x000A_PSAvoidTrailingWhitespace Information AppendCSVLog.ps1 7    Line has trailing whitespace_x000D__x000A_PSAvoidTrailingWhitespace Information AppendCSVLog.ps1 13   Line has trailing whitespace_x000D__x000A__x000D__x000A_</S>
                                  </Props>
                                </Obj>
                              </Props>
                            </Obj>
                          </En>
                        </DCT>
                      </Obj>
                      <S N="FullyQualifiedErrorId">PesterAssertionFailed</S>
                      <Obj N="InvocationInfo" RefId="575">
                        <TNRef RefId="37" />
                        <ToString>System.Management.Automation.InvocationInfo</ToString>
                        <Props>
                          <Nil N="MyCommand" />
                          <Obj N="BoundParameters" RefId="576">
                            <TNRef RefId="38" />
                            <DCT />
                          </Obj>
                          <Obj N="UnboundArguments" RefId="577">
                            <TNRef RefId="31" />
                            <LST />
                          </Obj>
                          <I32 N="ScriptLineNumber">8392</I32>
                          <I32 N="OffsetInLine">13</I32>
                          <I64 N="HistoryId">18</I64>
                          <S N="ScriptName">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1</S>
                          <S N="Line">            throw $errorRecord_x000D__x000A_</S>
                          <S N="Statement">throw $errorRecord</S>
                          <S N="PositionMessage">At C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1:8392 char:13_x000D__x000A_+             throw $errorRecord_x000D__x000A_+             ~~~~~~~~~~~~~~~~~~</S>
                          <S N="PSScriptRoot">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1</S>
                          <S N="PSCommandPath">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1</S>
                          <S N="InvocationName"></S>
                          <I32 N="PipelineLength">0</I32>
                          <I32 N="PipelinePosition">0</I32>
                          <B N="ExpectingInput">false</B>
                          <Obj N="CommandOrigin" RefId="578">
                            <TNRef RefId="39" />
                            <ToString>Internal</ToString>
                            <I32>1</I32>
                          </Obj>
                          <Nil N="DisplayScriptPosition" />
                        </Props>
                        <MS>
                          <Obj N="ParameterValues" RefId="579">
                            <TNRef RefId="25" />
                            <DCT />
                          </Obj>
                        </MS>
                      </Obj>
                      <I32 N="ErrorCategory_Category">8</I32>
                      <S N="ErrorCategory_Activity"></S>
                      <S N="ErrorCategory_Reason">Exception</S>
                      <S N="ErrorCategory_TargetName">System.Collections.Generic.Dictionary`2[System.String,System.Object]</S>
                      <S N="ErrorCategory_TargetType">Dictionary`2</S>
                      <S N="ErrorCategory_Message">InvalidResult: (System.Collections.…ring,System.Object]:Dictionary`2) [], Exception</S>
                      <B N="SerializeExtendedInfo">false</B>
                      <S N="ErrorDetails_ScriptStackTrace">at Invoke-Assertion, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 8392_x000D__x000A_at Should&lt;End&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 8331_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1: line 125_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2024_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1985_x000D__x000A_at Invoke-ScriptBlock, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2157_x000D__x000A_at Invoke-TestItem, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1199_x000D__x000A_at Invoke-Block, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 835_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 893_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2024_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1985_x000D__x000A_at Invoke-ScriptBlock, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2160_x000D__x000A_at Invoke-Block, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 940_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 893_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2024_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1985_x000D__x000A_at Invoke-ScriptBlock, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2160_x000D__x000A_at Invoke-Block, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 940_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1688_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.ps1: line 3_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 3260_x000D__x000A_at Invoke-InNewScriptScope, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 3267_x000D__x000A_at Run-Test, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1691_x000D__x000A_at Invoke-Test, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2512_x000D__x000A_at Invoke-Pester&lt;End&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 5110_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Sampler\0.118.1\tasks\Invoke-Pester.pester.build.ps1: line 906_x000D__x000A_at *Task, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 629_x000D__x000A_at *Task, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 601_x000D__x000A_at *Task, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 601_x000D__x000A_at &lt;ScriptBlock&gt;&lt;End&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 787_x000D__x000A_at &lt;ScriptBlock&gt;&lt;Begin&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\build.ps1: line 532_x000D__x000A_at &lt;ScriptBlock&gt;, &lt;No file&gt;: line 1</S>
                      <Nil N="PSMessageDetails" />
                    </MS>
                  </Obj>
                </LST>
              </Obj>
              <Nil N="StandardOutput" />
              <TS N="Duration">PT0.0181511S</TS>
              <S N="ItemType">Test</S>
              <S N="Id">120:5</S>
              <S N="GroupId">120:5</S>
              <SBK N="ScriptBlock">_x000D__x000A_        $functionFile = Get-ChildItem -Path $sourcePath -Recurse -Include "$Name.ps1"_x000D__x000A__x000D__x000A_        $pssaResult = (Invoke-ScriptAnalyzer -Path $functionFile.FullName)_x000D__x000A_        $report = $pssaResult | Format-Table -AutoSize | Out-String -Width 110_x000D__x000A_        $pssaResult | Should -BeNullOrEmpty -Because `_x000D__x000A_            "some rule triggered.`r`n`r`n $report"_x000D__x000A_    </SBK>
              <Nil N="Tag" />
              <B N="Focus">false</B>
              <B N="Skip">false</B>
              <Ref N="Block" RefId="60" />
              <B N="First">false</B>
              <B N="Last">false</B>
              <B N="Include">false</B>
              <B N="Exclude">false</B>
              <B N="Explicit">false</B>
              <B N="ShouldRun">true</B>
              <I32 N="StartLine">120</I32>
              <B N="Executed">true</B>
              <DT N="ExecutedAt">2024-08-03T17:35:50.5203069-07:00</DT>
              <B N="Passed">false</B>
              <B N="Skipped">false</B>
              <B N="Inconclusive">false</B>
              <TS N="UserDuration">PT0.0132277S</TS>
              <TS N="FrameworkDuration">PT0.0049234S</TS>
              <Nil N="PluginData" />
              <Nil N="FrameworkData" />
            </Props>
          </Obj>
          <Obj RefId="580">
            <TNRef RefId="30" />
            <ToString>[-] Should pass Script Analyzer for CreateEventLogSource</ToString>
            <Props>
              <S N="Name">Should pass Script Analyzer for &lt;Name&gt;</S>
              <Obj N="Path" RefId="581">
                <TNRef RefId="28" />
                <LST>
                  <S>Quality for module</S>
                  <S>Should pass Script Analyzer for &lt;Name&gt;</S>
                </LST>
              </Obj>
              <Ref N="Data" RefId="389" />
              <S N="ExpandedName">Should pass Script Analyzer for CreateEventLogSource</S>
              <S N="ExpandedPath">Quality for module.Should pass Script Analyzer for CreateEventLogSource</S>
              <S N="Result">Failed</S>
              <Obj N="ErrorRecord" RefId="582">
                <TNRef RefId="31" />
                <LST>
                  <Obj RefId="583">
                    <TNRef RefId="33" />
                    <ToString>Expected $null or empty, because some rule triggered._x000D__x000A__x000D__x000A_ _x000D__x000A_RuleName              Severity ScriptName               Line Message_x000D__x000A_--------              -------- ----------               ---- -------_x000D__x000A_PSAvoidUsingWriteHost Warning  CreateEventLogSource.ps1 9    File 'CreateEventLogSource.ps1' uses Write-Host._x000D__x000A_                                                             Avoid using Write-Host it might not work_x000D__x000A_                                                             in all hosts, does not work when there is no_x000D__x000A_                                                             host, and (prior to PS 5.0) cannot be_x000D__x000A_                                                             suppressed, captured, or redirected. Instead,_x000D__x000A_                                                             use Write-Output, Write-Verbose, or_x000D__x000A_                                                             Write-Information., but got File 'CreateEventLogSource.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information..</ToString>
                    <MS>
                      <S N="DisplayErrorMessage">Expected $null or empty, because some rule triggered._x000D__x000A_ _x000D__x000A_RuleName              Severity ScriptName               Line Message_x000D__x000A_--------              -------- ----------               ---- -------_x000D__x000A_PSAvoidUsingWriteHost Warning  CreateEventLogSource.ps1 9    File 'CreateEventLogSource.ps1' uses Write-Host._x000D__x000A_                                                             Avoid using Write-Host it might not work_x000D__x000A_                                                             in all hosts, does not work when there is no_x000D__x000A_                                                             host, and (prior to PS 5.0) cannot be_x000D__x000A_                                                             suppressed, captured, or redirected. Instead,_x000D__x000A_                                                             use Write-Output, Write-Verbose, or_x000D__x000A_                                                             Write-Information., but got File 'CreateEventLogSource.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information..</S>
                      <S N="DisplayStackTrace">at $pssaResult | Should -BeNullOrEmpty -Because `, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:125_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:125</S>
                      <Obj N="Exception" RefId="584">
                        <TNRef RefId="60" />
                        <ToString>System.Exception: Expected $null or empty, because some rule triggered._x000D__x000A__x000D__x000A_ _x000D__x000A_RuleName              Severity ScriptName               Line Message_x000D__x000A_--------              -------- ----------               ---- -------_x000D__x000A_PSAvoidUsingWriteHost Warning  CreateEventLogSource.ps1 9    File 'CreateEventLogSource.ps1' uses Write-Host._x000D__x000A_                                                             Avoid using Write-Host it might not work_x000D__x000A_                                                             in all hosts, does not work when there is no_x000D__x000A_                                                             host, and (prior to PS 5.0) cannot be_x000D__x000A_                                                             suppressed, captured, or redirected. Instead,_x000D__x000A_                                                             use Write-Output, Write-Verbose, or_x000D__x000A_                                                             Write-Information., but got File 'CreateEventLogSource.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information..</ToString>
                        <Props>
                          <Nil N="TargetSite" />
                          <S N="Message">Expected $null or empty, because some rule triggered._x000D__x000A__x000D__x000A_ _x000D__x000A_RuleName              Severity ScriptName               Line Message_x000D__x000A_--------              -------- ----------               ---- -------_x000D__x000A_PSAvoidUsingWriteHost Warning  CreateEventLogSource.ps1 9    File 'CreateEventLogSource.ps1' uses Write-Host._x000D__x000A_                                                             Avoid using Write-Host it might not work_x000D__x000A_                                                             in all hosts, does not work when there is no_x000D__x000A_                                                             host, and (prior to PS 5.0) cannot be_x000D__x000A_                                                             suppressed, captured, or redirected. Instead,_x000D__x000A_                                                             use Write-Output, Write-Verbose, or_x000D__x000A_                                                             Write-Information., but got File 'CreateEventLogSource.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information..</S>
                          <Obj N="Data" RefId="585">
                            <TNRef RefId="35" />
                            <DCT />
                          </Obj>
                          <Nil N="InnerException" />
                          <Nil N="HelpLink" />
                          <Nil N="Source" />
                          <I32 N="HResult">-2146233088</I32>
                          <Nil N="StackTrace" />
                        </Props>
                      </Obj>
                      <Obj N="TargetObject" RefId="586">
                        <TNRef RefId="38" />
                        <DCT>
                          <En>
                            <S N="Key">Message</S>
                            <S N="Value">Expected $null or empty, because some rule triggered._x000D__x000A__x000D__x000A_ _x000D__x000A_RuleName              Severity ScriptName               Line Message_x000D__x000A_--------              -------- ----------               ---- -------_x000D__x000A_PSAvoidUsingWriteHost Warning  CreateEventLogSource.ps1 9    File 'CreateEventLogSource.ps1' uses Write-Host._x000D__x000A_                                                             Avoid using Write-Host it might not work_x000D__x000A_                                                             in all hosts, does not work when there is no_x000D__x000A_                                                             host, and (prior to PS 5.0) cannot be_x000D__x000A_                                                             suppressed, captured, or redirected. Instead,_x000D__x000A_                                                             use Write-Output, Write-Verbose, or_x000D__x000A_                                                             Write-Information., but got File 'CreateEventLogSource.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information..</S>
                          </En>
                          <En>
                            <S N="Key">File</S>
                            <S N="Value">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1</S>
                          </En>
                          <En>
                            <S N="Key">Line</S>
                            <S N="Value">125</S>
                          </En>
                          <En>
                            <S N="Key">LineText</S>
                            <S N="Value">        $pssaResult | Should -BeNullOrEmpty -Because `</S>
                          </En>
                          <En>
                            <S N="Key">Terminating</S>
                            <B N="Value">true</B>
                          </En>
                          <En>
                            <S N="Key">ShouldResult</S>
                            <Obj N="Value" RefId="587">
                              <TNRef RefId="61" />
                              <ToString>Pester.ShouldResult</ToString>
                              <Props>
                                <B N="Succeeded">false</B>
                                <S N="FailureMessage">Expected $null or empty, because some rule triggered._x000D__x000A__x000D__x000A_ _x000D__x000A_RuleName              Severity ScriptName               Line Message_x000D__x000A_--------              -------- ----------               ---- -------_x000D__x000A_PSAvoidUsingWriteHost Warning  CreateEventLogSource.ps1 9    File 'CreateEventLogSource.ps1' uses Write-Host._x000D__x000A_                                                             Avoid using Write-Host it might not work_x000D__x000A_                                                             in all hosts, does not work when there is no_x000D__x000A_                                                             host, and (prior to PS 5.0) cannot be_x000D__x000A_                                                             suppressed, captured, or redirected. Instead,_x000D__x000A_                                                             use Write-Output, Write-Verbose, or_x000D__x000A_                                                             Write-Information., but got File 'CreateEventLogSource.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information..</S>
                                <Obj N="ExpectResult" RefId="588">
                                  <TNRef RefId="62" />
                                  <ToString>Expected: 'a value' Actual: @(File 'CreateEventLogSource.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information.) Because: some rule triggered._x000D__x000A__x000D__x000A_ _x000D__x000A_RuleName              Severity ScriptName               Line Message_x000D__x000A_--------              -------- ----------               ---- -------_x000D__x000A_PSAvoidUsingWriteHost Warning  CreateEventLogSource.ps1 9    File 'CreateEventLogSource.ps1' uses Write-Host._x000D__x000A_                                                             Avoid using Write-Host because it might not work_x000D__x000A_                                                             in all hosts, does not work when there is no_x000D__x000A_                                                             host, and (prior to PS 5.0) cannot be_x000D__x000A_                                                             suppressed, captured, or redirected. Instead,_x000D__x000A_                                                             use Write-Output, Write-Verbose, or_x000D__x000A_                                                             Write-Information._x000D__x000A__x000D__x000A_</ToString>
                                  <Props>
                                    <S N="Actual">@(File 'CreateEventLogSource.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information.)</S>
                                    <S N="Expected">'a value'</S>
                                    <S N="Because">some rule triggered._x000D__x000A__x000D__x000A_ _x000D__x000A_RuleName              Severity ScriptName               Line Message_x000D__x000A_--------              -------- ----------               ---- -------_x000D__x000A_PSAvoidUsingWriteHost Warning  CreateEventLogSource.ps1 9    File 'CreateEventLogSource.ps1' uses Write-Host._x000D__x000A_                                                             Avoid using Write-Host because it might not work_x000D__x000A_                                                             in all hosts, does not work when there is no_x000D__x000A_                                                             host, and (prior to PS 5.0) cannot be_x000D__x000A_                                                             suppressed, captured, or redirected. Instead,_x000D__x000A_                                                             use Write-Output, Write-Verbose, or_x000D__x000A_                                                             Write-Information._x000D__x000A__x000D__x000A_</S>
                                  </Props>
                                </Obj>
                              </Props>
                            </Obj>
                          </En>
                        </DCT>
                      </Obj>
                      <S N="FullyQualifiedErrorId">PesterAssertionFailed</S>
                      <Obj N="InvocationInfo" RefId="589">
                        <TNRef RefId="37" />
                        <ToString>System.Management.Automation.InvocationInfo</ToString>
                        <Props>
                          <Nil N="MyCommand" />
                          <Obj N="BoundParameters" RefId="590">
                            <TNRef RefId="38" />
                            <DCT />
                          </Obj>
                          <Obj N="UnboundArguments" RefId="591">
                            <TNRef RefId="31" />
                            <LST />
                          </Obj>
                          <I32 N="ScriptLineNumber">8392</I32>
                          <I32 N="OffsetInLine">13</I32>
                          <I64 N="HistoryId">18</I64>
                          <S N="ScriptName">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1</S>
                          <S N="Line">            throw $errorRecord_x000D__x000A_</S>
                          <S N="Statement">throw $errorRecord</S>
                          <S N="PositionMessage">At C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1:8392 char:13_x000D__x000A_+             throw $errorRecord_x000D__x000A_+             ~~~~~~~~~~~~~~~~~~</S>
                          <S N="PSScriptRoot">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1</S>
                          <S N="PSCommandPath">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1</S>
                          <S N="InvocationName"></S>
                          <I32 N="PipelineLength">0</I32>
                          <I32 N="PipelinePosition">0</I32>
                          <B N="ExpectingInput">false</B>
                          <Obj N="CommandOrigin" RefId="592">
                            <TNRef RefId="39" />
                            <ToString>Internal</ToString>
                            <I32>1</I32>
                          </Obj>
                          <Nil N="DisplayScriptPosition" />
                        </Props>
                        <MS>
                          <Obj N="ParameterValues" RefId="593">
                            <TNRef RefId="25" />
                            <DCT />
                          </Obj>
                        </MS>
                      </Obj>
                      <I32 N="ErrorCategory_Category">8</I32>
                      <S N="ErrorCategory_Activity"></S>
                      <S N="ErrorCategory_Reason">Exception</S>
                      <S N="ErrorCategory_TargetName">System.Collections.Generic.Dictionary`2[System.String,System.Object]</S>
                      <S N="ErrorCategory_TargetType">Dictionary`2</S>
                      <S N="ErrorCategory_Message">InvalidResult: (System.Collections.…ring,System.Object]:Dictionary`2) [], Exception</S>
                      <B N="SerializeExtendedInfo">false</B>
                      <S N="ErrorDetails_ScriptStackTrace">at Invoke-Assertion, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 8392_x000D__x000A_at Should&lt;End&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 8331_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1: line 125_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2024_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1985_x000D__x000A_at Invoke-ScriptBlock, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2157_x000D__x000A_at Invoke-TestItem, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1199_x000D__x000A_at Invoke-Block, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 835_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 893_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2024_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1985_x000D__x000A_at Invoke-ScriptBlock, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2160_x000D__x000A_at Invoke-Block, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 940_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 893_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2024_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1985_x000D__x000A_at Invoke-ScriptBlock, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2160_x000D__x000A_at Invoke-Block, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 940_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1688_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.ps1: line 3_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 3260_x000D__x000A_at Invoke-InNewScriptScope, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 3267_x000D__x000A_at Run-Test, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1691_x000D__x000A_at Invoke-Test, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2512_x000D__x000A_at Invoke-Pester&lt;End&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 5110_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Sampler\0.118.1\tasks\Invoke-Pester.pester.build.ps1: line 906_x000D__x000A_at *Task, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 629_x000D__x000A_at *Task, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 601_x000D__x000A_at *Task, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 601_x000D__x000A_at &lt;ScriptBlock&gt;&lt;End&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 787_x000D__x000A_at &lt;ScriptBlock&gt;&lt;Begin&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\build.ps1: line 532_x000D__x000A_at &lt;ScriptBlock&gt;, &lt;No file&gt;: line 1</S>
                      <Nil N="PSMessageDetails" />
                    </MS>
                  </Obj>
                </LST>
              </Obj>
              <Nil N="StandardOutput" />
              <TS N="Duration">PT0.025413S</TS>
              <S N="ItemType">Test</S>
              <S N="Id">120:5</S>
              <S N="GroupId">120:5</S>
              <SBK N="ScriptBlock">_x000D__x000A_        $functionFile = Get-ChildItem -Path $sourcePath -Recurse -Include "$Name.ps1"_x000D__x000A__x000D__x000A_        $pssaResult = (Invoke-ScriptAnalyzer -Path $functionFile.FullName)_x000D__x000A_        $report = $pssaResult | Format-Table -AutoSize | Out-String -Width 110_x000D__x000A_        $pssaResult | Should -BeNullOrEmpty -Because `_x000D__x000A_            "some rule triggered.`r`n`r`n $report"_x000D__x000A_    </SBK>
              <Nil N="Tag" />
              <B N="Focus">false</B>
              <B N="Skip">false</B>
              <Ref N="Block" RefId="60" />
              <B N="First">false</B>
              <B N="Last">false</B>
              <B N="Include">false</B>
              <B N="Exclude">false</B>
              <B N="Explicit">false</B>
              <B N="ShouldRun">true</B>
              <I32 N="StartLine">120</I32>
              <B N="Executed">true</B>
              <DT N="ExecutedAt">2024-08-03T17:35:50.5384836-07:00</DT>
              <B N="Passed">false</B>
              <B N="Skipped">false</B>
              <B N="Inconclusive">false</B>
              <TS N="UserDuration">PT0.0203305S</TS>
              <TS N="FrameworkDuration">PT0.0050825S</TS>
              <Nil N="PluginData" />
              <Nil N="FrameworkData" />
            </Props>
          </Obj>
          <Obj RefId="594">
            <TNRef RefId="30" />
            <ToString>[-] Should pass Script Analyzer for CreateEventSourceAndLog</ToString>
            <Props>
              <S N="Name">Should pass Script Analyzer for &lt;Name&gt;</S>
              <Obj N="Path" RefId="595">
                <TNRef RefId="28" />
                <LST>
                  <S>Quality for module</S>
                  <S>Should pass Script Analyzer for &lt;Name&gt;</S>
                </LST>
              </Obj>
              <Ref N="Data" RefId="404" />
              <S N="ExpandedName">Should pass Script Analyzer for CreateEventSourceAndLog</S>
              <S N="ExpandedPath">Quality for module.Should pass Script Analyzer for CreateEventSourceAndLog</S>
              <S N="Result">Failed</S>
              <Obj N="ErrorRecord" RefId="596">
                <TNRef RefId="31" />
                <LST>
                  <Obj RefId="597">
                    <TNRef RefId="33" />
                    <ToString>Expected $null or empty, because some rule triggered._x000D__x000A__x000D__x000A_ _x000D__x000A_RuleName                  Severity    ScriptName                  Line Message_x000D__x000A_--------                  --------    ----------                  ---- -------_x000D__x000A_PSAvoidTrailingWhitespace Information CreateEventSourceAndLog.ps1 5    Line has trailing whitespace_x000D__x000A_PSAvoidTrailingWhitespace Information CreateEventSourceAndLog.ps1 8    Line has trailing whitespace_x000D__x000A_PSAvoidTrailingWhitespace Information CreateEventSourceAndLog.ps1 16   Line has trailing whitespace_x000D__x000A_PSAvoidTrailingWhitespace Information CreateEventSourceAndLog.ps1 17   Line has trailing whitespace_x000D__x000A_PSAvoidTrailingWhitespace Information CreateEventSourceAndLog.ps1 28   Line has trailing whitespace_x000D__x000A_PSAvoidTrailingWhitespace Information CreateEventSourceAndLog.ps1 29   Line has trailing whitespace_x000D__x000A_PSAvoidUsingWriteHost     Warning     CreateEventSourceAndLog.ps1 44   File 'CreateEventSourceAndLog.ps1'_x000D__x000A_                                                                       uses Write-Host. Avoid using_x000D__x000A_                                                                       Write-Host it might not work_x000D__x000A_                                                                       in all hosts, does not work when there_x000D__x000A_                                                                       is no host, and (prior to PS 5.0)_x000D__x000A_                                                                       cannot be suppressed, captured, or_x000D__x000A_                                                                       redirected. Instead, use Write-Output,_x000D__x000A_                                                                       Write-Verbose, or Write-Information., but got @(Line has trailing whitespace, Line has trailing whitespace, Line has trailing whitespace, Line has trailing whitespace, Line has trailing whitespace, Line has trailing whitespace, File 'CreateEventSourceAndLog.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information.).</ToString>
                    <MS>
                      <S N="DisplayErrorMessage">Expected $null or empty, because some rule triggered._x000D__x000A_ _x000D__x000A_RuleName                  Severity    ScriptName                  Line Message_x000D__x000A_--------                  --------    ----------                  ---- -------_x000D__x000A_PSAvoidTrailingWhitespace Information CreateEventSourceAndLog.ps1 5    Line has trailing whitespace_x000D__x000A_PSAvoidTrailingWhitespace Information CreateEventSourceAndLog.ps1 8    Line has trailing whitespace_x000D__x000A_PSAvoidTrailingWhitespace Information CreateEventSourceAndLog.ps1 16   Line has trailing whitespace_x000D__x000A_PSAvoidTrailingWhitespace Information CreateEventSourceAndLog.ps1 17   Line has trailing whitespace_x000D__x000A_PSAvoidTrailingWhitespace Information CreateEventSourceAndLog.ps1 28   Line has trailing whitespace_x000D__x000A_PSAvoidTrailingWhitespace Information CreateEventSourceAndLog.ps1 29   Line has trailing whitespace_x000D__x000A_PSAvoidUsingWriteHost     Warning     CreateEventSourceAndLog.ps1 44   File 'CreateEventSourceAndLog.ps1'_x000D__x000A_                                                                       uses Write-Host. Avoid using_x000D__x000A_                                                                       Write-Host it might not work_x000D__x000A_                                                                       in all hosts, does not work when there_x000D__x000A_                                                                       is no host, and (prior to PS 5.0)_x000D__x000A_                                                                       cannot be suppressed, captured, or_x000D__x000A_                                                                       redirected. Instead, use Write-Output,_x000D__x000A_                                                                       Write-Verbose, or Write-Information., but got @(Line has trailing whitespace, Line has trailing whitespace, Line has trailing whitespace, Line has trailing whitespace, Line has trailing whitespace, Line has trailing whitespace, File 'CreateEventSourceAndLog.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information.).</S>
                      <S N="DisplayStackTrace">at $pssaResult | Should -BeNullOrEmpty -Because `, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:125_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:125</S>
                      <Obj N="Exception" RefId="598">
                        <TNRef RefId="60" />
                        <ToString>System.Exception: Expected $null or empty, because some rule triggered._x000D__x000A__x000D__x000A_ _x000D__x000A_RuleName                  Severity    ScriptName                  Line Message_x000D__x000A_--------                  --------    ----------                  ---- -------_x000D__x000A_PSAvoidTrailingWhitespace Information CreateEventSourceAndLog.ps1 5    Line has trailing whitespace_x000D__x000A_PSAvoidTrailingWhitespace Information CreateEventSourceAndLog.ps1 8    Line has trailing whitespace_x000D__x000A_PSAvoidTrailingWhitespace Information CreateEventSourceAndLog.ps1 16   Line has trailing whitespace_x000D__x000A_PSAvoidTrailingWhitespace Information CreateEventSourceAndLog.ps1 17   Line has trailing whitespace_x000D__x000A_PSAvoidTrailingWhitespace Information CreateEventSourceAndLog.ps1 28   Line has trailing whitespace_x000D__x000A_PSAvoidTrailingWhitespace Information CreateEventSourceAndLog.ps1 29   Line has trailing whitespace_x000D__x000A_PSAvoidUsingWriteHost     Warning     CreateEventSourceAndLog.ps1 44   File 'CreateEventSourceAndLog.ps1'_x000D__x000A_                                                                       uses Write-Host. Avoid using_x000D__x000A_                                                                       Write-Host it might not work_x000D__x000A_                                                                       in all hosts, does not work when there_x000D__x000A_                                                                       is no host, and (prior to PS 5.0)_x000D__x000A_                                                                       cannot be suppressed, captured, or_x000D__x000A_                                                                       redirected. Instead, use Write-Output,_x000D__x000A_                                                                       Write-Verbose, or Write-Information., but got @(Line has trailing whitespace, Line has trailing whitespace, Line has trailing whitespace, Line has trailing whitespace, Line has trailing whitespace, Line has trailing whitespace, File 'CreateEventSourceAndLog.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information.).</ToString>
                        <Props>
                          <Nil N="TargetSite" />
                          <S N="Message">Expected $null or empty, because some rule triggered._x000D__x000A__x000D__x000A_ _x000D__x000A_RuleName                  Severity    ScriptName                  Line Message_x000D__x000A_--------                  --------    ----------                  ---- -------_x000D__x000A_PSAvoidTrailingWhitespace Information CreateEventSourceAndLog.ps1 5    Line has trailing whitespace_x000D__x000A_PSAvoidTrailingWhitespace Information CreateEventSourceAndLog.ps1 8    Line has trailing whitespace_x000D__x000A_PSAvoidTrailingWhitespace Information CreateEventSourceAndLog.ps1 16   Line has trailing whitespace_x000D__x000A_PSAvoidTrailingWhitespace Information CreateEventSourceAndLog.ps1 17   Line has trailing whitespace_x000D__x000A_PSAvoidTrailingWhitespace Information CreateEventSourceAndLog.ps1 28   Line has trailing whitespace_x000D__x000A_PSAvoidTrailingWhitespace Information CreateEventSourceAndLog.ps1 29   Line has trailing whitespace_x000D__x000A_PSAvoidUsingWriteHost     Warning     CreateEventSourceAndLog.ps1 44   File 'CreateEventSourceAndLog.ps1'_x000D__x000A_                                                                       uses Write-Host. Avoid using_x000D__x000A_                                                                       Write-Host it might not work_x000D__x000A_                                                                       in all hosts, does not work when there_x000D__x000A_                                                                       is no host, and (prior to PS 5.0)_x000D__x000A_                                                                       cannot be suppressed, captured, or_x000D__x000A_                                                                       redirected. Instead, use Write-Output,_x000D__x000A_                                                                       Write-Verbose, or Write-Information., but got @(Line has trailing whitespace, Line has trailing whitespace, Line has trailing whitespace, Line has trailing whitespace, Line has trailing whitespace, Line has trailing whitespace, File 'CreateEventSourceAndLog.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information.).</S>
                          <Obj N="Data" RefId="599">
                            <TNRef RefId="35" />
                            <DCT />
                          </Obj>
                          <Nil N="InnerException" />
                          <Nil N="HelpLink" />
                          <Nil N="Source" />
                          <I32 N="HResult">-2146233088</I32>
                          <Nil N="StackTrace" />
                        </Props>
                      </Obj>
                      <Obj N="TargetObject" RefId="600">
                        <TNRef RefId="38" />
                        <DCT>
                          <En>
                            <S N="Key">Message</S>
                            <S N="Value">Expected $null or empty, because some rule triggered._x000D__x000A__x000D__x000A_ _x000D__x000A_RuleName                  Severity    ScriptName                  Line Message_x000D__x000A_--------                  --------    ----------                  ---- -------_x000D__x000A_PSAvoidTrailingWhitespace Information CreateEventSourceAndLog.ps1 5    Line has trailing whitespace_x000D__x000A_PSAvoidTrailingWhitespace Information CreateEventSourceAndLog.ps1 8    Line has trailing whitespace_x000D__x000A_PSAvoidTrailingWhitespace Information CreateEventSourceAndLog.ps1 16   Line has trailing whitespace_x000D__x000A_PSAvoidTrailingWhitespace Information CreateEventSourceAndLog.ps1 17   Line has trailing whitespace_x000D__x000A_PSAvoidTrailingWhitespace Information CreateEventSourceAndLog.ps1 28   Line has trailing whitespace_x000D__x000A_PSAvoidTrailingWhitespace Information CreateEventSourceAndLog.ps1 29   Line has trailing whitespace_x000D__x000A_PSAvoidUsingWriteHost     Warning     CreateEventSourceAndLog.ps1 44   File 'CreateEventSourceAndLog.ps1'_x000D__x000A_                                                                       uses Write-Host. Avoid using_x000D__x000A_                                                                       Write-Host it might not work_x000D__x000A_                                                                       in all hosts, does not work when there_x000D__x000A_                                                                       is no host, and (prior to PS 5.0)_x000D__x000A_                                                                       cannot be suppressed, captured, or_x000D__x000A_                                                                       redirected. Instead, use Write-Output,_x000D__x000A_                                                                       Write-Verbose, or Write-Information., but got @(Line has trailing whitespace, Line has trailing whitespace, Line has trailing whitespace, Line has trailing whitespace, Line has trailing whitespace, Line has trailing whitespace, File 'CreateEventSourceAndLog.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information.).</S>
                          </En>
                          <En>
                            <S N="Key">File</S>
                            <S N="Value">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1</S>
                          </En>
                          <En>
                            <S N="Key">Line</S>
                            <S N="Value">125</S>
                          </En>
                          <En>
                            <S N="Key">LineText</S>
                            <S N="Value">        $pssaResult | Should -BeNullOrEmpty -Because `</S>
                          </En>
                          <En>
                            <S N="Key">Terminating</S>
                            <B N="Value">true</B>
                          </En>
                          <En>
                            <S N="Key">ShouldResult</S>
                            <Obj N="Value" RefId="601">
                              <TNRef RefId="61" />
                              <ToString>Pester.ShouldResult</ToString>
                              <Props>
                                <B N="Succeeded">false</B>
                                <S N="FailureMessage">Expected $null or empty, because some rule triggered._x000D__x000A__x000D__x000A_ _x000D__x000A_RuleName                  Severity    ScriptName                  Line Message_x000D__x000A_--------                  --------    ----------                  ---- -------_x000D__x000A_PSAvoidTrailingWhitespace Information CreateEventSourceAndLog.ps1 5    Line has trailing whitespace_x000D__x000A_PSAvoidTrailingWhitespace Information CreateEventSourceAndLog.ps1 8    Line has trailing whitespace_x000D__x000A_PSAvoidTrailingWhitespace Information CreateEventSourceAndLog.ps1 16   Line has trailing whitespace_x000D__x000A_PSAvoidTrailingWhitespace Information CreateEventSourceAndLog.ps1 17   Line has trailing whitespace_x000D__x000A_PSAvoidTrailingWhitespace Information CreateEventSourceAndLog.ps1 28   Line has trailing whitespace_x000D__x000A_PSAvoidTrailingWhitespace Information CreateEventSourceAndLog.ps1 29   Line has trailing whitespace_x000D__x000A_PSAvoidUsingWriteHost     Warning     CreateEventSourceAndLog.ps1 44   File 'CreateEventSourceAndLog.ps1'_x000D__x000A_                                                                       uses Write-Host. Avoid using_x000D__x000A_                                                                       Write-Host it might not work_x000D__x000A_                                                                       in all hosts, does not work when there_x000D__x000A_                                                                       is no host, and (prior to PS 5.0)_x000D__x000A_                                                                       cannot be suppressed, captured, or_x000D__x000A_                                                                       redirected. Instead, use Write-Output,_x000D__x000A_                                                                       Write-Verbose, or Write-Information., but got @(Line has trailing whitespace, Line has trailing whitespace, Line has trailing whitespace, Line has trailing whitespace, Line has trailing whitespace, Line has trailing whitespace, File 'CreateEventSourceAndLog.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information.).</S>
                                <Obj N="ExpectResult" RefId="602">
                                  <TNRef RefId="62" />
                                  <ToString>Expected: 'a value' Actual: @(Line has trailing whitespace, Line has trailing whitespace, Line has trailing whitespace, Line has trailing whitespace, Line has trailing whitespace, Line has trailing whitespace, File 'CreateEventSourceAndLog.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information.) Because: some rule triggered._x000D__x000A__x000D__x000A_ _x000D__x000A_RuleName                  Severity    ScriptName                  Line Message_x000D__x000A_--------                  --------    ----------                  ---- -------_x000D__x000A_PSAvoidTrailingWhitespace Information CreateEventSourceAndLog.ps1 5    Line has trailing whitespace_x000D__x000A_PSAvoidTrailingWhitespace Information CreateEventSourceAndLog.ps1 8    Line has trailing whitespace_x000D__x000A_PSAvoidTrailingWhitespace Information CreateEventSourceAndLog.ps1 16   Line has trailing whitespace_x000D__x000A_PSAvoidTrailingWhitespace Information CreateEventSourceAndLog.ps1 17   Line has trailing whitespace_x000D__x000A_PSAvoidTrailingWhitespace Information CreateEventSourceAndLog.ps1 28   Line has trailing whitespace_x000D__x000A_PSAvoidTrailingWhitespace Information CreateEventSourceAndLog.ps1 29   Line has trailing whitespace_x000D__x000A_PSAvoidUsingWriteHost     Warning     CreateEventSourceAndLog.ps1 44   File 'CreateEventSourceAndLog.ps1'_x000D__x000A_                                                                       uses Write-Host. Avoid using_x000D__x000A_                                                                       Write-Host because it might not work_x000D__x000A_                                                                       in all hosts, does not work when there_x000D__x000A_                                                                       is no host, and (prior to PS 5.0)_x000D__x000A_                                                                       cannot be suppressed, captured, or_x000D__x000A_                                                                       redirected. Instead, use Write-Output,_x000D__x000A_                                                                       Write-Verbose, or Write-Information._x000D__x000A__x000D__x000A_</ToString>
                                  <Props>
                                    <S N="Actual">@(Line has trailing whitespace, Line has trailing whitespace, Line has trailing whitespace, Line has trailing whitespace, Line has trailing whitespace, Line has trailing whitespace, File 'CreateEventSourceAndLog.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information.)</S>
                                    <S N="Expected">'a value'</S>
                                    <S N="Because">some rule triggered._x000D__x000A__x000D__x000A_ _x000D__x000A_RuleName                  Severity    ScriptName                  Line Message_x000D__x000A_--------                  --------    ----------                  ---- -------_x000D__x000A_PSAvoidTrailingWhitespace Information CreateEventSourceAndLog.ps1 5    Line has trailing whitespace_x000D__x000A_PSAvoidTrailingWhitespace Information CreateEventSourceAndLog.ps1 8    Line has trailing whitespace_x000D__x000A_PSAvoidTrailingWhitespace Information CreateEventSourceAndLog.ps1 16   Line has trailing whitespace_x000D__x000A_PSAvoidTrailingWhitespace Information CreateEventSourceAndLog.ps1 17   Line has trailing whitespace_x000D__x000A_PSAvoidTrailingWhitespace Information CreateEventSourceAndLog.ps1 28   Line has trailing whitespace_x000D__x000A_PSAvoidTrailingWhitespace Information CreateEventSourceAndLog.ps1 29   Line has trailing whitespace_x000D__x000A_PSAvoidUsingWriteHost     Warning     CreateEventSourceAndLog.ps1 44   File 'CreateEventSourceAndLog.ps1'_x000D__x000A_                                                                       uses Write-Host. Avoid using_x000D__x000A_                                                                       Write-Host because it might not work_x000D__x000A_                                                                       in all hosts, does not work when there_x000D__x000A_                                                                       is no host, and (prior to PS 5.0)_x000D__x000A_                                                                       cannot be suppressed, captured, or_x000D__x000A_                                                                       redirected. Instead, use Write-Output,_x000D__x000A_                                                                       Write-Verbose, or Write-Information._x000D__x000A__x000D__x000A_</S>
                                  </Props>
                                </Obj>
                              </Props>
                            </Obj>
                          </En>
                        </DCT>
                      </Obj>
                      <S N="FullyQualifiedErrorId">PesterAssertionFailed</S>
                      <Obj N="InvocationInfo" RefId="603">
                        <TNRef RefId="37" />
                        <ToString>System.Management.Automation.InvocationInfo</ToString>
                        <Props>
                          <Nil N="MyCommand" />
                          <Obj N="BoundParameters" RefId="604">
                            <TNRef RefId="38" />
                            <DCT />
                          </Obj>
                          <Obj N="UnboundArguments" RefId="605">
                            <TNRef RefId="31" />
                            <LST />
                          </Obj>
                          <I32 N="ScriptLineNumber">8392</I32>
                          <I32 N="OffsetInLine">13</I32>
                          <I64 N="HistoryId">18</I64>
                          <S N="ScriptName">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1</S>
                          <S N="Line">            throw $errorRecord_x000D__x000A_</S>
                          <S N="Statement">throw $errorRecord</S>
                          <S N="PositionMessage">At C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1:8392 char:13_x000D__x000A_+             throw $errorRecord_x000D__x000A_+             ~~~~~~~~~~~~~~~~~~</S>
                          <S N="PSScriptRoot">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1</S>
                          <S N="PSCommandPath">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1</S>
                          <S N="InvocationName"></S>
                          <I32 N="PipelineLength">0</I32>
                          <I32 N="PipelinePosition">0</I32>
                          <B N="ExpectingInput">false</B>
                          <Obj N="CommandOrigin" RefId="606">
                            <TNRef RefId="39" />
                            <ToString>Internal</ToString>
                            <I32>1</I32>
                          </Obj>
                          <Nil N="DisplayScriptPosition" />
                        </Props>
                        <MS>
                          <Obj N="ParameterValues" RefId="607">
                            <TNRef RefId="25" />
                            <DCT />
                          </Obj>
                        </MS>
                      </Obj>
                      <I32 N="ErrorCategory_Category">8</I32>
                      <S N="ErrorCategory_Activity"></S>
                      <S N="ErrorCategory_Reason">Exception</S>
                      <S N="ErrorCategory_TargetName">System.Collections.Generic.Dictionary`2[System.String,System.Object]</S>
                      <S N="ErrorCategory_TargetType">Dictionary`2</S>
                      <S N="ErrorCategory_Message">InvalidResult: (System.Collections.…ring,System.Object]:Dictionary`2) [], Exception</S>
                      <B N="SerializeExtendedInfo">false</B>
                      <S N="ErrorDetails_ScriptStackTrace">at Invoke-Assertion, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 8392_x000D__x000A_at Should&lt;End&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 8331_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1: line 125_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2024_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1985_x000D__x000A_at Invoke-ScriptBlock, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2157_x000D__x000A_at Invoke-TestItem, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1199_x000D__x000A_at Invoke-Block, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 835_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 893_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2024_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1985_x000D__x000A_at Invoke-ScriptBlock, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2160_x000D__x000A_at Invoke-Block, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 940_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 893_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2024_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1985_x000D__x000A_at Invoke-ScriptBlock, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2160_x000D__x000A_at Invoke-Block, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 940_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1688_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.ps1: line 3_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 3260_x000D__x000A_at Invoke-InNewScriptScope, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 3267_x000D__x000A_at Run-Test, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1691_x000D__x000A_at Invoke-Test, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2512_x000D__x000A_at Invoke-Pester&lt;End&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 5110_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Sampler\0.118.1\tasks\Invoke-Pester.pester.build.ps1: line 906_x000D__x000A_at *Task, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 629_x000D__x000A_at *Task, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 601_x000D__x000A_at *Task, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 601_x000D__x000A_at &lt;ScriptBlock&gt;&lt;End&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 787_x000D__x000A_at &lt;ScriptBlock&gt;&lt;Begin&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\build.ps1: line 532_x000D__x000A_at &lt;ScriptBlock&gt;, &lt;No file&gt;: line 1</S>
                      <Nil N="PSMessageDetails" />
                    </MS>
                  </Obj>
                </LST>
              </Obj>
              <Nil N="StandardOutput" />
              <TS N="Duration">PT0.0348313S</TS>
              <S N="ItemType">Test</S>
              <S N="Id">120:5</S>
              <S N="GroupId">120:5</S>
              <SBK N="ScriptBlock">_x000D__x000A_        $functionFile = Get-ChildItem -Path $sourcePath -Recurse -Include "$Name.ps1"_x000D__x000A__x000D__x000A_        $pssaResult = (Invoke-ScriptAnalyzer -Path $functionFile.FullName)_x000D__x000A_        $report = $pssaResult | Format-Table -AutoSize | Out-String -Width 110_x000D__x000A_        $pssaResult | Should -BeNullOrEmpty -Because `_x000D__x000A_            "some rule triggered.`r`n`r`n $report"_x000D__x000A_    </SBK>
              <Nil N="Tag" />
              <B N="Focus">false</B>
              <B N="Skip">false</B>
              <Ref N="Block" RefId="60" />
              <B N="First">false</B>
              <B N="Last">false</B>
              <B N="Include">false</B>
              <B N="Exclude">false</B>
              <B N="Explicit">false</B>
              <B N="ShouldRun">true</B>
              <I32 N="StartLine">120</I32>
              <B N="Executed">true</B>
              <DT N="ExecutedAt">2024-08-03T17:35:50.5639361-07:00</DT>
              <B N="Passed">false</B>
              <B N="Skipped">false</B>
              <B N="Inconclusive">false</B>
              <TS N="UserDuration">PT0.0206276S</TS>
              <TS N="FrameworkDuration">PT0.0142037S</TS>
              <Nil N="PluginData" />
              <Nil N="FrameworkData" />
            </Props>
          </Obj>
          <Obj RefId="608">
            <TNRef RefId="30" />
            <ToString>[-] Should pass Script Analyzer for Export-Data</ToString>
            <Props>
              <S N="Name">Should pass Script Analyzer for &lt;Name&gt;</S>
              <Obj N="Path" RefId="609">
                <TNRef RefId="28" />
                <LST>
                  <S>Quality for module</S>
                  <S>Should pass Script Analyzer for &lt;Name&gt;</S>
                </LST>
              </Obj>
              <Ref N="Data" RefId="419" />
              <S N="ExpandedName">Should pass Script Analyzer for Export-Data</S>
              <S N="ExpandedPath">Quality for module.Should pass Script Analyzer for Export-Data</S>
              <S N="Result">Failed</S>
              <Obj N="ErrorRecord" RefId="610">
                <TNRef RefId="31" />
                <LST>
                  <Obj RefId="611">
                    <TNRef RefId="33" />
                    <ToString>Expected $null or empty, because some rule triggered._x000D__x000A__x000D__x000A_ _x000D__x000A_RuleName                  Severity    ScriptName      Line Message_x000D__x000A_--------                  --------    ----------      ---- -------_x000D__x000A_PSAvoidUsingWriteHost     Warning     Export-Data.ps1 82   File 'Export-Data.ps1' uses Write-Host. Avoid_x000D__x000A_                                                           using Write-Host it might not work in all_x000D__x000A_                                                           hosts, does not work when there is no host, and_x000D__x000A_                                                           (prior to PS 5.0) cannot be suppressed, captured,_x000D__x000A_                                                           or redirected. Instead, use Write-Output,_x000D__x000A_                                                           Write-Verbose, or Write-Information._x000D__x000A_PSAvoidUsingWriteHost     Warning     Export-Data.ps1 131  File 'Export-Data.ps1' uses Write-Host. Avoid_x000D__x000A_                                                           using Write-Host it might not work in all_x000D__x000A_                                                           hosts, does not work when there is no host, and_x000D__x000A_                                                           (prior to PS 5.0) cannot be suppressed, captured,_x000D__x000A_                                                           or redirected. Instead, use Write-Output,_x000D__x000A_                                                           Write-Verbose, or Write-Information._x000D__x000A_PSAvoidUsingWriteHost     Warning     Export-Data.ps1 174  File 'Export-Data.ps1' uses Write-Host. Avoid_x000D__x000A_                                                           using Write-Host it might not work in all_x000D__x000A_                                                           hosts, does not work when there is no host, and_x000D__x000A_                                                           (prior to PS 5.0) cannot be suppressed, captured,_x000D__x000A_                                                           or redirected. Instead, use Write-Output,_x000D__x000A_                                                           Write-Verbose, or Write-Information._x000D__x000A_PSAvoidTrailingWhitespace Information Export-Data.ps1 121  Line has trailing whitespace_x000D__x000A_PSAvoidTrailingWhitespace Information Export-Data.ps1 123  Line has trailing whitespace_x000D__x000A_PSAvoidTrailingWhitespace Information Export-Data.ps1 130  Line has trailing whitespace_x000D__x000A_PSAvoidTrailingWhitespace Information Export-Data.ps1 133  Line has trailing whitespace_x000D__x000A_PSAvoidTrailingWhitespace Information Export-Data.ps1 148  Line has trailing whitespace, but got @(File 'Export-Data.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information., File 'Export-Data.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information., File 'Export-Data.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information., Line has trailing whitespace, Line has trailing whitespace, Line has trailing whitespace, Line has trailing whitespace, Line has trailing whitespace).</ToString>
                    <MS>
                      <S N="DisplayErrorMessage">Expected $null or empty, because some rule triggered._x000D__x000A_ _x000D__x000A_RuleName                  Severity    ScriptName      Line Message_x000D__x000A_--------                  --------    ----------      ---- -------_x000D__x000A_PSAvoidUsingWriteHost     Warning     Export-Data.ps1 82   File 'Export-Data.ps1' uses Write-Host. Avoid_x000D__x000A_                                                           using Write-Host it might not work in all_x000D__x000A_                                                           hosts, does not work when there is no host, and_x000D__x000A_                                                           (prior to PS 5.0) cannot be suppressed, captured,_x000D__x000A_                                                           or redirected. Instead, use Write-Output,_x000D__x000A_                                                           Write-Verbose, or Write-Information._x000D__x000A_PSAvoidUsingWriteHost     Warning     Export-Data.ps1 131  File 'Export-Data.ps1' uses Write-Host. Avoid_x000D__x000A_                                                           using Write-Host it might not work in all_x000D__x000A_                                                           hosts, does not work when there is no host, and_x000D__x000A_                                                           (prior to PS 5.0) cannot be suppressed, captured,_x000D__x000A_                                                           or redirected. Instead, use Write-Output,_x000D__x000A_                                                           Write-Verbose, or Write-Information._x000D__x000A_PSAvoidUsingWriteHost     Warning     Export-Data.ps1 174  File 'Export-Data.ps1' uses Write-Host. Avoid_x000D__x000A_                                                           using Write-Host it might not work in all_x000D__x000A_                                                           hosts, does not work when there is no host, and_x000D__x000A_                                                           (prior to PS 5.0) cannot be suppressed, captured,_x000D__x000A_                                                           or redirected. Instead, use Write-Output,_x000D__x000A_                                                           Write-Verbose, or Write-Information._x000D__x000A_PSAvoidTrailingWhitespace Information Export-Data.ps1 121  Line has trailing whitespace_x000D__x000A_PSAvoidTrailingWhitespace Information Export-Data.ps1 123  Line has trailing whitespace_x000D__x000A_PSAvoidTrailingWhitespace Information Export-Data.ps1 130  Line has trailing whitespace_x000D__x000A_PSAvoidTrailingWhitespace Information Export-Data.ps1 133  Line has trailing whitespace_x000D__x000A_PSAvoidTrailingWhitespace Information Export-Data.ps1 148  Line has trailing whitespace, but got @(File 'Export-Data.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information., File 'Export-Data.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information., File 'Export-Data.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information., Line has trailing whitespace, Line has trailing whitespace, Line has trailing whitespace, Line has trailing whitespace, Line has trailing whitespace).</S>
                      <S N="DisplayStackTrace">at $pssaResult | Should -BeNullOrEmpty -Because `, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:125_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:125</S>
                      <Obj N="Exception" RefId="612">
                        <TNRef RefId="60" />
                        <ToString>System.Exception: Expected $null or empty, because some rule triggered._x000D__x000A__x000D__x000A_ _x000D__x000A_RuleName                  Severity    ScriptName      Line Message_x000D__x000A_--------                  --------    ----------      ---- -------_x000D__x000A_PSAvoidUsingWriteHost     Warning     Export-Data.ps1 82   File 'Export-Data.ps1' uses Write-Host. Avoid_x000D__x000A_                                                           using Write-Host it might not work in all_x000D__x000A_                                                           hosts, does not work when there is no host, and_x000D__x000A_                                                           (prior to PS 5.0) cannot be suppressed, captured,_x000D__x000A_                                                           or redirected. Instead, use Write-Output,_x000D__x000A_                                                           Write-Verbose, or Write-Information._x000D__x000A_PSAvoidUsingWriteHost     Warning     Export-Data.ps1 131  File 'Export-Data.ps1' uses Write-Host. Avoid_x000D__x000A_                                                           using Write-Host it might not work in all_x000D__x000A_                                                           hosts, does not work when there is no host, and_x000D__x000A_                                                           (prior to PS 5.0) cannot be suppressed, captured,_x000D__x000A_                                                           or redirected. Instead, use Write-Output,_x000D__x000A_                                                           Write-Verbose, or Write-Information._x000D__x000A_PSAvoidUsingWriteHost     Warning     Export-Data.ps1 174  File 'Export-Data.ps1' uses Write-Host. Avoid_x000D__x000A_                                                           using Write-Host it might not work in all_x000D__x000A_                                                           hosts, does not work when there is no host, and_x000D__x000A_                                                           (prior to PS 5.0) cannot be suppressed, captured,_x000D__x000A_                                                           or redirected. Instead, use Write-Output,_x000D__x000A_                                                           Write-Verbose, or Write-Information._x000D__x000A_PSAvoidTrailingWhitespace Information Export-Data.ps1 121  Line has trailing whitespace_x000D__x000A_PSAvoidTrailingWhitespace Information Export-Data.ps1 123  Line has trailing whitespace_x000D__x000A_PSAvoidTrailingWhitespace Information Export-Data.ps1 130  Line has trailing whitespace_x000D__x000A_PSAvoidTrailingWhitespace Information Export-Data.ps1 133  Line has trailing whitespace_x000D__x000A_PSAvoidTrailingWhitespace Information Export-Data.ps1 148  Line has trailing whitespace, but got @(File 'Export-Data.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information., File 'Export-Data.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information., File 'Export-Data.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information., Line has trailing whitespace, Line has trailing whitespace, Line has trailing whitespace, Line has trailing whitespace, Line has trailing whitespace).</ToString>
                        <Props>
                          <Nil N="TargetSite" />
                          <S N="Message">Expected $null or empty, because some rule triggered._x000D__x000A__x000D__x000A_ _x000D__x000A_RuleName                  Severity    ScriptName      Line Message_x000D__x000A_--------                  --------    ----------      ---- -------_x000D__x000A_PSAvoidUsingWriteHost     Warning     Export-Data.ps1 82   File 'Export-Data.ps1' uses Write-Host. Avoid_x000D__x000A_                                                           using Write-Host it might not work in all_x000D__x000A_                                                           hosts, does not work when there is no host, and_x000D__x000A_                                                           (prior to PS 5.0) cannot be suppressed, captured,_x000D__x000A_                                                           or redirected. Instead, use Write-Output,_x000D__x000A_                                                           Write-Verbose, or Write-Information._x000D__x000A_PSAvoidUsingWriteHost     Warning     Export-Data.ps1 131  File 'Export-Data.ps1' uses Write-Host. Avoid_x000D__x000A_                                                           using Write-Host it might not work in all_x000D__x000A_                                                           hosts, does not work when there is no host, and_x000D__x000A_                                                           (prior to PS 5.0) cannot be suppressed, captured,_x000D__x000A_                                                           or redirected. Instead, use Write-Output,_x000D__x000A_                                                           Write-Verbose, or Write-Information._x000D__x000A_PSAvoidUsingWriteHost     Warning     Export-Data.ps1 174  File 'Export-Data.ps1' uses Write-Host. Avoid_x000D__x000A_                                                           using Write-Host it might not work in all_x000D__x000A_                                                           hosts, does not work when there is no host, and_x000D__x000A_                                                           (prior to PS 5.0) cannot be suppressed, captured,_x000D__x000A_                                                           or redirected. Instead, use Write-Output,_x000D__x000A_                                                           Write-Verbose, or Write-Information._x000D__x000A_PSAvoidTrailingWhitespace Information Export-Data.ps1 121  Line has trailing whitespace_x000D__x000A_PSAvoidTrailingWhitespace Information Export-Data.ps1 123  Line has trailing whitespace_x000D__x000A_PSAvoidTrailingWhitespace Information Export-Data.ps1 130  Line has trailing whitespace_x000D__x000A_PSAvoidTrailingWhitespace Information Export-Data.ps1 133  Line has trailing whitespace_x000D__x000A_PSAvoidTrailingWhitespace Information Export-Data.ps1 148  Line has trailing whitespace, but got @(File 'Export-Data.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information., File 'Export-Data.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information., File 'Export-Data.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information., Line has trailing whitespace, Line has trailing whitespace, Line has trailing whitespace, Line has trailing whitespace, Line has trailing whitespace).</S>
                          <Obj N="Data" RefId="613">
                            <TNRef RefId="35" />
                            <DCT />
                          </Obj>
                          <Nil N="InnerException" />
                          <Nil N="HelpLink" />
                          <Nil N="Source" />
                          <I32 N="HResult">-2146233088</I32>
                          <Nil N="StackTrace" />
                        </Props>
                      </Obj>
                      <Obj N="TargetObject" RefId="614">
                        <TNRef RefId="38" />
                        <DCT>
                          <En>
                            <S N="Key">Message</S>
                            <S N="Value">Expected $null or empty, because some rule triggered._x000D__x000A__x000D__x000A_ _x000D__x000A_RuleName                  Severity    ScriptName      Line Message_x000D__x000A_--------                  --------    ----------      ---- -------_x000D__x000A_PSAvoidUsingWriteHost     Warning     Export-Data.ps1 82   File 'Export-Data.ps1' uses Write-Host. Avoid_x000D__x000A_                                                           using Write-Host it might not work in all_x000D__x000A_                                                           hosts, does not work when there is no host, and_x000D__x000A_                                                           (prior to PS 5.0) cannot be suppressed, captured,_x000D__x000A_                                                           or redirected. Instead, use Write-Output,_x000D__x000A_                                                           Write-Verbose, or Write-Information._x000D__x000A_PSAvoidUsingWriteHost     Warning     Export-Data.ps1 131  File 'Export-Data.ps1' uses Write-Host. Avoid_x000D__x000A_                                                           using Write-Host it might not work in all_x000D__x000A_                                                           hosts, does not work when there is no host, and_x000D__x000A_                                                           (prior to PS 5.0) cannot be suppressed, captured,_x000D__x000A_                                                           or redirected. Instead, use Write-Output,_x000D__x000A_                                                           Write-Verbose, or Write-Information._x000D__x000A_PSAvoidUsingWriteHost     Warning     Export-Data.ps1 174  File 'Export-Data.ps1' uses Write-Host. Avoid_x000D__x000A_                                                           using Write-Host it might not work in all_x000D__x000A_                                                           hosts, does not work when there is no host, and_x000D__x000A_                                                           (prior to PS 5.0) cannot be suppressed, captured,_x000D__x000A_                                                           or redirected. Instead, use Write-Output,_x000D__x000A_                                                           Write-Verbose, or Write-Information._x000D__x000A_PSAvoidTrailingWhitespace Information Export-Data.ps1 121  Line has trailing whitespace_x000D__x000A_PSAvoidTrailingWhitespace Information Export-Data.ps1 123  Line has trailing whitespace_x000D__x000A_PSAvoidTrailingWhitespace Information Export-Data.ps1 130  Line has trailing whitespace_x000D__x000A_PSAvoidTrailingWhitespace Information Export-Data.ps1 133  Line has trailing whitespace_x000D__x000A_PSAvoidTrailingWhitespace Information Export-Data.ps1 148  Line has trailing whitespace, but got @(File 'Export-Data.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information., File 'Export-Data.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information., File 'Export-Data.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information., Line has trailing whitespace, Line has trailing whitespace, Line has trailing whitespace, Line has trailing whitespace, Line has trailing whitespace).</S>
                          </En>
                          <En>
                            <S N="Key">File</S>
                            <S N="Value">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1</S>
                          </En>
                          <En>
                            <S N="Key">Line</S>
                            <S N="Value">125</S>
                          </En>
                          <En>
                            <S N="Key">LineText</S>
                            <S N="Value">        $pssaResult | Should -BeNullOrEmpty -Because `</S>
                          </En>
                          <En>
                            <S N="Key">Terminating</S>
                            <B N="Value">true</B>
                          </En>
                          <En>
                            <S N="Key">ShouldResult</S>
                            <Obj N="Value" RefId="615">
                              <TNRef RefId="61" />
                              <ToString>Pester.ShouldResult</ToString>
                              <Props>
                                <B N="Succeeded">false</B>
                                <S N="FailureMessage">Expected $null or empty, because some rule triggered._x000D__x000A__x000D__x000A_ _x000D__x000A_RuleName                  Severity    ScriptName      Line Message_x000D__x000A_--------                  --------    ----------      ---- -------_x000D__x000A_PSAvoidUsingWriteHost     Warning     Export-Data.ps1 82   File 'Export-Data.ps1' uses Write-Host. Avoid_x000D__x000A_                                                           using Write-Host it might not work in all_x000D__x000A_                                                           hosts, does not work when there is no host, and_x000D__x000A_                                                           (prior to PS 5.0) cannot be suppressed, captured,_x000D__x000A_                                                           or redirected. Instead, use Write-Output,_x000D__x000A_                                                           Write-Verbose, or Write-Information._x000D__x000A_PSAvoidUsingWriteHost     Warning     Export-Data.ps1 131  File 'Export-Data.ps1' uses Write-Host. Avoid_x000D__x000A_                                                           using Write-Host it might not work in all_x000D__x000A_                                                           hosts, does not work when there is no host, and_x000D__x000A_                                                           (prior to PS 5.0) cannot be suppressed, captured,_x000D__x000A_                                                           or redirected. Instead, use Write-Output,_x000D__x000A_                                                           Write-Verbose, or Write-Information._x000D__x000A_PSAvoidUsingWriteHost     Warning     Export-Data.ps1 174  File 'Export-Data.ps1' uses Write-Host. Avoid_x000D__x000A_                                                           using Write-Host it might not work in all_x000D__x000A_                                                           hosts, does not work when there is no host, and_x000D__x000A_                                                           (prior to PS 5.0) cannot be suppressed, captured,_x000D__x000A_                                                           or redirected. Instead, use Write-Output,_x000D__x000A_                                                           Write-Verbose, or Write-Information._x000D__x000A_PSAvoidTrailingWhitespace Information Export-Data.ps1 121  Line has trailing whitespace_x000D__x000A_PSAvoidTrailingWhitespace Information Export-Data.ps1 123  Line has trailing whitespace_x000D__x000A_PSAvoidTrailingWhitespace Information Export-Data.ps1 130  Line has trailing whitespace_x000D__x000A_PSAvoidTrailingWhitespace Information Export-Data.ps1 133  Line has trailing whitespace_x000D__x000A_PSAvoidTrailingWhitespace Information Export-Data.ps1 148  Line has trailing whitespace, but got @(File 'Export-Data.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information., File 'Export-Data.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information., File 'Export-Data.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information., Line has trailing whitespace, Line has trailing whitespace, Line has trailing whitespace, Line has trailing whitespace, Line has trailing whitespace).</S>
                                <Obj N="ExpectResult" RefId="616">
                                  <TNRef RefId="62" />
                                  <ToString>Expected: 'a value' Actual: @(File 'Export-Data.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information., File 'Export-Data.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information., File 'Export-Data.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information., Line has trailing whitespace, Line has trailing whitespace, Line has trailing whitespace, Line has trailing whitespace, Line has trailing whitespace) Because: some rule triggered._x000D__x000A__x000D__x000A_ _x000D__x000A_RuleName                  Severity    ScriptName      Line Message_x000D__x000A_--------                  --------    ----------      ---- -------_x000D__x000A_PSAvoidUsingWriteHost     Warning     Export-Data.ps1 82   File 'Export-Data.ps1' uses Write-Host. Avoid_x000D__x000A_                                                           using Write-Host because it might not work in all_x000D__x000A_                                                           hosts, does not work when there is no host, and_x000D__x000A_                                                           (prior to PS 5.0) cannot be suppressed, captured,_x000D__x000A_                                                           or redirected. Instead, use Write-Output,_x000D__x000A_                                                           Write-Verbose, or Write-Information._x000D__x000A_PSAvoidUsingWriteHost     Warning     Export-Data.ps1 131  File 'Export-Data.ps1' uses Write-Host. Avoid_x000D__x000A_                                                           using Write-Host because it might not work in all_x000D__x000A_                                                           hosts, does not work when there is no host, and_x000D__x000A_                                                           (prior to PS 5.0) cannot be suppressed, captured,_x000D__x000A_                                                           or redirected. Instead, use Write-Output,_x000D__x000A_                                                           Write-Verbose, or Write-Information._x000D__x000A_PSAvoidUsingWriteHost     Warning     Export-Data.ps1 174  File 'Export-Data.ps1' uses Write-Host. Avoid_x000D__x000A_                                                           using Write-Host because it might not work in all_x000D__x000A_                                                           hosts, does not work when there is no host, and_x000D__x000A_                                                           (prior to PS 5.0) cannot be suppressed, captured,_x000D__x000A_                                                           or redirected. Instead, use Write-Output,_x000D__x000A_                                                           Write-Verbose, or Write-Information._x000D__x000A_PSAvoidTrailingWhitespace Information Export-Data.ps1 121  Line has trailing whitespace_x000D__x000A_PSAvoidTrailingWhitespace Information Export-Data.ps1 123  Line has trailing whitespace_x000D__x000A_PSAvoidTrailingWhitespace Information Export-Data.ps1 130  Line has trailing whitespace_x000D__x000A_PSAvoidTrailingWhitespace Information Export-Data.ps1 133  Line has trailing whitespace_x000D__x000A_PSAvoidTrailingWhitespace Information Export-Data.ps1 148  Line has trailing whitespace_x000D__x000A__x000D__x000A_</ToString>
                                  <Props>
                                    <S N="Actual">@(File 'Export-Data.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information., File 'Export-Data.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information., File 'Export-Data.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information., Line has trailing whitespace, Line has trailing whitespace, Line has trailing whitespace, Line has trailing whitespace, Line has trailing whitespace)</S>
                                    <S N="Expected">'a value'</S>
                                    <S N="Because">some rule triggered._x000D__x000A__x000D__x000A_ _x000D__x000A_RuleName                  Severity    ScriptName      Line Message_x000D__x000A_--------                  --------    ----------      ---- -------_x000D__x000A_PSAvoidUsingWriteHost     Warning     Export-Data.ps1 82   File 'Export-Data.ps1' uses Write-Host. Avoid_x000D__x000A_                                                           using Write-Host because it might not work in all_x000D__x000A_                                                           hosts, does not work when there is no host, and_x000D__x000A_                                                           (prior to PS 5.0) cannot be suppressed, captured,_x000D__x000A_                                                           or redirected. Instead, use Write-Output,_x000D__x000A_                                                           Write-Verbose, or Write-Information._x000D__x000A_PSAvoidUsingWriteHost     Warning     Export-Data.ps1 131  File 'Export-Data.ps1' uses Write-Host. Avoid_x000D__x000A_                                                           using Write-Host because it might not work in all_x000D__x000A_                                                           hosts, does not work when there is no host, and_x000D__x000A_                                                           (prior to PS 5.0) cannot be suppressed, captured,_x000D__x000A_                                                           or redirected. Instead, use Write-Output,_x000D__x000A_                                                           Write-Verbose, or Write-Information._x000D__x000A_PSAvoidUsingWriteHost     Warning     Export-Data.ps1 174  File 'Export-Data.ps1' uses Write-Host. Avoid_x000D__x000A_                                                           using Write-Host because it might not work in all_x000D__x000A_                                                           hosts, does not work when there is no host, and_x000D__x000A_                                                           (prior to PS 5.0) cannot be suppressed, captured,_x000D__x000A_                                                           or redirected. Instead, use Write-Output,_x000D__x000A_                                                           Write-Verbose, or Write-Information._x000D__x000A_PSAvoidTrailingWhitespace Information Export-Data.ps1 121  Line has trailing whitespace_x000D__x000A_PSAvoidTrailingWhitespace Information Export-Data.ps1 123  Line has trailing whitespace_x000D__x000A_PSAvoidTrailingWhitespace Information Export-Data.ps1 130  Line has trailing whitespace_x000D__x000A_PSAvoidTrailingWhitespace Information Export-Data.ps1 133  Line has trailing whitespace_x000D__x000A_PSAvoidTrailingWhitespace Information Export-Data.ps1 148  Line has trailing whitespace_x000D__x000A__x000D__x000A_</S>
                                  </Props>
                                </Obj>
                              </Props>
                            </Obj>
                          </En>
                        </DCT>
                      </Obj>
                      <S N="FullyQualifiedErrorId">PesterAssertionFailed</S>
                      <Obj N="InvocationInfo" RefId="617">
                        <TNRef RefId="37" />
                        <ToString>System.Management.Automation.InvocationInfo</ToString>
                        <Props>
                          <Nil N="MyCommand" />
                          <Obj N="BoundParameters" RefId="618">
                            <TNRef RefId="38" />
                            <DCT />
                          </Obj>
                          <Obj N="UnboundArguments" RefId="619">
                            <TNRef RefId="31" />
                            <LST />
                          </Obj>
                          <I32 N="ScriptLineNumber">8392</I32>
                          <I32 N="OffsetInLine">13</I32>
                          <I64 N="HistoryId">18</I64>
                          <S N="ScriptName">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1</S>
                          <S N="Line">            throw $errorRecord_x000D__x000A_</S>
                          <S N="Statement">throw $errorRecord</S>
                          <S N="PositionMessage">At C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1:8392 char:13_x000D__x000A_+             throw $errorRecord_x000D__x000A_+             ~~~~~~~~~~~~~~~~~~</S>
                          <S N="PSScriptRoot">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1</S>
                          <S N="PSCommandPath">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1</S>
                          <S N="InvocationName"></S>
                          <I32 N="PipelineLength">0</I32>
                          <I32 N="PipelinePosition">0</I32>
                          <B N="ExpectingInput">false</B>
                          <Obj N="CommandOrigin" RefId="620">
                            <TNRef RefId="39" />
                            <ToString>Internal</ToString>
                            <I32>1</I32>
                          </Obj>
                          <Nil N="DisplayScriptPosition" />
                        </Props>
                        <MS>
                          <Obj N="ParameterValues" RefId="621">
                            <TNRef RefId="25" />
                            <DCT />
                          </Obj>
                        </MS>
                      </Obj>
                      <I32 N="ErrorCategory_Category">8</I32>
                      <S N="ErrorCategory_Activity"></S>
                      <S N="ErrorCategory_Reason">Exception</S>
                      <S N="ErrorCategory_TargetName">System.Collections.Generic.Dictionary`2[System.String,System.Object]</S>
                      <S N="ErrorCategory_TargetType">Dictionary`2</S>
                      <S N="ErrorCategory_Message">InvalidResult: (System.Collections.…ring,System.Object]:Dictionary`2) [], Exception</S>
                      <B N="SerializeExtendedInfo">false</B>
                      <S N="ErrorDetails_ScriptStackTrace">at Invoke-Assertion, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 8392_x000D__x000A_at Should&lt;End&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 8331_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1: line 125_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2024_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1985_x000D__x000A_at Invoke-ScriptBlock, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2157_x000D__x000A_at Invoke-TestItem, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1199_x000D__x000A_at Invoke-Block, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 835_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 893_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2024_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1985_x000D__x000A_at Invoke-ScriptBlock, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2160_x000D__x000A_at Invoke-Block, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 940_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 893_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2024_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1985_x000D__x000A_at Invoke-ScriptBlock, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2160_x000D__x000A_at Invoke-Block, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 940_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1688_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.ps1: line 3_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 3260_x000D__x000A_at Invoke-InNewScriptScope, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 3267_x000D__x000A_at Run-Test, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1691_x000D__x000A_at Invoke-Test, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2512_x000D__x000A_at Invoke-Pester&lt;End&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 5110_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Sampler\0.118.1\tasks\Invoke-Pester.pester.build.ps1: line 906_x000D__x000A_at *Task, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 629_x000D__x000A_at *Task, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 601_x000D__x000A_at *Task, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 601_x000D__x000A_at &lt;ScriptBlock&gt;&lt;End&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 787_x000D__x000A_at &lt;ScriptBlock&gt;&lt;Begin&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\build.ps1: line 532_x000D__x000A_at &lt;ScriptBlock&gt;, &lt;No file&gt;: line 1</S>
                      <Nil N="PSMessageDetails" />
                    </MS>
                  </Obj>
                </LST>
              </Obj>
              <Nil N="StandardOutput" />
              <TS N="Duration">PT0.0378564S</TS>
              <S N="ItemType">Test</S>
              <S N="Id">120:5</S>
              <S N="GroupId">120:5</S>
              <SBK N="ScriptBlock">_x000D__x000A_        $functionFile = Get-ChildItem -Path $sourcePath -Recurse -Include "$Name.ps1"_x000D__x000A__x000D__x000A_        $pssaResult = (Invoke-ScriptAnalyzer -Path $functionFile.FullName)_x000D__x000A_        $report = $pssaResult | Format-Table -AutoSize | Out-String -Width 110_x000D__x000A_        $pssaResult | Should -BeNullOrEmpty -Because `_x000D__x000A_            "some rule triggered.`r`n`r`n $report"_x000D__x000A_    </SBK>
              <Nil N="Tag" />
              <B N="Focus">false</B>
              <B N="Skip">false</B>
              <Ref N="Block" RefId="60" />
              <B N="First">false</B>
              <B N="Last">false</B>
              <B N="Include">false</B>
              <B N="Exclude">false</B>
              <B N="Explicit">false</B>
              <B N="ShouldRun">true</B>
              <I32 N="StartLine">120</I32>
              <B N="Executed">true</B>
              <DT N="ExecutedAt">2024-08-03T17:35:50.598812-07:00</DT>
              <B N="Passed">false</B>
              <B N="Skipped">false</B>
              <B N="Inconclusive">false</B>
              <TS N="UserDuration">PT0.0332257S</TS>
              <TS N="FrameworkDuration">PT0.0046307S</TS>
              <Nil N="PluginData" />
              <Nil N="FrameworkData" />
            </Props>
          </Obj>
          <Obj RefId="622">
            <TNRef RefId="30" />
            <ToString>[-] Should pass Script Analyzer for Export-EventLog</ToString>
            <Props>
              <S N="Name">Should pass Script Analyzer for &lt;Name&gt;</S>
              <Obj N="Path" RefId="623">
                <TNRef RefId="28" />
                <LST>
                  <S>Quality for module</S>
                  <S>Should pass Script Analyzer for &lt;Name&gt;</S>
                </LST>
              </Obj>
              <Ref N="Data" RefId="434" />
              <S N="ExpandedName">Should pass Script Analyzer for Export-EventLog</S>
              <S N="ExpandedPath">Quality for module.Should pass Script Analyzer for Export-EventLog</S>
              <S N="Result">Failed</S>
              <Obj N="ErrorRecord" RefId="624">
                <TNRef RefId="31" />
                <LST>
                  <Obj RefId="625">
                    <TNRef RefId="33" />
                    <ToString>Expected $null or empty, because some rule triggered._x000D__x000A__x000D__x000A_ _x000D__x000A_RuleName                  Severity    ScriptName          Line Message_x000D__x000A_--------                  --------    ----------          ---- -------_x000D__x000A_PSAvoidTrailingWhitespace Information Export-EventLog.ps1 3    Line has trailing whitespace_x000D__x000A_PSAvoidTrailingWhitespace Information Export-EventLog.ps1 17   Line has trailing whitespace_x000D__x000A_PSAvoidTrailingWhitespace Information Export-EventLog.ps1 20   Line has trailing whitespace, but got @(Line has trailing whitespace, Line has trailing whitespace, Line has trailing whitespace).</ToString>
                    <MS>
                      <S N="DisplayErrorMessage">Expected $null or empty, because some rule triggered._x000D__x000A_ _x000D__x000A_RuleName                  Severity    ScriptName          Line Message_x000D__x000A_--------                  --------    ----------          ---- -------_x000D__x000A_PSAvoidTrailingWhitespace Information Export-EventLog.ps1 3    Line has trailing whitespace_x000D__x000A_PSAvoidTrailingWhitespace Information Export-EventLog.ps1 17   Line has trailing whitespace_x000D__x000A_PSAvoidTrailingWhitespace Information Export-EventLog.ps1 20   Line has trailing whitespace, but got @(Line has trailing whitespace, Line has trailing whitespace, Line has trailing whitespace).</S>
                      <S N="DisplayStackTrace">at $pssaResult | Should -BeNullOrEmpty -Because `, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:125_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:125</S>
                      <Obj N="Exception" RefId="626">
                        <TNRef RefId="60" />
                        <ToString>System.Exception: Expected $null or empty, because some rule triggered._x000D__x000A__x000D__x000A_ _x000D__x000A_RuleName                  Severity    ScriptName          Line Message_x000D__x000A_--------                  --------    ----------          ---- -------_x000D__x000A_PSAvoidTrailingWhitespace Information Export-EventLog.ps1 3    Line has trailing whitespace_x000D__x000A_PSAvoidTrailingWhitespace Information Export-EventLog.ps1 17   Line has trailing whitespace_x000D__x000A_PSAvoidTrailingWhitespace Information Export-EventLog.ps1 20   Line has trailing whitespace, but got @(Line has trailing whitespace, Line has trailing whitespace, Line has trailing whitespace).</ToString>
                        <Props>
                          <Nil N="TargetSite" />
                          <S N="Message">Expected $null or empty, because some rule triggered._x000D__x000A__x000D__x000A_ _x000D__x000A_RuleName                  Severity    ScriptName          Line Message_x000D__x000A_--------                  --------    ----------          ---- -------_x000D__x000A_PSAvoidTrailingWhitespace Information Export-EventLog.ps1 3    Line has trailing whitespace_x000D__x000A_PSAvoidTrailingWhitespace Information Export-EventLog.ps1 17   Line has trailing whitespace_x000D__x000A_PSAvoidTrailingWhitespace Information Export-EventLog.ps1 20   Line has trailing whitespace, but got @(Line has trailing whitespace, Line has trailing whitespace, Line has trailing whitespace).</S>
                          <Obj N="Data" RefId="627">
                            <TNRef RefId="35" />
                            <DCT />
                          </Obj>
                          <Nil N="InnerException" />
                          <Nil N="HelpLink" />
                          <Nil N="Source" />
                          <I32 N="HResult">-2146233088</I32>
                          <Nil N="StackTrace" />
                        </Props>
                      </Obj>
                      <Obj N="TargetObject" RefId="628">
                        <TNRef RefId="38" />
                        <DCT>
                          <En>
                            <S N="Key">Message</S>
                            <S N="Value">Expected $null or empty, because some rule triggered._x000D__x000A__x000D__x000A_ _x000D__x000A_RuleName                  Severity    ScriptName          Line Message_x000D__x000A_--------                  --------    ----------          ---- -------_x000D__x000A_PSAvoidTrailingWhitespace Information Export-EventLog.ps1 3    Line has trailing whitespace_x000D__x000A_PSAvoidTrailingWhitespace Information Export-EventLog.ps1 17   Line has trailing whitespace_x000D__x000A_PSAvoidTrailingWhitespace Information Export-EventLog.ps1 20   Line has trailing whitespace, but got @(Line has trailing whitespace, Line has trailing whitespace, Line has trailing whitespace).</S>
                          </En>
                          <En>
                            <S N="Key">File</S>
                            <S N="Value">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1</S>
                          </En>
                          <En>
                            <S N="Key">Line</S>
                            <S N="Value">125</S>
                          </En>
                          <En>
                            <S N="Key">LineText</S>
                            <S N="Value">        $pssaResult | Should -BeNullOrEmpty -Because `</S>
                          </En>
                          <En>
                            <S N="Key">Terminating</S>
                            <B N="Value">true</B>
                          </En>
                          <En>
                            <S N="Key">ShouldResult</S>
                            <Obj N="Value" RefId="629">
                              <TNRef RefId="61" />
                              <ToString>Pester.ShouldResult</ToString>
                              <Props>
                                <B N="Succeeded">false</B>
                                <S N="FailureMessage">Expected $null or empty, because some rule triggered._x000D__x000A__x000D__x000A_ _x000D__x000A_RuleName                  Severity    ScriptName          Line Message_x000D__x000A_--------                  --------    ----------          ---- -------_x000D__x000A_PSAvoidTrailingWhitespace Information Export-EventLog.ps1 3    Line has trailing whitespace_x000D__x000A_PSAvoidTrailingWhitespace Information Export-EventLog.ps1 17   Line has trailing whitespace_x000D__x000A_PSAvoidTrailingWhitespace Information Export-EventLog.ps1 20   Line has trailing whitespace, but got @(Line has trailing whitespace, Line has trailing whitespace, Line has trailing whitespace).</S>
                                <Obj N="ExpectResult" RefId="630">
                                  <TNRef RefId="62" />
                                  <ToString>Expected: 'a value' Actual: @(Line has trailing whitespace, Line has trailing whitespace, Line has trailing whitespace) Because: some rule triggered._x000D__x000A__x000D__x000A_ _x000D__x000A_RuleName                  Severity    ScriptName          Line Message_x000D__x000A_--------                  --------    ----------          ---- -------_x000D__x000A_PSAvoidTrailingWhitespace Information Export-EventLog.ps1 3    Line has trailing whitespace_x000D__x000A_PSAvoidTrailingWhitespace Information Export-EventLog.ps1 17   Line has trailing whitespace_x000D__x000A_PSAvoidTrailingWhitespace Information Export-EventLog.ps1 20   Line has trailing whitespace_x000D__x000A__x000D__x000A_</ToString>
                                  <Props>
                                    <S N="Actual">@(Line has trailing whitespace, Line has trailing whitespace, Line has trailing whitespace)</S>
                                    <S N="Expected">'a value'</S>
                                    <S N="Because">some rule triggered._x000D__x000A__x000D__x000A_ _x000D__x000A_RuleName                  Severity    ScriptName          Line Message_x000D__x000A_--------                  --------    ----------          ---- -------_x000D__x000A_PSAvoidTrailingWhitespace Information Export-EventLog.ps1 3    Line has trailing whitespace_x000D__x000A_PSAvoidTrailingWhitespace Information Export-EventLog.ps1 17   Line has trailing whitespace_x000D__x000A_PSAvoidTrailingWhitespace Information Export-EventLog.ps1 20   Line has trailing whitespace_x000D__x000A__x000D__x000A_</S>
                                  </Props>
                                </Obj>
                              </Props>
                            </Obj>
                          </En>
                        </DCT>
                      </Obj>
                      <S N="FullyQualifiedErrorId">PesterAssertionFailed</S>
                      <Obj N="InvocationInfo" RefId="631">
                        <TNRef RefId="37" />
                        <ToString>System.Management.Automation.InvocationInfo</ToString>
                        <Props>
                          <Nil N="MyCommand" />
                          <Obj N="BoundParameters" RefId="632">
                            <TNRef RefId="38" />
                            <DCT />
                          </Obj>
                          <Obj N="UnboundArguments" RefId="633">
                            <TNRef RefId="31" />
                            <LST />
                          </Obj>
                          <I32 N="ScriptLineNumber">8392</I32>
                          <I32 N="OffsetInLine">13</I32>
                          <I64 N="HistoryId">18</I64>
                          <S N="ScriptName">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1</S>
                          <S N="Line">            throw $errorRecord_x000D__x000A_</S>
                          <S N="Statement">throw $errorRecord</S>
                          <S N="PositionMessage">At C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1:8392 char:13_x000D__x000A_+             throw $errorRecord_x000D__x000A_+             ~~~~~~~~~~~~~~~~~~</S>
                          <S N="PSScriptRoot">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1</S>
                          <S N="PSCommandPath">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1</S>
                          <S N="InvocationName"></S>
                          <I32 N="PipelineLength">0</I32>
                          <I32 N="PipelinePosition">0</I32>
                          <B N="ExpectingInput">false</B>
                          <Obj N="CommandOrigin" RefId="634">
                            <TNRef RefId="39" />
                            <ToString>Internal</ToString>
                            <I32>1</I32>
                          </Obj>
                          <Nil N="DisplayScriptPosition" />
                        </Props>
                        <MS>
                          <Obj N="ParameterValues" RefId="635">
                            <TNRef RefId="25" />
                            <DCT />
                          </Obj>
                        </MS>
                      </Obj>
                      <I32 N="ErrorCategory_Category">8</I32>
                      <S N="ErrorCategory_Activity"></S>
                      <S N="ErrorCategory_Reason">Exception</S>
                      <S N="ErrorCategory_TargetName">System.Collections.Generic.Dictionary`2[System.String,System.Object]</S>
                      <S N="ErrorCategory_TargetType">Dictionary`2</S>
                      <S N="ErrorCategory_Message">InvalidResult: (System.Collections.…ring,System.Object]:Dictionary`2) [], Exception</S>
                      <B N="SerializeExtendedInfo">false</B>
                      <S N="ErrorDetails_ScriptStackTrace">at Invoke-Assertion, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 8392_x000D__x000A_at Should&lt;End&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 8331_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1: line 125_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2024_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1985_x000D__x000A_at Invoke-ScriptBlock, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2157_x000D__x000A_at Invoke-TestItem, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1199_x000D__x000A_at Invoke-Block, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 835_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 893_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2024_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1985_x000D__x000A_at Invoke-ScriptBlock, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2160_x000D__x000A_at Invoke-Block, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 940_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 893_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2024_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1985_x000D__x000A_at Invoke-ScriptBlock, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2160_x000D__x000A_at Invoke-Block, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 940_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1688_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.ps1: line 3_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 3260_x000D__x000A_at Invoke-InNewScriptScope, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 3267_x000D__x000A_at Run-Test, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1691_x000D__x000A_at Invoke-Test, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2512_x000D__x000A_at Invoke-Pester&lt;End&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 5110_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Sampler\0.118.1\tasks\Invoke-Pester.pester.build.ps1: line 906_x000D__x000A_at *Task, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 629_x000D__x000A_at *Task, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 601_x000D__x000A_at *Task, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 601_x000D__x000A_at &lt;ScriptBlock&gt;&lt;End&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 787_x000D__x000A_at &lt;ScriptBlock&gt;&lt;Begin&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\build.ps1: line 532_x000D__x000A_at &lt;ScriptBlock&gt;, &lt;No file&gt;: line 1</S>
                      <Nil N="PSMessageDetails" />
                    </MS>
                  </Obj>
                </LST>
              </Obj>
              <Nil N="StandardOutput" />
              <TS N="Duration">PT0.0270938S</TS>
              <S N="ItemType">Test</S>
              <S N="Id">120:5</S>
              <S N="GroupId">120:5</S>
              <SBK N="ScriptBlock">_x000D__x000A_        $functionFile = Get-ChildItem -Path $sourcePath -Recurse -Include "$Name.ps1"_x000D__x000A__x000D__x000A_        $pssaResult = (Invoke-ScriptAnalyzer -Path $functionFile.FullName)_x000D__x000A_        $report = $pssaResult | Format-Table -AutoSize | Out-String -Width 110_x000D__x000A_        $pssaResult | Should -BeNullOrEmpty -Because `_x000D__x000A_            "some rule triggered.`r`n`r`n $report"_x000D__x000A_    </SBK>
              <Nil N="Tag" />
              <B N="Focus">false</B>
              <B N="Skip">false</B>
              <Ref N="Block" RefId="60" />
              <B N="First">false</B>
              <B N="Last">false</B>
              <B N="Include">false</B>
              <B N="Exclude">false</B>
              <B N="Explicit">false</B>
              <B N="ShouldRun">true</B>
              <I32 N="StartLine">120</I32>
              <B N="Executed">true</B>
              <DT N="ExecutedAt">2024-08-03T17:35:50.6367861-07:00</DT>
              <B N="Passed">false</B>
              <B N="Skipped">false</B>
              <B N="Inconclusive">false</B>
              <TS N="UserDuration">PT0.0203743S</TS>
              <TS N="FrameworkDuration">PT0.0067195S</TS>
              <Nil N="PluginData" />
              <Nil N="FrameworkData" />
            </Props>
          </Obj>
          <Obj RefId="636">
            <TNRef RefId="30" />
            <ToString>[-] Should pass Script Analyzer for Handle-Error</ToString>
            <Props>
              <S N="Name">Should pass Script Analyzer for &lt;Name&gt;</S>
              <Obj N="Path" RefId="637">
                <TNRef RefId="28" />
                <LST>
                  <S>Quality for module</S>
                  <S>Should pass Script Analyzer for &lt;Name&gt;</S>
                </LST>
              </Obj>
              <Ref N="Data" RefId="449" />
              <S N="ExpandedName">Should pass Script Analyzer for Handle-Error</S>
              <S N="ExpandedPath">Quality for module.Should pass Script Analyzer for Handle-Error</S>
              <S N="Result">Failed</S>
              <Obj N="ErrorRecord" RefId="638">
                <TNRef RefId="31" />
                <LST>
                  <Obj RefId="639">
                    <TNRef RefId="33" />
                    <ToString>Expected $null or empty, because some rule triggered._x000D__x000A__x000D__x000A_ _x000D__x000A_RuleName           Severity ScriptName       Line Message_x000D__x000A_--------           -------- ----------       ---- -------_x000D__x000A_PSUseApprovedVerbs Warning  Handle-Error.ps1 1    The cmdlet 'Handle-Error' uses an unapproved verb., but got The cmdlet 'Handle-Error' uses an unapproved verb..</ToString>
                    <MS>
                      <S N="DisplayErrorMessage">Expected $null or empty, because some rule triggered._x000D__x000A_ _x000D__x000A_RuleName           Severity ScriptName       Line Message_x000D__x000A_--------           -------- ----------       ---- -------_x000D__x000A_PSUseApprovedVerbs Warning  Handle-Error.ps1 1    The cmdlet 'Handle-Error' uses an unapproved verb., but got The cmdlet 'Handle-Error' uses an unapproved verb..</S>
                      <S N="DisplayStackTrace">at $pssaResult | Should -BeNullOrEmpty -Because `, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:125_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:125</S>
                      <Obj N="Exception" RefId="640">
                        <TNRef RefId="60" />
                        <ToString>System.Exception: Expected $null or empty, because some rule triggered._x000D__x000A__x000D__x000A_ _x000D__x000A_RuleName           Severity ScriptName       Line Message_x000D__x000A_--------           -------- ----------       ---- -------_x000D__x000A_PSUseApprovedVerbs Warning  Handle-Error.ps1 1    The cmdlet 'Handle-Error' uses an unapproved verb., but got The cmdlet 'Handle-Error' uses an unapproved verb..</ToString>
                        <Props>
                          <Nil N="TargetSite" />
                          <S N="Message">Expected $null or empty, because some rule triggered._x000D__x000A__x000D__x000A_ _x000D__x000A_RuleName           Severity ScriptName       Line Message_x000D__x000A_--------           -------- ----------       ---- -------_x000D__x000A_PSUseApprovedVerbs Warning  Handle-Error.ps1 1    The cmdlet 'Handle-Error' uses an unapproved verb., but got The cmdlet 'Handle-Error' uses an unapproved verb..</S>
                          <Obj N="Data" RefId="641">
                            <TNRef RefId="35" />
                            <DCT />
                          </Obj>
                          <Nil N="InnerException" />
                          <Nil N="HelpLink" />
                          <Nil N="Source" />
                          <I32 N="HResult">-2146233088</I32>
                          <Nil N="StackTrace" />
                        </Props>
                      </Obj>
                      <Obj N="TargetObject" RefId="642">
                        <TNRef RefId="38" />
                        <DCT>
                          <En>
                            <S N="Key">Message</S>
                            <S N="Value">Expected $null or empty, because some rule triggered._x000D__x000A__x000D__x000A_ _x000D__x000A_RuleName           Severity ScriptName       Line Message_x000D__x000A_--------           -------- ----------       ---- -------_x000D__x000A_PSUseApprovedVerbs Warning  Handle-Error.ps1 1    The cmdlet 'Handle-Error' uses an unapproved verb., but got The cmdlet 'Handle-Error' uses an unapproved verb..</S>
                          </En>
                          <En>
                            <S N="Key">File</S>
                            <S N="Value">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1</S>
                          </En>
                          <En>
                            <S N="Key">Line</S>
                            <S N="Value">125</S>
                          </En>
                          <En>
                            <S N="Key">LineText</S>
                            <S N="Value">        $pssaResult | Should -BeNullOrEmpty -Because `</S>
                          </En>
                          <En>
                            <S N="Key">Terminating</S>
                            <B N="Value">true</B>
                          </En>
                          <En>
                            <S N="Key">ShouldResult</S>
                            <Obj N="Value" RefId="643">
                              <TNRef RefId="61" />
                              <ToString>Pester.ShouldResult</ToString>
                              <Props>
                                <B N="Succeeded">false</B>
                                <S N="FailureMessage">Expected $null or empty, because some rule triggered._x000D__x000A__x000D__x000A_ _x000D__x000A_RuleName           Severity ScriptName       Line Message_x000D__x000A_--------           -------- ----------       ---- -------_x000D__x000A_PSUseApprovedVerbs Warning  Handle-Error.ps1 1    The cmdlet 'Handle-Error' uses an unapproved verb., but got The cmdlet 'Handle-Error' uses an unapproved verb..</S>
                                <Obj N="ExpectResult" RefId="644">
                                  <TNRef RefId="62" />
                                  <ToString>Expected: 'a value' Actual: @(The cmdlet 'Handle-Error' uses an unapproved verb.) Because: some rule triggered._x000D__x000A__x000D__x000A_ _x000D__x000A_RuleName           Severity ScriptName       Line Message_x000D__x000A_--------           -------- ----------       ---- -------_x000D__x000A_PSUseApprovedVerbs Warning  Handle-Error.ps1 1    The cmdlet 'Handle-Error' uses an unapproved verb._x000D__x000A__x000D__x000A_</ToString>
                                  <Props>
                                    <S N="Actual">@(The cmdlet 'Handle-Error' uses an unapproved verb.)</S>
                                    <S N="Expected">'a value'</S>
                                    <S N="Because">some rule triggered._x000D__x000A__x000D__x000A_ _x000D__x000A_RuleName           Severity ScriptName       Line Message_x000D__x000A_--------           -------- ----------       ---- -------_x000D__x000A_PSUseApprovedVerbs Warning  Handle-Error.ps1 1    The cmdlet 'Handle-Error' uses an unapproved verb._x000D__x000A__x000D__x000A_</S>
                                  </Props>
                                </Obj>
                              </Props>
                            </Obj>
                          </En>
                        </DCT>
                      </Obj>
                      <S N="FullyQualifiedErrorId">PesterAssertionFailed</S>
                      <Obj N="InvocationInfo" RefId="645">
                        <TNRef RefId="37" />
                        <ToString>System.Management.Automation.InvocationInfo</ToString>
                        <Props>
                          <Nil N="MyCommand" />
                          <Obj N="BoundParameters" RefId="646">
                            <TNRef RefId="38" />
                            <DCT />
                          </Obj>
                          <Obj N="UnboundArguments" RefId="647">
                            <TNRef RefId="31" />
                            <LST />
                          </Obj>
                          <I32 N="ScriptLineNumber">8392</I32>
                          <I32 N="OffsetInLine">13</I32>
                          <I64 N="HistoryId">18</I64>
                          <S N="ScriptName">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1</S>
                          <S N="Line">            throw $errorRecord_x000D__x000A_</S>
                          <S N="Statement">throw $errorRecord</S>
                          <S N="PositionMessage">At C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1:8392 char:13_x000D__x000A_+             throw $errorRecord_x000D__x000A_+             ~~~~~~~~~~~~~~~~~~</S>
                          <S N="PSScriptRoot">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1</S>
                          <S N="PSCommandPath">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1</S>
                          <S N="InvocationName"></S>
                          <I32 N="PipelineLength">0</I32>
                          <I32 N="PipelinePosition">0</I32>
                          <B N="ExpectingInput">false</B>
                          <Obj N="CommandOrigin" RefId="648">
                            <TNRef RefId="39" />
                            <ToString>Internal</ToString>
                            <I32>1</I32>
                          </Obj>
                          <Nil N="DisplayScriptPosition" />
                        </Props>
                        <MS>
                          <Obj N="ParameterValues" RefId="649">
                            <TNRef RefId="25" />
                            <DCT />
                          </Obj>
                        </MS>
                      </Obj>
                      <I32 N="ErrorCategory_Category">8</I32>
                      <S N="ErrorCategory_Activity"></S>
                      <S N="ErrorCategory_Reason">Exception</S>
                      <S N="ErrorCategory_TargetName">System.Collections.Generic.Dictionary`2[System.String,System.Object]</S>
                      <S N="ErrorCategory_TargetType">Dictionary`2</S>
                      <S N="ErrorCategory_Message">InvalidResult: (System.Collections.…ring,System.Object]:Dictionary`2) [], Exception</S>
                      <B N="SerializeExtendedInfo">false</B>
                      <S N="ErrorDetails_ScriptStackTrace">at Invoke-Assertion, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 8392_x000D__x000A_at Should&lt;End&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 8331_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1: line 125_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2024_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1985_x000D__x000A_at Invoke-ScriptBlock, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2157_x000D__x000A_at Invoke-TestItem, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1199_x000D__x000A_at Invoke-Block, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 835_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 893_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2024_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1985_x000D__x000A_at Invoke-ScriptBlock, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2160_x000D__x000A_at Invoke-Block, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 940_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 893_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2024_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1985_x000D__x000A_at Invoke-ScriptBlock, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2160_x000D__x000A_at Invoke-Block, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 940_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1688_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.ps1: line 3_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 3260_x000D__x000A_at Invoke-InNewScriptScope, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 3267_x000D__x000A_at Run-Test, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1691_x000D__x000A_at Invoke-Test, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2512_x000D__x000A_at Invoke-Pester&lt;End&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 5110_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Sampler\0.118.1\tasks\Invoke-Pester.pester.build.ps1: line 906_x000D__x000A_at *Task, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 629_x000D__x000A_at *Task, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 601_x000D__x000A_at *Task, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 601_x000D__x000A_at &lt;ScriptBlock&gt;&lt;End&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 787_x000D__x000A_at &lt;ScriptBlock&gt;&lt;Begin&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\build.ps1: line 532_x000D__x000A_at &lt;ScriptBlock&gt;, &lt;No file&gt;: line 1</S>
                      <Nil N="PSMessageDetails" />
                    </MS>
                  </Obj>
                </LST>
              </Obj>
              <Nil N="StandardOutput" />
              <TS N="Duration">PT0.0427727S</TS>
              <S N="ItemType">Test</S>
              <S N="Id">120:5</S>
              <S N="GroupId">120:5</S>
              <SBK N="ScriptBlock">_x000D__x000A_        $functionFile = Get-ChildItem -Path $sourcePath -Recurse -Include "$Name.ps1"_x000D__x000A__x000D__x000A_        $pssaResult = (Invoke-ScriptAnalyzer -Path $functionFile.FullName)_x000D__x000A_        $report = $pssaResult | Format-Table -AutoSize | Out-String -Width 110_x000D__x000A_        $pssaResult | Should -BeNullOrEmpty -Because `_x000D__x000A_            "some rule triggered.`r`n`r`n $report"_x000D__x000A_    </SBK>
              <Nil N="Tag" />
              <B N="Focus">false</B>
              <B N="Skip">false</B>
              <Ref N="Block" RefId="60" />
              <B N="First">false</B>
              <B N="Last">false</B>
              <B N="Include">false</B>
              <B N="Exclude">false</B>
              <B N="Explicit">false</B>
              <B N="ShouldRun">true</B>
              <I32 N="StartLine">120</I32>
              <B N="Executed">true</B>
              <DT N="ExecutedAt">2024-08-03T17:35:50.6640575-07:00</DT>
              <B N="Passed">false</B>
              <B N="Skipped">false</B>
              <B N="Inconclusive">false</B>
              <TS N="UserDuration">PT0.0274081S</TS>
              <TS N="FrameworkDuration">PT0.0153646S</TS>
              <Nil N="PluginData" />
              <Nil N="FrameworkData" />
            </Props>
          </Obj>
          <Obj RefId="650">
            <TNRef RefId="30" />
            <ToString>[-] Should pass Script Analyzer for Initialize-CSVDirectory</ToString>
            <Props>
              <S N="Name">Should pass Script Analyzer for &lt;Name&gt;</S>
              <Obj N="Path" RefId="651">
                <TNRef RefId="28" />
                <LST>
                  <S>Quality for module</S>
                  <S>Should pass Script Analyzer for &lt;Name&gt;</S>
                </LST>
              </Obj>
              <Ref N="Data" RefId="464" />
              <S N="ExpandedName">Should pass Script Analyzer for Initialize-CSVDirectory</S>
              <S N="ExpandedPath">Quality for module.Should pass Script Analyzer for Initialize-CSVDirectory</S>
              <S N="Result">Failed</S>
              <Obj N="ErrorRecord" RefId="652">
                <TNRef RefId="31" />
                <LST>
                  <Obj RefId="653">
                    <TNRef RefId="33" />
                    <ToString>Expected $null or empty, because some rule triggered._x000D__x000A__x000D__x000A_ _x000D__x000A_RuleName              Severity ScriptName                  Line Message_x000D__x000A_--------              -------- ----------                  ---- -------_x000D__x000A_PSAvoidUsingWriteHost Warning  Initialize-CSVDirectory.ps1 32   File 'Initialize-CSVDirectory.ps1' uses_x000D__x000A_                                                                Write-Host. Avoid using Write-Host it_x000D__x000A_                                                                might not work in all hosts, does not work_x000D__x000A_                                                                when there is no host, and (prior to PS 5.0)_x000D__x000A_                                                                cannot be suppressed, captured, or_x000D__x000A_                                                                redirected. Instead, use Write-Output,_x000D__x000A_                                                                Write-Verbose, or Write-Information._x000D__x000A_PSAvoidUsingWriteHost Warning  Initialize-CSVDirectory.ps1 33   File 'Initialize-CSVDirectory.ps1' uses_x000D__x000A_                                                                Write-Host. Avoid using Write-Host it_x000D__x000A_                                                                might not work in all hosts, does not work_x000D__x000A_                                                                when there is no host, and (prior to PS 5.0)_x000D__x000A_                                                                cannot be suppressed, captured, or_x000D__x000A_                                                                redirected. Instead, use Write-Output,_x000D__x000A_                                                                Write-Verbose, or Write-Information._x000D__x000A_PSAvoidUsingWriteHost Warning  Initialize-CSVDirectory.ps1 35   File 'Initialize-CSVDirectory.ps1' uses_x000D__x000A_                                                                Write-Host. Avoid using Write-Host it_x000D__x000A_                                                                might not work in all hosts, does not work_x000D__x000A_                                                                when there is no host, and (prior to PS 5.0)_x000D__x000A_                                                                cannot be suppressed, captured, or_x000D__x000A_                                                                redirected. Instead, use Write-Output,_x000D__x000A_                                                                Write-Verbose, or Write-Information._x000D__x000A_PSAvoidUsingWriteHost Warning  Initialize-CSVDirectory.ps1 43   File 'Initialize-CSVDirectory.ps1' uses_x000D__x000A_                                                                Write-Host. Avoid using Write-Host it_x000D__x000A_                                                                might not work in all hosts, does not work_x000D__x000A_                                                                when there is no host, and (prior to PS 5.0)_x000D__x000A_                                                                cannot be suppressed, captured, or_x000D__x000A_                                                                redirected. Instead, use Write-Output,_x000D__x000A_                                                                Write-Verbose, or Write-Information., but got @(File 'Initialize-CSVDirectory.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information., File 'Initialize-CSVDirectory.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information., File 'Initialize-CSVDirectory.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information., File 'Initialize-CSVDirectory.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information.).</ToString>
                    <MS>
                      <S N="DisplayErrorMessage">Expected $null or empty, because some rule triggered._x000D__x000A_ _x000D__x000A_RuleName              Severity ScriptName                  Line Message_x000D__x000A_--------              -------- ----------                  ---- -------_x000D__x000A_PSAvoidUsingWriteHost Warning  Initialize-CSVDirectory.ps1 32   File 'Initialize-CSVDirectory.ps1' uses_x000D__x000A_                                                                Write-Host. Avoid using Write-Host it_x000D__x000A_                                                                might not work in all hosts, does not work_x000D__x000A_                                                                when there is no host, and (prior to PS 5.0)_x000D__x000A_                                                                cannot be suppressed, captured, or_x000D__x000A_                                                                redirected. Instead, use Write-Output,_x000D__x000A_                                                                Write-Verbose, or Write-Information._x000D__x000A_PSAvoidUsingWriteHost Warning  Initialize-CSVDirectory.ps1 33   File 'Initialize-CSVDirectory.ps1' uses_x000D__x000A_                                                                Write-Host. Avoid using Write-Host it_x000D__x000A_                                                                might not work in all hosts, does not work_x000D__x000A_                                                                when there is no host, and (prior to PS 5.0)_x000D__x000A_                                                                cannot be suppressed, captured, or_x000D__x000A_                                                                redirected. Instead, use Write-Output,_x000D__x000A_                                                                Write-Verbose, or Write-Information._x000D__x000A_PSAvoidUsingWriteHost Warning  Initialize-CSVDirectory.ps1 35   File 'Initialize-CSVDirectory.ps1' uses_x000D__x000A_                                                                Write-Host. Avoid using Write-Host it_x000D__x000A_                                                                might not work in all hosts, does not work_x000D__x000A_                                                                when there is no host, and (prior to PS 5.0)_x000D__x000A_                                                                cannot be suppressed, captured, or_x000D__x000A_                                                                redirected. Instead, use Write-Output,_x000D__x000A_                                                                Write-Verbose, or Write-Information._x000D__x000A_PSAvoidUsingWriteHost Warning  Initialize-CSVDirectory.ps1 43   File 'Initialize-CSVDirectory.ps1' uses_x000D__x000A_                                                                Write-Host. Avoid using Write-Host it_x000D__x000A_                                                                might not work in all hosts, does not work_x000D__x000A_                                                                when there is no host, and (prior to PS 5.0)_x000D__x000A_                                                                cannot be suppressed, captured, or_x000D__x000A_                                                                redirected. Instead, use Write-Output,_x000D__x000A_                                                                Write-Verbose, or Write-Information., but got @(File 'Initialize-CSVDirectory.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information., File 'Initialize-CSVDirectory.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information., File 'Initialize-CSVDirectory.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information., File 'Initialize-CSVDirectory.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information.).</S>
                      <S N="DisplayStackTrace">at $pssaResult | Should -BeNullOrEmpty -Because `, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:125_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:125</S>
                      <Obj N="Exception" RefId="654">
                        <TNRef RefId="60" />
                        <ToString>System.Exception: Expected $null or empty, because some rule triggered._x000D__x000A__x000D__x000A_ _x000D__x000A_RuleName              Severity ScriptName                  Line Message_x000D__x000A_--------              -------- ----------                  ---- -------_x000D__x000A_PSAvoidUsingWriteHost Warning  Initialize-CSVDirectory.ps1 32   File 'Initialize-CSVDirectory.ps1' uses_x000D__x000A_                                                                Write-Host. Avoid using Write-Host it_x000D__x000A_                                                                might not work in all hosts, does not work_x000D__x000A_                                                                when there is no host, and (prior to PS 5.0)_x000D__x000A_                                                                cannot be suppressed, captured, or_x000D__x000A_                                                                redirected. Instead, use Write-Output,_x000D__x000A_                                                                Write-Verbose, or Write-Information._x000D__x000A_PSAvoidUsingWriteHost Warning  Initialize-CSVDirectory.ps1 33   File 'Initialize-CSVDirectory.ps1' uses_x000D__x000A_                                                                Write-Host. Avoid using Write-Host it_x000D__x000A_                                                                might not work in all hosts, does not work_x000D__x000A_                                                                when there is no host, and (prior to PS 5.0)_x000D__x000A_                                                                cannot be suppressed, captured, or_x000D__x000A_                                                                redirected. Instead, use Write-Output,_x000D__x000A_                                                                Write-Verbose, or Write-Information._x000D__x000A_PSAvoidUsingWriteHost Warning  Initialize-CSVDirectory.ps1 35   File 'Initialize-CSVDirectory.ps1' uses_x000D__x000A_                                                                Write-Host. Avoid using Write-Host it_x000D__x000A_                                                                might not work in all hosts, does not work_x000D__x000A_                                                                when there is no host, and (prior to PS 5.0)_x000D__x000A_                                                                cannot be suppressed, captured, or_x000D__x000A_                                                                redirected. Instead, use Write-Output,_x000D__x000A_                                                                Write-Verbose, or Write-Information._x000D__x000A_PSAvoidUsingWriteHost Warning  Initialize-CSVDirectory.ps1 43   File 'Initialize-CSVDirectory.ps1' uses_x000D__x000A_                                                                Write-Host. Avoid using Write-Host it_x000D__x000A_                                                                might not work in all hosts, does not work_x000D__x000A_                                                                when there is no host, and (prior to PS 5.0)_x000D__x000A_                                                                cannot be suppressed, captured, or_x000D__x000A_                                                                redirected. Instead, use Write-Output,_x000D__x000A_                                                                Write-Verbose, or Write-Information., but got @(File 'Initialize-CSVDirectory.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information., File 'Initialize-CSVDirectory.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information., File 'Initialize-CSVDirectory.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information., File 'Initialize-CSVDirectory.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information.).</ToString>
                        <Props>
                          <Nil N="TargetSite" />
                          <S N="Message">Expected $null or empty, because some rule triggered._x000D__x000A__x000D__x000A_ _x000D__x000A_RuleName              Severity ScriptName                  Line Message_x000D__x000A_--------              -------- ----------                  ---- -------_x000D__x000A_PSAvoidUsingWriteHost Warning  Initialize-CSVDirectory.ps1 32   File 'Initialize-CSVDirectory.ps1' uses_x000D__x000A_                                                                Write-Host. Avoid using Write-Host it_x000D__x000A_                                                                might not work in all hosts, does not work_x000D__x000A_                                                                when there is no host, and (prior to PS 5.0)_x000D__x000A_                                                                cannot be suppressed, captured, or_x000D__x000A_                                                                redirected. Instead, use Write-Output,_x000D__x000A_                                                                Write-Verbose, or Write-Information._x000D__x000A_PSAvoidUsingWriteHost Warning  Initialize-CSVDirectory.ps1 33   File 'Initialize-CSVDirectory.ps1' uses_x000D__x000A_                                                                Write-Host. Avoid using Write-Host it_x000D__x000A_                                                                might not work in all hosts, does not work_x000D__x000A_                                                                when there is no host, and (prior to PS 5.0)_x000D__x000A_                                                                cannot be suppressed, captured, or_x000D__x000A_                                                                redirected. Instead, use Write-Output,_x000D__x000A_                                                                Write-Verbose, or Write-Information._x000D__x000A_PSAvoidUsingWriteHost Warning  Initialize-CSVDirectory.ps1 35   File 'Initialize-CSVDirectory.ps1' uses_x000D__x000A_                                                                Write-Host. Avoid using Write-Host it_x000D__x000A_                                                                might not work in all hosts, does not work_x000D__x000A_                                                                when there is no host, and (prior to PS 5.0)_x000D__x000A_                                                                cannot be suppressed, captured, or_x000D__x000A_                                                                redirected. Instead, use Write-Output,_x000D__x000A_                                                                Write-Verbose, or Write-Information._x000D__x000A_PSAvoidUsingWriteHost Warning  Initialize-CSVDirectory.ps1 43   File 'Initialize-CSVDirectory.ps1' uses_x000D__x000A_                                                                Write-Host. Avoid using Write-Host it_x000D__x000A_                                                                might not work in all hosts, does not work_x000D__x000A_                                                                when there is no host, and (prior to PS 5.0)_x000D__x000A_                                                                cannot be suppressed, captured, or_x000D__x000A_                                                                redirected. Instead, use Write-Output,_x000D__x000A_                                                                Write-Verbose, or Write-Information., but got @(File 'Initialize-CSVDirectory.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information., File 'Initialize-CSVDirectory.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information., File 'Initialize-CSVDirectory.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information., File 'Initialize-CSVDirectory.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information.).</S>
                          <Obj N="Data" RefId="655">
                            <TNRef RefId="35" />
                            <DCT />
                          </Obj>
                          <Nil N="InnerException" />
                          <Nil N="HelpLink" />
                          <Nil N="Source" />
                          <I32 N="HResult">-2146233088</I32>
                          <Nil N="StackTrace" />
                        </Props>
                      </Obj>
                      <Obj N="TargetObject" RefId="656">
                        <TNRef RefId="38" />
                        <DCT>
                          <En>
                            <S N="Key">Message</S>
                            <S N="Value">Expected $null or empty, because some rule triggered._x000D__x000A__x000D__x000A_ _x000D__x000A_RuleName              Severity ScriptName                  Line Message_x000D__x000A_--------              -------- ----------                  ---- -------_x000D__x000A_PSAvoidUsingWriteHost Warning  Initialize-CSVDirectory.ps1 32   File 'Initialize-CSVDirectory.ps1' uses_x000D__x000A_                                                                Write-Host. Avoid using Write-Host it_x000D__x000A_                                                                might not work in all hosts, does not work_x000D__x000A_                                                                when there is no host, and (prior to PS 5.0)_x000D__x000A_                                                                cannot be suppressed, captured, or_x000D__x000A_                                                                redirected. Instead, use Write-Output,_x000D__x000A_                                                                Write-Verbose, or Write-Information._x000D__x000A_PSAvoidUsingWriteHost Warning  Initialize-CSVDirectory.ps1 33   File 'Initialize-CSVDirectory.ps1' uses_x000D__x000A_                                                                Write-Host. Avoid using Write-Host it_x000D__x000A_                                                                might not work in all hosts, does not work_x000D__x000A_                                                                when there is no host, and (prior to PS 5.0)_x000D__x000A_                                                                cannot be suppressed, captured, or_x000D__x000A_                                                                redirected. Instead, use Write-Output,_x000D__x000A_                                                                Write-Verbose, or Write-Information._x000D__x000A_PSAvoidUsingWriteHost Warning  Initialize-CSVDirectory.ps1 35   File 'Initialize-CSVDirectory.ps1' uses_x000D__x000A_                                                                Write-Host. Avoid using Write-Host it_x000D__x000A_                                                                might not work in all hosts, does not work_x000D__x000A_                                                                when there is no host, and (prior to PS 5.0)_x000D__x000A_                                                                cannot be suppressed, captured, or_x000D__x000A_                                                                redirected. Instead, use Write-Output,_x000D__x000A_                                                                Write-Verbose, or Write-Information._x000D__x000A_PSAvoidUsingWriteHost Warning  Initialize-CSVDirectory.ps1 43   File 'Initialize-CSVDirectory.ps1' uses_x000D__x000A_                                                                Write-Host. Avoid using Write-Host it_x000D__x000A_                                                                might not work in all hosts, does not work_x000D__x000A_                                                                when there is no host, and (prior to PS 5.0)_x000D__x000A_                                                                cannot be suppressed, captured, or_x000D__x000A_                                                                redirected. Instead, use Write-Output,_x000D__x000A_                                                                Write-Verbose, or Write-Information., but got @(File 'Initialize-CSVDirectory.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information., File 'Initialize-CSVDirectory.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information., File 'Initialize-CSVDirectory.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information., File 'Initialize-CSVDirectory.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information.).</S>
                          </En>
                          <En>
                            <S N="Key">File</S>
                            <S N="Value">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1</S>
                          </En>
                          <En>
                            <S N="Key">Line</S>
                            <S N="Value">125</S>
                          </En>
                          <En>
                            <S N="Key">LineText</S>
                            <S N="Value">        $pssaResult | Should -BeNullOrEmpty -Because `</S>
                          </En>
                          <En>
                            <S N="Key">Terminating</S>
                            <B N="Value">true</B>
                          </En>
                          <En>
                            <S N="Key">ShouldResult</S>
                            <Obj N="Value" RefId="657">
                              <TNRef RefId="61" />
                              <ToString>Pester.ShouldResult</ToString>
                              <Props>
                                <B N="Succeeded">false</B>
                                <S N="FailureMessage">Expected $null or empty, because some rule triggered._x000D__x000A__x000D__x000A_ _x000D__x000A_RuleName              Severity ScriptName                  Line Message_x000D__x000A_--------              -------- ----------                  ---- -------_x000D__x000A_PSAvoidUsingWriteHost Warning  Initialize-CSVDirectory.ps1 32   File 'Initialize-CSVDirectory.ps1' uses_x000D__x000A_                                                                Write-Host. Avoid using Write-Host it_x000D__x000A_                                                                might not work in all hosts, does not work_x000D__x000A_                                                                when there is no host, and (prior to PS 5.0)_x000D__x000A_                                                                cannot be suppressed, captured, or_x000D__x000A_                                                                redirected. Instead, use Write-Output,_x000D__x000A_                                                                Write-Verbose, or Write-Information._x000D__x000A_PSAvoidUsingWriteHost Warning  Initialize-CSVDirectory.ps1 33   File 'Initialize-CSVDirectory.ps1' uses_x000D__x000A_                                                                Write-Host. Avoid using Write-Host it_x000D__x000A_                                                                might not work in all hosts, does not work_x000D__x000A_                                                                when there is no host, and (prior to PS 5.0)_x000D__x000A_                                                                cannot be suppressed, captured, or_x000D__x000A_                                                                redirected. Instead, use Write-Output,_x000D__x000A_                                                                Write-Verbose, or Write-Information._x000D__x000A_PSAvoidUsingWriteHost Warning  Initialize-CSVDirectory.ps1 35   File 'Initialize-CSVDirectory.ps1' uses_x000D__x000A_                                                                Write-Host. Avoid using Write-Host it_x000D__x000A_                                                                might not work in all hosts, does not work_x000D__x000A_                                                                when there is no host, and (prior to PS 5.0)_x000D__x000A_                                                                cannot be suppressed, captured, or_x000D__x000A_                                                                redirected. Instead, use Write-Output,_x000D__x000A_                                                                Write-Verbose, or Write-Information._x000D__x000A_PSAvoidUsingWriteHost Warning  Initialize-CSVDirectory.ps1 43   File 'Initialize-CSVDirectory.ps1' uses_x000D__x000A_                                                                Write-Host. Avoid using Write-Host it_x000D__x000A_                                                                might not work in all hosts, does not work_x000D__x000A_                                                                when there is no host, and (prior to PS 5.0)_x000D__x000A_                                                                cannot be suppressed, captured, or_x000D__x000A_                                                                redirected. Instead, use Write-Output,_x000D__x000A_                                                                Write-Verbose, or Write-Information., but got @(File 'Initialize-CSVDirectory.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information., File 'Initialize-CSVDirectory.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information., File 'Initialize-CSVDirectory.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information., File 'Initialize-CSVDirectory.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information.).</S>
                                <Obj N="ExpectResult" RefId="658">
                                  <TNRef RefId="62" />
                                  <ToString>Expected: 'a value' Actual: @(File 'Initialize-CSVDirectory.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information., File 'Initialize-CSVDirectory.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information., File 'Initialize-CSVDirectory.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information., File 'Initialize-CSVDirectory.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information.) Because: some rule triggered._x000D__x000A__x000D__x000A_ _x000D__x000A_RuleName              Severity ScriptName                  Line Message_x000D__x000A_--------              -------- ----------                  ---- -------_x000D__x000A_PSAvoidUsingWriteHost Warning  Initialize-CSVDirectory.ps1 32   File 'Initialize-CSVDirectory.ps1' uses_x000D__x000A_                                                                Write-Host. Avoid using Write-Host because it_x000D__x000A_                                                                might not work in all hosts, does not work_x000D__x000A_                                                                when there is no host, and (prior to PS 5.0)_x000D__x000A_                                                                cannot be suppressed, captured, or_x000D__x000A_                                                                redirected. Instead, use Write-Output,_x000D__x000A_                                                                Write-Verbose, or Write-Information._x000D__x000A_PSAvoidUsingWriteHost Warning  Initialize-CSVDirectory.ps1 33   File 'Initialize-CSVDirectory.ps1' uses_x000D__x000A_                                                                Write-Host. Avoid using Write-Host because it_x000D__x000A_                                                                might not work in all hosts, does not work_x000D__x000A_                                                                when there is no host, and (prior to PS 5.0)_x000D__x000A_                                                                cannot be suppressed, captured, or_x000D__x000A_                                                                redirected. Instead, use Write-Output,_x000D__x000A_                                                                Write-Verbose, or Write-Information._x000D__x000A_PSAvoidUsingWriteHost Warning  Initialize-CSVDirectory.ps1 35   File 'Initialize-CSVDirectory.ps1' uses_x000D__x000A_                                                                Write-Host. Avoid using Write-Host because it_x000D__x000A_                                                                might not work in all hosts, does not work_x000D__x000A_                                                                when there is no host, and (prior to PS 5.0)_x000D__x000A_                                                                cannot be suppressed, captured, or_x000D__x000A_                                                                redirected. Instead, use Write-Output,_x000D__x000A_                                                                Write-Verbose, or Write-Information._x000D__x000A_PSAvoidUsingWriteHost Warning  Initialize-CSVDirectory.ps1 43   File 'Initialize-CSVDirectory.ps1' uses_x000D__x000A_                                                                Write-Host. Avoid using Write-Host because it_x000D__x000A_                                                                might not work in all hosts, does not work_x000D__x000A_                                                                when there is no host, and (prior to PS 5.0)_x000D__x000A_                                                                cannot be suppressed, captured, or_x000D__x000A_                                                                redirected. Instead, use Write-Output,_x000D__x000A_                                                                Write-Verbose, or Write-Information._x000D__x000A__x000D__x000A_</ToString>
                                  <Props>
                                    <S N="Actual">@(File 'Initialize-CSVDirectory.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information., File 'Initialize-CSVDirectory.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information., File 'Initialize-CSVDirectory.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information., File 'Initialize-CSVDirectory.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information.)</S>
                                    <S N="Expected">'a value'</S>
                                    <S N="Because">some rule triggered._x000D__x000A__x000D__x000A_ _x000D__x000A_RuleName              Severity ScriptName                  Line Message_x000D__x000A_--------              -------- ----------                  ---- -------_x000D__x000A_PSAvoidUsingWriteHost Warning  Initialize-CSVDirectory.ps1 32   File 'Initialize-CSVDirectory.ps1' uses_x000D__x000A_                                                                Write-Host. Avoid using Write-Host because it_x000D__x000A_                                                                might not work in all hosts, does not work_x000D__x000A_                                                                when there is no host, and (prior to PS 5.0)_x000D__x000A_                                                                cannot be suppressed, captured, or_x000D__x000A_                                                                redirected. Instead, use Write-Output,_x000D__x000A_                                                                Write-Verbose, or Write-Information._x000D__x000A_PSAvoidUsingWriteHost Warning  Initialize-CSVDirectory.ps1 33   File 'Initialize-CSVDirectory.ps1' uses_x000D__x000A_                                                                Write-Host. Avoid using Write-Host because it_x000D__x000A_                                                                might not work in all hosts, does not work_x000D__x000A_                                                                when there is no host, and (prior to PS 5.0)_x000D__x000A_                                                                cannot be suppressed, captured, or_x000D__x000A_                                                                redirected. Instead, use Write-Output,_x000D__x000A_                                                                Write-Verbose, or Write-Information._x000D__x000A_PSAvoidUsingWriteHost Warning  Initialize-CSVDirectory.ps1 35   File 'Initialize-CSVDirectory.ps1' uses_x000D__x000A_                                                                Write-Host. Avoid using Write-Host because it_x000D__x000A_                                                                might not work in all hosts, does not work_x000D__x000A_                                                                when there is no host, and (prior to PS 5.0)_x000D__x000A_                                                                cannot be suppressed, captured, or_x000D__x000A_                                                                redirected. Instead, use Write-Output,_x000D__x000A_                                                                Write-Verbose, or Write-Information._x000D__x000A_PSAvoidUsingWriteHost Warning  Initialize-CSVDirectory.ps1 43   File 'Initialize-CSVDirectory.ps1' uses_x000D__x000A_                                                                Write-Host. Avoid using Write-Host because it_x000D__x000A_                                                                might not work in all hosts, does not work_x000D__x000A_                                                                when there is no host, and (prior to PS 5.0)_x000D__x000A_                                                                cannot be suppressed, captured, or_x000D__x000A_                                                                redirected. Instead, use Write-Output,_x000D__x000A_                                                                Write-Verbose, or Write-Information._x000D__x000A__x000D__x000A_</S>
                                  </Props>
                                </Obj>
                              </Props>
                            </Obj>
                          </En>
                        </DCT>
                      </Obj>
                      <S N="FullyQualifiedErrorId">PesterAssertionFailed</S>
                      <Obj N="InvocationInfo" RefId="659">
                        <TNRef RefId="37" />
                        <ToString>System.Management.Automation.InvocationInfo</ToString>
                        <Props>
                          <Nil N="MyCommand" />
                          <Obj N="BoundParameters" RefId="660">
                            <TNRef RefId="38" />
                            <DCT />
                          </Obj>
                          <Obj N="UnboundArguments" RefId="661">
                            <TNRef RefId="31" />
                            <LST />
                          </Obj>
                          <I32 N="ScriptLineNumber">8392</I32>
                          <I32 N="OffsetInLine">13</I32>
                          <I64 N="HistoryId">18</I64>
                          <S N="ScriptName">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1</S>
                          <S N="Line">            throw $errorRecord_x000D__x000A_</S>
                          <S N="Statement">throw $errorRecord</S>
                          <S N="PositionMessage">At C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1:8392 char:13_x000D__x000A_+             throw $errorRecord_x000D__x000A_+             ~~~~~~~~~~~~~~~~~~</S>
                          <S N="PSScriptRoot">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1</S>
                          <S N="PSCommandPath">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1</S>
                          <S N="InvocationName"></S>
                          <I32 N="PipelineLength">0</I32>
                          <I32 N="PipelinePosition">0</I32>
                          <B N="ExpectingInput">false</B>
                          <Obj N="CommandOrigin" RefId="662">
                            <TNRef RefId="39" />
                            <ToString>Internal</ToString>
                            <I32>1</I32>
                          </Obj>
                          <Nil N="DisplayScriptPosition" />
                        </Props>
                        <MS>
                          <Obj N="ParameterValues" RefId="663">
                            <TNRef RefId="25" />
                            <DCT />
                          </Obj>
                        </MS>
                      </Obj>
                      <I32 N="ErrorCategory_Category">8</I32>
                      <S N="ErrorCategory_Activity"></S>
                      <S N="ErrorCategory_Reason">Exception</S>
                      <S N="ErrorCategory_TargetName">System.Collections.Generic.Dictionary`2[System.String,System.Object]</S>
                      <S N="ErrorCategory_TargetType">Dictionary`2</S>
                      <S N="ErrorCategory_Message">InvalidResult: (System.Collections.…ring,System.Object]:Dictionary`2) [], Exception</S>
                      <B N="SerializeExtendedInfo">false</B>
                      <S N="ErrorDetails_ScriptStackTrace">at Invoke-Assertion, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 8392_x000D__x000A_at Should&lt;End&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 8331_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1: line 125_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2024_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1985_x000D__x000A_at Invoke-ScriptBlock, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2157_x000D__x000A_at Invoke-TestItem, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1199_x000D__x000A_at Invoke-Block, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 835_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 893_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2024_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1985_x000D__x000A_at Invoke-ScriptBlock, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2160_x000D__x000A_at Invoke-Block, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 940_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 893_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2024_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1985_x000D__x000A_at Invoke-ScriptBlock, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2160_x000D__x000A_at Invoke-Block, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 940_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1688_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.ps1: line 3_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 3260_x000D__x000A_at Invoke-InNewScriptScope, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 3267_x000D__x000A_at Run-Test, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1691_x000D__x000A_at Invoke-Test, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2512_x000D__x000A_at Invoke-Pester&lt;End&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 5110_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Sampler\0.118.1\tasks\Invoke-Pester.pester.build.ps1: line 906_x000D__x000A_at *Task, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 629_x000D__x000A_at *Task, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 601_x000D__x000A_at *Task, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 601_x000D__x000A_at &lt;ScriptBlock&gt;&lt;End&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 787_x000D__x000A_at &lt;ScriptBlock&gt;&lt;Begin&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\build.ps1: line 532_x000D__x000A_at &lt;ScriptBlock&gt;, &lt;No file&gt;: line 1</S>
                      <Nil N="PSMessageDetails" />
                    </MS>
                  </Obj>
                </LST>
              </Obj>
              <Nil N="StandardOutput" />
              <TS N="Duration">PT0.0582847S</TS>
              <S N="ItemType">Test</S>
              <S N="Id">120:5</S>
              <S N="GroupId">120:5</S>
              <SBK N="ScriptBlock">_x000D__x000A_        $functionFile = Get-ChildItem -Path $sourcePath -Recurse -Include "$Name.ps1"_x000D__x000A__x000D__x000A_        $pssaResult = (Invoke-ScriptAnalyzer -Path $functionFile.FullName)_x000D__x000A_        $report = $pssaResult | Format-Table -AutoSize | Out-String -Width 110_x000D__x000A_        $pssaResult | Should -BeNullOrEmpty -Because `_x000D__x000A_            "some rule triggered.`r`n`r`n $report"_x000D__x000A_    </SBK>
              <Nil N="Tag" />
              <B N="Focus">false</B>
              <B N="Skip">false</B>
              <Ref N="Block" RefId="60" />
              <B N="First">false</B>
              <B N="Last">false</B>
              <B N="Include">false</B>
              <B N="Exclude">false</B>
              <B N="Explicit">false</B>
              <B N="ShouldRun">true</B>
              <I32 N="StartLine">120</I32>
              <B N="Executed">true</B>
              <DT N="ExecutedAt">2024-08-03T17:35:50.7067974-07:00</DT>
              <B N="Passed">false</B>
              <B N="Skipped">false</B>
              <B N="Inconclusive">false</B>
              <TS N="UserDuration">PT0.045832S</TS>
              <TS N="FrameworkDuration">PT0.0124527S</TS>
              <Nil N="PluginData" />
              <Nil N="FrameworkData" />
            </Props>
          </Obj>
          <Obj RefId="664">
            <TNRef RefId="30" />
            <ToString>[-] Should pass Script Analyzer for Initialize-ScriptAndLogging</ToString>
            <Props>
              <S N="Name">Should pass Script Analyzer for &lt;Name&gt;</S>
              <Obj N="Path" RefId="665">
                <TNRef RefId="28" />
                <LST>
                  <S>Quality for module</S>
                  <S>Should pass Script Analyzer for &lt;Name&gt;</S>
                </LST>
              </Obj>
              <Ref N="Data" RefId="479" />
              <S N="ExpandedName">Should pass Script Analyzer for Initialize-ScriptAndLogging</S>
              <S N="ExpandedPath">Quality for module.Should pass Script Analyzer for Initialize-ScriptAndLogging</S>
              <S N="Result">Failed</S>
              <Obj N="ErrorRecord" RefId="666">
                <TNRef RefId="31" />
                <LST>
                  <Obj RefId="667">
                    <TNRef RefId="33" />
                    <ToString>Expected $null or empty, because some rule triggered._x000D__x000A__x000D__x000A_ _x000D__x000A_RuleName                  Severity    ScriptName                      Line Message_x000D__x000A_--------                  --------    ----------                      ---- -------_x000D__x000A_PSAvoidTrailingWhitespace Information Initialize-ScriptAndLogging.ps1 6    Line has trailing whitespace_x000D__x000A_PSAvoidUsingWriteHost     Warning     Initialize-ScriptAndLogging.ps1 34   File_x000D__x000A_                                                                           'Initialize-ScriptAndLogging.ps1'_x000D__x000A_                                                                           uses Write-Host. Avoid using_x000D__x000A_                                                                           Write-Host it might not_x000D__x000A_                                                                           work in all hosts, does not work_x000D__x000A_                                                                           when there is no host, and (prior_x000D__x000A_                                                                           to PS 5.0) cannot be suppressed,_x000D__x000A_                                                                           captured, or redirected. Instead,_x000D__x000A_                                                                           use Write-Output, Write-Verbose,_x000D__x000A_                                                                           or Write-Information._x000D__x000A_PSAvoidUsingWriteHost     Warning     Initialize-ScriptAndLogging.ps1 42   File_x000D__x000A_                                                                           'Initialize-ScriptAndLogging.ps1'_x000D__x000A_                                                                           uses Write-Host. Avoid using_x000D__x000A_                                                                           Write-Host it might not_x000D__x000A_                                                                           work in all hosts, does not work_x000D__x000A_                                                                           when there is no host, and (prior_x000D__x000A_                                                                           to PS 5.0) cannot be suppressed,_x000D__x000A_                                                                           captured, or redirected. Instead,_x000D__x000A_                                                                           use Write-Output, Write-Verbose,_x000D__x000A_                                                                           or Write-Information._x000D__x000A_PSAvoidUsingWriteHost     Warning     Initialize-ScriptAndLogging.ps1 43   File_x000D__x000A_                                                                           'Initialize-ScriptAndLogging.ps1'_x000D__x000A_                                                                           uses Write-Host. Avoid using_x000D__x000A_                                                                           Write-Host it might not_x000D__x000A_                                                                           work in all hosts, does not work_x000D__x000A_                                                                           when there is no host, and (prior_x000D__x000A_                                                                           to PS 5.0) cannot be suppressed,_x000D__x000A_                                                                           captured, or redirected. Instead,_x000D__x000A_                                                                           use Write-Output, Write-Verbose,_x000D__x000A_                                                                           or Write-Information._x000D__x000A_PSAvoidUsingWriteHost     Warning     Initialize-ScriptAndLogging.ps1 45   File_x000D__x000A_                                                                           'Initialize-ScriptAndLogging.ps1'_x000D__x000A_                                                                           uses Write-Host. Avoid using_x000D__x000A_                                                                           Write-Host it might not_x000D__x000A_                                                                           work in all hosts, does not work_x000D__x000A_                                                                           when there is no host, and (prior_x000D__x000A_                                                                           to PS 5.0) cannot be suppressed,_x000D__x000A_                                                                           captured, or redirected. Instead,_x000D__x000A_                                                                           use Write-Output, Write-Verbose,_x000D__x000A_                                                                           or Write-Information._x000D__x000A_PSAvoidUsingWriteHost     Warning     Initialize-ScriptAndLogging.ps1 59   File_x000D__x000A_                                                                           'Initialize-ScriptAndLogging.ps1'_x000D__x000A_                                                                           uses Write-Host. Avoid using_x000D__x000A_                                                                           Write-Host it might not_x000D__x000A_                                                                           work in all hosts, does not work_x000D__x000A_                                                                           when there is no host, and (prior_x000D__x000A_                                                                           to PS 5.0) cannot be suppressed,_x000D__x000A_                                                                           captured, or redirected. Instead,_x000D__x000A_                                                                           use Write-Output, Write-Verbose,_x000D__x000A_                                                                           or Write-Information., but got @(Line has trailing whitespace, File 'Initialize-ScriptAndLogging.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information., File 'Initialize-ScriptAndLogging.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information., File 'Initialize-ScriptAndLogging.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information., File 'Initialize-ScriptAndLogging.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information., File 'Initialize-ScriptAndLogging.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information.).</ToString>
                    <MS>
                      <S N="DisplayErrorMessage">Expected $null or empty, because some rule triggered._x000D__x000A_ _x000D__x000A_RuleName                  Severity    ScriptName                      Line Message_x000D__x000A_--------                  --------    ----------                      ---- -------_x000D__x000A_PSAvoidTrailingWhitespace Information Initialize-ScriptAndLogging.ps1 6    Line has trailing whitespace_x000D__x000A_PSAvoidUsingWriteHost     Warning     Initialize-ScriptAndLogging.ps1 34   File_x000D__x000A_                                                                           'Initialize-ScriptAndLogging.ps1'_x000D__x000A_                                                                           uses Write-Host. Avoid using_x000D__x000A_                                                                           Write-Host it might not_x000D__x000A_                                                                           work in all hosts, does not work_x000D__x000A_                                                                           when there is no host, and (prior_x000D__x000A_                                                                           to PS 5.0) cannot be suppressed,_x000D__x000A_                                                                           captured, or redirected. Instead,_x000D__x000A_                                                                           use Write-Output, Write-Verbose,_x000D__x000A_                                                                           or Write-Information._x000D__x000A_PSAvoidUsingWriteHost     Warning     Initialize-ScriptAndLogging.ps1 42   File_x000D__x000A_                                                                           'Initialize-ScriptAndLogging.ps1'_x000D__x000A_                                                                           uses Write-Host. Avoid using_x000D__x000A_                                                                           Write-Host it might not_x000D__x000A_                                                                           work in all hosts, does not work_x000D__x000A_                                                                           when there is no host, and (prior_x000D__x000A_                                                                           to PS 5.0) cannot be suppressed,_x000D__x000A_                                                                           captured, or redirected. Instead,_x000D__x000A_                                                                           use Write-Output, Write-Verbose,_x000D__x000A_                                                                           or Write-Information._x000D__x000A_PSAvoidUsingWriteHost     Warning     Initialize-ScriptAndLogging.ps1 43   File_x000D__x000A_                                                                           'Initialize-ScriptAndLogging.ps1'_x000D__x000A_                                                                           uses Write-Host. Avoid using_x000D__x000A_                                                                           Write-Host it might not_x000D__x000A_                                                                           work in all hosts, does not work_x000D__x000A_                                                                           when there is no host, and (prior_x000D__x000A_                                                                           to PS 5.0) cannot be suppressed,_x000D__x000A_                                                                           captured, or redirected. Instead,_x000D__x000A_                                                                           use Write-Output, Write-Verbose,_x000D__x000A_                                                                           or Write-Information._x000D__x000A_PSAvoidUsingWriteHost     Warning     Initialize-ScriptAndLogging.ps1 45   File_x000D__x000A_                                                                           'Initialize-ScriptAndLogging.ps1'_x000D__x000A_                                                                           uses Write-Host. Avoid using_x000D__x000A_                                                                           Write-Host it might not_x000D__x000A_                                                                           work in all hosts, does not work_x000D__x000A_                                                                           when there is no host, and (prior_x000D__x000A_                                                                           to PS 5.0) cannot be suppressed,_x000D__x000A_                                                                           captured, or redirected. Instead,_x000D__x000A_                                                                           use Write-Output, Write-Verbose,_x000D__x000A_                                                                           or Write-Information._x000D__x000A_PSAvoidUsingWriteHost     Warning     Initialize-ScriptAndLogging.ps1 59   File_x000D__x000A_                                                                           'Initialize-ScriptAndLogging.ps1'_x000D__x000A_                                                                           uses Write-Host. Avoid using_x000D__x000A_                                                                           Write-Host it might not_x000D__x000A_                                                                           work in all hosts, does not work_x000D__x000A_                                                                           when there is no host, and (prior_x000D__x000A_                                                                           to PS 5.0) cannot be suppressed,_x000D__x000A_                                                                           captured, or redirected. Instead,_x000D__x000A_                                                                           use Write-Output, Write-Verbose,_x000D__x000A_                                                                           or Write-Information., but got @(Line has trailing whitespace, File 'Initialize-ScriptAndLogging.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information., File 'Initialize-ScriptAndLogging.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information., File 'Initialize-ScriptAndLogging.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information., File 'Initialize-ScriptAndLogging.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information., File 'Initialize-ScriptAndLogging.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information.).</S>
                      <S N="DisplayStackTrace">at $pssaResult | Should -BeNullOrEmpty -Because `, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:125_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:125</S>
                      <Obj N="Exception" RefId="668">
                        <TNRef RefId="60" />
                        <ToString>System.Exception: Expected $null or empty, because some rule triggered._x000D__x000A__x000D__x000A_ _x000D__x000A_RuleName                  Severity    ScriptName                      Line Message_x000D__x000A_--------                  --------    ----------                      ---- -------_x000D__x000A_PSAvoidTrailingWhitespace Information Initialize-ScriptAndLogging.ps1 6    Line has trailing whitespace_x000D__x000A_PSAvoidUsingWriteHost     Warning     Initialize-ScriptAndLogging.ps1 34   File_x000D__x000A_                                                                           'Initialize-ScriptAndLogging.ps1'_x000D__x000A_                                                                           uses Write-Host. Avoid using_x000D__x000A_                                                                           Write-Host it might not_x000D__x000A_                                                                           work in all hosts, does not work_x000D__x000A_                                                                           when there is no host, and (prior_x000D__x000A_                                                                           to PS 5.0) cannot be suppressed,_x000D__x000A_                                                                           captured, or redirected. Instead,_x000D__x000A_                                                                           use Write-Output, Write-Verbose,_x000D__x000A_                                                                           or Write-Information._x000D__x000A_PSAvoidUsingWriteHost     Warning     Initialize-ScriptAndLogging.ps1 42   File_x000D__x000A_                                                                           'Initialize-ScriptAndLogging.ps1'_x000D__x000A_                                                                           uses Write-Host. Avoid using_x000D__x000A_                                                                           Write-Host it might not_x000D__x000A_                                                                           work in all hosts, does not work_x000D__x000A_                                                                           when there is no host, and (prior_x000D__x000A_                                                                           to PS 5.0) cannot be suppressed,_x000D__x000A_                                                                           captured, or redirected. Instead,_x000D__x000A_                                                                           use Write-Output, Write-Verbose,_x000D__x000A_                                                                           or Write-Information._x000D__x000A_PSAvoidUsingWriteHost     Warning     Initialize-ScriptAndLogging.ps1 43   File_x000D__x000A_                                                                           'Initialize-ScriptAndLogging.ps1'_x000D__x000A_                                                                           uses Write-Host. Avoid using_x000D__x000A_                                                                           Write-Host it might not_x000D__x000A_                                                                           work in all hosts, does not work_x000D__x000A_                                                                           when there is no host, and (prior_x000D__x000A_                                                                           to PS 5.0) cannot be suppressed,_x000D__x000A_                                                                           captured, or redirected. Instead,_x000D__x000A_                                                                           use Write-Output, Write-Verbose,_x000D__x000A_                                                                           or Write-Information._x000D__x000A_PSAvoidUsingWriteHost     Warning     Initialize-ScriptAndLogging.ps1 45   File_x000D__x000A_                                                                           'Initialize-ScriptAndLogging.ps1'_x000D__x000A_                                                                           uses Write-Host. Avoid using_x000D__x000A_                                                                           Write-Host it might not_x000D__x000A_                                                                           work in all hosts, does not work_x000D__x000A_                                                                           when there is no host, and (prior_x000D__x000A_                                                                           to PS 5.0) cannot be suppressed,_x000D__x000A_                                                                           captured, or redirected. Instead,_x000D__x000A_                                                                           use Write-Output, Write-Verbose,_x000D__x000A_                                                                           or Write-Information._x000D__x000A_PSAvoidUsingWriteHost     Warning     Initialize-ScriptAndLogging.ps1 59   File_x000D__x000A_                                                                           'Initialize-ScriptAndLogging.ps1'_x000D__x000A_                                                                           uses Write-Host. Avoid using_x000D__x000A_                                                                           Write-Host it might not_x000D__x000A_                                                                           work in all hosts, does not work_x000D__x000A_                                                                           when there is no host, and (prior_x000D__x000A_                                                                           to PS 5.0) cannot be suppressed,_x000D__x000A_                                                                           captured, or redirected. Instead,_x000D__x000A_                                                                           use Write-Output, Write-Verbose,_x000D__x000A_                                                                           or Write-Information., but got @(Line has trailing whitespace, File 'Initialize-ScriptAndLogging.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information., File 'Initialize-ScriptAndLogging.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information., File 'Initialize-ScriptAndLogging.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information., File 'Initialize-ScriptAndLogging.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information., File 'Initialize-ScriptAndLogging.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information.).</ToString>
                        <Props>
                          <Nil N="TargetSite" />
                          <S N="Message">Expected $null or empty, because some rule triggered._x000D__x000A__x000D__x000A_ _x000D__x000A_RuleName                  Severity    ScriptName                      Line Message_x000D__x000A_--------                  --------    ----------                      ---- -------_x000D__x000A_PSAvoidTrailingWhitespace Information Initialize-ScriptAndLogging.ps1 6    Line has trailing whitespace_x000D__x000A_PSAvoidUsingWriteHost     Warning     Initialize-ScriptAndLogging.ps1 34   File_x000D__x000A_                                                                           'Initialize-ScriptAndLogging.ps1'_x000D__x000A_                                                                           uses Write-Host. Avoid using_x000D__x000A_                                                                           Write-Host it might not_x000D__x000A_                                                                           work in all hosts, does not work_x000D__x000A_                                                                           when there is no host, and (prior_x000D__x000A_                                                                           to PS 5.0) cannot be suppressed,_x000D__x000A_                                                                           captured, or redirected. Instead,_x000D__x000A_                                                                           use Write-Output, Write-Verbose,_x000D__x000A_                                                                           or Write-Information._x000D__x000A_PSAvoidUsingWriteHost     Warning     Initialize-ScriptAndLogging.ps1 42   File_x000D__x000A_                                                                           'Initialize-ScriptAndLogging.ps1'_x000D__x000A_                                                                           uses Write-Host. Avoid using_x000D__x000A_                                                                           Write-Host it might not_x000D__x000A_                                                                           work in all hosts, does not work_x000D__x000A_                                                                           when there is no host, and (prior_x000D__x000A_                                                                           to PS 5.0) cannot be suppressed,_x000D__x000A_                                                                           captured, or redirected. Instead,_x000D__x000A_                                                                           use Write-Output, Write-Verbose,_x000D__x000A_                                                                           or Write-Information._x000D__x000A_PSAvoidUsingWriteHost     Warning     Initialize-ScriptAndLogging.ps1 43   File_x000D__x000A_                                                                           'Initialize-ScriptAndLogging.ps1'_x000D__x000A_                                                                           uses Write-Host. Avoid using_x000D__x000A_                                                                           Write-Host it might not_x000D__x000A_                                                                           work in all hosts, does not work_x000D__x000A_                                                                           when there is no host, and (prior_x000D__x000A_                                                                           to PS 5.0) cannot be suppressed,_x000D__x000A_                                                                           captured, or redirected. Instead,_x000D__x000A_                                                                           use Write-Output, Write-Verbose,_x000D__x000A_                                                                           or Write-Information._x000D__x000A_PSAvoidUsingWriteHost     Warning     Initialize-ScriptAndLogging.ps1 45   File_x000D__x000A_                                                                           'Initialize-ScriptAndLogging.ps1'_x000D__x000A_                                                                           uses Write-Host. Avoid using_x000D__x000A_                                                                           Write-Host it might not_x000D__x000A_                                                                           work in all hosts, does not work_x000D__x000A_                                                                           when there is no host, and (prior_x000D__x000A_                                                                           to PS 5.0) cannot be suppressed,_x000D__x000A_                                                                           captured, or redirected. Instead,_x000D__x000A_                                                                           use Write-Output, Write-Verbose,_x000D__x000A_                                                                           or Write-Information._x000D__x000A_PSAvoidUsingWriteHost     Warning     Initialize-ScriptAndLogging.ps1 59   File_x000D__x000A_                                                                           'Initialize-ScriptAndLogging.ps1'_x000D__x000A_                                                                           uses Write-Host. Avoid using_x000D__x000A_                                                                           Write-Host it might not_x000D__x000A_                                                                           work in all hosts, does not work_x000D__x000A_                                                                           when there is no host, and (prior_x000D__x000A_                                                                           to PS 5.0) cannot be suppressed,_x000D__x000A_                                                                           captured, or redirected. Instead,_x000D__x000A_                                                                           use Write-Output, Write-Verbose,_x000D__x000A_                                                                           or Write-Information., but got @(Line has trailing whitespace, File 'Initialize-ScriptAndLogging.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information., File 'Initialize-ScriptAndLogging.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information., File 'Initialize-ScriptAndLogging.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information., File 'Initialize-ScriptAndLogging.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information., File 'Initialize-ScriptAndLogging.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information.).</S>
                          <Obj N="Data" RefId="669">
                            <TNRef RefId="35" />
                            <DCT />
                          </Obj>
                          <Nil N="InnerException" />
                          <Nil N="HelpLink" />
                          <Nil N="Source" />
                          <I32 N="HResult">-2146233088</I32>
                          <Nil N="StackTrace" />
                        </Props>
                      </Obj>
                      <Obj N="TargetObject" RefId="670">
                        <TNRef RefId="38" />
                        <DCT>
                          <En>
                            <S N="Key">Message</S>
                            <S N="Value">Expected $null or empty, because some rule triggered._x000D__x000A__x000D__x000A_ _x000D__x000A_RuleName                  Severity    ScriptName                      Line Message_x000D__x000A_--------                  --------    ----------                      ---- -------_x000D__x000A_PSAvoidTrailingWhitespace Information Initialize-ScriptAndLogging.ps1 6    Line has trailing whitespace_x000D__x000A_PSAvoidUsingWriteHost     Warning     Initialize-ScriptAndLogging.ps1 34   File_x000D__x000A_                                                                           'Initialize-ScriptAndLogging.ps1'_x000D__x000A_                                                                           uses Write-Host. Avoid using_x000D__x000A_                                                                           Write-Host it might not_x000D__x000A_                                                                           work in all hosts, does not work_x000D__x000A_                                                                           when there is no host, and (prior_x000D__x000A_                                                                           to PS 5.0) cannot be suppressed,_x000D__x000A_                                                                           captured, or redirected. Instead,_x000D__x000A_                                                                           use Write-Output, Write-Verbose,_x000D__x000A_                                                                           or Write-Information._x000D__x000A_PSAvoidUsingWriteHost     Warning     Initialize-ScriptAndLogging.ps1 42   File_x000D__x000A_                                                                           'Initialize-ScriptAndLogging.ps1'_x000D__x000A_                                                                           uses Write-Host. Avoid using_x000D__x000A_                                                                           Write-Host it might not_x000D__x000A_                                                                           work in all hosts, does not work_x000D__x000A_                                                                           when there is no host, and (prior_x000D__x000A_                                                                           to PS 5.0) cannot be suppressed,_x000D__x000A_                                                                           captured, or redirected. Instead,_x000D__x000A_                                                                           use Write-Output, Write-Verbose,_x000D__x000A_                                                                           or Write-Information._x000D__x000A_PSAvoidUsingWriteHost     Warning     Initialize-ScriptAndLogging.ps1 43   File_x000D__x000A_                                                                           'Initialize-ScriptAndLogging.ps1'_x000D__x000A_                                                                           uses Write-Host. Avoid using_x000D__x000A_                                                                           Write-Host it might not_x000D__x000A_                                                                           work in all hosts, does not work_x000D__x000A_                                                                           when there is no host, and (prior_x000D__x000A_                                                                           to PS 5.0) cannot be suppressed,_x000D__x000A_                                                                           captured, or redirected. Instead,_x000D__x000A_                                                                           use Write-Output, Write-Verbose,_x000D__x000A_                                                                           or Write-Information._x000D__x000A_PSAvoidUsingWriteHost     Warning     Initialize-ScriptAndLogging.ps1 45   File_x000D__x000A_                                                                           'Initialize-ScriptAndLogging.ps1'_x000D__x000A_                                                                           uses Write-Host. Avoid using_x000D__x000A_                                                                           Write-Host it might not_x000D__x000A_                                                                           work in all hosts, does not work_x000D__x000A_                                                                           when there is no host, and (prior_x000D__x000A_                                                                           to PS 5.0) cannot be suppressed,_x000D__x000A_                                                                           captured, or redirected. Instead,_x000D__x000A_                                                                           use Write-Output, Write-Verbose,_x000D__x000A_                                                                           or Write-Information._x000D__x000A_PSAvoidUsingWriteHost     Warning     Initialize-ScriptAndLogging.ps1 59   File_x000D__x000A_                                                                           'Initialize-ScriptAndLogging.ps1'_x000D__x000A_                                                                           uses Write-Host. Avoid using_x000D__x000A_                                                                           Write-Host it might not_x000D__x000A_                                                                           work in all hosts, does not work_x000D__x000A_                                                                           when there is no host, and (prior_x000D__x000A_                                                                           to PS 5.0) cannot be suppressed,_x000D__x000A_                                                                           captured, or redirected. Instead,_x000D__x000A_                                                                           use Write-Output, Write-Verbose,_x000D__x000A_                                                                           or Write-Information., but got @(Line has trailing whitespace, File 'Initialize-ScriptAndLogging.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information., File 'Initialize-ScriptAndLogging.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information., File 'Initialize-ScriptAndLogging.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information., File 'Initialize-ScriptAndLogging.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information., File 'Initialize-ScriptAndLogging.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information.).</S>
                          </En>
                          <En>
                            <S N="Key">File</S>
                            <S N="Value">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1</S>
                          </En>
                          <En>
                            <S N="Key">Line</S>
                            <S N="Value">125</S>
                          </En>
                          <En>
                            <S N="Key">LineText</S>
                            <S N="Value">        $pssaResult | Should -BeNullOrEmpty -Because `</S>
                          </En>
                          <En>
                            <S N="Key">Terminating</S>
                            <B N="Value">true</B>
                          </En>
                          <En>
                            <S N="Key">ShouldResult</S>
                            <Obj N="Value" RefId="671">
                              <TNRef RefId="61" />
                              <ToString>Pester.ShouldResult</ToString>
                              <Props>
                                <B N="Succeeded">false</B>
                                <S N="FailureMessage">Expected $null or empty, because some rule triggered._x000D__x000A__x000D__x000A_ _x000D__x000A_RuleName                  Severity    ScriptName                      Line Message_x000D__x000A_--------                  --------    ----------                      ---- -------_x000D__x000A_PSAvoidTrailingWhitespace Information Initialize-ScriptAndLogging.ps1 6    Line has trailing whitespace_x000D__x000A_PSAvoidUsingWriteHost     Warning     Initialize-ScriptAndLogging.ps1 34   File_x000D__x000A_                                                                           'Initialize-ScriptAndLogging.ps1'_x000D__x000A_                                                                           uses Write-Host. Avoid using_x000D__x000A_                                                                           Write-Host it might not_x000D__x000A_                                                                           work in all hosts, does not work_x000D__x000A_                                                                           when there is no host, and (prior_x000D__x000A_                                                                           to PS 5.0) cannot be suppressed,_x000D__x000A_                                                                           captured, or redirected. Instead,_x000D__x000A_                                                                           use Write-Output, Write-Verbose,_x000D__x000A_                                                                           or Write-Information._x000D__x000A_PSAvoidUsingWriteHost     Warning     Initialize-ScriptAndLogging.ps1 42   File_x000D__x000A_                                                                           'Initialize-ScriptAndLogging.ps1'_x000D__x000A_                                                                           uses Write-Host. Avoid using_x000D__x000A_                                                                           Write-Host it might not_x000D__x000A_                                                                           work in all hosts, does not work_x000D__x000A_                                                                           when there is no host, and (prior_x000D__x000A_                                                                           to PS 5.0) cannot be suppressed,_x000D__x000A_                                                                           captured, or redirected. Instead,_x000D__x000A_                                                                           use Write-Output, Write-Verbose,_x000D__x000A_                                                                           or Write-Information._x000D__x000A_PSAvoidUsingWriteHost     Warning     Initialize-ScriptAndLogging.ps1 43   File_x000D__x000A_                                                                           'Initialize-ScriptAndLogging.ps1'_x000D__x000A_                                                                           uses Write-Host. Avoid using_x000D__x000A_                                                                           Write-Host it might not_x000D__x000A_                                                                           work in all hosts, does not work_x000D__x000A_                                                                           when there is no host, and (prior_x000D__x000A_                                                                           to PS 5.0) cannot be suppressed,_x000D__x000A_                                                                           captured, or redirected. Instead,_x000D__x000A_                                                                           use Write-Output, Write-Verbose,_x000D__x000A_                                                                           or Write-Information._x000D__x000A_PSAvoidUsingWriteHost     Warning     Initialize-ScriptAndLogging.ps1 45   File_x000D__x000A_                                                                           'Initialize-ScriptAndLogging.ps1'_x000D__x000A_                                                                           uses Write-Host. Avoid using_x000D__x000A_                                                                           Write-Host it might not_x000D__x000A_                                                                           work in all hosts, does not work_x000D__x000A_                                                                           when there is no host, and (prior_x000D__x000A_                                                                           to PS 5.0) cannot be suppressed,_x000D__x000A_                                                                           captured, or redirected. Instead,_x000D__x000A_                                                                           use Write-Output, Write-Verbose,_x000D__x000A_                                                                           or Write-Information._x000D__x000A_PSAvoidUsingWriteHost     Warning     Initialize-ScriptAndLogging.ps1 59   File_x000D__x000A_                                                                           'Initialize-ScriptAndLogging.ps1'_x000D__x000A_                                                                           uses Write-Host. Avoid using_x000D__x000A_                                                                           Write-Host it might not_x000D__x000A_                                                                           work in all hosts, does not work_x000D__x000A_                                                                           when there is no host, and (prior_x000D__x000A_                                                                           to PS 5.0) cannot be suppressed,_x000D__x000A_                                                                           captured, or redirected. Instead,_x000D__x000A_                                                                           use Write-Output, Write-Verbose,_x000D__x000A_                                                                           or Write-Information., but got @(Line has trailing whitespace, File 'Initialize-ScriptAndLogging.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information., File 'Initialize-ScriptAndLogging.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information., File 'Initialize-ScriptAndLogging.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information., File 'Initialize-ScriptAndLogging.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information., File 'Initialize-ScriptAndLogging.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information.).</S>
                                <Obj N="ExpectResult" RefId="672">
                                  <TNRef RefId="62" />
                                  <ToString>Expected: 'a value' Actual: @(Line has trailing whitespace, File 'Initialize-ScriptAndLogging.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information., File 'Initialize-ScriptAndLogging.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information., File 'Initialize-ScriptAndLogging.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information., File 'Initialize-ScriptAndLogging.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information., File 'Initialize-ScriptAndLogging.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information.) Because: some rule triggered._x000D__x000A__x000D__x000A_ _x000D__x000A_RuleName                  Severity    ScriptName                      Line Message_x000D__x000A_--------                  --------    ----------                      ---- -------_x000D__x000A_PSAvoidTrailingWhitespace Information Initialize-ScriptAndLogging.ps1 6    Line has trailing whitespace_x000D__x000A_PSAvoidUsingWriteHost     Warning     Initialize-ScriptAndLogging.ps1 34   File_x000D__x000A_                                                                           'Initialize-ScriptAndLogging.ps1'_x000D__x000A_                                                                           uses Write-Host. Avoid using_x000D__x000A_                                                                           Write-Host because it might not_x000D__x000A_                                                                           work in all hosts, does not work_x000D__x000A_                                                                           when there is no host, and (prior_x000D__x000A_                                                                           to PS 5.0) cannot be suppressed,_x000D__x000A_                                                                           captured, or redirected. Instead,_x000D__x000A_                                                                           use Write-Output, Write-Verbose,_x000D__x000A_                                                                           or Write-Information._x000D__x000A_PSAvoidUsingWriteHost     Warning     Initialize-ScriptAndLogging.ps1 42   File_x000D__x000A_                                                                           'Initialize-ScriptAndLogging.ps1'_x000D__x000A_                                                                           uses Write-Host. Avoid using_x000D__x000A_                                                                           Write-Host because it might not_x000D__x000A_                                                                           work in all hosts, does not work_x000D__x000A_                                                                           when there is no host, and (prior_x000D__x000A_                                                                           to PS 5.0) cannot be suppressed,_x000D__x000A_                                                                           captured, or redirected. Instead,_x000D__x000A_                                                                           use Write-Output, Write-Verbose,_x000D__x000A_                                                                           or Write-Information._x000D__x000A_PSAvoidUsingWriteHost     Warning     Initialize-ScriptAndLogging.ps1 43   File_x000D__x000A_                                                                           'Initialize-ScriptAndLogging.ps1'_x000D__x000A_                                                                           uses Write-Host. Avoid using_x000D__x000A_                                                                           Write-Host because it might not_x000D__x000A_                                                                           work in all hosts, does not work_x000D__x000A_                                                                           when there is no host, and (prior_x000D__x000A_                                                                           to PS 5.0) cannot be suppressed,_x000D__x000A_                                                                           captured, or redirected. Instead,_x000D__x000A_                                                                           use Write-Output, Write-Verbose,_x000D__x000A_                                                                           or Write-Information._x000D__x000A_PSAvoidUsingWriteHost     Warning     Initialize-ScriptAndLogging.ps1 45   File_x000D__x000A_                                                                           'Initialize-ScriptAndLogging.ps1'_x000D__x000A_                                                                           uses Write-Host. Avoid using_x000D__x000A_                                                                           Write-Host because it might not_x000D__x000A_                                                                           work in all hosts, does not work_x000D__x000A_                                                                           when there is no host, and (prior_x000D__x000A_                                                                           to PS 5.0) cannot be suppressed,_x000D__x000A_                                                                           captured, or redirected. Instead,_x000D__x000A_                                                                           use Write-Output, Write-Verbose,_x000D__x000A_                                                                           or Write-Information._x000D__x000A_PSAvoidUsingWriteHost     Warning     Initialize-ScriptAndLogging.ps1 59   File_x000D__x000A_                                                                           'Initialize-ScriptAndLogging.ps1'_x000D__x000A_                                                                           uses Write-Host. Avoid using_x000D__x000A_                                                                           Write-Host because it might not_x000D__x000A_                                                                           work in all hosts, does not work_x000D__x000A_                                                                           when there is no host, and (prior_x000D__x000A_                                                                           to PS 5.0) cannot be suppressed,_x000D__x000A_                                                                           captured, or redirected. Instead,_x000D__x000A_                                                                           use Write-Output, Write-Verbose,_x000D__x000A_                                                                           or Write-Information._x000D__x000A__x000D__x000A_</ToString>
                                  <Props>
                                    <S N="Actual">@(Line has trailing whitespace, File 'Initialize-ScriptAndLogging.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information., File 'Initialize-ScriptAndLogging.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information., File 'Initialize-ScriptAndLogging.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information., File 'Initialize-ScriptAndLogging.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information., File 'Initialize-ScriptAndLogging.ps1' uses Write-Host. Avoid using Write-Host because it might not work in all hosts, does not work when there is no host, and (prior to PS 5.0) cannot be suppressed, captured, or redirected. Instead, use Write-Output, Write-Verbose, or Write-Information.)</S>
                                    <S N="Expected">'a value'</S>
                                    <S N="Because">some rule triggered._x000D__x000A__x000D__x000A_ _x000D__x000A_RuleName                  Severity    ScriptName                      Line Message_x000D__x000A_--------                  --------    ----------                      ---- -------_x000D__x000A_PSAvoidTrailingWhitespace Information Initialize-ScriptAndLogging.ps1 6    Line has trailing whitespace_x000D__x000A_PSAvoidUsingWriteHost     Warning     Initialize-ScriptAndLogging.ps1 34   File_x000D__x000A_                                                                           'Initialize-ScriptAndLogging.ps1'_x000D__x000A_                                                                           uses Write-Host. Avoid using_x000D__x000A_                                                                           Write-Host because it might not_x000D__x000A_                                                                           work in all hosts, does not work_x000D__x000A_                                                                           when there is no host, and (prior_x000D__x000A_                                                                           to PS 5.0) cannot be suppressed,_x000D__x000A_                                                                           captured, or redirected. Instead,_x000D__x000A_                                                                           use Write-Output, Write-Verbose,_x000D__x000A_                                                                           or Write-Information._x000D__x000A_PSAvoidUsingWriteHost     Warning     Initialize-ScriptAndLogging.ps1 42   File_x000D__x000A_                                                                           'Initialize-ScriptAndLogging.ps1'_x000D__x000A_                                                                           uses Write-Host. Avoid using_x000D__x000A_                                                                           Write-Host because it might not_x000D__x000A_                                                                           work in all hosts, does not work_x000D__x000A_                                                                           when there is no host, and (prior_x000D__x000A_                                                                           to PS 5.0) cannot be suppressed,_x000D__x000A_                                                                           captured, or redirected. Instead,_x000D__x000A_                                                                           use Write-Output, Write-Verbose,_x000D__x000A_                                                                           or Write-Information._x000D__x000A_PSAvoidUsingWriteHost     Warning     Initialize-ScriptAndLogging.ps1 43   File_x000D__x000A_                                                                           'Initialize-ScriptAndLogging.ps1'_x000D__x000A_                                                                           uses Write-Host. Avoid using_x000D__x000A_                                                                           Write-Host because it might not_x000D__x000A_                                                                           work in all hosts, does not work_x000D__x000A_                                                                           when there is no host, and (prior_x000D__x000A_                                                                           to PS 5.0) cannot be suppressed,_x000D__x000A_                                                                           captured, or redirected. Instead,_x000D__x000A_                                                                           use Write-Output, Write-Verbose,_x000D__x000A_                                                                           or Write-Information._x000D__x000A_PSAvoidUsingWriteHost     Warning     Initialize-ScriptAndLogging.ps1 45   File_x000D__x000A_                                                                           'Initialize-ScriptAndLogging.ps1'_x000D__x000A_                                                                           uses Write-Host. Avoid using_x000D__x000A_                                                                           Write-Host because it might not_x000D__x000A_                                                                           work in all hosts, does not work_x000D__x000A_                                                                           when there is no host, and (prior_x000D__x000A_                                                                           to PS 5.0) cannot be suppressed,_x000D__x000A_                                                                           captured, or redirected. Instead,_x000D__x000A_                                                                           use Write-Output, Write-Verbose,_x000D__x000A_                                                                           or Write-Information._x000D__x000A_PSAvoidUsingWriteHost     Warning     Initialize-ScriptAndLogging.ps1 59   File_x000D__x000A_                                                                           'Initialize-ScriptAndLogging.ps1'_x000D__x000A_                                                                           uses Write-Host. Avoid using_x000D__x000A_                                                                           Write-Host because it might not_x000D__x000A_                                                                           work in all hosts, does not work_x000D__x000A_                                                                           when there is no host, and (prior_x000D__x000A_                                                                           to PS 5.0) cannot be suppressed,_x000D__x000A_                                                                           captured, or redirected. Instead,_x000D__x000A_                                                                           use Write-Output, Write-Verbose,_x000D__x000A_                                                                           or Write-Information._x000D__x000A__x000D__x000A_</S>
                                  </Props>
                                </Obj>
                              </Props>
                            </Obj>
                          </En>
                        </DCT>
                      </Obj>
                      <S N="FullyQualifiedErrorId">PesterAssertionFailed</S>
                      <Obj N="InvocationInfo" RefId="673">
                        <TNRef RefId="37" />
                        <ToString>System.Management.Automation.InvocationInfo</ToString>
                        <Props>
                          <Nil N="MyCommand" />
                          <Obj N="BoundParameters" RefId="674">
                            <TNRef RefId="38" />
                            <DCT />
                          </Obj>
                          <Obj N="UnboundArguments" RefId="675">
                            <TNRef RefId="31" />
                            <LST />
                          </Obj>
                          <I32 N="ScriptLineNumber">8392</I32>
                          <I32 N="OffsetInLine">13</I32>
                          <I64 N="HistoryId">18</I64>
                          <S N="ScriptName">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1</S>
                          <S N="Line">            throw $errorRecord_x000D__x000A_</S>
                          <S N="Statement">throw $errorRecord</S>
                          <S N="PositionMessage">At C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1:8392 char:13_x000D__x000A_+             throw $errorRecord_x000D__x000A_+             ~~~~~~~~~~~~~~~~~~</S>
                          <S N="PSScriptRoot">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1</S>
                          <S N="PSCommandPath">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1</S>
                          <S N="InvocationName"></S>
                          <I32 N="PipelineLength">0</I32>
                          <I32 N="PipelinePosition">0</I32>
                          <B N="ExpectingInput">false</B>
                          <Obj N="CommandOrigin" RefId="676">
                            <TNRef RefId="39" />
                            <ToString>Internal</ToString>
                            <I32>1</I32>
                          </Obj>
                          <Nil N="DisplayScriptPosition" />
                        </Props>
                        <MS>
                          <Obj N="ParameterValues" RefId="677">
                            <TNRef RefId="25" />
                            <DCT />
                          </Obj>
                        </MS>
                      </Obj>
                      <I32 N="ErrorCategory_Category">8</I32>
                      <S N="ErrorCategory_Activity"></S>
                      <S N="ErrorCategory_Reason">Exception</S>
                      <S N="ErrorCategory_TargetName">System.Collections.Generic.Dictionary`2[System.String,System.Object]</S>
                      <S N="ErrorCategory_TargetType">Dictionary`2</S>
                      <S N="ErrorCategory_Message">InvalidResult: (System.Collections.…ring,System.Object]:Dictionary`2) [], Exception</S>
                      <B N="SerializeExtendedInfo">false</B>
                      <S N="ErrorDetails_ScriptStackTrace">at Invoke-Assertion, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 8392_x000D__x000A_at Should&lt;End&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 8331_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1: line 125_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2024_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1985_x000D__x000A_at Invoke-ScriptBlock, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2157_x000D__x000A_at Invoke-TestItem, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1199_x000D__x000A_at Invoke-Block, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 835_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 893_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2024_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1985_x000D__x000A_at Invoke-ScriptBlock, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2160_x000D__x000A_at Invoke-Block, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 940_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 893_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2024_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1985_x000D__x000A_at Invoke-ScriptBlock, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2160_x000D__x000A_at Invoke-Block, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 940_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1688_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.ps1: line 3_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 3260_x000D__x000A_at Invoke-InNewScriptScope, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 3267_x000D__x000A_at Run-Test, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1691_x000D__x000A_at Invoke-Test, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2512_x000D__x000A_at Invoke-Pester&lt;End&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 5110_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Sampler\0.118.1\tasks\Invoke-Pester.pester.build.ps1: line 906_x000D__x000A_at *Task, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 629_x000D__x000A_at *Task, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 601_x000D__x000A_at *Task, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 601_x000D__x000A_at &lt;ScriptBlock&gt;&lt;End&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 787_x000D__x000A_at &lt;ScriptBlock&gt;&lt;Begin&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\build.ps1: line 532_x000D__x000A_at &lt;ScriptBlock&gt;, &lt;No file&gt;: line 1</S>
                      <Nil N="PSMessageDetails" />
                    </MS>
                  </Obj>
                </LST>
              </Obj>
              <Nil N="StandardOutput" />
              <TS N="Duration">PT0.0714715S</TS>
              <S N="ItemType">Test</S>
              <S N="Id">120:5</S>
              <S N="GroupId">120:5</S>
              <SBK N="ScriptBlock">_x000D__x000A_        $functionFile = Get-ChildItem -Path $sourcePath -Recurse -Include "$Name.ps1"_x000D__x000A__x000D__x000A_        $pssaResult = (Invoke-ScriptAnalyzer -Path $functionFile.FullName)_x000D__x000A_        $report = $pssaResult | Format-Table -AutoSize | Out-String -Width 110_x000D__x000A_        $pssaResult | Should -BeNullOrEmpty -Because `_x000D__x000A_            "some rule triggered.`r`n`r`n $report"_x000D__x000A_    </SBK>
              <Nil N="Tag" />
              <B N="Focus">false</B>
              <B N="Skip">false</B>
              <Ref N="Block" RefId="60" />
              <B N="First">false</B>
              <B N="Last">false</B>
              <B N="Include">false</B>
              <B N="Exclude">false</B>
              <B N="Explicit">false</B>
              <B N="ShouldRun">true</B>
              <I32 N="StartLine">120</I32>
              <B N="Executed">true</B>
              <DT N="ExecutedAt">2024-08-03T17:35:50.7651546-07:00</DT>
              <B N="Passed">false</B>
              <B N="Skipped">false</B>
              <B N="Inconclusive">false</B>
              <TS N="UserDuration">PT0.046678S</TS>
              <TS N="FrameworkDuration">PT0.0247935S</TS>
              <Nil N="PluginData" />
              <Nil N="FrameworkData" />
            </Props>
          </Obj>
          <Obj RefId="678">
            <TNRef RefId="30" />
            <ToString>[-] Should pass Script Analyzer for Log-And-Execute-Step</ToString>
            <Props>
              <S N="Name">Should pass Script Analyzer for &lt;Name&gt;</S>
              <Obj N="Path" RefId="679">
                <TNRef RefId="28" />
                <LST>
                  <S>Quality for module</S>
                  <S>Should pass Script Analyzer for &lt;Name&gt;</S>
                </LST>
              </Obj>
              <Ref N="Data" RefId="494" />
              <S N="ExpandedName">Should pass Script Analyzer for Log-And-Execute-Step</S>
              <S N="ExpandedPath">Quality for module.Should pass Script Analyzer for Log-And-Execute-Step</S>
              <S N="Result">Failed</S>
              <Obj N="ErrorRecord" RefId="680">
                <TNRef RefId="31" />
                <LST>
                  <Obj RefId="681">
                    <TNRef RefId="33" />
                    <ToString>Expected $null or empty, because some rule triggered._x000D__x000A__x000D__x000A_ _x000D__x000A_RuleName                  Severity    ScriptName               Line Message_x000D__x000A_--------                  --------    ----------               ---- -------_x000D__x000A_PSAvoidTrailingWhitespace Information Log-And-Execute-Step.ps1 19   Line has trailing whitespace_x000D__x000A_PSUseApprovedVerbs        Warning     Log-And-Execute-Step.ps1 1    The cmdlet 'Log-And-Execute-Step' uses an_x000D__x000A_                                                                    unapproved verb._x000D__x000A_PSAvoidGlobalVars         Warning     Log-And-Execute-Step.ps1 15   Found global variable_x000D__x000A_                                                                    'global:currentStep'._x000D__x000A_PSAvoidGlobalVars         Warning     Log-And-Execute-Step.ps1 16   Found global variable 'global:steps'._x000D__x000A_PSAvoidGlobalVars         Warning     Log-And-Execute-Step.ps1 17   Found global variable 'global:steps'._x000D__x000A_PSAvoidGlobalVars         Warning     Log-And-Execute-Step.ps1 17   Found global variable_x000D__x000A_                                                                    'global:currentStep'._x000D__x000A_PSAvoidGlobalVars         Warning     Log-And-Execute-Step.ps1 18   Found global variable_x000D__x000A_                                                                    'global:currentStep'., but got @(Line has trailing whitespace, The cmdlet 'Log-And-Execute-Step' uses an unapproved verb., Found global variable 'global:currentStep'., Found global variable 'global:steps'., Found global variable 'global:steps'., Found global variable 'global:currentStep'., Found global variable 'global:currentStep'.).</ToString>
                    <MS>
                      <S N="DisplayErrorMessage">Expected $null or empty, because some rule triggered._x000D__x000A_ _x000D__x000A_RuleName                  Severity    ScriptName               Line Message_x000D__x000A_--------                  --------    ----------               ---- -------_x000D__x000A_PSAvoidTrailingWhitespace Information Log-And-Execute-Step.ps1 19   Line has trailing whitespace_x000D__x000A_PSUseApprovedVerbs        Warning     Log-And-Execute-Step.ps1 1    The cmdlet 'Log-And-Execute-Step' uses an_x000D__x000A_                                                                    unapproved verb._x000D__x000A_PSAvoidGlobalVars         Warning     Log-And-Execute-Step.ps1 15   Found global variable_x000D__x000A_                                                                    'global:currentStep'._x000D__x000A_PSAvoidGlobalVars         Warning     Log-And-Execute-Step.ps1 16   Found global variable 'global:steps'._x000D__x000A_PSAvoidGlobalVars         Warning     Log-And-Execute-Step.ps1 17   Found global variable 'global:steps'._x000D__x000A_PSAvoidGlobalVars         Warning     Log-And-Execute-Step.ps1 17   Found global variable_x000D__x000A_                                                                    'global:currentStep'._x000D__x000A_PSAvoidGlobalVars         Warning     Log-And-Execute-Step.ps1 18   Found global variable_x000D__x000A_                                                                    'global:currentStep'., but got @(Line has trailing whitespace, The cmdlet 'Log-And-Execute-Step' uses an unapproved verb., Found global variable 'global:currentStep'., Found global variable 'global:steps'., Found global variable 'global:steps'., Found global variable 'global:currentStep'., Found global variable 'global:currentStep'.).</S>
                      <S N="DisplayStackTrace">at $pssaResult | Should -BeNullOrEmpty -Because `, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:125_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:125</S>
                      <Obj N="Exception" RefId="682">
                        <TNRef RefId="60" />
                        <ToString>System.Exception: Expected $null or empty, because some rule triggered._x000D__x000A__x000D__x000A_ _x000D__x000A_RuleName                  Severity    ScriptName               Line Message_x000D__x000A_--------                  --------    ----------               ---- -------_x000D__x000A_PSAvoidTrailingWhitespace Information Log-And-Execute-Step.ps1 19   Line has trailing whitespace_x000D__x000A_PSUseApprovedVerbs        Warning     Log-And-Execute-Step.ps1 1    The cmdlet 'Log-And-Execute-Step' uses an_x000D__x000A_                                                                    unapproved verb._x000D__x000A_PSAvoidGlobalVars         Warning     Log-And-Execute-Step.ps1 15   Found global variable_x000D__x000A_                                                                    'global:currentStep'._x000D__x000A_PSAvoidGlobalVars         Warning     Log-And-Execute-Step.ps1 16   Found global variable 'global:steps'._x000D__x000A_PSAvoidGlobalVars         Warning     Log-And-Execute-Step.ps1 17   Found global variable 'global:steps'._x000D__x000A_PSAvoidGlobalVars         Warning     Log-And-Execute-Step.ps1 17   Found global variable_x000D__x000A_                                                                    'global:currentStep'._x000D__x000A_PSAvoidGlobalVars         Warning     Log-And-Execute-Step.ps1 18   Found global variable_x000D__x000A_                                                                    'global:currentStep'., but got @(Line has trailing whitespace, The cmdlet 'Log-And-Execute-Step' uses an unapproved verb., Found global variable 'global:currentStep'., Found global variable 'global:steps'., Found global variable 'global:steps'., Found global variable 'global:currentStep'., Found global variable 'global:currentStep'.).</ToString>
                        <Props>
                          <Nil N="TargetSite" />
                          <S N="Message">Expected $null or empty, because some rule triggered._x000D__x000A__x000D__x000A_ _x000D__x000A_RuleName                  Severity    ScriptName               Line Message_x000D__x000A_--------                  --------    ----------               ---- -------_x000D__x000A_PSAvoidTrailingWhitespace Information Log-And-Execute-Step.ps1 19   Line has trailing whitespace_x000D__x000A_PSUseApprovedVerbs        Warning     Log-And-Execute-Step.ps1 1    The cmdlet 'Log-And-Execute-Step' uses an_x000D__x000A_                                                                    unapproved verb._x000D__x000A_PSAvoidGlobalVars         Warning     Log-And-Execute-Step.ps1 15   Found global variable_x000D__x000A_                                                                    'global:currentStep'._x000D__x000A_PSAvoidGlobalVars         Warning     Log-And-Execute-Step.ps1 16   Found global variable 'global:steps'._x000D__x000A_PSAvoidGlobalVars         Warning     Log-And-Execute-Step.ps1 17   Found global variable 'global:steps'._x000D__x000A_PSAvoidGlobalVars         Warning     Log-And-Execute-Step.ps1 17   Found global variable_x000D__x000A_                                                                    'global:currentStep'._x000D__x000A_PSAvoidGlobalVars         Warning     Log-And-Execute-Step.ps1 18   Found global variable_x000D__x000A_                                                                    'global:currentStep'., but got @(Line has trailing whitespace, The cmdlet 'Log-And-Execute-Step' uses an unapproved verb., Found global variable 'global:currentStep'., Found global variable 'global:steps'., Found global variable 'global:steps'., Found global variable 'global:currentStep'., Found global variable 'global:currentStep'.).</S>
                          <Obj N="Data" RefId="683">
                            <TNRef RefId="35" />
                            <DCT />
                          </Obj>
                          <Nil N="InnerException" />
                          <Nil N="HelpLink" />
                          <Nil N="Source" />
                          <I32 N="HResult">-2146233088</I32>
                          <Nil N="StackTrace" />
                        </Props>
                      </Obj>
                      <Obj N="TargetObject" RefId="684">
                        <TNRef RefId="38" />
                        <DCT>
                          <En>
                            <S N="Key">Message</S>
                            <S N="Value">Expected $null or empty, because some rule triggered._x000D__x000A__x000D__x000A_ _x000D__x000A_RuleName                  Severity    ScriptName               Line Message_x000D__x000A_--------                  --------    ----------               ---- -------_x000D__x000A_PSAvoidTrailingWhitespace Information Log-And-Execute-Step.ps1 19   Line has trailing whitespace_x000D__x000A_PSUseApprovedVerbs        Warning     Log-And-Execute-Step.ps1 1    The cmdlet 'Log-And-Execute-Step' uses an_x000D__x000A_                                                                    unapproved verb._x000D__x000A_PSAvoidGlobalVars         Warning     Log-And-Execute-Step.ps1 15   Found global variable_x000D__x000A_                                                                    'global:currentStep'._x000D__x000A_PSAvoidGlobalVars         Warning     Log-And-Execute-Step.ps1 16   Found global variable 'global:steps'._x000D__x000A_PSAvoidGlobalVars         Warning     Log-And-Execute-Step.ps1 17   Found global variable 'global:steps'._x000D__x000A_PSAvoidGlobalVars         Warning     Log-And-Execute-Step.ps1 17   Found global variable_x000D__x000A_                                                                    'global:currentStep'._x000D__x000A_PSAvoidGlobalVars         Warning     Log-And-Execute-Step.ps1 18   Found global variable_x000D__x000A_                                                                    'global:currentStep'., but got @(Line has trailing whitespace, The cmdlet 'Log-And-Execute-Step' uses an unapproved verb., Found global variable 'global:currentStep'., Found global variable 'global:steps'., Found global variable 'global:steps'., Found global variable 'global:currentStep'., Found global variable 'global:currentStep'.).</S>
                          </En>
                          <En>
                            <S N="Key">File</S>
                            <S N="Value">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1</S>
                          </En>
                          <En>
                            <S N="Key">Line</S>
                            <S N="Value">125</S>
                          </En>
                          <En>
                            <S N="Key">LineText</S>
                            <S N="Value">        $pssaResult | Should -BeNullOrEmpty -Because `</S>
                          </En>
                          <En>
                            <S N="Key">Terminating</S>
                            <B N="Value">true</B>
                          </En>
                          <En>
                            <S N="Key">ShouldResult</S>
                            <Obj N="Value" RefId="685">
                              <TNRef RefId="61" />
                              <ToString>Pester.ShouldResult</ToString>
                              <Props>
                                <B N="Succeeded">false</B>
                                <S N="FailureMessage">Expected $null or empty, because some rule triggered._x000D__x000A__x000D__x000A_ _x000D__x000A_RuleName                  Severity    ScriptName               Line Message_x000D__x000A_--------                  --------    ----------               ---- -------_x000D__x000A_PSAvoidTrailingWhitespace Information Log-And-Execute-Step.ps1 19   Line has trailing whitespace_x000D__x000A_PSUseApprovedVerbs        Warning     Log-And-Execute-Step.ps1 1    The cmdlet 'Log-And-Execute-Step' uses an_x000D__x000A_                                                                    unapproved verb._x000D__x000A_PSAvoidGlobalVars         Warning     Log-And-Execute-Step.ps1 15   Found global variable_x000D__x000A_                                                                    'global:currentStep'._x000D__x000A_PSAvoidGlobalVars         Warning     Log-And-Execute-Step.ps1 16   Found global variable 'global:steps'._x000D__x000A_PSAvoidGlobalVars         Warning     Log-And-Execute-Step.ps1 17   Found global variable 'global:steps'._x000D__x000A_PSAvoidGlobalVars         Warning     Log-And-Execute-Step.ps1 17   Found global variable_x000D__x000A_                                                                    'global:currentStep'._x000D__x000A_PSAvoidGlobalVars         Warning     Log-And-Execute-Step.ps1 18   Found global variable_x000D__x000A_                                                                    'global:currentStep'., but got @(Line has trailing whitespace, The cmdlet 'Log-And-Execute-Step' uses an unapproved verb., Found global variable 'global:currentStep'., Found global variable 'global:steps'., Found global variable 'global:steps'., Found global variable 'global:currentStep'., Found global variable 'global:currentStep'.).</S>
                                <Obj N="ExpectResult" RefId="686">
                                  <TNRef RefId="62" />
                                  <ToString>Expected: 'a value' Actual: @(Line has trailing whitespace, The cmdlet 'Log-And-Execute-Step' uses an unapproved verb., Found global variable 'global:currentStep'., Found global variable 'global:steps'., Found global variable 'global:steps'., Found global variable 'global:currentStep'., Found global variable 'global:currentStep'.) Because: some rule triggered._x000D__x000A__x000D__x000A_ _x000D__x000A_RuleName                  Severity    ScriptName               Line Message_x000D__x000A_--------                  --------    ----------               ---- -------_x000D__x000A_PSAvoidTrailingWhitespace Information Log-And-Execute-Step.ps1 19   Line has trailing whitespace_x000D__x000A_PSUseApprovedVerbs        Warning     Log-And-Execute-Step.ps1 1    The cmdlet 'Log-And-Execute-Step' uses an_x000D__x000A_                                                                    unapproved verb._x000D__x000A_PSAvoidGlobalVars         Warning     Log-And-Execute-Step.ps1 15   Found global variable_x000D__x000A_                                                                    'global:currentStep'._x000D__x000A_PSAvoidGlobalVars         Warning     Log-And-Execute-Step.ps1 16   Found global variable 'global:steps'._x000D__x000A_PSAvoidGlobalVars         Warning     Log-And-Execute-Step.ps1 17   Found global variable 'global:steps'._x000D__x000A_PSAvoidGlobalVars         Warning     Log-And-Execute-Step.ps1 17   Found global variable_x000D__x000A_                                                                    'global:currentStep'._x000D__x000A_PSAvoidGlobalVars         Warning     Log-And-Execute-Step.ps1 18   Found global variable_x000D__x000A_                                                                    'global:currentStep'._x000D__x000A__x000D__x000A_</ToString>
                                  <Props>
                                    <S N="Actual">@(Line has trailing whitespace, The cmdlet 'Log-And-Execute-Step' uses an unapproved verb., Found global variable 'global:currentStep'., Found global variable 'global:steps'., Found global variable 'global:steps'., Found global variable 'global:currentStep'., Found global variable 'global:currentStep'.)</S>
                                    <S N="Expected">'a value'</S>
                                    <S N="Because">some rule triggered._x000D__x000A__x000D__x000A_ _x000D__x000A_RuleName                  Severity    ScriptName               Line Message_x000D__x000A_--------                  --------    ----------               ---- -------_x000D__x000A_PSAvoidTrailingWhitespace Information Log-And-Execute-Step.ps1 19   Line has trailing whitespace_x000D__x000A_PSUseApprovedVerbs        Warning     Log-And-Execute-Step.ps1 1    The cmdlet 'Log-And-Execute-Step' uses an_x000D__x000A_                                                                    unapproved verb._x000D__x000A_PSAvoidGlobalVars         Warning     Log-And-Execute-Step.ps1 15   Found global variable_x000D__x000A_                                                                    'global:currentStep'._x000D__x000A_PSAvoidGlobalVars         Warning     Log-And-Execute-Step.ps1 16   Found global variable 'global:steps'._x000D__x000A_PSAvoidGlobalVars         Warning     Log-And-Execute-Step.ps1 17   Found global variable 'global:steps'._x000D__x000A_PSAvoidGlobalVars         Warning     Log-And-Execute-Step.ps1 17   Found global variable_x000D__x000A_                                                                    'global:currentStep'._x000D__x000A_PSAvoidGlobalVars         Warning     Log-And-Execute-Step.ps1 18   Found global variable_x000D__x000A_                                                                    'global:currentStep'._x000D__x000A__x000D__x000A_</S>
                                  </Props>
                                </Obj>
                              </Props>
                            </Obj>
                          </En>
                        </DCT>
                      </Obj>
                      <S N="FullyQualifiedErrorId">PesterAssertionFailed</S>
                      <Obj N="InvocationInfo" RefId="687">
                        <TNRef RefId="37" />
                        <ToString>System.Management.Automation.InvocationInfo</ToString>
                        <Props>
                          <Nil N="MyCommand" />
                          <Obj N="BoundParameters" RefId="688">
                            <TNRef RefId="38" />
                            <DCT />
                          </Obj>
                          <Obj N="UnboundArguments" RefId="689">
                            <TNRef RefId="31" />
                            <LST />
                          </Obj>
                          <I32 N="ScriptLineNumber">8392</I32>
                          <I32 N="OffsetInLine">13</I32>
                          <I64 N="HistoryId">18</I64>
                          <S N="ScriptName">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1</S>
                          <S N="Line">            throw $errorRecord_x000D__x000A_</S>
                          <S N="Statement">throw $errorRecord</S>
                          <S N="PositionMessage">At C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1:8392 char:13_x000D__x000A_+             throw $errorRecord_x000D__x000A_+             ~~~~~~~~~~~~~~~~~~</S>
                          <S N="PSScriptRoot">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1</S>
                          <S N="PSCommandPath">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1</S>
                          <S N="InvocationName"></S>
                          <I32 N="PipelineLength">0</I32>
                          <I32 N="PipelinePosition">0</I32>
                          <B N="ExpectingInput">false</B>
                          <Obj N="CommandOrigin" RefId="690">
                            <TNRef RefId="39" />
                            <ToString>Internal</ToString>
                            <I32>1</I32>
                          </Obj>
                          <Nil N="DisplayScriptPosition" />
                        </Props>
                        <MS>
                          <Obj N="ParameterValues" RefId="691">
                            <TNRef RefId="25" />
                            <DCT />
                          </Obj>
                        </MS>
                      </Obj>
                      <I32 N="ErrorCategory_Category">8</I32>
                      <S N="ErrorCategory_Activity"></S>
                      <S N="ErrorCategory_Reason">Exception</S>
                      <S N="ErrorCategory_TargetName">System.Collections.Generic.Dictionary`2[System.String,System.Object]</S>
                      <S N="ErrorCategory_TargetType">Dictionary`2</S>
                      <S N="ErrorCategory_Message">InvalidResult: (System.Collections.…ring,System.Object]:Dictionary`2) [], Exception</S>
                      <B N="SerializeExtendedInfo">false</B>
                      <S N="ErrorDetails_ScriptStackTrace">at Invoke-Assertion, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 8392_x000D__x000A_at Should&lt;End&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 8331_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1: line 125_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2024_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1985_x000D__x000A_at Invoke-ScriptBlock, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2157_x000D__x000A_at Invoke-TestItem, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1199_x000D__x000A_at Invoke-Block, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 835_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 893_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2024_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1985_x000D__x000A_at Invoke-ScriptBlock, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2160_x000D__x000A_at Invoke-Block, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 940_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 893_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2024_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1985_x000D__x000A_at Invoke-ScriptBlock, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2160_x000D__x000A_at Invoke-Block, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 940_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1688_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.ps1: line 3_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 3260_x000D__x000A_at Invoke-InNewScriptScope, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 3267_x000D__x000A_at Run-Test, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1691_x000D__x000A_at Invoke-Test, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2512_x000D__x000A_at Invoke-Pester&lt;End&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 5110_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Sampler\0.118.1\tasks\Invoke-Pester.pester.build.ps1: line 906_x000D__x000A_at *Task, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 629_x000D__x000A_at *Task, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 601_x000D__x000A_at *Task, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 601_x000D__x000A_at &lt;ScriptBlock&gt;&lt;End&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 787_x000D__x000A_at &lt;ScriptBlock&gt;&lt;Begin&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\build.ps1: line 532_x000D__x000A_at &lt;ScriptBlock&gt;, &lt;No file&gt;: line 1</S>
                      <Nil N="PSMessageDetails" />
                    </MS>
                  </Obj>
                </LST>
              </Obj>
              <Nil N="StandardOutput" />
              <TS N="Duration">PT1.1448981S</TS>
              <S N="ItemType">Test</S>
              <S N="Id">120:5</S>
              <S N="GroupId">120:5</S>
              <SBK N="ScriptBlock">_x000D__x000A_        $functionFile = Get-ChildItem -Path $sourcePath -Recurse -Include "$Name.ps1"_x000D__x000A__x000D__x000A_        $pssaResult = (Invoke-ScriptAnalyzer -Path $functionFile.FullName)_x000D__x000A_        $report = $pssaResult | Format-Table -AutoSize | Out-String -Width 110_x000D__x000A_        $pssaResult | Should -BeNullOrEmpty -Because `_x000D__x000A_            "some rule triggered.`r`n`r`n $report"_x000D__x000A_    </SBK>
              <Nil N="Tag" />
              <B N="Focus">false</B>
              <B N="Skip">false</B>
              <Ref N="Block" RefId="60" />
              <B N="First">false</B>
              <B N="Last">false</B>
              <B N="Include">false</B>
              <B N="Exclude">false</B>
              <B N="Explicit">false</B>
              <B N="ShouldRun">true</B>
              <I32 N="StartLine">120</I32>
              <B N="Executed">true</B>
              <DT N="ExecutedAt">2024-08-03T17:35:50.8369394-07:00</DT>
              <B N="Passed">false</B>
              <B N="Skipped">false</B>
              <B N="Inconclusive">false</B>
              <TS N="UserDuration">PT1.1314974S</TS>
              <TS N="FrameworkDuration">PT0.0134007S</TS>
              <Nil N="PluginData" />
              <Nil N="FrameworkData" />
            </Props>
          </Obj>
          <Obj RefId="692">
            <TNRef RefId="30" />
            <ToString>[-] Should pass Script Analyzer for Log-Params</ToString>
            <Props>
              <S N="Name">Should pass Script Analyzer for &lt;Name&gt;</S>
              <Obj N="Path" RefId="693">
                <TNRef RefId="28" />
                <LST>
                  <S>Quality for module</S>
                  <S>Should pass Script Analyzer for &lt;Name&gt;</S>
                </LST>
              </Obj>
              <Ref N="Data" RefId="509" />
              <S N="ExpandedName">Should pass Script Analyzer for Log-Params</S>
              <S N="ExpandedPath">Quality for module.Should pass Script Analyzer for Log-Params</S>
              <S N="Result">Failed</S>
              <Obj N="ErrorRecord" RefId="694">
                <TNRef RefId="31" />
                <LST>
                  <Obj RefId="695">
                    <TNRef RefId="33" />
                    <ToString>Expected $null or empty, because some rule triggered._x000D__x000A__x000D__x000A_ _x000D__x000A_RuleName           Severity ScriptName     Line Message_x000D__x000A_--------           -------- ----------     ---- -------_x000D__x000A_PSUseApprovedVerbs Warning  Log-Params.ps1 1    The cmdlet 'Log-Params' uses an unapproved verb._x000D__x000A_PSUseSingularNouns Warning  Log-Params.ps1 1    The cmdlet 'Log-Params' uses a plural noun. A singular noun_x000D__x000A_                                                should be used instead., but got @(The cmdlet 'Log-Params' uses an unapproved verb., The cmdlet 'Log-Params' uses a plural noun. A singular noun should be used instead.).</ToString>
                    <MS>
                      <S N="DisplayErrorMessage">Expected $null or empty, because some rule triggered._x000D__x000A_ _x000D__x000A_RuleName           Severity ScriptName     Line Message_x000D__x000A_--------           -------- ----------     ---- -------_x000D__x000A_PSUseApprovedVerbs Warning  Log-Params.ps1 1    The cmdlet 'Log-Params' uses an unapproved verb._x000D__x000A_PSUseSingularNouns Warning  Log-Params.ps1 1    The cmdlet 'Log-Params' uses a plural noun. A singular noun_x000D__x000A_                                                should be used instead., but got @(The cmdlet 'Log-Params' uses an unapproved verb., The cmdlet 'Log-Params' uses a plural noun. A singular noun should be used instead.).</S>
                      <S N="DisplayStackTrace">at $pssaResult | Should -BeNullOrEmpty -Because `, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:125_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:125</S>
                      <Obj N="Exception" RefId="696">
                        <TNRef RefId="60" />
                        <ToString>System.Exception: Expected $null or empty, because some rule triggered._x000D__x000A__x000D__x000A_ _x000D__x000A_RuleName           Severity ScriptName     Line Message_x000D__x000A_--------           -------- ----------     ---- -------_x000D__x000A_PSUseApprovedVerbs Warning  Log-Params.ps1 1    The cmdlet 'Log-Params' uses an unapproved verb._x000D__x000A_PSUseSingularNouns Warning  Log-Params.ps1 1    The cmdlet 'Log-Params' uses a plural noun. A singular noun_x000D__x000A_                                                should be used instead., but got @(The cmdlet 'Log-Params' uses an unapproved verb., The cmdlet 'Log-Params' uses a plural noun. A singular noun should be used instead.).</ToString>
                        <Props>
                          <Nil N="TargetSite" />
                          <S N="Message">Expected $null or empty, because some rule triggered._x000D__x000A__x000D__x000A_ _x000D__x000A_RuleName           Severity ScriptName     Line Message_x000D__x000A_--------           -------- ----------     ---- -------_x000D__x000A_PSUseApprovedVerbs Warning  Log-Params.ps1 1    The cmdlet 'Log-Params' uses an unapproved verb._x000D__x000A_PSUseSingularNouns Warning  Log-Params.ps1 1    The cmdlet 'Log-Params' uses a plural noun. A singular noun_x000D__x000A_                                                should be used instead., but got @(The cmdlet 'Log-Params' uses an unapproved verb., The cmdlet 'Log-Params' uses a plural noun. A singular noun should be used instead.).</S>
                          <Obj N="Data" RefId="697">
                            <TNRef RefId="35" />
                            <DCT />
                          </Obj>
                          <Nil N="InnerException" />
                          <Nil N="HelpLink" />
                          <Nil N="Source" />
                          <I32 N="HResult">-2146233088</I32>
                          <Nil N="StackTrace" />
                        </Props>
                      </Obj>
                      <Obj N="TargetObject" RefId="698">
                        <TNRef RefId="38" />
                        <DCT>
                          <En>
                            <S N="Key">Message</S>
                            <S N="Value">Expected $null or empty, because some rule triggered._x000D__x000A__x000D__x000A_ _x000D__x000A_RuleName           Severity ScriptName     Line Message_x000D__x000A_--------           -------- ----------     ---- -------_x000D__x000A_PSUseApprovedVerbs Warning  Log-Params.ps1 1    The cmdlet 'Log-Params' uses an unapproved verb._x000D__x000A_PSUseSingularNouns Warning  Log-Params.ps1 1    The cmdlet 'Log-Params' uses a plural noun. A singular noun_x000D__x000A_                                                should be used instead., but got @(The cmdlet 'Log-Params' uses an unapproved verb., The cmdlet 'Log-Params' uses a plural noun. A singular noun should be used instead.).</S>
                          </En>
                          <En>
                            <S N="Key">File</S>
                            <S N="Value">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1</S>
                          </En>
                          <En>
                            <S N="Key">Line</S>
                            <S N="Value">125</S>
                          </En>
                          <En>
                            <S N="Key">LineText</S>
                            <S N="Value">        $pssaResult | Should -BeNullOrEmpty -Because `</S>
                          </En>
                          <En>
                            <S N="Key">Terminating</S>
                            <B N="Value">true</B>
                          </En>
                          <En>
                            <S N="Key">ShouldResult</S>
                            <Obj N="Value" RefId="699">
                              <TNRef RefId="61" />
                              <ToString>Pester.ShouldResult</ToString>
                              <Props>
                                <B N="Succeeded">false</B>
                                <S N="FailureMessage">Expected $null or empty, because some rule triggered._x000D__x000A__x000D__x000A_ _x000D__x000A_RuleName           Severity ScriptName     Line Message_x000D__x000A_--------           -------- ----------     ---- -------_x000D__x000A_PSUseApprovedVerbs Warning  Log-Params.ps1 1    The cmdlet 'Log-Params' uses an unapproved verb._x000D__x000A_PSUseSingularNouns Warning  Log-Params.ps1 1    The cmdlet 'Log-Params' uses a plural noun. A singular noun_x000D__x000A_                                                should be used instead., but got @(The cmdlet 'Log-Params' uses an unapproved verb., The cmdlet 'Log-Params' uses a plural noun. A singular noun should be used instead.).</S>
                                <Obj N="ExpectResult" RefId="700">
                                  <TNRef RefId="62" />
                                  <ToString>Expected: 'a value' Actual: @(The cmdlet 'Log-Params' uses an unapproved verb., The cmdlet 'Log-Params' uses a plural noun. A singular noun should be used instead.) Because: some rule triggered._x000D__x000A__x000D__x000A_ _x000D__x000A_RuleName           Severity ScriptName     Line Message_x000D__x000A_--------           -------- ----------     ---- -------_x000D__x000A_PSUseApprovedVerbs Warning  Log-Params.ps1 1    The cmdlet 'Log-Params' uses an unapproved verb._x000D__x000A_PSUseSingularNouns Warning  Log-Params.ps1 1    The cmdlet 'Log-Params' uses a plural noun. A singular noun_x000D__x000A_                                                should be used instead._x000D__x000A__x000D__x000A_</ToString>
                                  <Props>
                                    <S N="Actual">@(The cmdlet 'Log-Params' uses an unapproved verb., The cmdlet 'Log-Params' uses a plural noun. A singular noun should be used instead.)</S>
                                    <S N="Expected">'a value'</S>
                                    <S N="Because">some rule triggered._x000D__x000A__x000D__x000A_ _x000D__x000A_RuleName           Severity ScriptName     Line Message_x000D__x000A_--------           -------- ----------     ---- -------_x000D__x000A_PSUseApprovedVerbs Warning  Log-Params.ps1 1    The cmdlet 'Log-Params' uses an unapproved verb._x000D__x000A_PSUseSingularNouns Warning  Log-Params.ps1 1    The cmdlet 'Log-Params' uses a plural noun. A singular noun_x000D__x000A_                                                should be used instead._x000D__x000A__x000D__x000A_</S>
                                  </Props>
                                </Obj>
                              </Props>
                            </Obj>
                          </En>
                        </DCT>
                      </Obj>
                      <S N="FullyQualifiedErrorId">PesterAssertionFailed</S>
                      <Obj N="InvocationInfo" RefId="701">
                        <TNRef RefId="37" />
                        <ToString>System.Management.Automation.InvocationInfo</ToString>
                        <Props>
                          <Nil N="MyCommand" />
                          <Obj N="BoundParameters" RefId="702">
                            <TNRef RefId="38" />
                            <DCT />
                          </Obj>
                          <Obj N="UnboundArguments" RefId="703">
                            <TNRef RefId="31" />
                            <LST />
                          </Obj>
                          <I32 N="ScriptLineNumber">8392</I32>
                          <I32 N="OffsetInLine">13</I32>
                          <I64 N="HistoryId">18</I64>
                          <S N="ScriptName">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1</S>
                          <S N="Line">            throw $errorRecord_x000D__x000A_</S>
                          <S N="Statement">throw $errorRecord</S>
                          <S N="PositionMessage">At C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1:8392 char:13_x000D__x000A_+             throw $errorRecord_x000D__x000A_+             ~~~~~~~~~~~~~~~~~~</S>
                          <S N="PSScriptRoot">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1</S>
                          <S N="PSCommandPath">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1</S>
                          <S N="InvocationName"></S>
                          <I32 N="PipelineLength">0</I32>
                          <I32 N="PipelinePosition">0</I32>
                          <B N="ExpectingInput">false</B>
                          <Obj N="CommandOrigin" RefId="704">
                            <TNRef RefId="39" />
                            <ToString>Internal</ToString>
                            <I32>1</I32>
                          </Obj>
                          <Nil N="DisplayScriptPosition" />
                        </Props>
                        <MS>
                          <Obj N="ParameterValues" RefId="705">
                            <TNRef RefId="25" />
                            <DCT />
                          </Obj>
                        </MS>
                      </Obj>
                      <I32 N="ErrorCategory_Category">8</I32>
                      <S N="ErrorCategory_Activity"></S>
                      <S N="ErrorCategory_Reason">Exception</S>
                      <S N="ErrorCategory_TargetName">System.Collections.Generic.Dictionary`2[System.String,System.Object]</S>
                      <S N="ErrorCategory_TargetType">Dictionary`2</S>
                      <S N="ErrorCategory_Message">InvalidResult: (System.Collections.…ring,System.Object]:Dictionary`2) [], Exception</S>
                      <B N="SerializeExtendedInfo">false</B>
                      <S N="ErrorDetails_ScriptStackTrace">at Invoke-Assertion, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 8392_x000D__x000A_at Should&lt;End&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 8331_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1: line 125_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2024_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1985_x000D__x000A_at Invoke-ScriptBlock, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2157_x000D__x000A_at Invoke-TestItem, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1199_x000D__x000A_at Invoke-Block, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 835_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 893_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2024_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1985_x000D__x000A_at Invoke-ScriptBlock, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2160_x000D__x000A_at Invoke-Block, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 940_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 893_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2024_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1985_x000D__x000A_at Invoke-ScriptBlock, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2160_x000D__x000A_at Invoke-Block, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 940_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1688_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.ps1: line 3_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 3260_x000D__x000A_at Invoke-InNewScriptScope, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 3267_x000D__x000A_at Run-Test, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1691_x000D__x000A_at Invoke-Test, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2512_x000D__x000A_at Invoke-Pester&lt;End&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 5110_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Sampler\0.118.1\tasks\Invoke-Pester.pester.build.ps1: line 906_x000D__x000A_at *Task, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 629_x000D__x000A_at *Task, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 601_x000D__x000A_at *Task, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 601_x000D__x000A_at &lt;ScriptBlock&gt;&lt;End&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 787_x000D__x000A_at &lt;ScriptBlock&gt;&lt;Begin&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\build.ps1: line 532_x000D__x000A_at &lt;ScriptBlock&gt;, &lt;No file&gt;: line 1</S>
                      <Nil N="PSMessageDetails" />
                    </MS>
                  </Obj>
                </LST>
              </Obj>
              <Nil N="StandardOutput" />
              <TS N="Duration">PT0.0314286S</TS>
              <S N="ItemType">Test</S>
              <S N="Id">120:5</S>
              <S N="GroupId">120:5</S>
              <SBK N="ScriptBlock">_x000D__x000A_        $functionFile = Get-ChildItem -Path $sourcePath -Recurse -Include "$Name.ps1"_x000D__x000A__x000D__x000A_        $pssaResult = (Invoke-ScriptAnalyzer -Path $functionFile.FullName)_x000D__x000A_        $report = $pssaResult | Format-Table -AutoSize | Out-String -Width 110_x000D__x000A_        $pssaResult | Should -BeNullOrEmpty -Because `_x000D__x000A_            "some rule triggered.`r`n`r`n $report"_x000D__x000A_    </SBK>
              <Nil N="Tag" />
              <B N="Focus">false</B>
              <B N="Skip">false</B>
              <Ref N="Block" RefId="60" />
              <B N="First">false</B>
              <B N="Last">false</B>
              <B N="Include">false</B>
              <B N="Exclude">false</B>
              <B N="Explicit">false</B>
              <B N="ShouldRun">true</B>
              <I32 N="StartLine">120</I32>
              <B N="Executed">true</B>
              <DT N="ExecutedAt">2024-08-03T17:35:51.9817346-07:00</DT>
              <B N="Passed">false</B>
              <B N="Skipped">false</B>
              <B N="Inconclusive">false</B>
              <TS N="UserDuration">PT0.0224875S</TS>
              <TS N="FrameworkDuration">PT0.0089411S</TS>
              <Nil N="PluginData" />
              <Nil N="FrameworkData" />
            </Props>
          </Obj>
          <Obj RefId="706">
            <TNRef RefId="30" />
            <ToString>[-] Should pass Script Analyzer for Write-EnhancedLog</ToString>
            <Props>
              <S N="Name">Should pass Script Analyzer for &lt;Name&gt;</S>
              <Obj N="Path" RefId="707">
                <TNRef RefId="28" />
                <LST>
                  <S>Quality for module</S>
                  <S>Should pass Script Analyzer for &lt;Name&gt;</S>
                </LST>
              </Obj>
              <Ref N="Data" RefId="524" />
              <S N="ExpandedName">Should pass Script Analyzer for Write-EnhancedLog</S>
              <S N="ExpandedPath">Quality for module.Should pass Script Analyzer for Write-EnhancedLog</S>
              <S N="Result">Failed</S>
              <Obj N="ErrorRecord" RefId="708">
                <TNRef RefId="31" />
                <LST>
                  <Obj RefId="709">
                    <TNRef RefId="33" />
                    <ToString>Expected $null or empty, because some rule triggered._x000D__x000A__x000D__x000A_ _x000D__x000A_RuleName                Severity ScriptName            Line Message_x000D__x000A_--------                -------- ----------            ---- -------_x000D__x000A_PSReviewUnusedParameter Warning  Write-EnhancedLog.ps1 27   The parameter 'ForegroundColor' has been declared_x000D__x000A_                                                            but not used._x000D__x000A_PSReviewUnusedParameter Warning  Write-EnhancedLog.ps1 28   The parameter 'UseModule' has been declared but_x000D__x000A_                                                            not used., but got @(The parameter 'ForegroundColor' has been declared but not used. , The parameter 'UseModule' has been declared but not used. ).</ToString>
                    <MS>
                      <S N="DisplayErrorMessage">Expected $null or empty, because some rule triggered._x000D__x000A_ _x000D__x000A_RuleName                Severity ScriptName            Line Message_x000D__x000A_--------                -------- ----------            ---- -------_x000D__x000A_PSReviewUnusedParameter Warning  Write-EnhancedLog.ps1 27   The parameter 'ForegroundColor' has been declared_x000D__x000A_                                                            but not used._x000D__x000A_PSReviewUnusedParameter Warning  Write-EnhancedLog.ps1 28   The parameter 'UseModule' has been declared but_x000D__x000A_                                                            not used., but got @(The parameter 'ForegroundColor' has been declared but not used. , The parameter 'UseModule' has been declared but not used. ).</S>
                      <S N="DisplayStackTrace">at $pssaResult | Should -BeNullOrEmpty -Because `, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:125_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:125</S>
                      <Obj N="Exception" RefId="710">
                        <TNRef RefId="60" />
                        <ToString>System.Exception: Expected $null or empty, because some rule triggered._x000D__x000A__x000D__x000A_ _x000D__x000A_RuleName                Severity ScriptName            Line Message_x000D__x000A_--------                -------- ----------            ---- -------_x000D__x000A_PSReviewUnusedParameter Warning  Write-EnhancedLog.ps1 27   The parameter 'ForegroundColor' has been declared_x000D__x000A_                                                            but not used._x000D__x000A_PSReviewUnusedParameter Warning  Write-EnhancedLog.ps1 28   The parameter 'UseModule' has been declared but_x000D__x000A_                                                            not used., but got @(The parameter 'ForegroundColor' has been declared but not used. , The parameter 'UseModule' has been declared but not used. ).</ToString>
                        <Props>
                          <Nil N="TargetSite" />
                          <S N="Message">Expected $null or empty, because some rule triggered._x000D__x000A__x000D__x000A_ _x000D__x000A_RuleName                Severity ScriptName            Line Message_x000D__x000A_--------                -------- ----------            ---- -------_x000D__x000A_PSReviewUnusedParameter Warning  Write-EnhancedLog.ps1 27   The parameter 'ForegroundColor' has been declared_x000D__x000A_                                                            but not used._x000D__x000A_PSReviewUnusedParameter Warning  Write-EnhancedLog.ps1 28   The parameter 'UseModule' has been declared but_x000D__x000A_                                                            not used., but got @(The parameter 'ForegroundColor' has been declared but not used. , The parameter 'UseModule' has been declared but not used. ).</S>
                          <Obj N="Data" RefId="711">
                            <TNRef RefId="35" />
                            <DCT />
                          </Obj>
                          <Nil N="InnerException" />
                          <Nil N="HelpLink" />
                          <Nil N="Source" />
                          <I32 N="HResult">-2146233088</I32>
                          <Nil N="StackTrace" />
                        </Props>
                      </Obj>
                      <Obj N="TargetObject" RefId="712">
                        <TNRef RefId="38" />
                        <DCT>
                          <En>
                            <S N="Key">Message</S>
                            <S N="Value">Expected $null or empty, because some rule triggered._x000D__x000A__x000D__x000A_ _x000D__x000A_RuleName                Severity ScriptName            Line Message_x000D__x000A_--------                -------- ----------            ---- -------_x000D__x000A_PSReviewUnusedParameter Warning  Write-EnhancedLog.ps1 27   The parameter 'ForegroundColor' has been declared_x000D__x000A_                                                            but not used._x000D__x000A_PSReviewUnusedParameter Warning  Write-EnhancedLog.ps1 28   The parameter 'UseModule' has been declared but_x000D__x000A_                                                            not used., but got @(The parameter 'ForegroundColor' has been declared but not used. , The parameter 'UseModule' has been declared but not used. ).</S>
                          </En>
                          <En>
                            <S N="Key">File</S>
                            <S N="Value">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1</S>
                          </En>
                          <En>
                            <S N="Key">Line</S>
                            <S N="Value">125</S>
                          </En>
                          <En>
                            <S N="Key">LineText</S>
                            <S N="Value">        $pssaResult | Should -BeNullOrEmpty -Because `</S>
                          </En>
                          <En>
                            <S N="Key">Terminating</S>
                            <B N="Value">true</B>
                          </En>
                          <En>
                            <S N="Key">ShouldResult</S>
                            <Obj N="Value" RefId="713">
                              <TNRef RefId="61" />
                              <ToString>Pester.ShouldResult</ToString>
                              <Props>
                                <B N="Succeeded">false</B>
                                <S N="FailureMessage">Expected $null or empty, because some rule triggered._x000D__x000A__x000D__x000A_ _x000D__x000A_RuleName                Severity ScriptName            Line Message_x000D__x000A_--------                -------- ----------            ---- -------_x000D__x000A_PSReviewUnusedParameter Warning  Write-EnhancedLog.ps1 27   The parameter 'ForegroundColor' has been declared_x000D__x000A_                                                            but not used._x000D__x000A_PSReviewUnusedParameter Warning  Write-EnhancedLog.ps1 28   The parameter 'UseModule' has been declared but_x000D__x000A_                                                            not used., but got @(The parameter 'ForegroundColor' has been declared but not used. , The parameter 'UseModule' has been declared but not used. ).</S>
                                <Obj N="ExpectResult" RefId="714">
                                  <TNRef RefId="62" />
                                  <ToString>Expected: 'a value' Actual: @(The parameter 'ForegroundColor' has been declared but not used. , The parameter 'UseModule' has been declared but not used. ) Because: some rule triggered._x000D__x000A__x000D__x000A_ _x000D__x000A_RuleName                Severity ScriptName            Line Message_x000D__x000A_--------                -------- ----------            ---- -------_x000D__x000A_PSReviewUnusedParameter Warning  Write-EnhancedLog.ps1 27   The parameter 'ForegroundColor' has been declared_x000D__x000A_                                                            but not used._x000D__x000A_PSReviewUnusedParameter Warning  Write-EnhancedLog.ps1 28   The parameter 'UseModule' has been declared but_x000D__x000A_                                                            not used._x000D__x000A__x000D__x000A_</ToString>
                                  <Props>
                                    <S N="Actual">@(The parameter 'ForegroundColor' has been declared but not used. , The parameter 'UseModule' has been declared but not used. )</S>
                                    <S N="Expected">'a value'</S>
                                    <S N="Because">some rule triggered._x000D__x000A__x000D__x000A_ _x000D__x000A_RuleName                Severity ScriptName            Line Message_x000D__x000A_--------                -------- ----------            ---- -------_x000D__x000A_PSReviewUnusedParameter Warning  Write-EnhancedLog.ps1 27   The parameter 'ForegroundColor' has been declared_x000D__x000A_                                                            but not used._x000D__x000A_PSReviewUnusedParameter Warning  Write-EnhancedLog.ps1 28   The parameter 'UseModule' has been declared but_x000D__x000A_                                                            not used._x000D__x000A__x000D__x000A_</S>
                                  </Props>
                                </Obj>
                              </Props>
                            </Obj>
                          </En>
                        </DCT>
                      </Obj>
                      <S N="FullyQualifiedErrorId">PesterAssertionFailed</S>
                      <Obj N="InvocationInfo" RefId="715">
                        <TNRef RefId="37" />
                        <ToString>System.Management.Automation.InvocationInfo</ToString>
                        <Props>
                          <Nil N="MyCommand" />
                          <Obj N="BoundParameters" RefId="716">
                            <TNRef RefId="38" />
                            <DCT />
                          </Obj>
                          <Obj N="UnboundArguments" RefId="717">
                            <TNRef RefId="31" />
                            <LST />
                          </Obj>
                          <I32 N="ScriptLineNumber">8392</I32>
                          <I32 N="OffsetInLine">13</I32>
                          <I64 N="HistoryId">18</I64>
                          <S N="ScriptName">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1</S>
                          <S N="Line">            throw $errorRecord_x000D__x000A_</S>
                          <S N="Statement">throw $errorRecord</S>
                          <S N="PositionMessage">At C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1:8392 char:13_x000D__x000A_+             throw $errorRecord_x000D__x000A_+             ~~~~~~~~~~~~~~~~~~</S>
                          <S N="PSScriptRoot">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1</S>
                          <S N="PSCommandPath">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1</S>
                          <S N="InvocationName"></S>
                          <I32 N="PipelineLength">0</I32>
                          <I32 N="PipelinePosition">0</I32>
                          <B N="ExpectingInput">false</B>
                          <Obj N="CommandOrigin" RefId="718">
                            <TNRef RefId="39" />
                            <ToString>Internal</ToString>
                            <I32>1</I32>
                          </Obj>
                          <Nil N="DisplayScriptPosition" />
                        </Props>
                        <MS>
                          <Obj N="ParameterValues" RefId="719">
                            <TNRef RefId="25" />
                            <DCT />
                          </Obj>
                        </MS>
                      </Obj>
                      <I32 N="ErrorCategory_Category">8</I32>
                      <S N="ErrorCategory_Activity"></S>
                      <S N="ErrorCategory_Reason">Exception</S>
                      <S N="ErrorCategory_TargetName">System.Collections.Generic.Dictionary`2[System.String,System.Object]</S>
                      <S N="ErrorCategory_TargetType">Dictionary`2</S>
                      <S N="ErrorCategory_Message">InvalidResult: (System.Collections.…ring,System.Object]:Dictionary`2) [], Exception</S>
                      <B N="SerializeExtendedInfo">false</B>
                      <S N="ErrorDetails_ScriptStackTrace">at Invoke-Assertion, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 8392_x000D__x000A_at Should&lt;End&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 8331_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1: line 125_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2024_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1985_x000D__x000A_at Invoke-ScriptBlock, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2157_x000D__x000A_at Invoke-TestItem, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1199_x000D__x000A_at Invoke-Block, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 835_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 893_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2024_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1985_x000D__x000A_at Invoke-ScriptBlock, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2160_x000D__x000A_at Invoke-Block, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 940_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 893_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2024_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1985_x000D__x000A_at Invoke-ScriptBlock, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2160_x000D__x000A_at Invoke-Block, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 940_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1688_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.ps1: line 3_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 3260_x000D__x000A_at Invoke-InNewScriptScope, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 3267_x000D__x000A_at Run-Test, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1691_x000D__x000A_at Invoke-Test, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2512_x000D__x000A_at Invoke-Pester&lt;End&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 5110_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Sampler\0.118.1\tasks\Invoke-Pester.pester.build.ps1: line 906_x000D__x000A_at *Task, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 629_x000D__x000A_at *Task, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 601_x000D__x000A_at *Task, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 601_x000D__x000A_at &lt;ScriptBlock&gt;&lt;End&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 787_x000D__x000A_at &lt;ScriptBlock&gt;&lt;Begin&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\build.ps1: line 532_x000D__x000A_at &lt;ScriptBlock&gt;, &lt;No file&gt;: line 1</S>
                      <Nil N="PSMessageDetails" />
                    </MS>
                  </Obj>
                </LST>
              </Obj>
              <Nil N="StandardOutput" />
              <TS N="Duration">PT0.0312749S</TS>
              <S N="ItemType">Test</S>
              <S N="Id">120:5</S>
              <S N="GroupId">120:5</S>
              <SBK N="ScriptBlock">_x000D__x000A_        $functionFile = Get-ChildItem -Path $sourcePath -Recurse -Include "$Name.ps1"_x000D__x000A__x000D__x000A_        $pssaResult = (Invoke-ScriptAnalyzer -Path $functionFile.FullName)_x000D__x000A_        $report = $pssaResult | Format-Table -AutoSize | Out-String -Width 110_x000D__x000A_        $pssaResult | Should -BeNullOrEmpty -Because `_x000D__x000A_            "some rule triggered.`r`n`r`n $report"_x000D__x000A_    </SBK>
              <Nil N="Tag" />
              <B N="Focus">false</B>
              <B N="Skip">false</B>
              <Ref N="Block" RefId="60" />
              <B N="First">false</B>
              <B N="Last">false</B>
              <B N="Include">false</B>
              <B N="Exclude">false</B>
              <B N="Explicit">false</B>
              <B N="ShouldRun">true</B>
              <I32 N="StartLine">120</I32>
              <B N="Executed">true</B>
              <DT N="ExecutedAt">2024-08-03T17:35:52.0132361-07:00</DT>
              <B N="Passed">false</B>
              <B N="Skipped">false</B>
              <B N="Inconclusive">false</B>
              <TS N="UserDuration">PT0.0250725S</TS>
              <TS N="FrameworkDuration">PT0.0062024S</TS>
              <Nil N="PluginData" />
              <Nil N="FrameworkData" />
            </Props>
          </Obj>
          <Obj RefId="720">
            <TNRef RefId="30" />
            <ToString>[-] Should pass Script Analyzer for Write-EventLogMessage</ToString>
            <Props>
              <S N="Name">Should pass Script Analyzer for &lt;Name&gt;</S>
              <Obj N="Path" RefId="721">
                <TNRef RefId="28" />
                <LST>
                  <S>Quality for module</S>
                  <S>Should pass Script Analyzer for &lt;Name&gt;</S>
                </LST>
              </Obj>
              <Ref N="Data" RefId="539" />
              <S N="ExpandedName">Should pass Script Analyzer for Write-EventLogMessage</S>
              <S N="ExpandedPath">Quality for module.Should pass Script Analyzer for Write-EventLogMessage</S>
              <S N="Result">Failed</S>
              <Obj N="ErrorRecord" RefId="722">
                <TNRef RefId="31" />
                <LST>
                  <Obj RefId="723">
                    <TNRef RefId="33" />
                    <ToString>Expected $null or empty, because some rule triggered._x000D__x000A__x000D__x000A_ _x000D__x000A_RuleName                  Severity    ScriptName                Line Message_x000D__x000A_--------                  --------    ----------                ---- -------_x000D__x000A_PSAvoidTrailingWhitespace Information Write-EventLogMessage.ps1 6    Line has trailing whitespace_x000D__x000A_PSAvoidTrailingWhitespace Information Write-EventLogMessage.ps1 9    Line has trailing whitespace_x000D__x000A_PSAvoidTrailingWhitespace Information Write-EventLogMessage.ps1 12   Line has trailing whitespace_x000D__x000A_PSAvoidTrailingWhitespace Information Write-EventLogMessage.ps1 15   Line has trailing whitespace_x000D__x000A_PSAvoidTrailingWhitespace Information Write-EventLogMessage.ps1 20   Line has trailing whitespace_x000D__x000A_PSAvoidTrailingWhitespace Information Write-EventLogMessage.ps1 31   Line has trailing whitespace_x000D__x000A_PSAvoidTrailingWhitespace Information Write-EventLogMessage.ps1 32   Line has trailing whitespace_x000D__x000A_PSAvoidTrailingWhitespace Information Write-EventLogMessage.ps1 35   Line has trailing whitespace_x000D__x000A_PSAvoidTrailingWhitespace Information Write-EventLogMessage.ps1 38   Line has trailing whitespace_x000D__x000A_PSAvoidTrailingWhitespace Information Write-EventLogMessage.ps1 43   Line has trailing whitespace_x000D__x000A_PSAvoidUsingWriteHost     Warning     Write-EventLogMessage.ps1 35   File 'Write-EventLogMessage.ps1' uses_x000D__x000A_                                                                     Write-Host. Avoid using Write-Host_x000D__x000A_                                                                     it might not work in all hosts,_x000D__x000A_                                                                     does not work when there is no host, and_x000D__x000A_                                                                     (prior to PS 5.0) cannot be suppressed,_x000D__x000A_                                                                     captured, or redirected. Instead, use_x000D__x000A_                                                                     Write-Output, Write-Verbose, or_x000D__x000A_                                                                     Write-Information., but got @(Line has trailing whitespace, Line has trailing whitespace, Line has trailing whitespace, Line has trailing whitespace, Line has trailing whitespace, Line has trailing whitespace, Line has trailing whitespace, Line has trailing whitespace, Line has trailing whitespace, Line has trailing whitespace, ...1 more).</ToString>
                    <MS>
                      <S N="DisplayErrorMessage">Expected $null or empty, because some rule triggered._x000D__x000A_ _x000D__x000A_RuleName                  Severity    ScriptName                Line Message_x000D__x000A_--------                  --------    ----------                ---- -------_x000D__x000A_PSAvoidTrailingWhitespace Information Write-EventLogMessage.ps1 6    Line has trailing whitespace_x000D__x000A_PSAvoidTrailingWhitespace Information Write-EventLogMessage.ps1 9    Line has trailing whitespace_x000D__x000A_PSAvoidTrailingWhitespace Information Write-EventLogMessage.ps1 12   Line has trailing whitespace_x000D__x000A_PSAvoidTrailingWhitespace Information Write-EventLogMessage.ps1 15   Line has trailing whitespace_x000D__x000A_PSAvoidTrailingWhitespace Information Write-EventLogMessage.ps1 20   Line has trailing whitespace_x000D__x000A_PSAvoidTrailingWhitespace Information Write-EventLogMessage.ps1 31   Line has trailing whitespace_x000D__x000A_PSAvoidTrailingWhitespace Information Write-EventLogMessage.ps1 32   Line has trailing whitespace_x000D__x000A_PSAvoidTrailingWhitespace Information Write-EventLogMessage.ps1 35   Line has trailing whitespace_x000D__x000A_PSAvoidTrailingWhitespace Information Write-EventLogMessage.ps1 38   Line has trailing whitespace_x000D__x000A_PSAvoidTrailingWhitespace Information Write-EventLogMessage.ps1 43   Line has trailing whitespace_x000D__x000A_PSAvoidUsingWriteHost     Warning     Write-EventLogMessage.ps1 35   File 'Write-EventLogMessage.ps1' uses_x000D__x000A_                                                                     Write-Host. Avoid using Write-Host_x000D__x000A_                                                                     it might not work in all hosts,_x000D__x000A_                                                                     does not work when there is no host, and_x000D__x000A_                                                                     (prior to PS 5.0) cannot be suppressed,_x000D__x000A_                                                                     captured, or redirected. Instead, use_x000D__x000A_                                                                     Write-Output, Write-Verbose, or_x000D__x000A_                                                                     Write-Information., but got @(Line has trailing whitespace, Line has trailing whitespace, Line has trailing whitespace, Line has trailing whitespace, Line has trailing whitespace, Line has trailing whitespace, Line has trailing whitespace, Line has trailing whitespace, Line has trailing whitespace, Line has trailing whitespace, ...1 more).</S>
                      <S N="DisplayStackTrace">at $pssaResult | Should -BeNullOrEmpty -Because `, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:125_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:125</S>
                      <Obj N="Exception" RefId="724">
                        <TNRef RefId="60" />
                        <ToString>System.Exception: Expected $null or empty, because some rule triggered._x000D__x000A__x000D__x000A_ _x000D__x000A_RuleName                  Severity    ScriptName                Line Message_x000D__x000A_--------                  --------    ----------                ---- -------_x000D__x000A_PSAvoidTrailingWhitespace Information Write-EventLogMessage.ps1 6    Line has trailing whitespace_x000D__x000A_PSAvoidTrailingWhitespace Information Write-EventLogMessage.ps1 9    Line has trailing whitespace_x000D__x000A_PSAvoidTrailingWhitespace Information Write-EventLogMessage.ps1 12   Line has trailing whitespace_x000D__x000A_PSAvoidTrailingWhitespace Information Write-EventLogMessage.ps1 15   Line has trailing whitespace_x000D__x000A_PSAvoidTrailingWhitespace Information Write-EventLogMessage.ps1 20   Line has trailing whitespace_x000D__x000A_PSAvoidTrailingWhitespace Information Write-EventLogMessage.ps1 31   Line has trailing whitespace_x000D__x000A_PSAvoidTrailingWhitespace Information Write-EventLogMessage.ps1 32   Line has trailing whitespace_x000D__x000A_PSAvoidTrailingWhitespace Information Write-EventLogMessage.ps1 35   Line has trailing whitespace_x000D__x000A_PSAvoidTrailingWhitespace Information Write-EventLogMessage.ps1 38   Line has trailing whitespace_x000D__x000A_PSAvoidTrailingWhitespace Information Write-EventLogMessage.ps1 43   Line has trailing whitespace_x000D__x000A_PSAvoidUsingWriteHost     Warning     Write-EventLogMessage.ps1 35   File 'Write-EventLogMessage.ps1' uses_x000D__x000A_                                                                     Write-Host. Avoid using Write-Host_x000D__x000A_                                                                     it might not work in all hosts,_x000D__x000A_                                                                     does not work when there is no host, and_x000D__x000A_                                                                     (prior to PS 5.0) cannot be suppressed,_x000D__x000A_                                                                     captured, or redirected. Instead, use_x000D__x000A_                                                                     Write-Output, Write-Verbose, or_x000D__x000A_                                                                     Write-Information., but got @(Line has trailing whitespace, Line has trailing whitespace, Line has trailing whitespace, Line has trailing whitespace, Line has trailing whitespace, Line has trailing whitespace, Line has trailing whitespace, Line has trailing whitespace, Line has trailing whitespace, Line has trailing whitespace, ...1 more).</ToString>
                        <Props>
                          <Nil N="TargetSite" />
                          <S N="Message">Expected $null or empty, because some rule triggered._x000D__x000A__x000D__x000A_ _x000D__x000A_RuleName                  Severity    ScriptName                Line Message_x000D__x000A_--------                  --------    ----------                ---- -------_x000D__x000A_PSAvoidTrailingWhitespace Information Write-EventLogMessage.ps1 6    Line has trailing whitespace_x000D__x000A_PSAvoidTrailingWhitespace Information Write-EventLogMessage.ps1 9    Line has trailing whitespace_x000D__x000A_PSAvoidTrailingWhitespace Information Write-EventLogMessage.ps1 12   Line has trailing whitespace_x000D__x000A_PSAvoidTrailingWhitespace Information Write-EventLogMessage.ps1 15   Line has trailing whitespace_x000D__x000A_PSAvoidTrailingWhitespace Information Write-EventLogMessage.ps1 20   Line has trailing whitespace_x000D__x000A_PSAvoidTrailingWhitespace Information Write-EventLogMessage.ps1 31   Line has trailing whitespace_x000D__x000A_PSAvoidTrailingWhitespace Information Write-EventLogMessage.ps1 32   Line has trailing whitespace_x000D__x000A_PSAvoidTrailingWhitespace Information Write-EventLogMessage.ps1 35   Line has trailing whitespace_x000D__x000A_PSAvoidTrailingWhitespace Information Write-EventLogMessage.ps1 38   Line has trailing whitespace_x000D__x000A_PSAvoidTrailingWhitespace Information Write-EventLogMessage.ps1 43   Line has trailing whitespace_x000D__x000A_PSAvoidUsingWriteHost     Warning     Write-EventLogMessage.ps1 35   File 'Write-EventLogMessage.ps1' uses_x000D__x000A_                                                                     Write-Host. Avoid using Write-Host_x000D__x000A_                                                                     it might not work in all hosts,_x000D__x000A_                                                                     does not work when there is no host, and_x000D__x000A_                                                                     (prior to PS 5.0) cannot be suppressed,_x000D__x000A_                                                                     captured, or redirected. Instead, use_x000D__x000A_                                                                     Write-Output, Write-Verbose, or_x000D__x000A_                                                                     Write-Information., but got @(Line has trailing whitespace, Line has trailing whitespace, Line has trailing whitespace, Line has trailing whitespace, Line has trailing whitespace, Line has trailing whitespace, Line has trailing whitespace, Line has trailing whitespace, Line has trailing whitespace, Line has trailing whitespace, ...1 more).</S>
                          <Obj N="Data" RefId="725">
                            <TNRef RefId="35" />
                            <DCT />
                          </Obj>
                          <Nil N="InnerException" />
                          <Nil N="HelpLink" />
                          <Nil N="Source" />
                          <I32 N="HResult">-2146233088</I32>
                          <Nil N="StackTrace" />
                        </Props>
                      </Obj>
                      <Obj N="TargetObject" RefId="726">
                        <TNRef RefId="38" />
                        <DCT>
                          <En>
                            <S N="Key">Message</S>
                            <S N="Value">Expected $null or empty, because some rule triggered._x000D__x000A__x000D__x000A_ _x000D__x000A_RuleName                  Severity    ScriptName                Line Message_x000D__x000A_--------                  --------    ----------                ---- -------_x000D__x000A_PSAvoidTrailingWhitespace Information Write-EventLogMessage.ps1 6    Line has trailing whitespace_x000D__x000A_PSAvoidTrailingWhitespace Information Write-EventLogMessage.ps1 9    Line has trailing whitespace_x000D__x000A_PSAvoidTrailingWhitespace Information Write-EventLogMessage.ps1 12   Line has trailing whitespace_x000D__x000A_PSAvoidTrailingWhitespace Information Write-EventLogMessage.ps1 15   Line has trailing whitespace_x000D__x000A_PSAvoidTrailingWhitespace Information Write-EventLogMessage.ps1 20   Line has trailing whitespace_x000D__x000A_PSAvoidTrailingWhitespace Information Write-EventLogMessage.ps1 31   Line has trailing whitespace_x000D__x000A_PSAvoidTrailingWhitespace Information Write-EventLogMessage.ps1 32   Line has trailing whitespace_x000D__x000A_PSAvoidTrailingWhitespace Information Write-EventLogMessage.ps1 35   Line has trailing whitespace_x000D__x000A_PSAvoidTrailingWhitespace Information Write-EventLogMessage.ps1 38   Line has trailing whitespace_x000D__x000A_PSAvoidTrailingWhitespace Information Write-EventLogMessage.ps1 43   Line has trailing whitespace_x000D__x000A_PSAvoidUsingWriteHost     Warning     Write-EventLogMessage.ps1 35   File 'Write-EventLogMessage.ps1' uses_x000D__x000A_                                                                     Write-Host. Avoid using Write-Host_x000D__x000A_                                                                     it might not work in all hosts,_x000D__x000A_                                                                     does not work when there is no host, and_x000D__x000A_                                                                     (prior to PS 5.0) cannot be suppressed,_x000D__x000A_                                                                     captured, or redirected. Instead, use_x000D__x000A_                                                                     Write-Output, Write-Verbose, or_x000D__x000A_                                                                     Write-Information., but got @(Line has trailing whitespace, Line has trailing whitespace, Line has trailing whitespace, Line has trailing whitespace, Line has trailing whitespace, Line has trailing whitespace, Line has trailing whitespace, Line has trailing whitespace, Line has trailing whitespace, Line has trailing whitespace, ...1 more).</S>
                          </En>
                          <En>
                            <S N="Key">File</S>
                            <S N="Value">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1</S>
                          </En>
                          <En>
                            <S N="Key">Line</S>
                            <S N="Value">125</S>
                          </En>
                          <En>
                            <S N="Key">LineText</S>
                            <S N="Value">        $pssaResult | Should -BeNullOrEmpty -Because `</S>
                          </En>
                          <En>
                            <S N="Key">Terminating</S>
                            <B N="Value">true</B>
                          </En>
                          <En>
                            <S N="Key">ShouldResult</S>
                            <Obj N="Value" RefId="727">
                              <TNRef RefId="61" />
                              <ToString>Pester.ShouldResult</ToString>
                              <Props>
                                <B N="Succeeded">false</B>
                                <S N="FailureMessage">Expected $null or empty, because some rule triggered._x000D__x000A__x000D__x000A_ _x000D__x000A_RuleName                  Severity    ScriptName                Line Message_x000D__x000A_--------                  --------    ----------                ---- -------_x000D__x000A_PSAvoidTrailingWhitespace Information Write-EventLogMessage.ps1 6    Line has trailing whitespace_x000D__x000A_PSAvoidTrailingWhitespace Information Write-EventLogMessage.ps1 9    Line has trailing whitespace_x000D__x000A_PSAvoidTrailingWhitespace Information Write-EventLogMessage.ps1 12   Line has trailing whitespace_x000D__x000A_PSAvoidTrailingWhitespace Information Write-EventLogMessage.ps1 15   Line has trailing whitespace_x000D__x000A_PSAvoidTrailingWhitespace Information Write-EventLogMessage.ps1 20   Line has trailing whitespace_x000D__x000A_PSAvoidTrailingWhitespace Information Write-EventLogMessage.ps1 31   Line has trailing whitespace_x000D__x000A_PSAvoidTrailingWhitespace Information Write-EventLogMessage.ps1 32   Line has trailing whitespace_x000D__x000A_PSAvoidTrailingWhitespace Information Write-EventLogMessage.ps1 35   Line has trailing whitespace_x000D__x000A_PSAvoidTrailingWhitespace Information Write-EventLogMessage.ps1 38   Line has trailing whitespace_x000D__x000A_PSAvoidTrailingWhitespace Information Write-EventLogMessage.ps1 43   Line has trailing whitespace_x000D__x000A_PSAvoidUsingWriteHost     Warning     Write-EventLogMessage.ps1 35   File 'Write-EventLogMessage.ps1' uses_x000D__x000A_                                                                     Write-Host. Avoid using Write-Host_x000D__x000A_                                                                     it might not work in all hosts,_x000D__x000A_                                                                     does not work when there is no host, and_x000D__x000A_                                                                     (prior to PS 5.0) cannot be suppressed,_x000D__x000A_                                                                     captured, or redirected. Instead, use_x000D__x000A_                                                                     Write-Output, Write-Verbose, or_x000D__x000A_                                                                     Write-Information., but got @(Line has trailing whitespace, Line has trailing whitespace, Line has trailing whitespace, Line has trailing whitespace, Line has trailing whitespace, Line has trailing whitespace, Line has trailing whitespace, Line has trailing whitespace, Line has trailing whitespace, Line has trailing whitespace, ...1 more).</S>
                                <Obj N="ExpectResult" RefId="728">
                                  <TNRef RefId="62" />
                                  <ToString>Expected: 'a value' Actual: @(Line has trailing whitespace, Line has trailing whitespace, Line has trailing whitespace, Line has trailing whitespace, Line has trailing whitespace, Line has trailing whitespace, Line has trailing whitespace, Line has trailing whitespace, Line has trailing whitespace, Line has trailing whitespace, ...1 more) Because: some rule triggered._x000D__x000A__x000D__x000A_ _x000D__x000A_RuleName                  Severity    ScriptName                Line Message_x000D__x000A_--------                  --------    ----------                ---- -------_x000D__x000A_PSAvoidTrailingWhitespace Information Write-EventLogMessage.ps1 6    Line has trailing whitespace_x000D__x000A_PSAvoidTrailingWhitespace Information Write-EventLogMessage.ps1 9    Line has trailing whitespace_x000D__x000A_PSAvoidTrailingWhitespace Information Write-EventLogMessage.ps1 12   Line has trailing whitespace_x000D__x000A_PSAvoidTrailingWhitespace Information Write-EventLogMessage.ps1 15   Line has trailing whitespace_x000D__x000A_PSAvoidTrailingWhitespace Information Write-EventLogMessage.ps1 20   Line has trailing whitespace_x000D__x000A_PSAvoidTrailingWhitespace Information Write-EventLogMessage.ps1 31   Line has trailing whitespace_x000D__x000A_PSAvoidTrailingWhitespace Information Write-EventLogMessage.ps1 32   Line has trailing whitespace_x000D__x000A_PSAvoidTrailingWhitespace Information Write-EventLogMessage.ps1 35   Line has trailing whitespace_x000D__x000A_PSAvoidTrailingWhitespace Information Write-EventLogMessage.ps1 38   Line has trailing whitespace_x000D__x000A_PSAvoidTrailingWhitespace Information Write-EventLogMessage.ps1 43   Line has trailing whitespace_x000D__x000A_PSAvoidUsingWriteHost     Warning     Write-EventLogMessage.ps1 35   File 'Write-EventLogMessage.ps1' uses_x000D__x000A_                                                                     Write-Host. Avoid using Write-Host_x000D__x000A_                                                                     because it might not work in all hosts,_x000D__x000A_                                                                     does not work when there is no host, and_x000D__x000A_                                                                     (prior to PS 5.0) cannot be suppressed,_x000D__x000A_                                                                     captured, or redirected. Instead, use_x000D__x000A_                                                                     Write-Output, Write-Verbose, or_x000D__x000A_                                                                     Write-Information._x000D__x000A__x000D__x000A_</ToString>
                                  <Props>
                                    <S N="Actual">@(Line has trailing whitespace, Line has trailing whitespace, Line has trailing whitespace, Line has trailing whitespace, Line has trailing whitespace, Line has trailing whitespace, Line has trailing whitespace, Line has trailing whitespace, Line has trailing whitespace, Line has trailing whitespace, ...1 more)</S>
                                    <S N="Expected">'a value'</S>
                                    <S N="Because">some rule triggered._x000D__x000A__x000D__x000A_ _x000D__x000A_RuleName                  Severity    ScriptName                Line Message_x000D__x000A_--------                  --------    ----------                ---- -------_x000D__x000A_PSAvoidTrailingWhitespace Information Write-EventLogMessage.ps1 6    Line has trailing whitespace_x000D__x000A_PSAvoidTrailingWhitespace Information Write-EventLogMessage.ps1 9    Line has trailing whitespace_x000D__x000A_PSAvoidTrailingWhitespace Information Write-EventLogMessage.ps1 12   Line has trailing whitespace_x000D__x000A_PSAvoidTrailingWhitespace Information Write-EventLogMessage.ps1 15   Line has trailing whitespace_x000D__x000A_PSAvoidTrailingWhitespace Information Write-EventLogMessage.ps1 20   Line has trailing whitespace_x000D__x000A_PSAvoidTrailingWhitespace Information Write-EventLogMessage.ps1 31   Line has trailing whitespace_x000D__x000A_PSAvoidTrailingWhitespace Information Write-EventLogMessage.ps1 32   Line has trailing whitespace_x000D__x000A_PSAvoidTrailingWhitespace Information Write-EventLogMessage.ps1 35   Line has trailing whitespace_x000D__x000A_PSAvoidTrailingWhitespace Information Write-EventLogMessage.ps1 38   Line has trailing whitespace_x000D__x000A_PSAvoidTrailingWhitespace Information Write-EventLogMessage.ps1 43   Line has trailing whitespace_x000D__x000A_PSAvoidUsingWriteHost     Warning     Write-EventLogMessage.ps1 35   File 'Write-EventLogMessage.ps1' uses_x000D__x000A_                                                                     Write-Host. Avoid using Write-Host_x000D__x000A_                                                                     because it might not work in all hosts,_x000D__x000A_                                                                     does not work when there is no host, and_x000D__x000A_                                                                     (prior to PS 5.0) cannot be suppressed,_x000D__x000A_                                                                     captured, or redirected. Instead, use_x000D__x000A_                                                                     Write-Output, Write-Verbose, or_x000D__x000A_                                                                     Write-Information._x000D__x000A__x000D__x000A_</S>
                                  </Props>
                                </Obj>
                              </Props>
                            </Obj>
                          </En>
                        </DCT>
                      </Obj>
                      <S N="FullyQualifiedErrorId">PesterAssertionFailed</S>
                      <Obj N="InvocationInfo" RefId="729">
                        <TNRef RefId="37" />
                        <ToString>System.Management.Automation.InvocationInfo</ToString>
                        <Props>
                          <Nil N="MyCommand" />
                          <Obj N="BoundParameters" RefId="730">
                            <TNRef RefId="38" />
                            <DCT />
                          </Obj>
                          <Obj N="UnboundArguments" RefId="731">
                            <TNRef RefId="31" />
                            <LST />
                          </Obj>
                          <I32 N="ScriptLineNumber">8392</I32>
                          <I32 N="OffsetInLine">13</I32>
                          <I64 N="HistoryId">18</I64>
                          <S N="ScriptName">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1</S>
                          <S N="Line">            throw $errorRecord_x000D__x000A_</S>
                          <S N="Statement">throw $errorRecord</S>
                          <S N="PositionMessage">At C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1:8392 char:13_x000D__x000A_+             throw $errorRecord_x000D__x000A_+             ~~~~~~~~~~~~~~~~~~</S>
                          <S N="PSScriptRoot">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1</S>
                          <S N="PSCommandPath">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1</S>
                          <S N="InvocationName"></S>
                          <I32 N="PipelineLength">0</I32>
                          <I32 N="PipelinePosition">0</I32>
                          <B N="ExpectingInput">false</B>
                          <Obj N="CommandOrigin" RefId="732">
                            <TNRef RefId="39" />
                            <ToString>Internal</ToString>
                            <I32>1</I32>
                          </Obj>
                          <Nil N="DisplayScriptPosition" />
                        </Props>
                        <MS>
                          <Obj N="ParameterValues" RefId="733">
                            <TNRef RefId="25" />
                            <DCT />
                          </Obj>
                        </MS>
                      </Obj>
                      <I32 N="ErrorCategory_Category">8</I32>
                      <S N="ErrorCategory_Activity"></S>
                      <S N="ErrorCategory_Reason">Exception</S>
                      <S N="ErrorCategory_TargetName">System.Collections.Generic.Dictionary`2[System.String,System.Object]</S>
                      <S N="ErrorCategory_TargetType">Dictionary`2</S>
                      <S N="ErrorCategory_Message">InvalidResult: (System.Collections.…ring,System.Object]:Dictionary`2) [], Exception</S>
                      <B N="SerializeExtendedInfo">false</B>
                      <S N="ErrorDetails_ScriptStackTrace">at Invoke-Assertion, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 8392_x000D__x000A_at Should&lt;End&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 8331_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1: line 125_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2024_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1985_x000D__x000A_at Invoke-ScriptBlock, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2157_x000D__x000A_at Invoke-TestItem, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1199_x000D__x000A_at Invoke-Block, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 835_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 893_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2024_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1985_x000D__x000A_at Invoke-ScriptBlock, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2160_x000D__x000A_at Invoke-Block, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 940_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 893_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2024_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1985_x000D__x000A_at Invoke-ScriptBlock, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2160_x000D__x000A_at Invoke-Block, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 940_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1688_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.ps1: line 3_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 3260_x000D__x000A_at Invoke-InNewScriptScope, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 3267_x000D__x000A_at Run-Test, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1691_x000D__x000A_at Invoke-Test, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2512_x000D__x000A_at Invoke-Pester&lt;End&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 5110_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Sampler\0.118.1\tasks\Invoke-Pester.pester.build.ps1: line 906_x000D__x000A_at *Task, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 629_x000D__x000A_at *Task, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 601_x000D__x000A_at *Task, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 601_x000D__x000A_at &lt;ScriptBlock&gt;&lt;End&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 787_x000D__x000A_at &lt;ScriptBlock&gt;&lt;Begin&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\build.ps1: line 532_x000D__x000A_at &lt;ScriptBlock&gt;, &lt;No file&gt;: line 1</S>
                      <Nil N="PSMessageDetails" />
                    </MS>
                  </Obj>
                </LST>
              </Obj>
              <Nil N="StandardOutput" />
              <TS N="Duration">PT0.0288314S</TS>
              <S N="ItemType">Test</S>
              <S N="Id">120:5</S>
              <S N="GroupId">120:5</S>
              <SBK N="ScriptBlock">_x000D__x000A_        $functionFile = Get-ChildItem -Path $sourcePath -Recurse -Include "$Name.ps1"_x000D__x000A__x000D__x000A_        $pssaResult = (Invoke-ScriptAnalyzer -Path $functionFile.FullName)_x000D__x000A_        $report = $pssaResult | Format-Table -AutoSize | Out-String -Width 110_x000D__x000A_        $pssaResult | Should -BeNullOrEmpty -Because `_x000D__x000A_            "some rule triggered.`r`n`r`n $report"_x000D__x000A_    </SBK>
              <Nil N="Tag" />
              <B N="Focus">false</B>
              <B N="Skip">false</B>
              <Ref N="Block" RefId="60" />
              <B N="First">false</B>
              <B N="Last">true</B>
              <B N="Include">false</B>
              <B N="Exclude">false</B>
              <B N="Explicit">false</B>
              <B N="ShouldRun">true</B>
              <I32 N="StartLine">120</I32>
              <B N="Executed">true</B>
              <DT N="ExecutedAt">2024-08-03T17:35:52.044487-07:00</DT>
              <B N="Passed">false</B>
              <B N="Skipped">false</B>
              <B N="Inconclusive">false</B>
              <TS N="UserDuration">PT0.022673S</TS>
              <TS N="FrameworkDuration">PT0.0061584S</TS>
              <Nil N="PluginData" />
              <Nil N="FrameworkData" />
            </Props>
          </Obj>
          <Obj RefId="734">
            <TNRef RefId="30" />
            <ToString>[-] Should have .SYNOPSIS for Add-Step</ToString>
            <Props>
              <S N="Name">Should have .SYNOPSIS for &lt;Name&gt;</S>
              <Obj N="Path" RefId="735">
                <TNRef RefId="28" />
                <LST>
                  <S>Help for module</S>
                  <S>Should have .SYNOPSIS for &lt;Name&gt;</S>
                </LST>
              </Obj>
              <Ref N="Data" RefId="359" />
              <S N="ExpandedName">Should have .SYNOPSIS for Add-Step</S>
              <S N="ExpandedPath">Help for module.Should have .SYNOPSIS for Add-Step</S>
              <S N="Result">Failed</S>
              <Obj N="ErrorRecord" RefId="736">
                <TNRef RefId="31" />
                <LST>
                  <Obj RefId="737">
                    <TNRef RefId="33" />
                    <ToString>Expected a value, but got $null or empty.</ToString>
                    <MS>
                      <S N="DisplayErrorMessage">Expected a value, but got $null or empty.</S>
                      <S N="DisplayStackTrace">at $functionHelp.Synopsis | Should -Not -BeNullOrEmpty, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:147_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:147</S>
                      <Obj N="Exception" RefId="738">
                        <TNRef RefId="60" />
                        <ToString>System.Exception: Expected a value, but got $null or empty.</ToString>
                        <Props>
                          <Nil N="TargetSite" />
                          <S N="Message">Expected a value, but got $null or empty.</S>
                          <Obj N="Data" RefId="739">
                            <TNRef RefId="35" />
                            <DCT />
                          </Obj>
                          <Nil N="InnerException" />
                          <Nil N="HelpLink" />
                          <Nil N="Source" />
                          <I32 N="HResult">-2146233088</I32>
                          <Nil N="StackTrace" />
                        </Props>
                      </Obj>
                      <Obj N="TargetObject" RefId="740">
                        <TNRef RefId="38" />
                        <DCT>
                          <En>
                            <S N="Key">Message</S>
                            <S N="Value">Expected a value, but got $null or empty.</S>
                          </En>
                          <En>
                            <S N="Key">File</S>
                            <S N="Value">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1</S>
                          </En>
                          <En>
                            <S N="Key">Line</S>
                            <S N="Value">147</S>
                          </En>
                          <En>
                            <S N="Key">LineText</S>
                            <S N="Value">        $functionHelp.Synopsis | Should -Not -BeNullOrEmpty</S>
                          </En>
                          <En>
                            <S N="Key">Terminating</S>
                            <B N="Value">true</B>
                          </En>
                          <En>
                            <S N="Key">ShouldResult</S>
                            <Obj N="Value" RefId="741">
                              <TNRef RefId="61" />
                              <ToString>Pester.ShouldResult</ToString>
                              <Props>
                                <B N="Succeeded">false</B>
                                <S N="FailureMessage">Expected a value, but got $null or empty.</S>
                                <Obj N="ExpectResult" RefId="742">
                                  <TNRef RefId="62" />
                                  <ToString>Expected: '$null or empty' Actual: @($null) Because: </ToString>
                                  <Props>
                                    <S N="Actual">@($null)</S>
                                    <S N="Expected">'$null or empty'</S>
                                    <S N="Because"></S>
                                  </Props>
                                </Obj>
                              </Props>
                            </Obj>
                          </En>
                        </DCT>
                      </Obj>
                      <S N="FullyQualifiedErrorId">PesterAssertionFailed</S>
                      <Obj N="InvocationInfo" RefId="743">
                        <TNRef RefId="37" />
                        <ToString>System.Management.Automation.InvocationInfo</ToString>
                        <Props>
                          <Nil N="MyCommand" />
                          <Obj N="BoundParameters" RefId="744">
                            <TNRef RefId="38" />
                            <DCT />
                          </Obj>
                          <Obj N="UnboundArguments" RefId="745">
                            <TNRef RefId="31" />
                            <LST />
                          </Obj>
                          <I32 N="ScriptLineNumber">8392</I32>
                          <I32 N="OffsetInLine">13</I32>
                          <I64 N="HistoryId">18</I64>
                          <S N="ScriptName">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1</S>
                          <S N="Line">            throw $errorRecord_x000D__x000A_</S>
                          <S N="Statement">throw $errorRecord</S>
                          <S N="PositionMessage">At C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1:8392 char:13_x000D__x000A_+             throw $errorRecord_x000D__x000A_+             ~~~~~~~~~~~~~~~~~~</S>
                          <S N="PSScriptRoot">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1</S>
                          <S N="PSCommandPath">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1</S>
                          <S N="InvocationName"></S>
                          <I32 N="PipelineLength">0</I32>
                          <I32 N="PipelinePosition">0</I32>
                          <B N="ExpectingInput">false</B>
                          <Obj N="CommandOrigin" RefId="746">
                            <TNRef RefId="39" />
                            <ToString>Internal</ToString>
                            <I32>1</I32>
                          </Obj>
                          <Nil N="DisplayScriptPosition" />
                        </Props>
                        <MS>
                          <Obj N="ParameterValues" RefId="747">
                            <TNRef RefId="25" />
                            <DCT />
                          </Obj>
                        </MS>
                      </Obj>
                      <I32 N="ErrorCategory_Category">8</I32>
                      <S N="ErrorCategory_Activity"></S>
                      <S N="ErrorCategory_Reason">Exception</S>
                      <S N="ErrorCategory_TargetName">System.Collections.Generic.Dictionary`2[System.String,System.Object]</S>
                      <S N="ErrorCategory_TargetType">Dictionary`2</S>
                      <S N="ErrorCategory_Message">InvalidResult: (System.Collections.…ring,System.Object]:Dictionary`2) [], Exception</S>
                      <B N="SerializeExtendedInfo">false</B>
                      <S N="ErrorDetails_ScriptStackTrace">at Invoke-Assertion, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 8392_x000D__x000A_at Should&lt;End&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 8331_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1: line 147_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2024_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1985_x000D__x000A_at Invoke-ScriptBlock, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2157_x000D__x000A_at Invoke-TestItem, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1199_x000D__x000A_at Invoke-Block, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 835_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 893_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2024_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1985_x000D__x000A_at Invoke-ScriptBlock, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2160_x000D__x000A_at Invoke-Block, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 940_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 893_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2024_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1985_x000D__x000A_at Invoke-ScriptBlock, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2160_x000D__x000A_at Invoke-Block, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 940_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1688_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.ps1: line 3_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 3260_x000D__x000A_at Invoke-InNewScriptScope, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 3267_x000D__x000A_at Run-Test, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1691_x000D__x000A_at Invoke-Test, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2512_x000D__x000A_at Invoke-Pester&lt;End&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 5110_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Sampler\0.118.1\tasks\Invoke-Pester.pester.build.ps1: line 906_x000D__x000A_at *Task, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 629_x000D__x000A_at *Task, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 601_x000D__x000A_at *Task, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 601_x000D__x000A_at &lt;ScriptBlock&gt;&lt;End&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 787_x000D__x000A_at &lt;ScriptBlock&gt;&lt;Begin&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\build.ps1: line 532_x000D__x000A_at &lt;ScriptBlock&gt;, &lt;No file&gt;: line 1</S>
                      <Nil N="PSMessageDetails" />
                    </MS>
                  </Obj>
                </LST>
              </Obj>
              <Nil N="StandardOutput" />
              <TS N="Duration">PT0.0796719S</TS>
              <S N="ItemType">Test</S>
              <S N="Id">131:5</S>
              <S N="GroupId">131:5</S>
              <SBK N="ScriptBlock">_x000D__x000A_        $functionFile = Get-ChildItem -Path $sourcePath -Recurse -Include "$Name.ps1"_x000D__x000A__x000D__x000A_        $scriptFileRawContent = Get-Content -Raw -Path $functionFile.FullName_x000D__x000A__x000D__x000A_        $abstractSyntaxTree = [System.Management.Automation.Language.Parser]::ParseInput($scriptFileRawContent, [ref] $null, [ref] $null)_x000D__x000A__x000D__x000A_        $astSearchDelegate = { $args[0] -is [System.Management.Automation.Language.FunctionDefinitionAst] }_x000D__x000A__x000D__x000A_        $parsedFunction = $abstractSyntaxTree.FindAll( $astSearchDelegate, $true ) |_x000D__x000A_            Where-Object -FilterScript {_x000D__x000A_                $_.Name -eq $Name_x000D__x000A_            }_x000D__x000A__x000D__x000A_        $functionHelp = $parsedFunction.GetHelpContent()_x000D__x000A__x000D__x000A_        $functionHelp.Synopsis | Should -Not -BeNullOrEmpty_x000D__x000A_    </SBK>
              <Nil N="Tag" />
              <B N="Focus">false</B>
              <B N="Skip">false</B>
              <Ref N="Block" RefId="67" />
              <B N="First">true</B>
              <B N="Last">false</B>
              <B N="Include">false</B>
              <B N="Exclude">false</B>
              <B N="Explicit">false</B>
              <B N="ShouldRun">true</B>
              <I32 N="StartLine">131</I32>
              <B N="Executed">true</B>
              <DT N="ExecutedAt">2024-08-03T17:35:52.076103-07:00</DT>
              <B N="Passed">false</B>
              <B N="Skipped">false</B>
              <B N="Inconclusive">false</B>
              <TS N="UserDuration">PT0.0356977S</TS>
              <TS N="FrameworkDuration">PT0.0439742S</TS>
              <Nil N="PluginData" />
              <Nil N="FrameworkData" />
            </Props>
          </Obj>
          <Obj RefId="748">
            <TNRef RefId="30" />
            <ToString>[-] Should have .SYNOPSIS for AppendCSVLog</ToString>
            <Props>
              <S N="Name">Should have .SYNOPSIS for &lt;Name&gt;</S>
              <Obj N="Path" RefId="749">
                <TNRef RefId="28" />
                <LST>
                  <S>Help for module</S>
                  <S>Should have .SYNOPSIS for &lt;Name&gt;</S>
                </LST>
              </Obj>
              <Ref N="Data" RefId="374" />
              <S N="ExpandedName">Should have .SYNOPSIS for AppendCSVLog</S>
              <S N="ExpandedPath">Help for module.Should have .SYNOPSIS for AppendCSVLog</S>
              <S N="Result">Failed</S>
              <Obj N="ErrorRecord" RefId="750">
                <TNRef RefId="31" />
                <LST>
                  <Obj RefId="751">
                    <TNRef RefId="33" />
                    <ToString>Expected a value, but got $null or empty.</ToString>
                    <MS>
                      <S N="DisplayErrorMessage">Expected a value, but got $null or empty.</S>
                      <S N="DisplayStackTrace">at $functionHelp.Synopsis | Should -Not -BeNullOrEmpty, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:147_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:147</S>
                      <Obj N="Exception" RefId="752">
                        <TNRef RefId="60" />
                        <ToString>System.Exception: Expected a value, but got $null or empty.</ToString>
                        <Props>
                          <Nil N="TargetSite" />
                          <S N="Message">Expected a value, but got $null or empty.</S>
                          <Obj N="Data" RefId="753">
                            <TNRef RefId="35" />
                            <DCT />
                          </Obj>
                          <Nil N="InnerException" />
                          <Nil N="HelpLink" />
                          <Nil N="Source" />
                          <I32 N="HResult">-2146233088</I32>
                          <Nil N="StackTrace" />
                        </Props>
                      </Obj>
                      <Obj N="TargetObject" RefId="754">
                        <TNRef RefId="38" />
                        <DCT>
                          <En>
                            <S N="Key">Message</S>
                            <S N="Value">Expected a value, but got $null or empty.</S>
                          </En>
                          <En>
                            <S N="Key">File</S>
                            <S N="Value">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1</S>
                          </En>
                          <En>
                            <S N="Key">Line</S>
                            <S N="Value">147</S>
                          </En>
                          <En>
                            <S N="Key">LineText</S>
                            <S N="Value">        $functionHelp.Synopsis | Should -Not -BeNullOrEmpty</S>
                          </En>
                          <En>
                            <S N="Key">Terminating</S>
                            <B N="Value">true</B>
                          </En>
                          <En>
                            <S N="Key">ShouldResult</S>
                            <Obj N="Value" RefId="755">
                              <TNRef RefId="61" />
                              <ToString>Pester.ShouldResult</ToString>
                              <Props>
                                <B N="Succeeded">false</B>
                                <S N="FailureMessage">Expected a value, but got $null or empty.</S>
                                <Obj N="ExpectResult" RefId="756">
                                  <TNRef RefId="62" />
                                  <ToString>Expected: '$null or empty' Actual: @($null) Because: </ToString>
                                  <Props>
                                    <S N="Actual">@($null)</S>
                                    <S N="Expected">'$null or empty'</S>
                                    <S N="Because"></S>
                                  </Props>
                                </Obj>
                              </Props>
                            </Obj>
                          </En>
                        </DCT>
                      </Obj>
                      <S N="FullyQualifiedErrorId">PesterAssertionFailed</S>
                      <Obj N="InvocationInfo" RefId="757">
                        <TNRef RefId="37" />
                        <ToString>System.Management.Automation.InvocationInfo</ToString>
                        <Props>
                          <Nil N="MyCommand" />
                          <Obj N="BoundParameters" RefId="758">
                            <TNRef RefId="38" />
                            <DCT />
                          </Obj>
                          <Obj N="UnboundArguments" RefId="759">
                            <TNRef RefId="31" />
                            <LST />
                          </Obj>
                          <I32 N="ScriptLineNumber">8392</I32>
                          <I32 N="OffsetInLine">13</I32>
                          <I64 N="HistoryId">18</I64>
                          <S N="ScriptName">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1</S>
                          <S N="Line">            throw $errorRecord_x000D__x000A_</S>
                          <S N="Statement">throw $errorRecord</S>
                          <S N="PositionMessage">At C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1:8392 char:13_x000D__x000A_+             throw $errorRecord_x000D__x000A_+             ~~~~~~~~~~~~~~~~~~</S>
                          <S N="PSScriptRoot">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1</S>
                          <S N="PSCommandPath">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1</S>
                          <S N="InvocationName"></S>
                          <I32 N="PipelineLength">0</I32>
                          <I32 N="PipelinePosition">0</I32>
                          <B N="ExpectingInput">false</B>
                          <Obj N="CommandOrigin" RefId="760">
                            <TNRef RefId="39" />
                            <ToString>Internal</ToString>
                            <I32>1</I32>
                          </Obj>
                          <Nil N="DisplayScriptPosition" />
                        </Props>
                        <MS>
                          <Obj N="ParameterValues" RefId="761">
                            <TNRef RefId="25" />
                            <DCT />
                          </Obj>
                        </MS>
                      </Obj>
                      <I32 N="ErrorCategory_Category">8</I32>
                      <S N="ErrorCategory_Activity"></S>
                      <S N="ErrorCategory_Reason">Exception</S>
                      <S N="ErrorCategory_TargetName">System.Collections.Generic.Dictionary`2[System.String,System.Object]</S>
                      <S N="ErrorCategory_TargetType">Dictionary`2</S>
                      <S N="ErrorCategory_Message">InvalidResult: (System.Collections.…ring,System.Object]:Dictionary`2) [], Exception</S>
                      <B N="SerializeExtendedInfo">false</B>
                      <S N="ErrorDetails_ScriptStackTrace">at Invoke-Assertion, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 8392_x000D__x000A_at Should&lt;End&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 8331_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1: line 147_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2024_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1985_x000D__x000A_at Invoke-ScriptBlock, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2157_x000D__x000A_at Invoke-TestItem, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1199_x000D__x000A_at Invoke-Block, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 835_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 893_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2024_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1985_x000D__x000A_at Invoke-ScriptBlock, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2160_x000D__x000A_at Invoke-Block, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 940_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 893_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2024_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1985_x000D__x000A_at Invoke-ScriptBlock, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2160_x000D__x000A_at Invoke-Block, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 940_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1688_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.ps1: line 3_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 3260_x000D__x000A_at Invoke-InNewScriptScope, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 3267_x000D__x000A_at Run-Test, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1691_x000D__x000A_at Invoke-Test, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2512_x000D__x000A_at Invoke-Pester&lt;End&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 5110_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Sampler\0.118.1\tasks\Invoke-Pester.pester.build.ps1: line 906_x000D__x000A_at *Task, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 629_x000D__x000A_at *Task, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 601_x000D__x000A_at *Task, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 601_x000D__x000A_at &lt;ScriptBlock&gt;&lt;End&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 787_x000D__x000A_at &lt;ScriptBlock&gt;&lt;Begin&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\build.ps1: line 532_x000D__x000A_at &lt;ScriptBlock&gt;, &lt;No file&gt;: line 1</S>
                      <Nil N="PSMessageDetails" />
                    </MS>
                  </Obj>
                </LST>
              </Obj>
              <Nil N="StandardOutput" />
              <TS N="Duration">PT0.0358307S</TS>
              <S N="ItemType">Test</S>
              <S N="Id">131:5</S>
              <S N="GroupId">131:5</S>
              <SBK N="ScriptBlock">_x000D__x000A_        $functionFile = Get-ChildItem -Path $sourcePath -Recurse -Include "$Name.ps1"_x000D__x000A__x000D__x000A_        $scriptFileRawContent = Get-Content -Raw -Path $functionFile.FullName_x000D__x000A__x000D__x000A_        $abstractSyntaxTree = [System.Management.Automation.Language.Parser]::ParseInput($scriptFileRawContent, [ref] $null, [ref] $null)_x000D__x000A__x000D__x000A_        $astSearchDelegate = { $args[0] -is [System.Management.Automation.Language.FunctionDefinitionAst] }_x000D__x000A__x000D__x000A_        $parsedFunction = $abstractSyntaxTree.FindAll( $astSearchDelegate, $true ) |_x000D__x000A_            Where-Object -FilterScript {_x000D__x000A_                $_.Name -eq $Name_x000D__x000A_            }_x000D__x000A__x000D__x000A_        $functionHelp = $parsedFunction.GetHelpContent()_x000D__x000A__x000D__x000A_        $functionHelp.Synopsis | Should -Not -BeNullOrEmpty_x000D__x000A_    </SBK>
              <Nil N="Tag" />
              <B N="Focus">false</B>
              <B N="Skip">false</B>
              <Ref N="Block" RefId="67" />
              <B N="First">false</B>
              <B N="Last">false</B>
              <B N="Include">false</B>
              <B N="Exclude">false</B>
              <B N="Explicit">false</B>
              <B N="ShouldRun">true</B>
              <I32 N="StartLine">131</I32>
              <B N="Executed">true</B>
              <DT N="ExecutedAt">2024-08-03T17:35:52.1559163-07:00</DT>
              <B N="Passed">false</B>
              <B N="Skipped">false</B>
              <B N="Inconclusive">false</B>
              <TS N="UserDuration">PT0.028638S</TS>
              <TS N="FrameworkDuration">PT0.0071927S</TS>
              <Nil N="PluginData" />
              <Nil N="FrameworkData" />
            </Props>
          </Obj>
          <Obj RefId="762">
            <TNRef RefId="30" />
            <ToString>[-] Should have .SYNOPSIS for CreateEventLogSource</ToString>
            <Props>
              <S N="Name">Should have .SYNOPSIS for &lt;Name&gt;</S>
              <Obj N="Path" RefId="763">
                <TNRef RefId="28" />
                <LST>
                  <S>Help for module</S>
                  <S>Should have .SYNOPSIS for &lt;Name&gt;</S>
                </LST>
              </Obj>
              <Ref N="Data" RefId="389" />
              <S N="ExpandedName">Should have .SYNOPSIS for CreateEventLogSource</S>
              <S N="ExpandedPath">Help for module.Should have .SYNOPSIS for CreateEventLogSource</S>
              <S N="Result">Failed</S>
              <Obj N="ErrorRecord" RefId="764">
                <TNRef RefId="31" />
                <LST>
                  <Obj RefId="765">
                    <TNRef RefId="33" />
                    <ToString>Expected a value, but got $null or empty.</ToString>
                    <MS>
                      <S N="DisplayErrorMessage">Expected a value, but got $null or empty.</S>
                      <S N="DisplayStackTrace">at $functionHelp.Synopsis | Should -Not -BeNullOrEmpty, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:147_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:147</S>
                      <Obj N="Exception" RefId="766">
                        <TNRef RefId="60" />
                        <ToString>System.Exception: Expected a value, but got $null or empty.</ToString>
                        <Props>
                          <Nil N="TargetSite" />
                          <S N="Message">Expected a value, but got $null or empty.</S>
                          <Obj N="Data" RefId="767">
                            <TNRef RefId="35" />
                            <DCT />
                          </Obj>
                          <Nil N="InnerException" />
                          <Nil N="HelpLink" />
                          <Nil N="Source" />
                          <I32 N="HResult">-2146233088</I32>
                          <Nil N="StackTrace" />
                        </Props>
                      </Obj>
                      <Obj N="TargetObject" RefId="768">
                        <TNRef RefId="38" />
                        <DCT>
                          <En>
                            <S N="Key">Message</S>
                            <S N="Value">Expected a value, but got $null or empty.</S>
                          </En>
                          <En>
                            <S N="Key">File</S>
                            <S N="Value">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1</S>
                          </En>
                          <En>
                            <S N="Key">Line</S>
                            <S N="Value">147</S>
                          </En>
                          <En>
                            <S N="Key">LineText</S>
                            <S N="Value">        $functionHelp.Synopsis | Should -Not -BeNullOrEmpty</S>
                          </En>
                          <En>
                            <S N="Key">Terminating</S>
                            <B N="Value">true</B>
                          </En>
                          <En>
                            <S N="Key">ShouldResult</S>
                            <Obj N="Value" RefId="769">
                              <TNRef RefId="61" />
                              <ToString>Pester.ShouldResult</ToString>
                              <Props>
                                <B N="Succeeded">false</B>
                                <S N="FailureMessage">Expected a value, but got $null or empty.</S>
                                <Obj N="ExpectResult" RefId="770">
                                  <TNRef RefId="62" />
                                  <ToString>Expected: '$null or empty' Actual: @($null) Because: </ToString>
                                  <Props>
                                    <S N="Actual">@($null)</S>
                                    <S N="Expected">'$null or empty'</S>
                                    <S N="Because"></S>
                                  </Props>
                                </Obj>
                              </Props>
                            </Obj>
                          </En>
                        </DCT>
                      </Obj>
                      <S N="FullyQualifiedErrorId">PesterAssertionFailed</S>
                      <Obj N="InvocationInfo" RefId="771">
                        <TNRef RefId="37" />
                        <ToString>System.Management.Automation.InvocationInfo</ToString>
                        <Props>
                          <Nil N="MyCommand" />
                          <Obj N="BoundParameters" RefId="772">
                            <TNRef RefId="38" />
                            <DCT />
                          </Obj>
                          <Obj N="UnboundArguments" RefId="773">
                            <TNRef RefId="31" />
                            <LST />
                          </Obj>
                          <I32 N="ScriptLineNumber">8392</I32>
                          <I32 N="OffsetInLine">13</I32>
                          <I64 N="HistoryId">18</I64>
                          <S N="ScriptName">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1</S>
                          <S N="Line">            throw $errorRecord_x000D__x000A_</S>
                          <S N="Statement">throw $errorRecord</S>
                          <S N="PositionMessage">At C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1:8392 char:13_x000D__x000A_+             throw $errorRecord_x000D__x000A_+             ~~~~~~~~~~~~~~~~~~</S>
                          <S N="PSScriptRoot">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1</S>
                          <S N="PSCommandPath">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1</S>
                          <S N="InvocationName"></S>
                          <I32 N="PipelineLength">0</I32>
                          <I32 N="PipelinePosition">0</I32>
                          <B N="ExpectingInput">false</B>
                          <Obj N="CommandOrigin" RefId="774">
                            <TNRef RefId="39" />
                            <ToString>Internal</ToString>
                            <I32>1</I32>
                          </Obj>
                          <Nil N="DisplayScriptPosition" />
                        </Props>
                        <MS>
                          <Obj N="ParameterValues" RefId="775">
                            <TNRef RefId="25" />
                            <DCT />
                          </Obj>
                        </MS>
                      </Obj>
                      <I32 N="ErrorCategory_Category">8</I32>
                      <S N="ErrorCategory_Activity"></S>
                      <S N="ErrorCategory_Reason">Exception</S>
                      <S N="ErrorCategory_TargetName">System.Collections.Generic.Dictionary`2[System.String,System.Object]</S>
                      <S N="ErrorCategory_TargetType">Dictionary`2</S>
                      <S N="ErrorCategory_Message">InvalidResult: (System.Collections.…ring,System.Object]:Dictionary`2) [], Exception</S>
                      <B N="SerializeExtendedInfo">false</B>
                      <S N="ErrorDetails_ScriptStackTrace">at Invoke-Assertion, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 8392_x000D__x000A_at Should&lt;End&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 8331_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1: line 147_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2024_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1985_x000D__x000A_at Invoke-ScriptBlock, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2157_x000D__x000A_at Invoke-TestItem, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1199_x000D__x000A_at Invoke-Block, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 835_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 893_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2024_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1985_x000D__x000A_at Invoke-ScriptBlock, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2160_x000D__x000A_at Invoke-Block, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 940_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 893_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2024_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1985_x000D__x000A_at Invoke-ScriptBlock, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2160_x000D__x000A_at Invoke-Block, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 940_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1688_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.ps1: line 3_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 3260_x000D__x000A_at Invoke-InNewScriptScope, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 3267_x000D__x000A_at Run-Test, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1691_x000D__x000A_at Invoke-Test, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2512_x000D__x000A_at Invoke-Pester&lt;End&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 5110_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Sampler\0.118.1\tasks\Invoke-Pester.pester.build.ps1: line 906_x000D__x000A_at *Task, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 629_x000D__x000A_at *Task, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 601_x000D__x000A_at *Task, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 601_x000D__x000A_at &lt;ScriptBlock&gt;&lt;End&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 787_x000D__x000A_at &lt;ScriptBlock&gt;&lt;Begin&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\build.ps1: line 532_x000D__x000A_at &lt;ScriptBlock&gt;, &lt;No file&gt;: line 1</S>
                      <Nil N="PSMessageDetails" />
                    </MS>
                  </Obj>
                </LST>
              </Obj>
              <Nil N="StandardOutput" />
              <TS N="Duration">PT0.0186609S</TS>
              <S N="ItemType">Test</S>
              <S N="Id">131:5</S>
              <S N="GroupId">131:5</S>
              <SBK N="ScriptBlock">_x000D__x000A_        $functionFile = Get-ChildItem -Path $sourcePath -Recurse -Include "$Name.ps1"_x000D__x000A__x000D__x000A_        $scriptFileRawContent = Get-Content -Raw -Path $functionFile.FullName_x000D__x000A__x000D__x000A_        $abstractSyntaxTree = [System.Management.Automation.Language.Parser]::ParseInput($scriptFileRawContent, [ref] $null, [ref] $null)_x000D__x000A__x000D__x000A_        $astSearchDelegate = { $args[0] -is [System.Management.Automation.Language.FunctionDefinitionAst] }_x000D__x000A__x000D__x000A_        $parsedFunction = $abstractSyntaxTree.FindAll( $astSearchDelegate, $true ) |_x000D__x000A_            Where-Object -FilterScript {_x000D__x000A_                $_.Name -eq $Name_x000D__x000A_            }_x000D__x000A__x000D__x000A_        $functionHelp = $parsedFunction.GetHelpContent()_x000D__x000A__x000D__x000A_        $functionHelp.Synopsis | Should -Not -BeNullOrEmpty_x000D__x000A_    </SBK>
              <Nil N="Tag" />
              <B N="Focus">false</B>
              <B N="Skip">false</B>
              <Ref N="Block" RefId="67" />
              <B N="First">false</B>
              <B N="Last">false</B>
              <B N="Include">false</B>
              <B N="Exclude">false</B>
              <B N="Explicit">false</B>
              <B N="ShouldRun">true</B>
              <I32 N="StartLine">131</I32>
              <B N="Executed">true</B>
              <DT N="ExecutedAt">2024-08-03T17:35:52.1918063-07:00</DT>
              <B N="Passed">false</B>
              <B N="Skipped">false</B>
              <B N="Inconclusive">false</B>
              <TS N="UserDuration">PT0.0109339S</TS>
              <TS N="FrameworkDuration">PT0.007727S</TS>
              <Nil N="PluginData" />
              <Nil N="FrameworkData" />
            </Props>
          </Obj>
          <Obj RefId="776">
            <TNRef RefId="30" />
            <ToString>[-] Should have .SYNOPSIS for CreateEventSourceAndLog</ToString>
            <Props>
              <S N="Name">Should have .SYNOPSIS for &lt;Name&gt;</S>
              <Obj N="Path" RefId="777">
                <TNRef RefId="28" />
                <LST>
                  <S>Help for module</S>
                  <S>Should have .SYNOPSIS for &lt;Name&gt;</S>
                </LST>
              </Obj>
              <Ref N="Data" RefId="404" />
              <S N="ExpandedName">Should have .SYNOPSIS for CreateEventSourceAndLog</S>
              <S N="ExpandedPath">Help for module.Should have .SYNOPSIS for CreateEventSourceAndLog</S>
              <S N="Result">Failed</S>
              <Obj N="ErrorRecord" RefId="778">
                <TNRef RefId="31" />
                <LST>
                  <Obj RefId="779">
                    <TNRef RefId="33" />
                    <ToString>Expected a value, but got $null or empty.</ToString>
                    <MS>
                      <S N="DisplayErrorMessage">Expected a value, but got $null or empty.</S>
                      <S N="DisplayStackTrace">at $functionHelp.Synopsis | Should -Not -BeNullOrEmpty, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:147_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:147</S>
                      <Obj N="Exception" RefId="780">
                        <TNRef RefId="60" />
                        <ToString>System.Exception: Expected a value, but got $null or empty.</ToString>
                        <Props>
                          <Nil N="TargetSite" />
                          <S N="Message">Expected a value, but got $null or empty.</S>
                          <Obj N="Data" RefId="781">
                            <TNRef RefId="35" />
                            <DCT />
                          </Obj>
                          <Nil N="InnerException" />
                          <Nil N="HelpLink" />
                          <Nil N="Source" />
                          <I32 N="HResult">-2146233088</I32>
                          <Nil N="StackTrace" />
                        </Props>
                      </Obj>
                      <Obj N="TargetObject" RefId="782">
                        <TNRef RefId="38" />
                        <DCT>
                          <En>
                            <S N="Key">Message</S>
                            <S N="Value">Expected a value, but got $null or empty.</S>
                          </En>
                          <En>
                            <S N="Key">File</S>
                            <S N="Value">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1</S>
                          </En>
                          <En>
                            <S N="Key">Line</S>
                            <S N="Value">147</S>
                          </En>
                          <En>
                            <S N="Key">LineText</S>
                            <S N="Value">        $functionHelp.Synopsis | Should -Not -BeNullOrEmpty</S>
                          </En>
                          <En>
                            <S N="Key">Terminating</S>
                            <B N="Value">true</B>
                          </En>
                          <En>
                            <S N="Key">ShouldResult</S>
                            <Obj N="Value" RefId="783">
                              <TNRef RefId="61" />
                              <ToString>Pester.ShouldResult</ToString>
                              <Props>
                                <B N="Succeeded">false</B>
                                <S N="FailureMessage">Expected a value, but got $null or empty.</S>
                                <Obj N="ExpectResult" RefId="784">
                                  <TNRef RefId="62" />
                                  <ToString>Expected: '$null or empty' Actual: @($null) Because: </ToString>
                                  <Props>
                                    <S N="Actual">@($null)</S>
                                    <S N="Expected">'$null or empty'</S>
                                    <S N="Because"></S>
                                  </Props>
                                </Obj>
                              </Props>
                            </Obj>
                          </En>
                        </DCT>
                      </Obj>
                      <S N="FullyQualifiedErrorId">PesterAssertionFailed</S>
                      <Obj N="InvocationInfo" RefId="785">
                        <TNRef RefId="37" />
                        <ToString>System.Management.Automation.InvocationInfo</ToString>
                        <Props>
                          <Nil N="MyCommand" />
                          <Obj N="BoundParameters" RefId="786">
                            <TNRef RefId="38" />
                            <DCT />
                          </Obj>
                          <Obj N="UnboundArguments" RefId="787">
                            <TNRef RefId="31" />
                            <LST />
                          </Obj>
                          <I32 N="ScriptLineNumber">8392</I32>
                          <I32 N="OffsetInLine">13</I32>
                          <I64 N="HistoryId">18</I64>
                          <S N="ScriptName">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1</S>
                          <S N="Line">            throw $errorRecord_x000D__x000A_</S>
                          <S N="Statement">throw $errorRecord</S>
                          <S N="PositionMessage">At C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1:8392 char:13_x000D__x000A_+             throw $errorRecord_x000D__x000A_+             ~~~~~~~~~~~~~~~~~~</S>
                          <S N="PSScriptRoot">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1</S>
                          <S N="PSCommandPath">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1</S>
                          <S N="InvocationName"></S>
                          <I32 N="PipelineLength">0</I32>
                          <I32 N="PipelinePosition">0</I32>
                          <B N="ExpectingInput">false</B>
                          <Obj N="CommandOrigin" RefId="788">
                            <TNRef RefId="39" />
                            <ToString>Internal</ToString>
                            <I32>1</I32>
                          </Obj>
                          <Nil N="DisplayScriptPosition" />
                        </Props>
                        <MS>
                          <Obj N="ParameterValues" RefId="789">
                            <TNRef RefId="25" />
                            <DCT />
                          </Obj>
                        </MS>
                      </Obj>
                      <I32 N="ErrorCategory_Category">8</I32>
                      <S N="ErrorCategory_Activity"></S>
                      <S N="ErrorCategory_Reason">Exception</S>
                      <S N="ErrorCategory_TargetName">System.Collections.Generic.Dictionary`2[System.String,System.Object]</S>
                      <S N="ErrorCategory_TargetType">Dictionary`2</S>
                      <S N="ErrorCategory_Message">InvalidResult: (System.Collections.…ring,System.Object]:Dictionary`2) [], Exception</S>
                      <B N="SerializeExtendedInfo">false</B>
                      <S N="ErrorDetails_ScriptStackTrace">at Invoke-Assertion, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 8392_x000D__x000A_at Should&lt;End&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 8331_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1: line 147_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2024_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1985_x000D__x000A_at Invoke-ScriptBlock, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2157_x000D__x000A_at Invoke-TestItem, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1199_x000D__x000A_at Invoke-Block, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 835_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 893_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2024_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1985_x000D__x000A_at Invoke-ScriptBlock, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2160_x000D__x000A_at Invoke-Block, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 940_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 893_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2024_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1985_x000D__x000A_at Invoke-ScriptBlock, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2160_x000D__x000A_at Invoke-Block, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 940_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1688_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.ps1: line 3_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 3260_x000D__x000A_at Invoke-InNewScriptScope, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 3267_x000D__x000A_at Run-Test, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1691_x000D__x000A_at Invoke-Test, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2512_x000D__x000A_at Invoke-Pester&lt;End&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 5110_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Sampler\0.118.1\tasks\Invoke-Pester.pester.build.ps1: line 906_x000D__x000A_at *Task, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 629_x000D__x000A_at *Task, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 601_x000D__x000A_at *Task, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 601_x000D__x000A_at &lt;ScriptBlock&gt;&lt;End&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 787_x000D__x000A_at &lt;ScriptBlock&gt;&lt;Begin&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\build.ps1: line 532_x000D__x000A_at &lt;ScriptBlock&gt;, &lt;No file&gt;: line 1</S>
                      <Nil N="PSMessageDetails" />
                    </MS>
                  </Obj>
                </LST>
              </Obj>
              <Nil N="StandardOutput" />
              <TS N="Duration">PT0.0266867S</TS>
              <S N="ItemType">Test</S>
              <S N="Id">131:5</S>
              <S N="GroupId">131:5</S>
              <SBK N="ScriptBlock">_x000D__x000A_        $functionFile = Get-ChildItem -Path $sourcePath -Recurse -Include "$Name.ps1"_x000D__x000A__x000D__x000A_        $scriptFileRawContent = Get-Content -Raw -Path $functionFile.FullName_x000D__x000A__x000D__x000A_        $abstractSyntaxTree = [System.Management.Automation.Language.Parser]::ParseInput($scriptFileRawContent, [ref] $null, [ref] $null)_x000D__x000A__x000D__x000A_        $astSearchDelegate = { $args[0] -is [System.Management.Automation.Language.FunctionDefinitionAst] }_x000D__x000A__x000D__x000A_        $parsedFunction = $abstractSyntaxTree.FindAll( $astSearchDelegate, $true ) |_x000D__x000A_            Where-Object -FilterScript {_x000D__x000A_                $_.Name -eq $Name_x000D__x000A_            }_x000D__x000A__x000D__x000A_        $functionHelp = $parsedFunction.GetHelpContent()_x000D__x000A__x000D__x000A_        $functionHelp.Synopsis | Should -Not -BeNullOrEmpty_x000D__x000A_    </SBK>
              <Nil N="Tag" />
              <B N="Focus">false</B>
              <B N="Skip">false</B>
              <Ref N="Block" RefId="67" />
              <B N="First">false</B>
              <B N="Last">false</B>
              <B N="Include">false</B>
              <B N="Exclude">false</B>
              <B N="Explicit">false</B>
              <B N="ShouldRun">true</B>
              <I32 N="StartLine">131</I32>
              <B N="Executed">true</B>
              <DT N="ExecutedAt">2024-08-03T17:35:52.2105428-07:00</DT>
              <B N="Passed">false</B>
              <B N="Skipped">false</B>
              <B N="Inconclusive">false</B>
              <TS N="UserDuration">PT0.0153109S</TS>
              <TS N="FrameworkDuration">PT0.0113758S</TS>
              <Nil N="PluginData" />
              <Nil N="FrameworkData" />
            </Props>
          </Obj>
          <Obj RefId="790">
            <TNRef RefId="30" />
            <ToString>[-] Should have .SYNOPSIS for Export-EventLog</ToString>
            <Props>
              <S N="Name">Should have .SYNOPSIS for &lt;Name&gt;</S>
              <Obj N="Path" RefId="791">
                <TNRef RefId="28" />
                <LST>
                  <S>Help for module</S>
                  <S>Should have .SYNOPSIS for &lt;Name&gt;</S>
                </LST>
              </Obj>
              <Ref N="Data" RefId="434" />
              <S N="ExpandedName">Should have .SYNOPSIS for Export-EventLog</S>
              <S N="ExpandedPath">Help for module.Should have .SYNOPSIS for Export-EventLog</S>
              <S N="Result">Failed</S>
              <Obj N="ErrorRecord" RefId="792">
                <TNRef RefId="31" />
                <LST>
                  <Obj RefId="793">
                    <TNRef RefId="33" />
                    <ToString>Expected a value, but got $null or empty.</ToString>
                    <MS>
                      <S N="DisplayErrorMessage">Expected a value, but got $null or empty.</S>
                      <S N="DisplayStackTrace">at $functionHelp.Synopsis | Should -Not -BeNullOrEmpty, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:147_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:147</S>
                      <Obj N="Exception" RefId="794">
                        <TNRef RefId="60" />
                        <ToString>System.Exception: Expected a value, but got $null or empty.</ToString>
                        <Props>
                          <Nil N="TargetSite" />
                          <S N="Message">Expected a value, but got $null or empty.</S>
                          <Obj N="Data" RefId="795">
                            <TNRef RefId="35" />
                            <DCT />
                          </Obj>
                          <Nil N="InnerException" />
                          <Nil N="HelpLink" />
                          <Nil N="Source" />
                          <I32 N="HResult">-2146233088</I32>
                          <Nil N="StackTrace" />
                        </Props>
                      </Obj>
                      <Obj N="TargetObject" RefId="796">
                        <TNRef RefId="38" />
                        <DCT>
                          <En>
                            <S N="Key">Message</S>
                            <S N="Value">Expected a value, but got $null or empty.</S>
                          </En>
                          <En>
                            <S N="Key">File</S>
                            <S N="Value">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1</S>
                          </En>
                          <En>
                            <S N="Key">Line</S>
                            <S N="Value">147</S>
                          </En>
                          <En>
                            <S N="Key">LineText</S>
                            <S N="Value">        $functionHelp.Synopsis | Should -Not -BeNullOrEmpty</S>
                          </En>
                          <En>
                            <S N="Key">Terminating</S>
                            <B N="Value">true</B>
                          </En>
                          <En>
                            <S N="Key">ShouldResult</S>
                            <Obj N="Value" RefId="797">
                              <TNRef RefId="61" />
                              <ToString>Pester.ShouldResult</ToString>
                              <Props>
                                <B N="Succeeded">false</B>
                                <S N="FailureMessage">Expected a value, but got $null or empty.</S>
                                <Obj N="ExpectResult" RefId="798">
                                  <TNRef RefId="62" />
                                  <ToString>Expected: '$null or empty' Actual: @($null) Because: </ToString>
                                  <Props>
                                    <S N="Actual">@($null)</S>
                                    <S N="Expected">'$null or empty'</S>
                                    <S N="Because"></S>
                                  </Props>
                                </Obj>
                              </Props>
                            </Obj>
                          </En>
                        </DCT>
                      </Obj>
                      <S N="FullyQualifiedErrorId">PesterAssertionFailed</S>
                      <Obj N="InvocationInfo" RefId="799">
                        <TNRef RefId="37" />
                        <ToString>System.Management.Automation.InvocationInfo</ToString>
                        <Props>
                          <Nil N="MyCommand" />
                          <Obj N="BoundParameters" RefId="800">
                            <TNRef RefId="38" />
                            <DCT />
                          </Obj>
                          <Obj N="UnboundArguments" RefId="801">
                            <TNRef RefId="31" />
                            <LST />
                          </Obj>
                          <I32 N="ScriptLineNumber">8392</I32>
                          <I32 N="OffsetInLine">13</I32>
                          <I64 N="HistoryId">18</I64>
                          <S N="ScriptName">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1</S>
                          <S N="Line">            throw $errorRecord_x000D__x000A_</S>
                          <S N="Statement">throw $errorRecord</S>
                          <S N="PositionMessage">At C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1:8392 char:13_x000D__x000A_+             throw $errorRecord_x000D__x000A_+             ~~~~~~~~~~~~~~~~~~</S>
                          <S N="PSScriptRoot">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1</S>
                          <S N="PSCommandPath">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1</S>
                          <S N="InvocationName"></S>
                          <I32 N="PipelineLength">0</I32>
                          <I32 N="PipelinePosition">0</I32>
                          <B N="ExpectingInput">false</B>
                          <Obj N="CommandOrigin" RefId="802">
                            <TNRef RefId="39" />
                            <ToString>Internal</ToString>
                            <I32>1</I32>
                          </Obj>
                          <Nil N="DisplayScriptPosition" />
                        </Props>
                        <MS>
                          <Obj N="ParameterValues" RefId="803">
                            <TNRef RefId="25" />
                            <DCT />
                          </Obj>
                        </MS>
                      </Obj>
                      <I32 N="ErrorCategory_Category">8</I32>
                      <S N="ErrorCategory_Activity"></S>
                      <S N="ErrorCategory_Reason">Exception</S>
                      <S N="ErrorCategory_TargetName">System.Collections.Generic.Dictionary`2[System.String,System.Object]</S>
                      <S N="ErrorCategory_TargetType">Dictionary`2</S>
                      <S N="ErrorCategory_Message">InvalidResult: (System.Collections.…ring,System.Object]:Dictionary`2) [], Exception</S>
                      <B N="SerializeExtendedInfo">false</B>
                      <S N="ErrorDetails_ScriptStackTrace">at Invoke-Assertion, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 8392_x000D__x000A_at Should&lt;End&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 8331_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1: line 147_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2024_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1985_x000D__x000A_at Invoke-ScriptBlock, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2157_x000D__x000A_at Invoke-TestItem, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1199_x000D__x000A_at Invoke-Block, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 835_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 893_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2024_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1985_x000D__x000A_at Invoke-ScriptBlock, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2160_x000D__x000A_at Invoke-Block, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 940_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 893_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2024_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1985_x000D__x000A_at Invoke-ScriptBlock, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2160_x000D__x000A_at Invoke-Block, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 940_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1688_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.ps1: line 3_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 3260_x000D__x000A_at Invoke-InNewScriptScope, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 3267_x000D__x000A_at Run-Test, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1691_x000D__x000A_at Invoke-Test, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2512_x000D__x000A_at Invoke-Pester&lt;End&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 5110_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Sampler\0.118.1\tasks\Invoke-Pester.pester.build.ps1: line 906_x000D__x000A_at *Task, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 629_x000D__x000A_at *Task, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 601_x000D__x000A_at *Task, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 601_x000D__x000A_at &lt;ScriptBlock&gt;&lt;End&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 787_x000D__x000A_at &lt;ScriptBlock&gt;&lt;Begin&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\build.ps1: line 532_x000D__x000A_at &lt;ScriptBlock&gt;, &lt;No file&gt;: line 1</S>
                      <Nil N="PSMessageDetails" />
                    </MS>
                  </Obj>
                </LST>
              </Obj>
              <Nil N="StandardOutput" />
              <TS N="Duration">PT0.0933735S</TS>
              <S N="ItemType">Test</S>
              <S N="Id">131:5</S>
              <S N="GroupId">131:5</S>
              <SBK N="ScriptBlock">_x000D__x000A_        $functionFile = Get-ChildItem -Path $sourcePath -Recurse -Include "$Name.ps1"_x000D__x000A__x000D__x000A_        $scriptFileRawContent = Get-Content -Raw -Path $functionFile.FullName_x000D__x000A__x000D__x000A_        $abstractSyntaxTree = [System.Management.Automation.Language.Parser]::ParseInput($scriptFileRawContent, [ref] $null, [ref] $null)_x000D__x000A__x000D__x000A_        $astSearchDelegate = { $args[0] -is [System.Management.Automation.Language.FunctionDefinitionAst] }_x000D__x000A__x000D__x000A_        $parsedFunction = $abstractSyntaxTree.FindAll( $astSearchDelegate, $true ) |_x000D__x000A_            Where-Object -FilterScript {_x000D__x000A_                $_.Name -eq $Name_x000D__x000A_            }_x000D__x000A__x000D__x000A_        $functionHelp = $parsedFunction.GetHelpContent()_x000D__x000A__x000D__x000A_        $functionHelp.Synopsis | Should -Not -BeNullOrEmpty_x000D__x000A_    </SBK>
              <Nil N="Tag" />
              <B N="Focus">false</B>
              <B N="Skip">false</B>
              <Ref N="Block" RefId="67" />
              <B N="First">false</B>
              <B N="Last">false</B>
              <B N="Include">false</B>
              <B N="Exclude">false</B>
              <B N="Explicit">false</B>
              <B N="ShouldRun">true</B>
              <I32 N="StartLine">131</I32>
              <B N="Executed">true</B>
              <DT N="ExecutedAt">2024-08-03T17:35:52.2812879-07:00</DT>
              <B N="Passed">false</B>
              <B N="Skipped">false</B>
              <B N="Inconclusive">false</B>
              <TS N="UserDuration">PT0.0655777S</TS>
              <TS N="FrameworkDuration">PT0.0277958S</TS>
              <Nil N="PluginData" />
              <Nil N="FrameworkData" />
            </Props>
          </Obj>
          <Obj RefId="804">
            <TNRef RefId="30" />
            <ToString>[-] Should have .SYNOPSIS for Handle-Error</ToString>
            <Props>
              <S N="Name">Should have .SYNOPSIS for &lt;Name&gt;</S>
              <Obj N="Path" RefId="805">
                <TNRef RefId="28" />
                <LST>
                  <S>Help for module</S>
                  <S>Should have .SYNOPSIS for &lt;Name&gt;</S>
                </LST>
              </Obj>
              <Ref N="Data" RefId="449" />
              <S N="ExpandedName">Should have .SYNOPSIS for Handle-Error</S>
              <S N="ExpandedPath">Help for module.Should have .SYNOPSIS for Handle-Error</S>
              <S N="Result">Failed</S>
              <Obj N="ErrorRecord" RefId="806">
                <TNRef RefId="31" />
                <LST>
                  <Obj RefId="807">
                    <TNRef RefId="33" />
                    <ToString>Expected a value, but got $null or empty.</ToString>
                    <MS>
                      <S N="DisplayErrorMessage">Expected a value, but got $null or empty.</S>
                      <S N="DisplayStackTrace">at $functionHelp.Synopsis | Should -Not -BeNullOrEmpty, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:147_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:147</S>
                      <Obj N="Exception" RefId="808">
                        <TNRef RefId="60" />
                        <ToString>System.Exception: Expected a value, but got $null or empty.</ToString>
                        <Props>
                          <Nil N="TargetSite" />
                          <S N="Message">Expected a value, but got $null or empty.</S>
                          <Obj N="Data" RefId="809">
                            <TNRef RefId="35" />
                            <DCT />
                          </Obj>
                          <Nil N="InnerException" />
                          <Nil N="HelpLink" />
                          <Nil N="Source" />
                          <I32 N="HResult">-2146233088</I32>
                          <Nil N="StackTrace" />
                        </Props>
                      </Obj>
                      <Obj N="TargetObject" RefId="810">
                        <TNRef RefId="38" />
                        <DCT>
                          <En>
                            <S N="Key">Message</S>
                            <S N="Value">Expected a value, but got $null or empty.</S>
                          </En>
                          <En>
                            <S N="Key">File</S>
                            <S N="Value">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1</S>
                          </En>
                          <En>
                            <S N="Key">Line</S>
                            <S N="Value">147</S>
                          </En>
                          <En>
                            <S N="Key">LineText</S>
                            <S N="Value">        $functionHelp.Synopsis | Should -Not -BeNullOrEmpty</S>
                          </En>
                          <En>
                            <S N="Key">Terminating</S>
                            <B N="Value">true</B>
                          </En>
                          <En>
                            <S N="Key">ShouldResult</S>
                            <Obj N="Value" RefId="811">
                              <TNRef RefId="61" />
                              <ToString>Pester.ShouldResult</ToString>
                              <Props>
                                <B N="Succeeded">false</B>
                                <S N="FailureMessage">Expected a value, but got $null or empty.</S>
                                <Obj N="ExpectResult" RefId="812">
                                  <TNRef RefId="62" />
                                  <ToString>Expected: '$null or empty' Actual: @($null) Because: </ToString>
                                  <Props>
                                    <S N="Actual">@($null)</S>
                                    <S N="Expected">'$null or empty'</S>
                                    <S N="Because"></S>
                                  </Props>
                                </Obj>
                              </Props>
                            </Obj>
                          </En>
                        </DCT>
                      </Obj>
                      <S N="FullyQualifiedErrorId">PesterAssertionFailed</S>
                      <Obj N="InvocationInfo" RefId="813">
                        <TNRef RefId="37" />
                        <ToString>System.Management.Automation.InvocationInfo</ToString>
                        <Props>
                          <Nil N="MyCommand" />
                          <Obj N="BoundParameters" RefId="814">
                            <TNRef RefId="38" />
                            <DCT />
                          </Obj>
                          <Obj N="UnboundArguments" RefId="815">
                            <TNRef RefId="31" />
                            <LST />
                          </Obj>
                          <I32 N="ScriptLineNumber">8392</I32>
                          <I32 N="OffsetInLine">13</I32>
                          <I64 N="HistoryId">18</I64>
                          <S N="ScriptName">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1</S>
                          <S N="Line">            throw $errorRecord_x000D__x000A_</S>
                          <S N="Statement">throw $errorRecord</S>
                          <S N="PositionMessage">At C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1:8392 char:13_x000D__x000A_+             throw $errorRecord_x000D__x000A_+             ~~~~~~~~~~~~~~~~~~</S>
                          <S N="PSScriptRoot">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1</S>
                          <S N="PSCommandPath">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1</S>
                          <S N="InvocationName"></S>
                          <I32 N="PipelineLength">0</I32>
                          <I32 N="PipelinePosition">0</I32>
                          <B N="ExpectingInput">false</B>
                          <Obj N="CommandOrigin" RefId="816">
                            <TNRef RefId="39" />
                            <ToString>Internal</ToString>
                            <I32>1</I32>
                          </Obj>
                          <Nil N="DisplayScriptPosition" />
                        </Props>
                        <MS>
                          <Obj N="ParameterValues" RefId="817">
                            <TNRef RefId="25" />
                            <DCT />
                          </Obj>
                        </MS>
                      </Obj>
                      <I32 N="ErrorCategory_Category">8</I32>
                      <S N="ErrorCategory_Activity"></S>
                      <S N="ErrorCategory_Reason">Exception</S>
                      <S N="ErrorCategory_TargetName">System.Collections.Generic.Dictionary`2[System.String,System.Object]</S>
                      <S N="ErrorCategory_TargetType">Dictionary`2</S>
                      <S N="ErrorCategory_Message">InvalidResult: (System.Collections.…ring,System.Object]:Dictionary`2) [], Exception</S>
                      <B N="SerializeExtendedInfo">false</B>
                      <S N="ErrorDetails_ScriptStackTrace">at Invoke-Assertion, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 8392_x000D__x000A_at Should&lt;End&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 8331_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1: line 147_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2024_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1985_x000D__x000A_at Invoke-ScriptBlock, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2157_x000D__x000A_at Invoke-TestItem, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1199_x000D__x000A_at Invoke-Block, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 835_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 893_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2024_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1985_x000D__x000A_at Invoke-ScriptBlock, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2160_x000D__x000A_at Invoke-Block, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 940_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 893_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2024_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1985_x000D__x000A_at Invoke-ScriptBlock, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2160_x000D__x000A_at Invoke-Block, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 940_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1688_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.ps1: line 3_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 3260_x000D__x000A_at Invoke-InNewScriptScope, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 3267_x000D__x000A_at Run-Test, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1691_x000D__x000A_at Invoke-Test, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2512_x000D__x000A_at Invoke-Pester&lt;End&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 5110_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Sampler\0.118.1\tasks\Invoke-Pester.pester.build.ps1: line 906_x000D__x000A_at *Task, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 629_x000D__x000A_at *Task, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 601_x000D__x000A_at *Task, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 601_x000D__x000A_at &lt;ScriptBlock&gt;&lt;End&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 787_x000D__x000A_at &lt;ScriptBlock&gt;&lt;Begin&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\build.ps1: line 532_x000D__x000A_at &lt;ScriptBlock&gt;, &lt;No file&gt;: line 1</S>
                      <Nil N="PSMessageDetails" />
                    </MS>
                  </Obj>
                </LST>
              </Obj>
              <Nil N="StandardOutput" />
              <TS N="Duration">PT0.0118359S</TS>
              <S N="ItemType">Test</S>
              <S N="Id">131:5</S>
              <S N="GroupId">131:5</S>
              <SBK N="ScriptBlock">_x000D__x000A_        $functionFile = Get-ChildItem -Path $sourcePath -Recurse -Include "$Name.ps1"_x000D__x000A__x000D__x000A_        $scriptFileRawContent = Get-Content -Raw -Path $functionFile.FullName_x000D__x000A__x000D__x000A_        $abstractSyntaxTree = [System.Management.Automation.Language.Parser]::ParseInput($scriptFileRawContent, [ref] $null, [ref] $null)_x000D__x000A__x000D__x000A_        $astSearchDelegate = { $args[0] -is [System.Management.Automation.Language.FunctionDefinitionAst] }_x000D__x000A__x000D__x000A_        $parsedFunction = $abstractSyntaxTree.FindAll( $astSearchDelegate, $true ) |_x000D__x000A_            Where-Object -FilterScript {_x000D__x000A_                $_.Name -eq $Name_x000D__x000A_            }_x000D__x000A__x000D__x000A_        $functionHelp = $parsedFunction.GetHelpContent()_x000D__x000A__x000D__x000A_        $functionHelp.Synopsis | Should -Not -BeNullOrEmpty_x000D__x000A_    </SBK>
              <Nil N="Tag" />
              <B N="Focus">false</B>
              <B N="Skip">false</B>
              <Ref N="Block" RefId="67" />
              <B N="First">false</B>
              <B N="Last">false</B>
              <B N="Include">false</B>
              <B N="Exclude">false</B>
              <B N="Explicit">false</B>
              <B N="ShouldRun">true</B>
              <I32 N="StartLine">131</I32>
              <B N="Executed">true</B>
              <DT N="ExecutedAt">2024-08-03T17:35:52.3746464-07:00</DT>
              <B N="Passed">false</B>
              <B N="Skipped">false</B>
              <B N="Inconclusive">false</B>
              <TS N="UserDuration">PT0.0055906S</TS>
              <TS N="FrameworkDuration">PT0.0062453S</TS>
              <Nil N="PluginData" />
              <Nil N="FrameworkData" />
            </Props>
          </Obj>
          <Obj RefId="818">
            <TNRef RefId="30" />
            <ToString>[-] Should have .SYNOPSIS for Initialize-CSVDirectory</ToString>
            <Props>
              <S N="Name">Should have .SYNOPSIS for &lt;Name&gt;</S>
              <Obj N="Path" RefId="819">
                <TNRef RefId="28" />
                <LST>
                  <S>Help for module</S>
                  <S>Should have .SYNOPSIS for &lt;Name&gt;</S>
                </LST>
              </Obj>
              <Ref N="Data" RefId="464" />
              <S N="ExpandedName">Should have .SYNOPSIS for Initialize-CSVDirectory</S>
              <S N="ExpandedPath">Help for module.Should have .SYNOPSIS for Initialize-CSVDirectory</S>
              <S N="Result">Failed</S>
              <Obj N="ErrorRecord" RefId="820">
                <TNRef RefId="31" />
                <LST>
                  <Obj RefId="821">
                    <TNRef RefId="33" />
                    <ToString>Expected a value, but got $null or empty.</ToString>
                    <MS>
                      <S N="DisplayErrorMessage">Expected a value, but got $null or empty.</S>
                      <S N="DisplayStackTrace">at $functionHelp.Synopsis | Should -Not -BeNullOrEmpty, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:147_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:147</S>
                      <Obj N="Exception" RefId="822">
                        <TNRef RefId="60" />
                        <ToString>System.Exception: Expected a value, but got $null or empty.</ToString>
                        <Props>
                          <Nil N="TargetSite" />
                          <S N="Message">Expected a value, but got $null or empty.</S>
                          <Obj N="Data" RefId="823">
                            <TNRef RefId="35" />
                            <DCT />
                          </Obj>
                          <Nil N="InnerException" />
                          <Nil N="HelpLink" />
                          <Nil N="Source" />
                          <I32 N="HResult">-2146233088</I32>
                          <Nil N="StackTrace" />
                        </Props>
                      </Obj>
                      <Obj N="TargetObject" RefId="824">
                        <TNRef RefId="38" />
                        <DCT>
                          <En>
                            <S N="Key">Message</S>
                            <S N="Value">Expected a value, but got $null or empty.</S>
                          </En>
                          <En>
                            <S N="Key">File</S>
                            <S N="Value">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1</S>
                          </En>
                          <En>
                            <S N="Key">Line</S>
                            <S N="Value">147</S>
                          </En>
                          <En>
                            <S N="Key">LineText</S>
                            <S N="Value">        $functionHelp.Synopsis | Should -Not -BeNullOrEmpty</S>
                          </En>
                          <En>
                            <S N="Key">Terminating</S>
                            <B N="Value">true</B>
                          </En>
                          <En>
                            <S N="Key">ShouldResult</S>
                            <Obj N="Value" RefId="825">
                              <TNRef RefId="61" />
                              <ToString>Pester.ShouldResult</ToString>
                              <Props>
                                <B N="Succeeded">false</B>
                                <S N="FailureMessage">Expected a value, but got $null or empty.</S>
                                <Obj N="ExpectResult" RefId="826">
                                  <TNRef RefId="62" />
                                  <ToString>Expected: '$null or empty' Actual: @($null) Because: </ToString>
                                  <Props>
                                    <S N="Actual">@($null)</S>
                                    <S N="Expected">'$null or empty'</S>
                                    <S N="Because"></S>
                                  </Props>
                                </Obj>
                              </Props>
                            </Obj>
                          </En>
                        </DCT>
                      </Obj>
                      <S N="FullyQualifiedErrorId">PesterAssertionFailed</S>
                      <Obj N="InvocationInfo" RefId="827">
                        <TNRef RefId="37" />
                        <ToString>System.Management.Automation.InvocationInfo</ToString>
                        <Props>
                          <Nil N="MyCommand" />
                          <Obj N="BoundParameters" RefId="828">
                            <TNRef RefId="38" />
                            <DCT />
                          </Obj>
                          <Obj N="UnboundArguments" RefId="829">
                            <TNRef RefId="31" />
                            <LST />
                          </Obj>
                          <I32 N="ScriptLineNumber">8392</I32>
                          <I32 N="OffsetInLine">13</I32>
                          <I64 N="HistoryId">18</I64>
                          <S N="ScriptName">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1</S>
                          <S N="Line">            throw $errorRecord_x000D__x000A_</S>
                          <S N="Statement">throw $errorRecord</S>
                          <S N="PositionMessage">At C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1:8392 char:13_x000D__x000A_+             throw $errorRecord_x000D__x000A_+             ~~~~~~~~~~~~~~~~~~</S>
                          <S N="PSScriptRoot">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1</S>
                          <S N="PSCommandPath">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1</S>
                          <S N="InvocationName"></S>
                          <I32 N="PipelineLength">0</I32>
                          <I32 N="PipelinePosition">0</I32>
                          <B N="ExpectingInput">false</B>
                          <Obj N="CommandOrigin" RefId="830">
                            <TNRef RefId="39" />
                            <ToString>Internal</ToString>
                            <I32>1</I32>
                          </Obj>
                          <Nil N="DisplayScriptPosition" />
                        </Props>
                        <MS>
                          <Obj N="ParameterValues" RefId="831">
                            <TNRef RefId="25" />
                            <DCT />
                          </Obj>
                        </MS>
                      </Obj>
                      <I32 N="ErrorCategory_Category">8</I32>
                      <S N="ErrorCategory_Activity"></S>
                      <S N="ErrorCategory_Reason">Exception</S>
                      <S N="ErrorCategory_TargetName">System.Collections.Generic.Dictionary`2[System.String,System.Object]</S>
                      <S N="ErrorCategory_TargetType">Dictionary`2</S>
                      <S N="ErrorCategory_Message">InvalidResult: (System.Collections.…ring,System.Object]:Dictionary`2) [], Exception</S>
                      <B N="SerializeExtendedInfo">false</B>
                      <S N="ErrorDetails_ScriptStackTrace">at Invoke-Assertion, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 8392_x000D__x000A_at Should&lt;End&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 8331_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1: line 147_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2024_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1985_x000D__x000A_at Invoke-ScriptBlock, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2157_x000D__x000A_at Invoke-TestItem, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1199_x000D__x000A_at Invoke-Block, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 835_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 893_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2024_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1985_x000D__x000A_at Invoke-ScriptBlock, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2160_x000D__x000A_at Invoke-Block, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 940_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 893_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2024_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1985_x000D__x000A_at Invoke-ScriptBlock, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2160_x000D__x000A_at Invoke-Block, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 940_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1688_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.ps1: line 3_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 3260_x000D__x000A_at Invoke-InNewScriptScope, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 3267_x000D__x000A_at Run-Test, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1691_x000D__x000A_at Invoke-Test, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2512_x000D__x000A_at Invoke-Pester&lt;End&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 5110_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Sampler\0.118.1\tasks\Invoke-Pester.pester.build.ps1: line 906_x000D__x000A_at *Task, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 629_x000D__x000A_at *Task, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 601_x000D__x000A_at *Task, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 601_x000D__x000A_at &lt;ScriptBlock&gt;&lt;End&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 787_x000D__x000A_at &lt;ScriptBlock&gt;&lt;Begin&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\build.ps1: line 532_x000D__x000A_at &lt;ScriptBlock&gt;, &lt;No file&gt;: line 1</S>
                      <Nil N="PSMessageDetails" />
                    </MS>
                  </Obj>
                </LST>
              </Obj>
              <Nil N="StandardOutput" />
              <TS N="Duration">PT0.0135757S</TS>
              <S N="ItemType">Test</S>
              <S N="Id">131:5</S>
              <S N="GroupId">131:5</S>
              <SBK N="ScriptBlock">_x000D__x000A_        $functionFile = Get-ChildItem -Path $sourcePath -Recurse -Include "$Name.ps1"_x000D__x000A__x000D__x000A_        $scriptFileRawContent = Get-Content -Raw -Path $functionFile.FullName_x000D__x000A__x000D__x000A_        $abstractSyntaxTree = [System.Management.Automation.Language.Parser]::ParseInput($scriptFileRawContent, [ref] $null, [ref] $null)_x000D__x000A__x000D__x000A_        $astSearchDelegate = { $args[0] -is [System.Management.Automation.Language.FunctionDefinitionAst] }_x000D__x000A__x000D__x000A_        $parsedFunction = $abstractSyntaxTree.FindAll( $astSearchDelegate, $true ) |_x000D__x000A_            Where-Object -FilterScript {_x000D__x000A_                $_.Name -eq $Name_x000D__x000A_            }_x000D__x000A__x000D__x000A_        $functionHelp = $parsedFunction.GetHelpContent()_x000D__x000A__x000D__x000A_        $functionHelp.Synopsis | Should -Not -BeNullOrEmpty_x000D__x000A_    </SBK>
              <Nil N="Tag" />
              <B N="Focus">false</B>
              <B N="Skip">false</B>
              <Ref N="Block" RefId="67" />
              <B N="First">false</B>
              <B N="Last">false</B>
              <B N="Include">false</B>
              <B N="Exclude">false</B>
              <B N="Explicit">false</B>
              <B N="ShouldRun">true</B>
              <I32 N="StartLine">131</I32>
              <B N="Executed">true</B>
              <DT N="ExecutedAt">2024-08-03T17:35:52.3865237-07:00</DT>
              <B N="Passed">false</B>
              <B N="Skipped">false</B>
              <B N="Inconclusive">false</B>
              <TS N="UserDuration">PT0.006129S</TS>
              <TS N="FrameworkDuration">PT0.0074467S</TS>
              <Nil N="PluginData" />
              <Nil N="FrameworkData" />
            </Props>
          </Obj>
          <Obj RefId="832">
            <TNRef RefId="30" />
            <ToString>[-] Should have .SYNOPSIS for Initialize-ScriptAndLogging</ToString>
            <Props>
              <S N="Name">Should have .SYNOPSIS for &lt;Name&gt;</S>
              <Obj N="Path" RefId="833">
                <TNRef RefId="28" />
                <LST>
                  <S>Help for module</S>
                  <S>Should have .SYNOPSIS for &lt;Name&gt;</S>
                </LST>
              </Obj>
              <Ref N="Data" RefId="479" />
              <S N="ExpandedName">Should have .SYNOPSIS for Initialize-ScriptAndLogging</S>
              <S N="ExpandedPath">Help for module.Should have .SYNOPSIS for Initialize-ScriptAndLogging</S>
              <S N="Result">Failed</S>
              <Obj N="ErrorRecord" RefId="834">
                <TNRef RefId="31" />
                <LST>
                  <Obj RefId="835">
                    <TNRef RefId="33" />
                    <ToString>Expected a value, but got $null or empty.</ToString>
                    <MS>
                      <S N="DisplayErrorMessage">Expected a value, but got $null or empty.</S>
                      <S N="DisplayStackTrace">at $functionHelp.Synopsis | Should -Not -BeNullOrEmpty, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:147_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:147</S>
                      <Obj N="Exception" RefId="836">
                        <TNRef RefId="60" />
                        <ToString>System.Exception: Expected a value, but got $null or empty.</ToString>
                        <Props>
                          <Nil N="TargetSite" />
                          <S N="Message">Expected a value, but got $null or empty.</S>
                          <Obj N="Data" RefId="837">
                            <TNRef RefId="35" />
                            <DCT />
                          </Obj>
                          <Nil N="InnerException" />
                          <Nil N="HelpLink" />
                          <Nil N="Source" />
                          <I32 N="HResult">-2146233088</I32>
                          <Nil N="StackTrace" />
                        </Props>
                      </Obj>
                      <Obj N="TargetObject" RefId="838">
                        <TNRef RefId="38" />
                        <DCT>
                          <En>
                            <S N="Key">Message</S>
                            <S N="Value">Expected a value, but got $null or empty.</S>
                          </En>
                          <En>
                            <S N="Key">File</S>
                            <S N="Value">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1</S>
                          </En>
                          <En>
                            <S N="Key">Line</S>
                            <S N="Value">147</S>
                          </En>
                          <En>
                            <S N="Key">LineText</S>
                            <S N="Value">        $functionHelp.Synopsis | Should -Not -BeNullOrEmpty</S>
                          </En>
                          <En>
                            <S N="Key">Terminating</S>
                            <B N="Value">true</B>
                          </En>
                          <En>
                            <S N="Key">ShouldResult</S>
                            <Obj N="Value" RefId="839">
                              <TNRef RefId="61" />
                              <ToString>Pester.ShouldResult</ToString>
                              <Props>
                                <B N="Succeeded">false</B>
                                <S N="FailureMessage">Expected a value, but got $null or empty.</S>
                                <Obj N="ExpectResult" RefId="840">
                                  <TNRef RefId="62" />
                                  <ToString>Expected: '$null or empty' Actual: @($null) Because: </ToString>
                                  <Props>
                                    <S N="Actual">@($null)</S>
                                    <S N="Expected">'$null or empty'</S>
                                    <S N="Because"></S>
                                  </Props>
                                </Obj>
                              </Props>
                            </Obj>
                          </En>
                        </DCT>
                      </Obj>
                      <S N="FullyQualifiedErrorId">PesterAssertionFailed</S>
                      <Obj N="InvocationInfo" RefId="841">
                        <TNRef RefId="37" />
                        <ToString>System.Management.Automation.InvocationInfo</ToString>
                        <Props>
                          <Nil N="MyCommand" />
                          <Obj N="BoundParameters" RefId="842">
                            <TNRef RefId="38" />
                            <DCT />
                          </Obj>
                          <Obj N="UnboundArguments" RefId="843">
                            <TNRef RefId="31" />
                            <LST />
                          </Obj>
                          <I32 N="ScriptLineNumber">8392</I32>
                          <I32 N="OffsetInLine">13</I32>
                          <I64 N="HistoryId">18</I64>
                          <S N="ScriptName">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1</S>
                          <S N="Line">            throw $errorRecord_x000D__x000A_</S>
                          <S N="Statement">throw $errorRecord</S>
                          <S N="PositionMessage">At C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1:8392 char:13_x000D__x000A_+             throw $errorRecord_x000D__x000A_+             ~~~~~~~~~~~~~~~~~~</S>
                          <S N="PSScriptRoot">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1</S>
                          <S N="PSCommandPath">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1</S>
                          <S N="InvocationName"></S>
                          <I32 N="PipelineLength">0</I32>
                          <I32 N="PipelinePosition">0</I32>
                          <B N="ExpectingInput">false</B>
                          <Obj N="CommandOrigin" RefId="844">
                            <TNRef RefId="39" />
                            <ToString>Internal</ToString>
                            <I32>1</I32>
                          </Obj>
                          <Nil N="DisplayScriptPosition" />
                        </Props>
                        <MS>
                          <Obj N="ParameterValues" RefId="845">
                            <TNRef RefId="25" />
                            <DCT />
                          </Obj>
                        </MS>
                      </Obj>
                      <I32 N="ErrorCategory_Category">8</I32>
                      <S N="ErrorCategory_Activity"></S>
                      <S N="ErrorCategory_Reason">Exception</S>
                      <S N="ErrorCategory_TargetName">System.Collections.Generic.Dictionary`2[System.String,System.Object]</S>
                      <S N="ErrorCategory_TargetType">Dictionary`2</S>
                      <S N="ErrorCategory_Message">InvalidResult: (System.Collections.…ring,System.Object]:Dictionary`2) [], Exception</S>
                      <B N="SerializeExtendedInfo">false</B>
                      <S N="ErrorDetails_ScriptStackTrace">at Invoke-Assertion, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 8392_x000D__x000A_at Should&lt;End&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 8331_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1: line 147_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2024_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1985_x000D__x000A_at Invoke-ScriptBlock, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2157_x000D__x000A_at Invoke-TestItem, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1199_x000D__x000A_at Invoke-Block, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 835_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 893_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2024_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1985_x000D__x000A_at Invoke-ScriptBlock, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2160_x000D__x000A_at Invoke-Block, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 940_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 893_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2024_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1985_x000D__x000A_at Invoke-ScriptBlock, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2160_x000D__x000A_at Invoke-Block, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 940_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1688_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.ps1: line 3_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 3260_x000D__x000A_at Invoke-InNewScriptScope, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 3267_x000D__x000A_at Run-Test, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1691_x000D__x000A_at Invoke-Test, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2512_x000D__x000A_at Invoke-Pester&lt;End&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 5110_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Sampler\0.118.1\tasks\Invoke-Pester.pester.build.ps1: line 906_x000D__x000A_at *Task, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 629_x000D__x000A_at *Task, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 601_x000D__x000A_at *Task, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 601_x000D__x000A_at &lt;ScriptBlock&gt;&lt;End&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 787_x000D__x000A_at &lt;ScriptBlock&gt;&lt;Begin&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\build.ps1: line 532_x000D__x000A_at &lt;ScriptBlock&gt;, &lt;No file&gt;: line 1</S>
                      <Nil N="PSMessageDetails" />
                    </MS>
                  </Obj>
                </LST>
              </Obj>
              <Nil N="StandardOutput" />
              <TS N="Duration">PT0.0175175S</TS>
              <S N="ItemType">Test</S>
              <S N="Id">131:5</S>
              <S N="GroupId">131:5</S>
              <SBK N="ScriptBlock">_x000D__x000A_        $functionFile = Get-ChildItem -Path $sourcePath -Recurse -Include "$Name.ps1"_x000D__x000A__x000D__x000A_        $scriptFileRawContent = Get-Content -Raw -Path $functionFile.FullName_x000D__x000A__x000D__x000A_        $abstractSyntaxTree = [System.Management.Automation.Language.Parser]::ParseInput($scriptFileRawContent, [ref] $null, [ref] $null)_x000D__x000A__x000D__x000A_        $astSearchDelegate = { $args[0] -is [System.Management.Automation.Language.FunctionDefinitionAst] }_x000D__x000A__x000D__x000A_        $parsedFunction = $abstractSyntaxTree.FindAll( $astSearchDelegate, $true ) |_x000D__x000A_            Where-Object -FilterScript {_x000D__x000A_                $_.Name -eq $Name_x000D__x000A_            }_x000D__x000A__x000D__x000A_        $functionHelp = $parsedFunction.GetHelpContent()_x000D__x000A__x000D__x000A_        $functionHelp.Synopsis | Should -Not -BeNullOrEmpty_x000D__x000A_    </SBK>
              <Nil N="Tag" />
              <B N="Focus">false</B>
              <B N="Skip">false</B>
              <Ref N="Block" RefId="67" />
              <B N="First">false</B>
              <B N="Last">false</B>
              <B N="Include">false</B>
              <B N="Exclude">false</B>
              <B N="Explicit">false</B>
              <B N="ShouldRun">true</B>
              <I32 N="StartLine">131</I32>
              <B N="Executed">true</B>
              <DT N="ExecutedAt">2024-08-03T17:35:52.4002161-07:00</DT>
              <B N="Passed">false</B>
              <B N="Skipped">false</B>
              <B N="Inconclusive">false</B>
              <TS N="UserDuration">PT0.0105201S</TS>
              <TS N="FrameworkDuration">PT0.0069974S</TS>
              <Nil N="PluginData" />
              <Nil N="FrameworkData" />
            </Props>
          </Obj>
          <Obj RefId="846">
            <TNRef RefId="30" />
            <ToString>[-] Should have .SYNOPSIS for Log-And-Execute-Step</ToString>
            <Props>
              <S N="Name">Should have .SYNOPSIS for &lt;Name&gt;</S>
              <Obj N="Path" RefId="847">
                <TNRef RefId="28" />
                <LST>
                  <S>Help for module</S>
                  <S>Should have .SYNOPSIS for &lt;Name&gt;</S>
                </LST>
              </Obj>
              <Ref N="Data" RefId="494" />
              <S N="ExpandedName">Should have .SYNOPSIS for Log-And-Execute-Step</S>
              <S N="ExpandedPath">Help for module.Should have .SYNOPSIS for Log-And-Execute-Step</S>
              <S N="Result">Failed</S>
              <Obj N="ErrorRecord" RefId="848">
                <TNRef RefId="31" />
                <LST>
                  <Obj RefId="849">
                    <TNRef RefId="33" />
                    <ToString>Expected a value, but got $null or empty.</ToString>
                    <MS>
                      <S N="DisplayErrorMessage">Expected a value, but got $null or empty.</S>
                      <S N="DisplayStackTrace">at $functionHelp.Synopsis | Should -Not -BeNullOrEmpty, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:147_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:147</S>
                      <Obj N="Exception" RefId="850">
                        <TNRef RefId="60" />
                        <ToString>System.Exception: Expected a value, but got $null or empty.</ToString>
                        <Props>
                          <Nil N="TargetSite" />
                          <S N="Message">Expected a value, but got $null or empty.</S>
                          <Obj N="Data" RefId="851">
                            <TNRef RefId="35" />
                            <DCT />
                          </Obj>
                          <Nil N="InnerException" />
                          <Nil N="HelpLink" />
                          <Nil N="Source" />
                          <I32 N="HResult">-2146233088</I32>
                          <Nil N="StackTrace" />
                        </Props>
                      </Obj>
                      <Obj N="TargetObject" RefId="852">
                        <TNRef RefId="38" />
                        <DCT>
                          <En>
                            <S N="Key">Message</S>
                            <S N="Value">Expected a value, but got $null or empty.</S>
                          </En>
                          <En>
                            <S N="Key">File</S>
                            <S N="Value">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1</S>
                          </En>
                          <En>
                            <S N="Key">Line</S>
                            <S N="Value">147</S>
                          </En>
                          <En>
                            <S N="Key">LineText</S>
                            <S N="Value">        $functionHelp.Synopsis | Should -Not -BeNullOrEmpty</S>
                          </En>
                          <En>
                            <S N="Key">Terminating</S>
                            <B N="Value">true</B>
                          </En>
                          <En>
                            <S N="Key">ShouldResult</S>
                            <Obj N="Value" RefId="853">
                              <TNRef RefId="61" />
                              <ToString>Pester.ShouldResult</ToString>
                              <Props>
                                <B N="Succeeded">false</B>
                                <S N="FailureMessage">Expected a value, but got $null or empty.</S>
                                <Obj N="ExpectResult" RefId="854">
                                  <TNRef RefId="62" />
                                  <ToString>Expected: '$null or empty' Actual: @($null) Because: </ToString>
                                  <Props>
                                    <S N="Actual">@($null)</S>
                                    <S N="Expected">'$null or empty'</S>
                                    <S N="Because"></S>
                                  </Props>
                                </Obj>
                              </Props>
                            </Obj>
                          </En>
                        </DCT>
                      </Obj>
                      <S N="FullyQualifiedErrorId">PesterAssertionFailed</S>
                      <Obj N="InvocationInfo" RefId="855">
                        <TNRef RefId="37" />
                        <ToString>System.Management.Automation.InvocationInfo</ToString>
                        <Props>
                          <Nil N="MyCommand" />
                          <Obj N="BoundParameters" RefId="856">
                            <TNRef RefId="38" />
                            <DCT />
                          </Obj>
                          <Obj N="UnboundArguments" RefId="857">
                            <TNRef RefId="31" />
                            <LST />
                          </Obj>
                          <I32 N="ScriptLineNumber">8392</I32>
                          <I32 N="OffsetInLine">13</I32>
                          <I64 N="HistoryId">18</I64>
                          <S N="ScriptName">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1</S>
                          <S N="Line">            throw $errorRecord_x000D__x000A_</S>
                          <S N="Statement">throw $errorRecord</S>
                          <S N="PositionMessage">At C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1:8392 char:13_x000D__x000A_+             throw $errorRecord_x000D__x000A_+             ~~~~~~~~~~~~~~~~~~</S>
                          <S N="PSScriptRoot">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1</S>
                          <S N="PSCommandPath">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1</S>
                          <S N="InvocationName"></S>
                          <I32 N="PipelineLength">0</I32>
                          <I32 N="PipelinePosition">0</I32>
                          <B N="ExpectingInput">false</B>
                          <Obj N="CommandOrigin" RefId="858">
                            <TNRef RefId="39" />
                            <ToString>Internal</ToString>
                            <I32>1</I32>
                          </Obj>
                          <Nil N="DisplayScriptPosition" />
                        </Props>
                        <MS>
                          <Obj N="ParameterValues" RefId="859">
                            <TNRef RefId="25" />
                            <DCT />
                          </Obj>
                        </MS>
                      </Obj>
                      <I32 N="ErrorCategory_Category">8</I32>
                      <S N="ErrorCategory_Activity"></S>
                      <S N="ErrorCategory_Reason">Exception</S>
                      <S N="ErrorCategory_TargetName">System.Collections.Generic.Dictionary`2[System.String,System.Object]</S>
                      <S N="ErrorCategory_TargetType">Dictionary`2</S>
                      <S N="ErrorCategory_Message">InvalidResult: (System.Collections.…ring,System.Object]:Dictionary`2) [], Exception</S>
                      <B N="SerializeExtendedInfo">false</B>
                      <S N="ErrorDetails_ScriptStackTrace">at Invoke-Assertion, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 8392_x000D__x000A_at Should&lt;End&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 8331_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1: line 147_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2024_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1985_x000D__x000A_at Invoke-ScriptBlock, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2157_x000D__x000A_at Invoke-TestItem, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1199_x000D__x000A_at Invoke-Block, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 835_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 893_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2024_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1985_x000D__x000A_at Invoke-ScriptBlock, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2160_x000D__x000A_at Invoke-Block, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 940_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 893_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2024_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1985_x000D__x000A_at Invoke-ScriptBlock, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2160_x000D__x000A_at Invoke-Block, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 940_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1688_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.ps1: line 3_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 3260_x000D__x000A_at Invoke-InNewScriptScope, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 3267_x000D__x000A_at Run-Test, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1691_x000D__x000A_at Invoke-Test, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2512_x000D__x000A_at Invoke-Pester&lt;End&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 5110_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Sampler\0.118.1\tasks\Invoke-Pester.pester.build.ps1: line 906_x000D__x000A_at *Task, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 629_x000D__x000A_at *Task, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 601_x000D__x000A_at *Task, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 601_x000D__x000A_at &lt;ScriptBlock&gt;&lt;End&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 787_x000D__x000A_at &lt;ScriptBlock&gt;&lt;Begin&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\build.ps1: line 532_x000D__x000A_at &lt;ScriptBlock&gt;, &lt;No file&gt;: line 1</S>
                      <Nil N="PSMessageDetails" />
                    </MS>
                  </Obj>
                </LST>
              </Obj>
              <Nil N="StandardOutput" />
              <TS N="Duration">PT0.0701929S</TS>
              <S N="ItemType">Test</S>
              <S N="Id">131:5</S>
              <S N="GroupId">131:5</S>
              <SBK N="ScriptBlock">_x000D__x000A_        $functionFile = Get-ChildItem -Path $sourcePath -Recurse -Include "$Name.ps1"_x000D__x000A__x000D__x000A_        $scriptFileRawContent = Get-Content -Raw -Path $functionFile.FullName_x000D__x000A__x000D__x000A_        $abstractSyntaxTree = [System.Management.Automation.Language.Parser]::ParseInput($scriptFileRawContent, [ref] $null, [ref] $null)_x000D__x000A__x000D__x000A_        $astSearchDelegate = { $args[0] -is [System.Management.Automation.Language.FunctionDefinitionAst] }_x000D__x000A__x000D__x000A_        $parsedFunction = $abstractSyntaxTree.FindAll( $astSearchDelegate, $true ) |_x000D__x000A_            Where-Object -FilterScript {_x000D__x000A_                $_.Name -eq $Name_x000D__x000A_            }_x000D__x000A__x000D__x000A_        $functionHelp = $parsedFunction.GetHelpContent()_x000D__x000A__x000D__x000A_        $functionHelp.Synopsis | Should -Not -BeNullOrEmpty_x000D__x000A_    </SBK>
              <Nil N="Tag" />
              <B N="Focus">false</B>
              <B N="Skip">false</B>
              <Ref N="Block" RefId="67" />
              <B N="First">false</B>
              <B N="Last">false</B>
              <B N="Include">false</B>
              <B N="Exclude">false</B>
              <B N="Explicit">false</B>
              <B N="ShouldRun">true</B>
              <I32 N="StartLine">131</I32>
              <B N="Executed">true</B>
              <DT N="ExecutedAt">2024-08-03T17:35:52.417742-07:00</DT>
              <B N="Passed">false</B>
              <B N="Skipped">false</B>
              <B N="Inconclusive">false</B>
              <TS N="UserDuration">PT0.064876S</TS>
              <TS N="FrameworkDuration">PT0.0053169S</TS>
              <Nil N="PluginData" />
              <Nil N="FrameworkData" />
            </Props>
          </Obj>
          <Obj RefId="860">
            <TNRef RefId="30" />
            <ToString>[-] Should have .SYNOPSIS for Write-EnhancedLog</ToString>
            <Props>
              <S N="Name">Should have .SYNOPSIS for &lt;Name&gt;</S>
              <Obj N="Path" RefId="861">
                <TNRef RefId="28" />
                <LST>
                  <S>Help for module</S>
                  <S>Should have .SYNOPSIS for &lt;Name&gt;</S>
                </LST>
              </Obj>
              <Ref N="Data" RefId="524" />
              <S N="ExpandedName">Should have .SYNOPSIS for Write-EnhancedLog</S>
              <S N="ExpandedPath">Help for module.Should have .SYNOPSIS for Write-EnhancedLog</S>
              <S N="Result">Failed</S>
              <Obj N="ErrorRecord" RefId="862">
                <TNRef RefId="31" />
                <LST>
                  <Obj RefId="863">
                    <TNRef RefId="33" />
                    <ToString>Expected a value, but got $null or empty.</ToString>
                    <MS>
                      <S N="DisplayErrorMessage">Expected a value, but got $null or empty.</S>
                      <S N="DisplayStackTrace">at $functionHelp.Synopsis | Should -Not -BeNullOrEmpty, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:147_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:147</S>
                      <Obj N="Exception" RefId="864">
                        <TNRef RefId="60" />
                        <ToString>System.Exception: Expected a value, but got $null or empty.</ToString>
                        <Props>
                          <Nil N="TargetSite" />
                          <S N="Message">Expected a value, but got $null or empty.</S>
                          <Obj N="Data" RefId="865">
                            <TNRef RefId="35" />
                            <DCT />
                          </Obj>
                          <Nil N="InnerException" />
                          <Nil N="HelpLink" />
                          <Nil N="Source" />
                          <I32 N="HResult">-2146233088</I32>
                          <Nil N="StackTrace" />
                        </Props>
                      </Obj>
                      <Obj N="TargetObject" RefId="866">
                        <TNRef RefId="38" />
                        <DCT>
                          <En>
                            <S N="Key">Message</S>
                            <S N="Value">Expected a value, but got $null or empty.</S>
                          </En>
                          <En>
                            <S N="Key">File</S>
                            <S N="Value">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1</S>
                          </En>
                          <En>
                            <S N="Key">Line</S>
                            <S N="Value">147</S>
                          </En>
                          <En>
                            <S N="Key">LineText</S>
                            <S N="Value">        $functionHelp.Synopsis | Should -Not -BeNullOrEmpty</S>
                          </En>
                          <En>
                            <S N="Key">Terminating</S>
                            <B N="Value">true</B>
                          </En>
                          <En>
                            <S N="Key">ShouldResult</S>
                            <Obj N="Value" RefId="867">
                              <TNRef RefId="61" />
                              <ToString>Pester.ShouldResult</ToString>
                              <Props>
                                <B N="Succeeded">false</B>
                                <S N="FailureMessage">Expected a value, but got $null or empty.</S>
                                <Obj N="ExpectResult" RefId="868">
                                  <TNRef RefId="62" />
                                  <ToString>Expected: '$null or empty' Actual: @($null) Because: </ToString>
                                  <Props>
                                    <S N="Actual">@($null)</S>
                                    <S N="Expected">'$null or empty'</S>
                                    <S N="Because"></S>
                                  </Props>
                                </Obj>
                              </Props>
                            </Obj>
                          </En>
                        </DCT>
                      </Obj>
                      <S N="FullyQualifiedErrorId">PesterAssertionFailed</S>
                      <Obj N="InvocationInfo" RefId="869">
                        <TNRef RefId="37" />
                        <ToString>System.Management.Automation.InvocationInfo</ToString>
                        <Props>
                          <Nil N="MyCommand" />
                          <Obj N="BoundParameters" RefId="870">
                            <TNRef RefId="38" />
                            <DCT />
                          </Obj>
                          <Obj N="UnboundArguments" RefId="871">
                            <TNRef RefId="31" />
                            <LST />
                          </Obj>
                          <I32 N="ScriptLineNumber">8392</I32>
                          <I32 N="OffsetInLine">13</I32>
                          <I64 N="HistoryId">18</I64>
                          <S N="ScriptName">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1</S>
                          <S N="Line">            throw $errorRecord_x000D__x000A_</S>
                          <S N="Statement">throw $errorRecord</S>
                          <S N="PositionMessage">At C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1:8392 char:13_x000D__x000A_+             throw $errorRecord_x000D__x000A_+             ~~~~~~~~~~~~~~~~~~</S>
                          <S N="PSScriptRoot">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1</S>
                          <S N="PSCommandPath">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1</S>
                          <S N="InvocationName"></S>
                          <I32 N="PipelineLength">0</I32>
                          <I32 N="PipelinePosition">0</I32>
                          <B N="ExpectingInput">false</B>
                          <Obj N="CommandOrigin" RefId="872">
                            <TNRef RefId="39" />
                            <ToString>Internal</ToString>
                            <I32>1</I32>
                          </Obj>
                          <Nil N="DisplayScriptPosition" />
                        </Props>
                        <MS>
                          <Obj N="ParameterValues" RefId="873">
                            <TNRef RefId="25" />
                            <DCT />
                          </Obj>
                        </MS>
                      </Obj>
                      <I32 N="ErrorCategory_Category">8</I32>
                      <S N="ErrorCategory_Activity"></S>
                      <S N="ErrorCategory_Reason">Exception</S>
                      <S N="ErrorCategory_TargetName">System.Collections.Generic.Dictionary`2[System.String,System.Object]</S>
                      <S N="ErrorCategory_TargetType">Dictionary`2</S>
                      <S N="ErrorCategory_Message">InvalidResult: (System.Collections.…ring,System.Object]:Dictionary`2) [], Exception</S>
                      <B N="SerializeExtendedInfo">false</B>
                      <S N="ErrorDetails_ScriptStackTrace">at Invoke-Assertion, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 8392_x000D__x000A_at Should&lt;End&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 8331_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1: line 147_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2024_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1985_x000D__x000A_at Invoke-ScriptBlock, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2157_x000D__x000A_at Invoke-TestItem, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1199_x000D__x000A_at Invoke-Block, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 835_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 893_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2024_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1985_x000D__x000A_at Invoke-ScriptBlock, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2160_x000D__x000A_at Invoke-Block, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 940_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 893_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2024_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1985_x000D__x000A_at Invoke-ScriptBlock, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2160_x000D__x000A_at Invoke-Block, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 940_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1688_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.ps1: line 3_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 3260_x000D__x000A_at Invoke-InNewScriptScope, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 3267_x000D__x000A_at Run-Test, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1691_x000D__x000A_at Invoke-Test, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2512_x000D__x000A_at Invoke-Pester&lt;End&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 5110_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Sampler\0.118.1\tasks\Invoke-Pester.pester.build.ps1: line 906_x000D__x000A_at *Task, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 629_x000D__x000A_at *Task, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 601_x000D__x000A_at *Task, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 601_x000D__x000A_at &lt;ScriptBlock&gt;&lt;End&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 787_x000D__x000A_at &lt;ScriptBlock&gt;&lt;Begin&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\build.ps1: line 532_x000D__x000A_at &lt;ScriptBlock&gt;, &lt;No file&gt;: line 1</S>
                      <Nil N="PSMessageDetails" />
                    </MS>
                  </Obj>
                </LST>
              </Obj>
              <Nil N="StandardOutput" />
              <TS N="Duration">PT0.0323044S</TS>
              <S N="ItemType">Test</S>
              <S N="Id">131:5</S>
              <S N="GroupId">131:5</S>
              <SBK N="ScriptBlock">_x000D__x000A_        $functionFile = Get-ChildItem -Path $sourcePath -Recurse -Include "$Name.ps1"_x000D__x000A__x000D__x000A_        $scriptFileRawContent = Get-Content -Raw -Path $functionFile.FullName_x000D__x000A__x000D__x000A_        $abstractSyntaxTree = [System.Management.Automation.Language.Parser]::ParseInput($scriptFileRawContent, [ref] $null, [ref] $null)_x000D__x000A__x000D__x000A_        $astSearchDelegate = { $args[0] -is [System.Management.Automation.Language.FunctionDefinitionAst] }_x000D__x000A__x000D__x000A_        $parsedFunction = $abstractSyntaxTree.FindAll( $astSearchDelegate, $true ) |_x000D__x000A_            Where-Object -FilterScript {_x000D__x000A_                $_.Name -eq $Name_x000D__x000A_            }_x000D__x000A__x000D__x000A_        $functionHelp = $parsedFunction.GetHelpContent()_x000D__x000A__x000D__x000A_        $functionHelp.Synopsis | Should -Not -BeNullOrEmpty_x000D__x000A_    </SBK>
              <Nil N="Tag" />
              <B N="Focus">false</B>
              <B N="Skip">false</B>
              <Ref N="Block" RefId="67" />
              <B N="First">false</B>
              <B N="Last">false</B>
              <B N="Include">false</B>
              <B N="Exclude">false</B>
              <B N="Explicit">false</B>
              <B N="ShouldRun">true</B>
              <I32 N="StartLine">131</I32>
              <B N="Executed">true</B>
              <DT N="ExecutedAt">2024-08-03T17:35:52.5317746-07:00</DT>
              <B N="Passed">false</B>
              <B N="Skipped">false</B>
              <B N="Inconclusive">false</B>
              <TS N="UserDuration">PT0.026027S</TS>
              <TS N="FrameworkDuration">PT0.0062774S</TS>
              <Nil N="PluginData" />
              <Nil N="FrameworkData" />
            </Props>
          </Obj>
          <Obj RefId="874">
            <TNRef RefId="30" />
            <ToString>[-] Should have .SYNOPSIS for Write-EventLogMessage</ToString>
            <Props>
              <S N="Name">Should have .SYNOPSIS for &lt;Name&gt;</S>
              <Obj N="Path" RefId="875">
                <TNRef RefId="28" />
                <LST>
                  <S>Help for module</S>
                  <S>Should have .SYNOPSIS for &lt;Name&gt;</S>
                </LST>
              </Obj>
              <Ref N="Data" RefId="539" />
              <S N="ExpandedName">Should have .SYNOPSIS for Write-EventLogMessage</S>
              <S N="ExpandedPath">Help for module.Should have .SYNOPSIS for Write-EventLogMessage</S>
              <S N="Result">Failed</S>
              <Obj N="ErrorRecord" RefId="876">
                <TNRef RefId="31" />
                <LST>
                  <Obj RefId="877">
                    <TNRef RefId="33" />
                    <ToString>Expected a value, but got $null or empty.</ToString>
                    <MS>
                      <S N="DisplayErrorMessage">Expected a value, but got $null or empty.</S>
                      <S N="DisplayStackTrace">at $functionHelp.Synopsis | Should -Not -BeNullOrEmpty, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:147_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:147</S>
                      <Obj N="Exception" RefId="878">
                        <TNRef RefId="60" />
                        <ToString>System.Exception: Expected a value, but got $null or empty.</ToString>
                        <Props>
                          <Nil N="TargetSite" />
                          <S N="Message">Expected a value, but got $null or empty.</S>
                          <Obj N="Data" RefId="879">
                            <TNRef RefId="35" />
                            <DCT />
                          </Obj>
                          <Nil N="InnerException" />
                          <Nil N="HelpLink" />
                          <Nil N="Source" />
                          <I32 N="HResult">-2146233088</I32>
                          <Nil N="StackTrace" />
                        </Props>
                      </Obj>
                      <Obj N="TargetObject" RefId="880">
                        <TNRef RefId="38" />
                        <DCT>
                          <En>
                            <S N="Key">Message</S>
                            <S N="Value">Expected a value, but got $null or empty.</S>
                          </En>
                          <En>
                            <S N="Key">File</S>
                            <S N="Value">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1</S>
                          </En>
                          <En>
                            <S N="Key">Line</S>
                            <S N="Value">147</S>
                          </En>
                          <En>
                            <S N="Key">LineText</S>
                            <S N="Value">        $functionHelp.Synopsis | Should -Not -BeNullOrEmpty</S>
                          </En>
                          <En>
                            <S N="Key">Terminating</S>
                            <B N="Value">true</B>
                          </En>
                          <En>
                            <S N="Key">ShouldResult</S>
                            <Obj N="Value" RefId="881">
                              <TNRef RefId="61" />
                              <ToString>Pester.ShouldResult</ToString>
                              <Props>
                                <B N="Succeeded">false</B>
                                <S N="FailureMessage">Expected a value, but got $null or empty.</S>
                                <Obj N="ExpectResult" RefId="882">
                                  <TNRef RefId="62" />
                                  <ToString>Expected: '$null or empty' Actual: @($null) Because: </ToString>
                                  <Props>
                                    <S N="Actual">@($null)</S>
                                    <S N="Expected">'$null or empty'</S>
                                    <S N="Because"></S>
                                  </Props>
                                </Obj>
                              </Props>
                            </Obj>
                          </En>
                        </DCT>
                      </Obj>
                      <S N="FullyQualifiedErrorId">PesterAssertionFailed</S>
                      <Obj N="InvocationInfo" RefId="883">
                        <TNRef RefId="37" />
                        <ToString>System.Management.Automation.InvocationInfo</ToString>
                        <Props>
                          <Nil N="MyCommand" />
                          <Obj N="BoundParameters" RefId="884">
                            <TNRef RefId="38" />
                            <DCT />
                          </Obj>
                          <Obj N="UnboundArguments" RefId="885">
                            <TNRef RefId="31" />
                            <LST />
                          </Obj>
                          <I32 N="ScriptLineNumber">8392</I32>
                          <I32 N="OffsetInLine">13</I32>
                          <I64 N="HistoryId">18</I64>
                          <S N="ScriptName">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1</S>
                          <S N="Line">            throw $errorRecord_x000D__x000A_</S>
                          <S N="Statement">throw $errorRecord</S>
                          <S N="PositionMessage">At C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1:8392 char:13_x000D__x000A_+             throw $errorRecord_x000D__x000A_+             ~~~~~~~~~~~~~~~~~~</S>
                          <S N="PSScriptRoot">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1</S>
                          <S N="PSCommandPath">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1</S>
                          <S N="InvocationName"></S>
                          <I32 N="PipelineLength">0</I32>
                          <I32 N="PipelinePosition">0</I32>
                          <B N="ExpectingInput">false</B>
                          <Obj N="CommandOrigin" RefId="886">
                            <TNRef RefId="39" />
                            <ToString>Internal</ToString>
                            <I32>1</I32>
                          </Obj>
                          <Nil N="DisplayScriptPosition" />
                        </Props>
                        <MS>
                          <Obj N="ParameterValues" RefId="887">
                            <TNRef RefId="25" />
                            <DCT />
                          </Obj>
                        </MS>
                      </Obj>
                      <I32 N="ErrorCategory_Category">8</I32>
                      <S N="ErrorCategory_Activity"></S>
                      <S N="ErrorCategory_Reason">Exception</S>
                      <S N="ErrorCategory_TargetName">System.Collections.Generic.Dictionary`2[System.String,System.Object]</S>
                      <S N="ErrorCategory_TargetType">Dictionary`2</S>
                      <S N="ErrorCategory_Message">InvalidResult: (System.Collections.…ring,System.Object]:Dictionary`2) [], Exception</S>
                      <B N="SerializeExtendedInfo">false</B>
                      <S N="ErrorDetails_ScriptStackTrace">at Invoke-Assertion, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 8392_x000D__x000A_at Should&lt;End&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 8331_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1: line 147_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2024_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1985_x000D__x000A_at Invoke-ScriptBlock, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2157_x000D__x000A_at Invoke-TestItem, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1199_x000D__x000A_at Invoke-Block, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 835_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 893_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2024_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1985_x000D__x000A_at Invoke-ScriptBlock, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2160_x000D__x000A_at Invoke-Block, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 940_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 893_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2024_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1985_x000D__x000A_at Invoke-ScriptBlock, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2160_x000D__x000A_at Invoke-Block, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 940_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1688_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.ps1: line 3_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 3260_x000D__x000A_at Invoke-InNewScriptScope, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 3267_x000D__x000A_at Run-Test, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1691_x000D__x000A_at Invoke-Test, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2512_x000D__x000A_at Invoke-Pester&lt;End&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 5110_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Sampler\0.118.1\tasks\Invoke-Pester.pester.build.ps1: line 906_x000D__x000A_at *Task, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 629_x000D__x000A_at *Task, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 601_x000D__x000A_at *Task, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 601_x000D__x000A_at &lt;ScriptBlock&gt;&lt;End&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 787_x000D__x000A_at &lt;ScriptBlock&gt;&lt;Begin&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\build.ps1: line 532_x000D__x000A_at &lt;ScriptBlock&gt;, &lt;No file&gt;: line 1</S>
                      <Nil N="PSMessageDetails" />
                    </MS>
                  </Obj>
                </LST>
              </Obj>
              <Nil N="StandardOutput" />
              <TS N="Duration">PT0.0098591S</TS>
              <S N="ItemType">Test</S>
              <S N="Id">131:5</S>
              <S N="GroupId">131:5</S>
              <SBK N="ScriptBlock">_x000D__x000A_        $functionFile = Get-ChildItem -Path $sourcePath -Recurse -Include "$Name.ps1"_x000D__x000A__x000D__x000A_        $scriptFileRawContent = Get-Content -Raw -Path $functionFile.FullName_x000D__x000A__x000D__x000A_        $abstractSyntaxTree = [System.Management.Automation.Language.Parser]::ParseInput($scriptFileRawContent, [ref] $null, [ref] $null)_x000D__x000A__x000D__x000A_        $astSearchDelegate = { $args[0] -is [System.Management.Automation.Language.FunctionDefinitionAst] }_x000D__x000A__x000D__x000A_        $parsedFunction = $abstractSyntaxTree.FindAll( $astSearchDelegate, $true ) |_x000D__x000A_            Where-Object -FilterScript {_x000D__x000A_                $_.Name -eq $Name_x000D__x000A_            }_x000D__x000A__x000D__x000A_        $functionHelp = $parsedFunction.GetHelpContent()_x000D__x000A__x000D__x000A_        $functionHelp.Synopsis | Should -Not -BeNullOrEmpty_x000D__x000A_    </SBK>
              <Nil N="Tag" />
              <B N="Focus">false</B>
              <B N="Skip">false</B>
              <Ref N="Block" RefId="67" />
              <B N="First">false</B>
              <B N="Last">false</B>
              <B N="Include">false</B>
              <B N="Exclude">false</B>
              <B N="Explicit">false</B>
              <B N="ShouldRun">true</B>
              <I32 N="StartLine">131</I32>
              <B N="Executed">true</B>
              <DT N="ExecutedAt">2024-08-03T17:35:52.564037-07:00</DT>
              <B N="Passed">false</B>
              <B N="Skipped">false</B>
              <B N="Inconclusive">false</B>
              <TS N="UserDuration">PT0.005066S</TS>
              <TS N="FrameworkDuration">PT0.0047931S</TS>
              <Nil N="PluginData" />
              <Nil N="FrameworkData" />
            </Props>
          </Obj>
          <Obj RefId="888">
            <TNRef RefId="30" />
            <ToString>[-] Should have a .DESCRIPTION with length greater than 40 characters for Add-Step</ToString>
            <Props>
              <S N="Name">Should have a .DESCRIPTION with length greater than 40 characters for &lt;Name&gt;</S>
              <Obj N="Path" RefId="889">
                <TNRef RefId="28" />
                <LST>
                  <S>Help for module</S>
                  <S>Should have a .DESCRIPTION with length greater than 40 characters for &lt;Name&gt;</S>
                </LST>
              </Obj>
              <Ref N="Data" RefId="359" />
              <S N="ExpandedName">Should have a .DESCRIPTION with length greater than 40 characters for Add-Step</S>
              <S N="ExpandedPath">Help for module.Should have a .DESCRIPTION with length greater than 40 characters for Add-Step</S>
              <S N="Result">Failed</S>
              <Obj N="ErrorRecord" RefId="890">
                <TNRef RefId="31" />
                <LST>
                  <Obj RefId="891">
                    <TNRef RefId="33" />
                    <ToString>Expected the actual value to be greater than 40, but got 0.</ToString>
                    <MS>
                      <S N="DisplayErrorMessage">Expected the actual value to be greater than 40, but got 0.</S>
                      <S N="DisplayStackTrace">at $functionHelp.Description.Length | Should -BeGreaterThan 40, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:166_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:166</S>
                      <Obj N="Exception" RefId="892">
                        <TNRef RefId="60" />
                        <ToString>System.Exception: Expected the actual value to be greater than 40, but got 0.</ToString>
                        <Props>
                          <Nil N="TargetSite" />
                          <S N="Message">Expected the actual value to be greater than 40, but got 0.</S>
                          <Obj N="Data" RefId="893">
                            <TNRef RefId="35" />
                            <DCT />
                          </Obj>
                          <Nil N="InnerException" />
                          <Nil N="HelpLink" />
                          <Nil N="Source" />
                          <I32 N="HResult">-2146233088</I32>
                          <Nil N="StackTrace" />
                        </Props>
                      </Obj>
                      <Obj N="TargetObject" RefId="894">
                        <TNRef RefId="38" />
                        <DCT>
                          <En>
                            <S N="Key">Message</S>
                            <S N="Value">Expected the actual value to be greater than 40, but got 0.</S>
                          </En>
                          <En>
                            <S N="Key">File</S>
                            <S N="Value">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1</S>
                          </En>
                          <En>
                            <S N="Key">Line</S>
                            <S N="Value">166</S>
                          </En>
                          <En>
                            <S N="Key">LineText</S>
                            <S N="Value">        $functionHelp.Description.Length | Should -BeGreaterThan 40</S>
                          </En>
                          <En>
                            <S N="Key">Terminating</S>
                            <B N="Value">true</B>
                          </En>
                          <En>
                            <S N="Key">ShouldResult</S>
                            <Obj N="Value" RefId="895">
                              <TNRef RefId="61" />
                              <ToString>Pester.ShouldResult</ToString>
                              <Props>
                                <B N="Succeeded">false</B>
                                <S N="FailureMessage">Expected the actual value to be greater than 40, but got 0.</S>
                                <Obj N="ExpectResult" RefId="896">
                                  <TNRef RefId="62" />
                                  <ToString>Expected: 40 Actual: 0 Because: </ToString>
                                  <Props>
                                    <S N="Actual">0</S>
                                    <S N="Expected">40</S>
                                    <S N="Because"></S>
                                  </Props>
                                </Obj>
                              </Props>
                            </Obj>
                          </En>
                        </DCT>
                      </Obj>
                      <S N="FullyQualifiedErrorId">PesterAssertionFailed</S>
                      <Obj N="InvocationInfo" RefId="897">
                        <TNRef RefId="37" />
                        <ToString>System.Management.Automation.InvocationInfo</ToString>
                        <Props>
                          <Nil N="MyCommand" />
                          <Obj N="BoundParameters" RefId="898">
                            <TNRef RefId="38" />
                            <DCT />
                          </Obj>
                          <Obj N="UnboundArguments" RefId="899">
                            <TNRef RefId="31" />
                            <LST />
                          </Obj>
                          <I32 N="ScriptLineNumber">8392</I32>
                          <I32 N="OffsetInLine">13</I32>
                          <I64 N="HistoryId">18</I64>
                          <S N="ScriptName">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1</S>
                          <S N="Line">            throw $errorRecord_x000D__x000A_</S>
                          <S N="Statement">throw $errorRecord</S>
                          <S N="PositionMessage">At C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1:8392 char:13_x000D__x000A_+             throw $errorRecord_x000D__x000A_+             ~~~~~~~~~~~~~~~~~~</S>
                          <S N="PSScriptRoot">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1</S>
                          <S N="PSCommandPath">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1</S>
                          <S N="InvocationName"></S>
                          <I32 N="PipelineLength">0</I32>
                          <I32 N="PipelinePosition">0</I32>
                          <B N="ExpectingInput">false</B>
                          <Obj N="CommandOrigin" RefId="900">
                            <TNRef RefId="39" />
                            <ToString>Internal</ToString>
                            <I32>1</I32>
                          </Obj>
                          <Nil N="DisplayScriptPosition" />
                        </Props>
                        <MS>
                          <Obj N="ParameterValues" RefId="901">
                            <TNRef RefId="25" />
                            <DCT />
                          </Obj>
                        </MS>
                      </Obj>
                      <I32 N="ErrorCategory_Category">8</I32>
                      <S N="ErrorCategory_Activity"></S>
                      <S N="ErrorCategory_Reason">Exception</S>
                      <S N="ErrorCategory_TargetName">System.Collections.Generic.Dictionary`2[System.String,System.Object]</S>
                      <S N="ErrorCategory_TargetType">Dictionary`2</S>
                      <S N="ErrorCategory_Message">InvalidResult: (System.Collections.…ring,System.Object]:Dictionary`2) [], Exception</S>
                      <B N="SerializeExtendedInfo">false</B>
                      <S N="ErrorDetails_ScriptStackTrace">at Invoke-Assertion, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 8392_x000D__x000A_at Should&lt;End&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 8335_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1: line 166_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2024_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1985_x000D__x000A_at Invoke-ScriptBlock, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2157_x000D__x000A_at Invoke-TestItem, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1199_x000D__x000A_at Invoke-Block, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 835_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 893_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2024_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1985_x000D__x000A_at Invoke-ScriptBlock, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2160_x000D__x000A_at Invoke-Block, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 940_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 893_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2024_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1985_x000D__x000A_at Invoke-ScriptBlock, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2160_x000D__x000A_at Invoke-Block, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 940_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1688_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.ps1: line 3_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 3260_x000D__x000A_at Invoke-InNewScriptScope, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 3267_x000D__x000A_at Run-Test, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1691_x000D__x000A_at Invoke-Test, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2512_x000D__x000A_at Invoke-Pester&lt;End&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 5110_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Sampler\0.118.1\tasks\Invoke-Pester.pester.build.ps1: line 906_x000D__x000A_at *Task, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 629_x000D__x000A_at *Task, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 601_x000D__x000A_at *Task, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 601_x000D__x000A_at &lt;ScriptBlock&gt;&lt;End&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 787_x000D__x000A_at &lt;ScriptBlock&gt;&lt;Begin&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\build.ps1: line 532_x000D__x000A_at &lt;ScriptBlock&gt;, &lt;No file&gt;: line 1</S>
                      <Nil N="PSMessageDetails" />
                    </MS>
                  </Obj>
                </LST>
              </Obj>
              <Nil N="StandardOutput" />
              <TS N="Duration">PT0.030105S</TS>
              <S N="ItemType">Test</S>
              <S N="Id">150:5</S>
              <S N="GroupId">150:5</S>
              <SBK N="ScriptBlock">_x000D__x000A_        $functionFile = Get-ChildItem -Path $sourcePath -Recurse -Include "$Name.ps1"_x000D__x000A__x000D__x000A_        $scriptFileRawContent = Get-Content -Raw -Path $functionFile.FullName_x000D__x000A__x000D__x000A_        $abstractSyntaxTree = [System.Management.Automation.Language.Parser]::ParseInput($scriptFileRawContent, [ref] $null, [ref] $null)_x000D__x000A__x000D__x000A_        $astSearchDelegate = { $args[0] -is [System.Management.Automation.Language.FunctionDefinitionAst] }_x000D__x000A__x000D__x000A_        $parsedFunction = $abstractSyntaxTree.FindAll($astSearchDelegate, $true) |_x000D__x000A_            Where-Object -FilterScript {_x000D__x000A_                $_.Name -eq $Name_x000D__x000A_            }_x000D__x000A__x000D__x000A_        $functionHelp = $parsedFunction.GetHelpContent()_x000D__x000A__x000D__x000A_        $functionHelp.Description.Length | Should -BeGreaterThan 40_x000D__x000A_    </SBK>
              <Nil N="Tag" />
              <B N="Focus">false</B>
              <B N="Skip">false</B>
              <Ref N="Block" RefId="67" />
              <B N="First">false</B>
              <B N="Last">false</B>
              <B N="Include">false</B>
              <B N="Exclude">false</B>
              <B N="Explicit">false</B>
              <B N="ShouldRun">true</B>
              <I32 N="StartLine">150</I32>
              <B N="Executed">true</B>
              <DT N="ExecutedAt">2024-08-03T17:35:52.573934-07:00</DT>
              <B N="Passed">false</B>
              <B N="Skipped">false</B>
              <B N="Inconclusive">false</B>
              <TS N="UserDuration">PT0.0233821S</TS>
              <TS N="FrameworkDuration">PT0.0067229S</TS>
              <Nil N="PluginData" />
              <Nil N="FrameworkData" />
            </Props>
          </Obj>
          <Obj RefId="902">
            <TNRef RefId="30" />
            <ToString>[-] Should have a .DESCRIPTION with length greater than 40 characters for AppendCSVLog</ToString>
            <Props>
              <S N="Name">Should have a .DESCRIPTION with length greater than 40 characters for &lt;Name&gt;</S>
              <Obj N="Path" RefId="903">
                <TNRef RefId="28" />
                <LST>
                  <S>Help for module</S>
                  <S>Should have a .DESCRIPTION with length greater than 40 characters for &lt;Name&gt;</S>
                </LST>
              </Obj>
              <Ref N="Data" RefId="374" />
              <S N="ExpandedName">Should have a .DESCRIPTION with length greater than 40 characters for AppendCSVLog</S>
              <S N="ExpandedPath">Help for module.Should have a .DESCRIPTION with length greater than 40 characters for AppendCSVLog</S>
              <S N="Result">Failed</S>
              <Obj N="ErrorRecord" RefId="904">
                <TNRef RefId="31" />
                <LST>
                  <Obj RefId="905">
                    <TNRef RefId="33" />
                    <ToString>Expected the actual value to be greater than 40, but got 0.</ToString>
                    <MS>
                      <S N="DisplayErrorMessage">Expected the actual value to be greater than 40, but got 0.</S>
                      <S N="DisplayStackTrace">at $functionHelp.Description.Length | Should -BeGreaterThan 40, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:166_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:166</S>
                      <Obj N="Exception" RefId="906">
                        <TNRef RefId="60" />
                        <ToString>System.Exception: Expected the actual value to be greater than 40, but got 0.</ToString>
                        <Props>
                          <Nil N="TargetSite" />
                          <S N="Message">Expected the actual value to be greater than 40, but got 0.</S>
                          <Obj N="Data" RefId="907">
                            <TNRef RefId="35" />
                            <DCT />
                          </Obj>
                          <Nil N="InnerException" />
                          <Nil N="HelpLink" />
                          <Nil N="Source" />
                          <I32 N="HResult">-2146233088</I32>
                          <Nil N="StackTrace" />
                        </Props>
                      </Obj>
                      <Obj N="TargetObject" RefId="908">
                        <TNRef RefId="38" />
                        <DCT>
                          <En>
                            <S N="Key">Message</S>
                            <S N="Value">Expected the actual value to be greater than 40, but got 0.</S>
                          </En>
                          <En>
                            <S N="Key">File</S>
                            <S N="Value">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1</S>
                          </En>
                          <En>
                            <S N="Key">Line</S>
                            <S N="Value">166</S>
                          </En>
                          <En>
                            <S N="Key">LineText</S>
                            <S N="Value">        $functionHelp.Description.Length | Should -BeGreaterThan 40</S>
                          </En>
                          <En>
                            <S N="Key">Terminating</S>
                            <B N="Value">true</B>
                          </En>
                          <En>
                            <S N="Key">ShouldResult</S>
                            <Obj N="Value" RefId="909">
                              <TNRef RefId="61" />
                              <ToString>Pester.ShouldResult</ToString>
                              <Props>
                                <B N="Succeeded">false</B>
                                <S N="FailureMessage">Expected the actual value to be greater than 40, but got 0.</S>
                                <Obj N="ExpectResult" RefId="910">
                                  <TNRef RefId="62" />
                                  <ToString>Expected: 40 Actual: 0 Because: </ToString>
                                  <Props>
                                    <S N="Actual">0</S>
                                    <S N="Expected">40</S>
                                    <S N="Because"></S>
                                  </Props>
                                </Obj>
                              </Props>
                            </Obj>
                          </En>
                        </DCT>
                      </Obj>
                      <S N="FullyQualifiedErrorId">PesterAssertionFailed</S>
                      <Obj N="InvocationInfo" RefId="911">
                        <TNRef RefId="37" />
                        <ToString>System.Management.Automation.InvocationInfo</ToString>
                        <Props>
                          <Nil N="MyCommand" />
                          <Obj N="BoundParameters" RefId="912">
                            <TNRef RefId="38" />
                            <DCT />
                          </Obj>
                          <Obj N="UnboundArguments" RefId="913">
                            <TNRef RefId="31" />
                            <LST />
                          </Obj>
                          <I32 N="ScriptLineNumber">8392</I32>
                          <I32 N="OffsetInLine">13</I32>
                          <I64 N="HistoryId">18</I64>
                          <S N="ScriptName">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1</S>
                          <S N="Line">            throw $errorRecord_x000D__x000A_</S>
                          <S N="Statement">throw $errorRecord</S>
                          <S N="PositionMessage">At C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1:8392 char:13_x000D__x000A_+             throw $errorRecord_x000D__x000A_+             ~~~~~~~~~~~~~~~~~~</S>
                          <S N="PSScriptRoot">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1</S>
                          <S N="PSCommandPath">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1</S>
                          <S N="InvocationName"></S>
                          <I32 N="PipelineLength">0</I32>
                          <I32 N="PipelinePosition">0</I32>
                          <B N="ExpectingInput">false</B>
                          <Obj N="CommandOrigin" RefId="914">
                            <TNRef RefId="39" />
                            <ToString>Internal</ToString>
                            <I32>1</I32>
                          </Obj>
                          <Nil N="DisplayScriptPosition" />
                        </Props>
                        <MS>
                          <Obj N="ParameterValues" RefId="915">
                            <TNRef RefId="25" />
                            <DCT />
                          </Obj>
                        </MS>
                      </Obj>
                      <I32 N="ErrorCategory_Category">8</I32>
                      <S N="ErrorCategory_Activity"></S>
                      <S N="ErrorCategory_Reason">Exception</S>
                      <S N="ErrorCategory_TargetName">System.Collections.Generic.Dictionary`2[System.String,System.Object]</S>
                      <S N="ErrorCategory_TargetType">Dictionary`2</S>
                      <S N="ErrorCategory_Message">InvalidResult: (System.Collections.…ring,System.Object]:Dictionary`2) [], Exception</S>
                      <B N="SerializeExtendedInfo">false</B>
                      <S N="ErrorDetails_ScriptStackTrace">at Invoke-Assertion, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 8392_x000D__x000A_at Should&lt;End&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 8335_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1: line 166_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2024_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1985_x000D__x000A_at Invoke-ScriptBlock, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2157_x000D__x000A_at Invoke-TestItem, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1199_x000D__x000A_at Invoke-Block, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 835_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 893_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2024_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1985_x000D__x000A_at Invoke-ScriptBlock, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2160_x000D__x000A_at Invoke-Block, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 940_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 893_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2024_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1985_x000D__x000A_at Invoke-ScriptBlock, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2160_x000D__x000A_at Invoke-Block, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 940_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1688_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.ps1: line 3_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 3260_x000D__x000A_at Invoke-InNewScriptScope, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 3267_x000D__x000A_at Run-Test, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1691_x000D__x000A_at Invoke-Test, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2512_x000D__x000A_at Invoke-Pester&lt;End&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 5110_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Sampler\0.118.1\tasks\Invoke-Pester.pester.build.ps1: line 906_x000D__x000A_at *Task, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 629_x000D__x000A_at *Task, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 601_x000D__x000A_at *Task, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 601_x000D__x000A_at &lt;ScriptBlock&gt;&lt;End&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 787_x000D__x000A_at &lt;ScriptBlock&gt;&lt;Begin&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\build.ps1: line 532_x000D__x000A_at &lt;ScriptBlock&gt;, &lt;No file&gt;: line 1</S>
                      <Nil N="PSMessageDetails" />
                    </MS>
                  </Obj>
                </LST>
              </Obj>
              <Nil N="StandardOutput" />
              <TS N="Duration">PT0.0153759S</TS>
              <S N="ItemType">Test</S>
              <S N="Id">150:5</S>
              <S N="GroupId">150:5</S>
              <SBK N="ScriptBlock">_x000D__x000A_        $functionFile = Get-ChildItem -Path $sourcePath -Recurse -Include "$Name.ps1"_x000D__x000A__x000D__x000A_        $scriptFileRawContent = Get-Content -Raw -Path $functionFile.FullName_x000D__x000A__x000D__x000A_        $abstractSyntaxTree = [System.Management.Automation.Language.Parser]::ParseInput($scriptFileRawContent, [ref] $null, [ref] $null)_x000D__x000A__x000D__x000A_        $astSearchDelegate = { $args[0] -is [System.Management.Automation.Language.FunctionDefinitionAst] }_x000D__x000A__x000D__x000A_        $parsedFunction = $abstractSyntaxTree.FindAll($astSearchDelegate, $true) |_x000D__x000A_            Where-Object -FilterScript {_x000D__x000A_                $_.Name -eq $Name_x000D__x000A_            }_x000D__x000A__x000D__x000A_        $functionHelp = $parsedFunction.GetHelpContent()_x000D__x000A__x000D__x000A_        $functionHelp.Description.Length | Should -BeGreaterThan 40_x000D__x000A_    </SBK>
              <Nil N="Tag" />
              <B N="Focus">false</B>
              <B N="Skip">false</B>
              <Ref N="Block" RefId="67" />
              <B N="First">false</B>
              <B N="Last">false</B>
              <B N="Include">false</B>
              <B N="Exclude">false</B>
              <B N="Explicit">false</B>
              <B N="ShouldRun">true</B>
              <I32 N="StartLine">150</I32>
              <B N="Executed">true</B>
              <DT N="ExecutedAt">2024-08-03T17:35:52.604255-07:00</DT>
              <B N="Passed">false</B>
              <B N="Skipped">false</B>
              <B N="Inconclusive">false</B>
              <TS N="UserDuration">PT0.0094133S</TS>
              <TS N="FrameworkDuration">PT0.0059626S</TS>
              <Nil N="PluginData" />
              <Nil N="FrameworkData" />
            </Props>
          </Obj>
          <Obj RefId="916">
            <TNRef RefId="30" />
            <ToString>[-] Should have a .DESCRIPTION with length greater than 40 characters for CreateEventLogSource</ToString>
            <Props>
              <S N="Name">Should have a .DESCRIPTION with length greater than 40 characters for &lt;Name&gt;</S>
              <Obj N="Path" RefId="917">
                <TNRef RefId="28" />
                <LST>
                  <S>Help for module</S>
                  <S>Should have a .DESCRIPTION with length greater than 40 characters for &lt;Name&gt;</S>
                </LST>
              </Obj>
              <Ref N="Data" RefId="389" />
              <S N="ExpandedName">Should have a .DESCRIPTION with length greater than 40 characters for CreateEventLogSource</S>
              <S N="ExpandedPath">Help for module.Should have a .DESCRIPTION with length greater than 40 characters for CreateEventLogSource</S>
              <S N="Result">Failed</S>
              <Obj N="ErrorRecord" RefId="918">
                <TNRef RefId="31" />
                <LST>
                  <Obj RefId="919">
                    <TNRef RefId="33" />
                    <ToString>Expected the actual value to be greater than 40, but got 0.</ToString>
                    <MS>
                      <S N="DisplayErrorMessage">Expected the actual value to be greater than 40, but got 0.</S>
                      <S N="DisplayStackTrace">at $functionHelp.Description.Length | Should -BeGreaterThan 40, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:166_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:166</S>
                      <Obj N="Exception" RefId="920">
                        <TNRef RefId="60" />
                        <ToString>System.Exception: Expected the actual value to be greater than 40, but got 0.</ToString>
                        <Props>
                          <Nil N="TargetSite" />
                          <S N="Message">Expected the actual value to be greater than 40, but got 0.</S>
                          <Obj N="Data" RefId="921">
                            <TNRef RefId="35" />
                            <DCT />
                          </Obj>
                          <Nil N="InnerException" />
                          <Nil N="HelpLink" />
                          <Nil N="Source" />
                          <I32 N="HResult">-2146233088</I32>
                          <Nil N="StackTrace" />
                        </Props>
                      </Obj>
                      <Obj N="TargetObject" RefId="922">
                        <TNRef RefId="38" />
                        <DCT>
                          <En>
                            <S N="Key">Message</S>
                            <S N="Value">Expected the actual value to be greater than 40, but got 0.</S>
                          </En>
                          <En>
                            <S N="Key">File</S>
                            <S N="Value">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1</S>
                          </En>
                          <En>
                            <S N="Key">Line</S>
                            <S N="Value">166</S>
                          </En>
                          <En>
                            <S N="Key">LineText</S>
                            <S N="Value">        $functionHelp.Description.Length | Should -BeGreaterThan 40</S>
                          </En>
                          <En>
                            <S N="Key">Terminating</S>
                            <B N="Value">true</B>
                          </En>
                          <En>
                            <S N="Key">ShouldResult</S>
                            <Obj N="Value" RefId="923">
                              <TNRef RefId="61" />
                              <ToString>Pester.ShouldResult</ToString>
                              <Props>
                                <B N="Succeeded">false</B>
                                <S N="FailureMessage">Expected the actual value to be greater than 40, but got 0.</S>
                                <Obj N="ExpectResult" RefId="924">
                                  <TNRef RefId="62" />
                                  <ToString>Expected: 40 Actual: 0 Because: </ToString>
                                  <Props>
                                    <S N="Actual">0</S>
                                    <S N="Expected">40</S>
                                    <S N="Because"></S>
                                  </Props>
                                </Obj>
                              </Props>
                            </Obj>
                          </En>
                        </DCT>
                      </Obj>
                      <S N="FullyQualifiedErrorId">PesterAssertionFailed</S>
                      <Obj N="InvocationInfo" RefId="925">
                        <TNRef RefId="37" />
                        <ToString>System.Management.Automation.InvocationInfo</ToString>
                        <Props>
                          <Nil N="MyCommand" />
                          <Obj N="BoundParameters" RefId="926">
                            <TNRef RefId="38" />
                            <DCT />
                          </Obj>
                          <Obj N="UnboundArguments" RefId="927">
                            <TNRef RefId="31" />
                            <LST />
                          </Obj>
                          <I32 N="ScriptLineNumber">8392</I32>
                          <I32 N="OffsetInLine">13</I32>
                          <I64 N="HistoryId">18</I64>
                          <S N="ScriptName">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1</S>
                          <S N="Line">            throw $errorRecord_x000D__x000A_</S>
                          <S N="Statement">throw $errorRecord</S>
                          <S N="PositionMessage">At C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1:8392 char:13_x000D__x000A_+             throw $errorRecord_x000D__x000A_+             ~~~~~~~~~~~~~~~~~~</S>
                          <S N="PSScriptRoot">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1</S>
                          <S N="PSCommandPath">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1</S>
                          <S N="InvocationName"></S>
                          <I32 N="PipelineLength">0</I32>
                          <I32 N="PipelinePosition">0</I32>
                          <B N="ExpectingInput">false</B>
                          <Obj N="CommandOrigin" RefId="928">
                            <TNRef RefId="39" />
                            <ToString>Internal</ToString>
                            <I32>1</I32>
                          </Obj>
                          <Nil N="DisplayScriptPosition" />
                        </Props>
                        <MS>
                          <Obj N="ParameterValues" RefId="929">
                            <TNRef RefId="25" />
                            <DCT />
                          </Obj>
                        </MS>
                      </Obj>
                      <I32 N="ErrorCategory_Category">8</I32>
                      <S N="ErrorCategory_Activity"></S>
                      <S N="ErrorCategory_Reason">Exception</S>
                      <S N="ErrorCategory_TargetName">System.Collections.Generic.Dictionary`2[System.String,System.Object]</S>
                      <S N="ErrorCategory_TargetType">Dictionary`2</S>
                      <S N="ErrorCategory_Message">InvalidResult: (System.Collections.…ring,System.Object]:Dictionary`2) [], Exception</S>
                      <B N="SerializeExtendedInfo">false</B>
                      <S N="ErrorDetails_ScriptStackTrace">at Invoke-Assertion, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 8392_x000D__x000A_at Should&lt;End&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 8335_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1: line 166_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2024_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1985_x000D__x000A_at Invoke-ScriptBlock, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2157_x000D__x000A_at Invoke-TestItem, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1199_x000D__x000A_at Invoke-Block, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 835_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 893_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2024_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1985_x000D__x000A_at Invoke-ScriptBlock, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2160_x000D__x000A_at Invoke-Block, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 940_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 893_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2024_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1985_x000D__x000A_at Invoke-ScriptBlock, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2160_x000D__x000A_at Invoke-Block, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 940_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1688_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.ps1: line 3_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 3260_x000D__x000A_at Invoke-InNewScriptScope, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 3267_x000D__x000A_at Run-Test, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1691_x000D__x000A_at Invoke-Test, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2512_x000D__x000A_at Invoke-Pester&lt;End&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 5110_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Sampler\0.118.1\tasks\Invoke-Pester.pester.build.ps1: line 906_x000D__x000A_at *Task, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 629_x000D__x000A_at *Task, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 601_x000D__x000A_at *Task, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 601_x000D__x000A_at &lt;ScriptBlock&gt;&lt;End&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 787_x000D__x000A_at &lt;ScriptBlock&gt;&lt;Begin&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\build.ps1: line 532_x000D__x000A_at &lt;ScriptBlock&gt;, &lt;No file&gt;: line 1</S>
                      <Nil N="PSMessageDetails" />
                    </MS>
                  </Obj>
                </LST>
              </Obj>
              <Nil N="StandardOutput" />
              <TS N="Duration">PT0.0087448S</TS>
              <S N="ItemType">Test</S>
              <S N="Id">150:5</S>
              <S N="GroupId">150:5</S>
              <SBK N="ScriptBlock">_x000D__x000A_        $functionFile = Get-ChildItem -Path $sourcePath -Recurse -Include "$Name.ps1"_x000D__x000A__x000D__x000A_        $scriptFileRawContent = Get-Content -Raw -Path $functionFile.FullName_x000D__x000A__x000D__x000A_        $abstractSyntaxTree = [System.Management.Automation.Language.Parser]::ParseInput($scriptFileRawContent, [ref] $null, [ref] $null)_x000D__x000A__x000D__x000A_        $astSearchDelegate = { $args[0] -is [System.Management.Automation.Language.FunctionDefinitionAst] }_x000D__x000A__x000D__x000A_        $parsedFunction = $abstractSyntaxTree.FindAll($astSearchDelegate, $true) |_x000D__x000A_            Where-Object -FilterScript {_x000D__x000A_                $_.Name -eq $Name_x000D__x000A_            }_x000D__x000A__x000D__x000A_        $functionHelp = $parsedFunction.GetHelpContent()_x000D__x000A__x000D__x000A_        $functionHelp.Description.Length | Should -BeGreaterThan 40_x000D__x000A_    </SBK>
              <Nil N="Tag" />
              <B N="Focus">false</B>
              <B N="Skip">false</B>
              <Ref N="Block" RefId="67" />
              <B N="First">false</B>
              <B N="Last">false</B>
              <B N="Include">false</B>
              <B N="Exclude">false</B>
              <B N="Explicit">false</B>
              <B N="ShouldRun">true</B>
              <I32 N="StartLine">150</I32>
              <B N="Executed">true</B>
              <DT N="ExecutedAt">2024-08-03T17:35:52.6195482-07:00</DT>
              <B N="Passed">false</B>
              <B N="Skipped">false</B>
              <B N="Inconclusive">false</B>
              <TS N="UserDuration">PT0.0046911S</TS>
              <TS N="FrameworkDuration">PT0.0040537S</TS>
              <Nil N="PluginData" />
              <Nil N="FrameworkData" />
            </Props>
          </Obj>
          <Obj RefId="930">
            <TNRef RefId="30" />
            <ToString>[-] Should have a .DESCRIPTION with length greater than 40 characters for CreateEventSourceAndLog</ToString>
            <Props>
              <S N="Name">Should have a .DESCRIPTION with length greater than 40 characters for &lt;Name&gt;</S>
              <Obj N="Path" RefId="931">
                <TNRef RefId="28" />
                <LST>
                  <S>Help for module</S>
                  <S>Should have a .DESCRIPTION with length greater than 40 characters for &lt;Name&gt;</S>
                </LST>
              </Obj>
              <Ref N="Data" RefId="404" />
              <S N="ExpandedName">Should have a .DESCRIPTION with length greater than 40 characters for CreateEventSourceAndLog</S>
              <S N="ExpandedPath">Help for module.Should have a .DESCRIPTION with length greater than 40 characters for CreateEventSourceAndLog</S>
              <S N="Result">Failed</S>
              <Obj N="ErrorRecord" RefId="932">
                <TNRef RefId="31" />
                <LST>
                  <Obj RefId="933">
                    <TNRef RefId="33" />
                    <ToString>Expected the actual value to be greater than 40, but got 0.</ToString>
                    <MS>
                      <S N="DisplayErrorMessage">Expected the actual value to be greater than 40, but got 0.</S>
                      <S N="DisplayStackTrace">at $functionHelp.Description.Length | Should -BeGreaterThan 40, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:166_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:166</S>
                      <Obj N="Exception" RefId="934">
                        <TNRef RefId="60" />
                        <ToString>System.Exception: Expected the actual value to be greater than 40, but got 0.</ToString>
                        <Props>
                          <Nil N="TargetSite" />
                          <S N="Message">Expected the actual value to be greater than 40, but got 0.</S>
                          <Obj N="Data" RefId="935">
                            <TNRef RefId="35" />
                            <DCT />
                          </Obj>
                          <Nil N="InnerException" />
                          <Nil N="HelpLink" />
                          <Nil N="Source" />
                          <I32 N="HResult">-2146233088</I32>
                          <Nil N="StackTrace" />
                        </Props>
                      </Obj>
                      <Obj N="TargetObject" RefId="936">
                        <TNRef RefId="38" />
                        <DCT>
                          <En>
                            <S N="Key">Message</S>
                            <S N="Value">Expected the actual value to be greater than 40, but got 0.</S>
                          </En>
                          <En>
                            <S N="Key">File</S>
                            <S N="Value">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1</S>
                          </En>
                          <En>
                            <S N="Key">Line</S>
                            <S N="Value">166</S>
                          </En>
                          <En>
                            <S N="Key">LineText</S>
                            <S N="Value">        $functionHelp.Description.Length | Should -BeGreaterThan 40</S>
                          </En>
                          <En>
                            <S N="Key">Terminating</S>
                            <B N="Value">true</B>
                          </En>
                          <En>
                            <S N="Key">ShouldResult</S>
                            <Obj N="Value" RefId="937">
                              <TNRef RefId="61" />
                              <ToString>Pester.ShouldResult</ToString>
                              <Props>
                                <B N="Succeeded">false</B>
                                <S N="FailureMessage">Expected the actual value to be greater than 40, but got 0.</S>
                                <Obj N="ExpectResult" RefId="938">
                                  <TNRef RefId="62" />
                                  <ToString>Expected: 40 Actual: 0 Because: </ToString>
                                  <Props>
                                    <S N="Actual">0</S>
                                    <S N="Expected">40</S>
                                    <S N="Because"></S>
                                  </Props>
                                </Obj>
                              </Props>
                            </Obj>
                          </En>
                        </DCT>
                      </Obj>
                      <S N="FullyQualifiedErrorId">PesterAssertionFailed</S>
                      <Obj N="InvocationInfo" RefId="939">
                        <TNRef RefId="37" />
                        <ToString>System.Management.Automation.InvocationInfo</ToString>
                        <Props>
                          <Nil N="MyCommand" />
                          <Obj N="BoundParameters" RefId="940">
                            <TNRef RefId="38" />
                            <DCT />
                          </Obj>
                          <Obj N="UnboundArguments" RefId="941">
                            <TNRef RefId="31" />
                            <LST />
                          </Obj>
                          <I32 N="ScriptLineNumber">8392</I32>
                          <I32 N="OffsetInLine">13</I32>
                          <I64 N="HistoryId">18</I64>
                          <S N="ScriptName">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1</S>
                          <S N="Line">            throw $errorRecord_x000D__x000A_</S>
                          <S N="Statement">throw $errorRecord</S>
                          <S N="PositionMessage">At C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1:8392 char:13_x000D__x000A_+             throw $errorRecord_x000D__x000A_+             ~~~~~~~~~~~~~~~~~~</S>
                          <S N="PSScriptRoot">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1</S>
                          <S N="PSCommandPath">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1</S>
                          <S N="InvocationName"></S>
                          <I32 N="PipelineLength">0</I32>
                          <I32 N="PipelinePosition">0</I32>
                          <B N="ExpectingInput">false</B>
                          <Obj N="CommandOrigin" RefId="942">
                            <TNRef RefId="39" />
                            <ToString>Internal</ToString>
                            <I32>1</I32>
                          </Obj>
                          <Nil N="DisplayScriptPosition" />
                        </Props>
                        <MS>
                          <Obj N="ParameterValues" RefId="943">
                            <TNRef RefId="25" />
                            <DCT />
                          </Obj>
                        </MS>
                      </Obj>
                      <I32 N="ErrorCategory_Category">8</I32>
                      <S N="ErrorCategory_Activity"></S>
                      <S N="ErrorCategory_Reason">Exception</S>
                      <S N="ErrorCategory_TargetName">System.Collections.Generic.Dictionary`2[System.String,System.Object]</S>
                      <S N="ErrorCategory_TargetType">Dictionary`2</S>
                      <S N="ErrorCategory_Message">InvalidResult: (System.Collections.…ring,System.Object]:Dictionary`2) [], Exception</S>
                      <B N="SerializeExtendedInfo">false</B>
                      <S N="ErrorDetails_ScriptStackTrace">at Invoke-Assertion, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 8392_x000D__x000A_at Should&lt;End&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 8335_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1: line 166_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2024_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1985_x000D__x000A_at Invoke-ScriptBlock, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2157_x000D__x000A_at Invoke-TestItem, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1199_x000D__x000A_at Invoke-Block, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 835_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 893_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2024_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1985_x000D__x000A_at Invoke-ScriptBlock, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2160_x000D__x000A_at Invoke-Block, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 940_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 893_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2024_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1985_x000D__x000A_at Invoke-ScriptBlock, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2160_x000D__x000A_at Invoke-Block, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 940_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1688_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.ps1: line 3_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 3260_x000D__x000A_at Invoke-InNewScriptScope, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 3267_x000D__x000A_at Run-Test, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1691_x000D__x000A_at Invoke-Test, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2512_x000D__x000A_at Invoke-Pester&lt;End&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 5110_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Sampler\0.118.1\tasks\Invoke-Pester.pester.build.ps1: line 906_x000D__x000A_at *Task, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 629_x000D__x000A_at *Task, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 601_x000D__x000A_at *Task, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 601_x000D__x000A_at &lt;ScriptBlock&gt;&lt;End&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 787_x000D__x000A_at &lt;ScriptBlock&gt;&lt;Begin&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\build.ps1: line 532_x000D__x000A_at &lt;ScriptBlock&gt;, &lt;No file&gt;: line 1</S>
                      <Nil N="PSMessageDetails" />
                    </MS>
                  </Obj>
                </LST>
              </Obj>
              <Nil N="StandardOutput" />
              <TS N="Duration">PT0.0103455S</TS>
              <S N="ItemType">Test</S>
              <S N="Id">150:5</S>
              <S N="GroupId">150:5</S>
              <SBK N="ScriptBlock">_x000D__x000A_        $functionFile = Get-ChildItem -Path $sourcePath -Recurse -Include "$Name.ps1"_x000D__x000A__x000D__x000A_        $scriptFileRawContent = Get-Content -Raw -Path $functionFile.FullName_x000D__x000A__x000D__x000A_        $abstractSyntaxTree = [System.Management.Automation.Language.Parser]::ParseInput($scriptFileRawContent, [ref] $null, [ref] $null)_x000D__x000A__x000D__x000A_        $astSearchDelegate = { $args[0] -is [System.Management.Automation.Language.FunctionDefinitionAst] }_x000D__x000A__x000D__x000A_        $parsedFunction = $abstractSyntaxTree.FindAll($astSearchDelegate, $true) |_x000D__x000A_            Where-Object -FilterScript {_x000D__x000A_                $_.Name -eq $Name_x000D__x000A_            }_x000D__x000A__x000D__x000A_        $functionHelp = $parsedFunction.GetHelpContent()_x000D__x000A__x000D__x000A_        $functionHelp.Description.Length | Should -BeGreaterThan 40_x000D__x000A_    </SBK>
              <Nil N="Tag" />
              <B N="Focus">false</B>
              <B N="Skip">false</B>
              <Ref N="Block" RefId="67" />
              <B N="First">false</B>
              <B N="Last">false</B>
              <B N="Include">false</B>
              <B N="Exclude">false</B>
              <B N="Explicit">false</B>
              <B N="ShouldRun">true</B>
              <I32 N="StartLine">150</I32>
              <B N="Executed">true</B>
              <DT N="ExecutedAt">2024-08-03T17:35:52.6283743-07:00</DT>
              <B N="Passed">false</B>
              <B N="Skipped">false</B>
              <B N="Inconclusive">false</B>
              <TS N="UserDuration">PT0.0050586S</TS>
              <TS N="FrameworkDuration">PT0.0052869S</TS>
              <Nil N="PluginData" />
              <Nil N="FrameworkData" />
            </Props>
          </Obj>
          <Obj RefId="944">
            <TNRef RefId="30" />
            <ToString>[-] Should have a .DESCRIPTION with length greater than 40 characters for Export-EventLog</ToString>
            <Props>
              <S N="Name">Should have a .DESCRIPTION with length greater than 40 characters for &lt;Name&gt;</S>
              <Obj N="Path" RefId="945">
                <TNRef RefId="28" />
                <LST>
                  <S>Help for module</S>
                  <S>Should have a .DESCRIPTION with length greater than 40 characters for &lt;Name&gt;</S>
                </LST>
              </Obj>
              <Ref N="Data" RefId="434" />
              <S N="ExpandedName">Should have a .DESCRIPTION with length greater than 40 characters for Export-EventLog</S>
              <S N="ExpandedPath">Help for module.Should have a .DESCRIPTION with length greater than 40 characters for Export-EventLog</S>
              <S N="Result">Failed</S>
              <Obj N="ErrorRecord" RefId="946">
                <TNRef RefId="31" />
                <LST>
                  <Obj RefId="947">
                    <TNRef RefId="33" />
                    <ToString>Expected the actual value to be greater than 40, but got 0.</ToString>
                    <MS>
                      <S N="DisplayErrorMessage">Expected the actual value to be greater than 40, but got 0.</S>
                      <S N="DisplayStackTrace">at $functionHelp.Description.Length | Should -BeGreaterThan 40, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:166_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:166</S>
                      <Obj N="Exception" RefId="948">
                        <TNRef RefId="60" />
                        <ToString>System.Exception: Expected the actual value to be greater than 40, but got 0.</ToString>
                        <Props>
                          <Nil N="TargetSite" />
                          <S N="Message">Expected the actual value to be greater than 40, but got 0.</S>
                          <Obj N="Data" RefId="949">
                            <TNRef RefId="35" />
                            <DCT />
                          </Obj>
                          <Nil N="InnerException" />
                          <Nil N="HelpLink" />
                          <Nil N="Source" />
                          <I32 N="HResult">-2146233088</I32>
                          <Nil N="StackTrace" />
                        </Props>
                      </Obj>
                      <Obj N="TargetObject" RefId="950">
                        <TNRef RefId="38" />
                        <DCT>
                          <En>
                            <S N="Key">Message</S>
                            <S N="Value">Expected the actual value to be greater than 40, but got 0.</S>
                          </En>
                          <En>
                            <S N="Key">File</S>
                            <S N="Value">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1</S>
                          </En>
                          <En>
                            <S N="Key">Line</S>
                            <S N="Value">166</S>
                          </En>
                          <En>
                            <S N="Key">LineText</S>
                            <S N="Value">        $functionHelp.Description.Length | Should -BeGreaterThan 40</S>
                          </En>
                          <En>
                            <S N="Key">Terminating</S>
                            <B N="Value">true</B>
                          </En>
                          <En>
                            <S N="Key">ShouldResult</S>
                            <Obj N="Value" RefId="951">
                              <TNRef RefId="61" />
                              <ToString>Pester.ShouldResult</ToString>
                              <Props>
                                <B N="Succeeded">false</B>
                                <S N="FailureMessage">Expected the actual value to be greater than 40, but got 0.</S>
                                <Obj N="ExpectResult" RefId="952">
                                  <TNRef RefId="62" />
                                  <ToString>Expected: 40 Actual: 0 Because: </ToString>
                                  <Props>
                                    <S N="Actual">0</S>
                                    <S N="Expected">40</S>
                                    <S N="Because"></S>
                                  </Props>
                                </Obj>
                              </Props>
                            </Obj>
                          </En>
                        </DCT>
                      </Obj>
                      <S N="FullyQualifiedErrorId">PesterAssertionFailed</S>
                      <Obj N="InvocationInfo" RefId="953">
                        <TNRef RefId="37" />
                        <ToString>System.Management.Automation.InvocationInfo</ToString>
                        <Props>
                          <Nil N="MyCommand" />
                          <Obj N="BoundParameters" RefId="954">
                            <TNRef RefId="38" />
                            <DCT />
                          </Obj>
                          <Obj N="UnboundArguments" RefId="955">
                            <TNRef RefId="31" />
                            <LST />
                          </Obj>
                          <I32 N="ScriptLineNumber">8392</I32>
                          <I32 N="OffsetInLine">13</I32>
                          <I64 N="HistoryId">18</I64>
                          <S N="ScriptName">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1</S>
                          <S N="Line">            throw $errorRecord_x000D__x000A_</S>
                          <S N="Statement">throw $errorRecord</S>
                          <S N="PositionMessage">At C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1:8392 char:13_x000D__x000A_+             throw $errorRecord_x000D__x000A_+             ~~~~~~~~~~~~~~~~~~</S>
                          <S N="PSScriptRoot">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1</S>
                          <S N="PSCommandPath">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1</S>
                          <S N="InvocationName"></S>
                          <I32 N="PipelineLength">0</I32>
                          <I32 N="PipelinePosition">0</I32>
                          <B N="ExpectingInput">false</B>
                          <Obj N="CommandOrigin" RefId="956">
                            <TNRef RefId="39" />
                            <ToString>Internal</ToString>
                            <I32>1</I32>
                          </Obj>
                          <Nil N="DisplayScriptPosition" />
                        </Props>
                        <MS>
                          <Obj N="ParameterValues" RefId="957">
                            <TNRef RefId="25" />
                            <DCT />
                          </Obj>
                        </MS>
                      </Obj>
                      <I32 N="ErrorCategory_Category">8</I32>
                      <S N="ErrorCategory_Activity"></S>
                      <S N="ErrorCategory_Reason">Exception</S>
                      <S N="ErrorCategory_TargetName">System.Collections.Generic.Dictionary`2[System.String,System.Object]</S>
                      <S N="ErrorCategory_TargetType">Dictionary`2</S>
                      <S N="ErrorCategory_Message">InvalidResult: (System.Collections.…ring,System.Object]:Dictionary`2) [], Exception</S>
                      <B N="SerializeExtendedInfo">false</B>
                      <S N="ErrorDetails_ScriptStackTrace">at Invoke-Assertion, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 8392_x000D__x000A_at Should&lt;End&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 8335_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1: line 166_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2024_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1985_x000D__x000A_at Invoke-ScriptBlock, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2157_x000D__x000A_at Invoke-TestItem, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1199_x000D__x000A_at Invoke-Block, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 835_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 893_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2024_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1985_x000D__x000A_at Invoke-ScriptBlock, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2160_x000D__x000A_at Invoke-Block, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 940_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 893_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2024_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1985_x000D__x000A_at Invoke-ScriptBlock, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2160_x000D__x000A_at Invoke-Block, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 940_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1688_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.ps1: line 3_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 3260_x000D__x000A_at Invoke-InNewScriptScope, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 3267_x000D__x000A_at Run-Test, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1691_x000D__x000A_at Invoke-Test, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2512_x000D__x000A_at Invoke-Pester&lt;End&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 5110_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Sampler\0.118.1\tasks\Invoke-Pester.pester.build.ps1: line 906_x000D__x000A_at *Task, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 629_x000D__x000A_at *Task, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 601_x000D__x000A_at *Task, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 601_x000D__x000A_at &lt;ScriptBlock&gt;&lt;End&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 787_x000D__x000A_at &lt;ScriptBlock&gt;&lt;Begin&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\build.ps1: line 532_x000D__x000A_at &lt;ScriptBlock&gt;, &lt;No file&gt;: line 1</S>
                      <Nil N="PSMessageDetails" />
                    </MS>
                  </Obj>
                </LST>
              </Obj>
              <Nil N="StandardOutput" />
              <TS N="Duration">PT0.0192582S</TS>
              <S N="ItemType">Test</S>
              <S N="Id">150:5</S>
              <S N="GroupId">150:5</S>
              <SBK N="ScriptBlock">_x000D__x000A_        $functionFile = Get-ChildItem -Path $sourcePath -Recurse -Include "$Name.ps1"_x000D__x000A__x000D__x000A_        $scriptFileRawContent = Get-Content -Raw -Path $functionFile.FullName_x000D__x000A__x000D__x000A_        $abstractSyntaxTree = [System.Management.Automation.Language.Parser]::ParseInput($scriptFileRawContent, [ref] $null, [ref] $null)_x000D__x000A__x000D__x000A_        $astSearchDelegate = { $args[0] -is [System.Management.Automation.Language.FunctionDefinitionAst] }_x000D__x000A__x000D__x000A_        $parsedFunction = $abstractSyntaxTree.FindAll($astSearchDelegate, $true) |_x000D__x000A_            Where-Object -FilterScript {_x000D__x000A_                $_.Name -eq $Name_x000D__x000A_            }_x000D__x000A__x000D__x000A_        $functionHelp = $parsedFunction.GetHelpContent()_x000D__x000A__x000D__x000A_        $functionHelp.Description.Length | Should -BeGreaterThan 40_x000D__x000A_    </SBK>
              <Nil N="Tag" />
              <B N="Focus">false</B>
              <B N="Skip">false</B>
              <Ref N="Block" RefId="67" />
              <B N="First">false</B>
              <B N="Last">false</B>
              <B N="Include">false</B>
              <B N="Exclude">false</B>
              <B N="Explicit">false</B>
              <B N="ShouldRun">true</B>
              <I32 N="StartLine">150</I32>
              <B N="Executed">true</B>
              <DT N="ExecutedAt">2024-08-03T17:35:52.6906243-07:00</DT>
              <B N="Passed">false</B>
              <B N="Skipped">false</B>
              <B N="Inconclusive">false</B>
              <TS N="UserDuration">PT0.0111597S</TS>
              <TS N="FrameworkDuration">PT0.0080985S</TS>
              <Nil N="PluginData" />
              <Nil N="FrameworkData" />
            </Props>
          </Obj>
          <Obj RefId="958">
            <TNRef RefId="30" />
            <ToString>[-] Should have a .DESCRIPTION with length greater than 40 characters for Handle-Error</ToString>
            <Props>
              <S N="Name">Should have a .DESCRIPTION with length greater than 40 characters for &lt;Name&gt;</S>
              <Obj N="Path" RefId="959">
                <TNRef RefId="28" />
                <LST>
                  <S>Help for module</S>
                  <S>Should have a .DESCRIPTION with length greater than 40 characters for &lt;Name&gt;</S>
                </LST>
              </Obj>
              <Ref N="Data" RefId="449" />
              <S N="ExpandedName">Should have a .DESCRIPTION with length greater than 40 characters for Handle-Error</S>
              <S N="ExpandedPath">Help for module.Should have a .DESCRIPTION with length greater than 40 characters for Handle-Error</S>
              <S N="Result">Failed</S>
              <Obj N="ErrorRecord" RefId="960">
                <TNRef RefId="31" />
                <LST>
                  <Obj RefId="961">
                    <TNRef RefId="33" />
                    <ToString>Expected the actual value to be greater than 40, but got 0.</ToString>
                    <MS>
                      <S N="DisplayErrorMessage">Expected the actual value to be greater than 40, but got 0.</S>
                      <S N="DisplayStackTrace">at $functionHelp.Description.Length | Should -BeGreaterThan 40, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:166_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:166</S>
                      <Obj N="Exception" RefId="962">
                        <TNRef RefId="60" />
                        <ToString>System.Exception: Expected the actual value to be greater than 40, but got 0.</ToString>
                        <Props>
                          <Nil N="TargetSite" />
                          <S N="Message">Expected the actual value to be greater than 40, but got 0.</S>
                          <Obj N="Data" RefId="963">
                            <TNRef RefId="35" />
                            <DCT />
                          </Obj>
                          <Nil N="InnerException" />
                          <Nil N="HelpLink" />
                          <Nil N="Source" />
                          <I32 N="HResult">-2146233088</I32>
                          <Nil N="StackTrace" />
                        </Props>
                      </Obj>
                      <Obj N="TargetObject" RefId="964">
                        <TNRef RefId="38" />
                        <DCT>
                          <En>
                            <S N="Key">Message</S>
                            <S N="Value">Expected the actual value to be greater than 40, but got 0.</S>
                          </En>
                          <En>
                            <S N="Key">File</S>
                            <S N="Value">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1</S>
                          </En>
                          <En>
                            <S N="Key">Line</S>
                            <S N="Value">166</S>
                          </En>
                          <En>
                            <S N="Key">LineText</S>
                            <S N="Value">        $functionHelp.Description.Length | Should -BeGreaterThan 40</S>
                          </En>
                          <En>
                            <S N="Key">Terminating</S>
                            <B N="Value">true</B>
                          </En>
                          <En>
                            <S N="Key">ShouldResult</S>
                            <Obj N="Value" RefId="965">
                              <TNRef RefId="61" />
                              <ToString>Pester.ShouldResult</ToString>
                              <Props>
                                <B N="Succeeded">false</B>
                                <S N="FailureMessage">Expected the actual value to be greater than 40, but got 0.</S>
                                <Obj N="ExpectResult" RefId="966">
                                  <TNRef RefId="62" />
                                  <ToString>Expected: 40 Actual: 0 Because: </ToString>
                                  <Props>
                                    <S N="Actual">0</S>
                                    <S N="Expected">40</S>
                                    <S N="Because"></S>
                                  </Props>
                                </Obj>
                              </Props>
                            </Obj>
                          </En>
                        </DCT>
                      </Obj>
                      <S N="FullyQualifiedErrorId">PesterAssertionFailed</S>
                      <Obj N="InvocationInfo" RefId="967">
                        <TNRef RefId="37" />
                        <ToString>System.Management.Automation.InvocationInfo</ToString>
                        <Props>
                          <Nil N="MyCommand" />
                          <Obj N="BoundParameters" RefId="968">
                            <TNRef RefId="38" />
                            <DCT />
                          </Obj>
                          <Obj N="UnboundArguments" RefId="969">
                            <TNRef RefId="31" />
                            <LST />
                          </Obj>
                          <I32 N="ScriptLineNumber">8392</I32>
                          <I32 N="OffsetInLine">13</I32>
                          <I64 N="HistoryId">18</I64>
                          <S N="ScriptName">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1</S>
                          <S N="Line">            throw $errorRecord_x000D__x000A_</S>
                          <S N="Statement">throw $errorRecord</S>
                          <S N="PositionMessage">At C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1:8392 char:13_x000D__x000A_+             throw $errorRecord_x000D__x000A_+             ~~~~~~~~~~~~~~~~~~</S>
                          <S N="PSScriptRoot">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1</S>
                          <S N="PSCommandPath">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1</S>
                          <S N="InvocationName"></S>
                          <I32 N="PipelineLength">0</I32>
                          <I32 N="PipelinePosition">0</I32>
                          <B N="ExpectingInput">false</B>
                          <Obj N="CommandOrigin" RefId="970">
                            <TNRef RefId="39" />
                            <ToString>Internal</ToString>
                            <I32>1</I32>
                          </Obj>
                          <Nil N="DisplayScriptPosition" />
                        </Props>
                        <MS>
                          <Obj N="ParameterValues" RefId="971">
                            <TNRef RefId="25" />
                            <DCT />
                          </Obj>
                        </MS>
                      </Obj>
                      <I32 N="ErrorCategory_Category">8</I32>
                      <S N="ErrorCategory_Activity"></S>
                      <S N="ErrorCategory_Reason">Exception</S>
                      <S N="ErrorCategory_TargetName">System.Collections.Generic.Dictionary`2[System.String,System.Object]</S>
                      <S N="ErrorCategory_TargetType">Dictionary`2</S>
                      <S N="ErrorCategory_Message">InvalidResult: (System.Collections.…ring,System.Object]:Dictionary`2) [], Exception</S>
                      <B N="SerializeExtendedInfo">false</B>
                      <S N="ErrorDetails_ScriptStackTrace">at Invoke-Assertion, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 8392_x000D__x000A_at Should&lt;End&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 8335_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1: line 166_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2024_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1985_x000D__x000A_at Invoke-ScriptBlock, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2157_x000D__x000A_at Invoke-TestItem, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1199_x000D__x000A_at Invoke-Block, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 835_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 893_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2024_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1985_x000D__x000A_at Invoke-ScriptBlock, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2160_x000D__x000A_at Invoke-Block, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 940_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 893_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2024_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1985_x000D__x000A_at Invoke-ScriptBlock, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2160_x000D__x000A_at Invoke-Block, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 940_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1688_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.ps1: line 3_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 3260_x000D__x000A_at Invoke-InNewScriptScope, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 3267_x000D__x000A_at Run-Test, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1691_x000D__x000A_at Invoke-Test, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2512_x000D__x000A_at Invoke-Pester&lt;End&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 5110_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Sampler\0.118.1\tasks\Invoke-Pester.pester.build.ps1: line 906_x000D__x000A_at *Task, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 629_x000D__x000A_at *Task, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 601_x000D__x000A_at *Task, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 601_x000D__x000A_at &lt;ScriptBlock&gt;&lt;End&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 787_x000D__x000A_at &lt;ScriptBlock&gt;&lt;Begin&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\build.ps1: line 532_x000D__x000A_at &lt;ScriptBlock&gt;, &lt;No file&gt;: line 1</S>
                      <Nil N="PSMessageDetails" />
                    </MS>
                  </Obj>
                </LST>
              </Obj>
              <Nil N="StandardOutput" />
              <TS N="Duration">PT0.0224776S</TS>
              <S N="ItemType">Test</S>
              <S N="Id">150:5</S>
              <S N="GroupId">150:5</S>
              <SBK N="ScriptBlock">_x000D__x000A_        $functionFile = Get-ChildItem -Path $sourcePath -Recurse -Include "$Name.ps1"_x000D__x000A__x000D__x000A_        $scriptFileRawContent = Get-Content -Raw -Path $functionFile.FullName_x000D__x000A__x000D__x000A_        $abstractSyntaxTree = [System.Management.Automation.Language.Parser]::ParseInput($scriptFileRawContent, [ref] $null, [ref] $null)_x000D__x000A__x000D__x000A_        $astSearchDelegate = { $args[0] -is [System.Management.Automation.Language.FunctionDefinitionAst] }_x000D__x000A__x000D__x000A_        $parsedFunction = $abstractSyntaxTree.FindAll($astSearchDelegate, $true) |_x000D__x000A_            Where-Object -FilterScript {_x000D__x000A_                $_.Name -eq $Name_x000D__x000A_            }_x000D__x000A__x000D__x000A_        $functionHelp = $parsedFunction.GetHelpContent()_x000D__x000A__x000D__x000A_        $functionHelp.Description.Length | Should -BeGreaterThan 40_x000D__x000A_    </SBK>
              <Nil N="Tag" />
              <B N="Focus">false</B>
              <B N="Skip">false</B>
              <Ref N="Block" RefId="67" />
              <B N="First">false</B>
              <B N="Last">false</B>
              <B N="Include">false</B>
              <B N="Exclude">false</B>
              <B N="Explicit">false</B>
              <B N="ShouldRun">true</B>
              <I32 N="StartLine">150</I32>
              <B N="Executed">true</B>
              <DT N="ExecutedAt">2024-08-03T17:35:52.7099532-07:00</DT>
              <B N="Passed">false</B>
              <B N="Skipped">false</B>
              <B N="Inconclusive">false</B>
              <TS N="UserDuration">PT0.016018S</TS>
              <TS N="FrameworkDuration">PT0.0064596S</TS>
              <Nil N="PluginData" />
              <Nil N="FrameworkData" />
            </Props>
          </Obj>
          <Obj RefId="972">
            <TNRef RefId="30" />
            <ToString>[-] Should have a .DESCRIPTION with length greater than 40 characters for Initialize-CSVDirectory</ToString>
            <Props>
              <S N="Name">Should have a .DESCRIPTION with length greater than 40 characters for &lt;Name&gt;</S>
              <Obj N="Path" RefId="973">
                <TNRef RefId="28" />
                <LST>
                  <S>Help for module</S>
                  <S>Should have a .DESCRIPTION with length greater than 40 characters for &lt;Name&gt;</S>
                </LST>
              </Obj>
              <Ref N="Data" RefId="464" />
              <S N="ExpandedName">Should have a .DESCRIPTION with length greater than 40 characters for Initialize-CSVDirectory</S>
              <S N="ExpandedPath">Help for module.Should have a .DESCRIPTION with length greater than 40 characters for Initialize-CSVDirectory</S>
              <S N="Result">Failed</S>
              <Obj N="ErrorRecord" RefId="974">
                <TNRef RefId="31" />
                <LST>
                  <Obj RefId="975">
                    <TNRef RefId="33" />
                    <ToString>Expected the actual value to be greater than 40, but got 0.</ToString>
                    <MS>
                      <S N="DisplayErrorMessage">Expected the actual value to be greater than 40, but got 0.</S>
                      <S N="DisplayStackTrace">at $functionHelp.Description.Length | Should -BeGreaterThan 40, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:166_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:166</S>
                      <Obj N="Exception" RefId="976">
                        <TNRef RefId="60" />
                        <ToString>System.Exception: Expected the actual value to be greater than 40, but got 0.</ToString>
                        <Props>
                          <Nil N="TargetSite" />
                          <S N="Message">Expected the actual value to be greater than 40, but got 0.</S>
                          <Obj N="Data" RefId="977">
                            <TNRef RefId="35" />
                            <DCT />
                          </Obj>
                          <Nil N="InnerException" />
                          <Nil N="HelpLink" />
                          <Nil N="Source" />
                          <I32 N="HResult">-2146233088</I32>
                          <Nil N="StackTrace" />
                        </Props>
                      </Obj>
                      <Obj N="TargetObject" RefId="978">
                        <TNRef RefId="38" />
                        <DCT>
                          <En>
                            <S N="Key">Message</S>
                            <S N="Value">Expected the actual value to be greater than 40, but got 0.</S>
                          </En>
                          <En>
                            <S N="Key">File</S>
                            <S N="Value">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1</S>
                          </En>
                          <En>
                            <S N="Key">Line</S>
                            <S N="Value">166</S>
                          </En>
                          <En>
                            <S N="Key">LineText</S>
                            <S N="Value">        $functionHelp.Description.Length | Should -BeGreaterThan 40</S>
                          </En>
                          <En>
                            <S N="Key">Terminating</S>
                            <B N="Value">true</B>
                          </En>
                          <En>
                            <S N="Key">ShouldResult</S>
                            <Obj N="Value" RefId="979">
                              <TNRef RefId="61" />
                              <ToString>Pester.ShouldResult</ToString>
                              <Props>
                                <B N="Succeeded">false</B>
                                <S N="FailureMessage">Expected the actual value to be greater than 40, but got 0.</S>
                                <Obj N="ExpectResult" RefId="980">
                                  <TNRef RefId="62" />
                                  <ToString>Expected: 40 Actual: 0 Because: </ToString>
                                  <Props>
                                    <S N="Actual">0</S>
                                    <S N="Expected">40</S>
                                    <S N="Because"></S>
                                  </Props>
                                </Obj>
                              </Props>
                            </Obj>
                          </En>
                        </DCT>
                      </Obj>
                      <S N="FullyQualifiedErrorId">PesterAssertionFailed</S>
                      <Obj N="InvocationInfo" RefId="981">
                        <TNRef RefId="37" />
                        <ToString>System.Management.Automation.InvocationInfo</ToString>
                        <Props>
                          <Nil N="MyCommand" />
                          <Obj N="BoundParameters" RefId="982">
                            <TNRef RefId="38" />
                            <DCT />
                          </Obj>
                          <Obj N="UnboundArguments" RefId="983">
                            <TNRef RefId="31" />
                            <LST />
                          </Obj>
                          <I32 N="ScriptLineNumber">8392</I32>
                          <I32 N="OffsetInLine">13</I32>
                          <I64 N="HistoryId">18</I64>
                          <S N="ScriptName">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1</S>
                          <S N="Line">            throw $errorRecord_x000D__x000A_</S>
                          <S N="Statement">throw $errorRecord</S>
                          <S N="PositionMessage">At C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1:8392 char:13_x000D__x000A_+             throw $errorRecord_x000D__x000A_+             ~~~~~~~~~~~~~~~~~~</S>
                          <S N="PSScriptRoot">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1</S>
                          <S N="PSCommandPath">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1</S>
                          <S N="InvocationName"></S>
                          <I32 N="PipelineLength">0</I32>
                          <I32 N="PipelinePosition">0</I32>
                          <B N="ExpectingInput">false</B>
                          <Obj N="CommandOrigin" RefId="984">
                            <TNRef RefId="39" />
                            <ToString>Internal</ToString>
                            <I32>1</I32>
                          </Obj>
                          <Nil N="DisplayScriptPosition" />
                        </Props>
                        <MS>
                          <Obj N="ParameterValues" RefId="985">
                            <TNRef RefId="25" />
                            <DCT />
                          </Obj>
                        </MS>
                      </Obj>
                      <I32 N="ErrorCategory_Category">8</I32>
                      <S N="ErrorCategory_Activity"></S>
                      <S N="ErrorCategory_Reason">Exception</S>
                      <S N="ErrorCategory_TargetName">System.Collections.Generic.Dictionary`2[System.String,System.Object]</S>
                      <S N="ErrorCategory_TargetType">Dictionary`2</S>
                      <S N="ErrorCategory_Message">InvalidResult: (System.Collections.…ring,System.Object]:Dictionary`2) [], Exception</S>
                      <B N="SerializeExtendedInfo">false</B>
                      <S N="ErrorDetails_ScriptStackTrace">at Invoke-Assertion, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 8392_x000D__x000A_at Should&lt;End&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 8335_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1: line 166_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2024_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1985_x000D__x000A_at Invoke-ScriptBlock, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2157_x000D__x000A_at Invoke-TestItem, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1199_x000D__x000A_at Invoke-Block, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 835_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 893_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2024_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1985_x000D__x000A_at Invoke-ScriptBlock, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2160_x000D__x000A_at Invoke-Block, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 940_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 893_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2024_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1985_x000D__x000A_at Invoke-ScriptBlock, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2160_x000D__x000A_at Invoke-Block, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 940_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1688_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.ps1: line 3_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 3260_x000D__x000A_at Invoke-InNewScriptScope, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 3267_x000D__x000A_at Run-Test, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1691_x000D__x000A_at Invoke-Test, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2512_x000D__x000A_at Invoke-Pester&lt;End&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 5110_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Sampler\0.118.1\tasks\Invoke-Pester.pester.build.ps1: line 906_x000D__x000A_at *Task, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 629_x000D__x000A_at *Task, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 601_x000D__x000A_at *Task, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 601_x000D__x000A_at &lt;ScriptBlock&gt;&lt;End&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 787_x000D__x000A_at &lt;ScriptBlock&gt;&lt;Begin&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\build.ps1: line 532_x000D__x000A_at &lt;ScriptBlock&gt;, &lt;No file&gt;: line 1</S>
                      <Nil N="PSMessageDetails" />
                    </MS>
                  </Obj>
                </LST>
              </Obj>
              <Nil N="StandardOutput" />
              <TS N="Duration">PT0.009449S</TS>
              <S N="ItemType">Test</S>
              <S N="Id">150:5</S>
              <S N="GroupId">150:5</S>
              <SBK N="ScriptBlock">_x000D__x000A_        $functionFile = Get-ChildItem -Path $sourcePath -Recurse -Include "$Name.ps1"_x000D__x000A__x000D__x000A_        $scriptFileRawContent = Get-Content -Raw -Path $functionFile.FullName_x000D__x000A__x000D__x000A_        $abstractSyntaxTree = [System.Management.Automation.Language.Parser]::ParseInput($scriptFileRawContent, [ref] $null, [ref] $null)_x000D__x000A__x000D__x000A_        $astSearchDelegate = { $args[0] -is [System.Management.Automation.Language.FunctionDefinitionAst] }_x000D__x000A__x000D__x000A_        $parsedFunction = $abstractSyntaxTree.FindAll($astSearchDelegate, $true) |_x000D__x000A_            Where-Object -FilterScript {_x000D__x000A_                $_.Name -eq $Name_x000D__x000A_            }_x000D__x000A__x000D__x000A_        $functionHelp = $parsedFunction.GetHelpContent()_x000D__x000A__x000D__x000A_        $functionHelp.Description.Length | Should -BeGreaterThan 40_x000D__x000A_    </SBK>
              <Nil N="Tag" />
              <B N="Focus">false</B>
              <B N="Skip">false</B>
              <Ref N="Block" RefId="67" />
              <B N="First">false</B>
              <B N="Last">false</B>
              <B N="Include">false</B>
              <B N="Exclude">false</B>
              <B N="Explicit">false</B>
              <B N="ShouldRun">true</B>
              <I32 N="StartLine">150</I32>
              <B N="Executed">true</B>
              <DT N="ExecutedAt">2024-08-03T17:35:52.7324387-07:00</DT>
              <B N="Passed">false</B>
              <B N="Skipped">false</B>
              <B N="Inconclusive">false</B>
              <TS N="UserDuration">PT0.0056114S</TS>
              <TS N="FrameworkDuration">PT0.0038376S</TS>
              <Nil N="PluginData" />
              <Nil N="FrameworkData" />
            </Props>
          </Obj>
          <Obj RefId="986">
            <TNRef RefId="30" />
            <ToString>[-] Should have a .DESCRIPTION with length greater than 40 characters for Initialize-ScriptAndLogging</ToString>
            <Props>
              <S N="Name">Should have a .DESCRIPTION with length greater than 40 characters for &lt;Name&gt;</S>
              <Obj N="Path" RefId="987">
                <TNRef RefId="28" />
                <LST>
                  <S>Help for module</S>
                  <S>Should have a .DESCRIPTION with length greater than 40 characters for &lt;Name&gt;</S>
                </LST>
              </Obj>
              <Ref N="Data" RefId="479" />
              <S N="ExpandedName">Should have a .DESCRIPTION with length greater than 40 characters for Initialize-ScriptAndLogging</S>
              <S N="ExpandedPath">Help for module.Should have a .DESCRIPTION with length greater than 40 characters for Initialize-ScriptAndLogging</S>
              <S N="Result">Failed</S>
              <Obj N="ErrorRecord" RefId="988">
                <TNRef RefId="31" />
                <LST>
                  <Obj RefId="989">
                    <TNRef RefId="33" />
                    <ToString>Expected the actual value to be greater than 40, but got 0.</ToString>
                    <MS>
                      <S N="DisplayErrorMessage">Expected the actual value to be greater than 40, but got 0.</S>
                      <S N="DisplayStackTrace">at $functionHelp.Description.Length | Should -BeGreaterThan 40, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:166_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:166</S>
                      <Obj N="Exception" RefId="990">
                        <TNRef RefId="60" />
                        <ToString>System.Exception: Expected the actual value to be greater than 40, but got 0.</ToString>
                        <Props>
                          <Nil N="TargetSite" />
                          <S N="Message">Expected the actual value to be greater than 40, but got 0.</S>
                          <Obj N="Data" RefId="991">
                            <TNRef RefId="35" />
                            <DCT />
                          </Obj>
                          <Nil N="InnerException" />
                          <Nil N="HelpLink" />
                          <Nil N="Source" />
                          <I32 N="HResult">-2146233088</I32>
                          <Nil N="StackTrace" />
                        </Props>
                      </Obj>
                      <Obj N="TargetObject" RefId="992">
                        <TNRef RefId="38" />
                        <DCT>
                          <En>
                            <S N="Key">Message</S>
                            <S N="Value">Expected the actual value to be greater than 40, but got 0.</S>
                          </En>
                          <En>
                            <S N="Key">File</S>
                            <S N="Value">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1</S>
                          </En>
                          <En>
                            <S N="Key">Line</S>
                            <S N="Value">166</S>
                          </En>
                          <En>
                            <S N="Key">LineText</S>
                            <S N="Value">        $functionHelp.Description.Length | Should -BeGreaterThan 40</S>
                          </En>
                          <En>
                            <S N="Key">Terminating</S>
                            <B N="Value">true</B>
                          </En>
                          <En>
                            <S N="Key">ShouldResult</S>
                            <Obj N="Value" RefId="993">
                              <TNRef RefId="61" />
                              <ToString>Pester.ShouldResult</ToString>
                              <Props>
                                <B N="Succeeded">false</B>
                                <S N="FailureMessage">Expected the actual value to be greater than 40, but got 0.</S>
                                <Obj N="ExpectResult" RefId="994">
                                  <TNRef RefId="62" />
                                  <ToString>Expected: 40 Actual: 0 Because: </ToString>
                                  <Props>
                                    <S N="Actual">0</S>
                                    <S N="Expected">40</S>
                                    <S N="Because"></S>
                                  </Props>
                                </Obj>
                              </Props>
                            </Obj>
                          </En>
                        </DCT>
                      </Obj>
                      <S N="FullyQualifiedErrorId">PesterAssertionFailed</S>
                      <Obj N="InvocationInfo" RefId="995">
                        <TNRef RefId="37" />
                        <ToString>System.Management.Automation.InvocationInfo</ToString>
                        <Props>
                          <Nil N="MyCommand" />
                          <Obj N="BoundParameters" RefId="996">
                            <TNRef RefId="38" />
                            <DCT />
                          </Obj>
                          <Obj N="UnboundArguments" RefId="997">
                            <TNRef RefId="31" />
                            <LST />
                          </Obj>
                          <I32 N="ScriptLineNumber">8392</I32>
                          <I32 N="OffsetInLine">13</I32>
                          <I64 N="HistoryId">18</I64>
                          <S N="ScriptName">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1</S>
                          <S N="Line">            throw $errorRecord_x000D__x000A_</S>
                          <S N="Statement">throw $errorRecord</S>
                          <S N="PositionMessage">At C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1:8392 char:13_x000D__x000A_+             throw $errorRecord_x000D__x000A_+             ~~~~~~~~~~~~~~~~~~</S>
                          <S N="PSScriptRoot">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1</S>
                          <S N="PSCommandPath">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1</S>
                          <S N="InvocationName"></S>
                          <I32 N="PipelineLength">0</I32>
                          <I32 N="PipelinePosition">0</I32>
                          <B N="ExpectingInput">false</B>
                          <Obj N="CommandOrigin" RefId="998">
                            <TNRef RefId="39" />
                            <ToString>Internal</ToString>
                            <I32>1</I32>
                          </Obj>
                          <Nil N="DisplayScriptPosition" />
                        </Props>
                        <MS>
                          <Obj N="ParameterValues" RefId="999">
                            <TNRef RefId="25" />
                            <DCT />
                          </Obj>
                        </MS>
                      </Obj>
                      <I32 N="ErrorCategory_Category">8</I32>
                      <S N="ErrorCategory_Activity"></S>
                      <S N="ErrorCategory_Reason">Exception</S>
                      <S N="ErrorCategory_TargetName">System.Collections.Generic.Dictionary`2[System.String,System.Object]</S>
                      <S N="ErrorCategory_TargetType">Dictionary`2</S>
                      <S N="ErrorCategory_Message">InvalidResult: (System.Collections.…ring,System.Object]:Dictionary`2) [], Exception</S>
                      <B N="SerializeExtendedInfo">false</B>
                      <S N="ErrorDetails_ScriptStackTrace">at Invoke-Assertion, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 8392_x000D__x000A_at Should&lt;End&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 8335_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1: line 166_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2024_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1985_x000D__x000A_at Invoke-ScriptBlock, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2157_x000D__x000A_at Invoke-TestItem, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1199_x000D__x000A_at Invoke-Block, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 835_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 893_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2024_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1985_x000D__x000A_at Invoke-ScriptBlock, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2160_x000D__x000A_at Invoke-Block, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 940_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 893_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2024_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1985_x000D__x000A_at Invoke-ScriptBlock, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2160_x000D__x000A_at Invoke-Block, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 940_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1688_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.ps1: line 3_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 3260_x000D__x000A_at Invoke-InNewScriptScope, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 3267_x000D__x000A_at Run-Test, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1691_x000D__x000A_at Invoke-Test, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2512_x000D__x000A_at Invoke-Pester&lt;End&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 5110_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Sampler\0.118.1\tasks\Invoke-Pester.pester.build.ps1: line 906_x000D__x000A_at *Task, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 629_x000D__x000A_at *Task, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 601_x000D__x000A_at *Task, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 601_x000D__x000A_at &lt;ScriptBlock&gt;&lt;End&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 787_x000D__x000A_at &lt;ScriptBlock&gt;&lt;Begin&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\build.ps1: line 532_x000D__x000A_at &lt;ScriptBlock&gt;, &lt;No file&gt;: line 1</S>
                      <Nil N="PSMessageDetails" />
                    </MS>
                  </Obj>
                </LST>
              </Obj>
              <Nil N="StandardOutput" />
              <TS N="Duration">PT0.011733S</TS>
              <S N="ItemType">Test</S>
              <S N="Id">150:5</S>
              <S N="GroupId">150:5</S>
              <SBK N="ScriptBlock">_x000D__x000A_        $functionFile = Get-ChildItem -Path $sourcePath -Recurse -Include "$Name.ps1"_x000D__x000A__x000D__x000A_        $scriptFileRawContent = Get-Content -Raw -Path $functionFile.FullName_x000D__x000A__x000D__x000A_        $abstractSyntaxTree = [System.Management.Automation.Language.Parser]::ParseInput($scriptFileRawContent, [ref] $null, [ref] $null)_x000D__x000A__x000D__x000A_        $astSearchDelegate = { $args[0] -is [System.Management.Automation.Language.FunctionDefinitionAst] }_x000D__x000A__x000D__x000A_        $parsedFunction = $abstractSyntaxTree.FindAll($astSearchDelegate, $true) |_x000D__x000A_            Where-Object -FilterScript {_x000D__x000A_                $_.Name -eq $Name_x000D__x000A_            }_x000D__x000A__x000D__x000A_        $functionHelp = $parsedFunction.GetHelpContent()_x000D__x000A__x000D__x000A_        $functionHelp.Description.Length | Should -BeGreaterThan 40_x000D__x000A_    </SBK>
              <Nil N="Tag" />
              <B N="Focus">false</B>
              <B N="Skip">false</B>
              <Ref N="Block" RefId="67" />
              <B N="First">false</B>
              <B N="Last">false</B>
              <B N="Include">false</B>
              <B N="Exclude">false</B>
              <B N="Explicit">false</B>
              <B N="ShouldRun">true</B>
              <I32 N="StartLine">150</I32>
              <B N="Executed">true</B>
              <DT N="ExecutedAt">2024-08-03T17:35:52.741931-07:00</DT>
              <B N="Passed">false</B>
              <B N="Skipped">false</B>
              <B N="Inconclusive">false</B>
              <TS N="UserDuration">PT0.0063339S</TS>
              <TS N="FrameworkDuration">PT0.0053991S</TS>
              <Nil N="PluginData" />
              <Nil N="FrameworkData" />
            </Props>
          </Obj>
          <Obj RefId="1000">
            <TNRef RefId="30" />
            <ToString>[-] Should have a .DESCRIPTION with length greater than 40 characters for Log-And-Execute-Step</ToString>
            <Props>
              <S N="Name">Should have a .DESCRIPTION with length greater than 40 characters for &lt;Name&gt;</S>
              <Obj N="Path" RefId="1001">
                <TNRef RefId="28" />
                <LST>
                  <S>Help for module</S>
                  <S>Should have a .DESCRIPTION with length greater than 40 characters for &lt;Name&gt;</S>
                </LST>
              </Obj>
              <Ref N="Data" RefId="494" />
              <S N="ExpandedName">Should have a .DESCRIPTION with length greater than 40 characters for Log-And-Execute-Step</S>
              <S N="ExpandedPath">Help for module.Should have a .DESCRIPTION with length greater than 40 characters for Log-And-Execute-Step</S>
              <S N="Result">Failed</S>
              <Obj N="ErrorRecord" RefId="1002">
                <TNRef RefId="31" />
                <LST>
                  <Obj RefId="1003">
                    <TNRef RefId="33" />
                    <ToString>Expected the actual value to be greater than 40, but got 0.</ToString>
                    <MS>
                      <S N="DisplayErrorMessage">Expected the actual value to be greater than 40, but got 0.</S>
                      <S N="DisplayStackTrace">at $functionHelp.Description.Length | Should -BeGreaterThan 40, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:166_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:166</S>
                      <Obj N="Exception" RefId="1004">
                        <TNRef RefId="60" />
                        <ToString>System.Exception: Expected the actual value to be greater than 40, but got 0.</ToString>
                        <Props>
                          <Nil N="TargetSite" />
                          <S N="Message">Expected the actual value to be greater than 40, but got 0.</S>
                          <Obj N="Data" RefId="1005">
                            <TNRef RefId="35" />
                            <DCT />
                          </Obj>
                          <Nil N="InnerException" />
                          <Nil N="HelpLink" />
                          <Nil N="Source" />
                          <I32 N="HResult">-2146233088</I32>
                          <Nil N="StackTrace" />
                        </Props>
                      </Obj>
                      <Obj N="TargetObject" RefId="1006">
                        <TNRef RefId="38" />
                        <DCT>
                          <En>
                            <S N="Key">Message</S>
                            <S N="Value">Expected the actual value to be greater than 40, but got 0.</S>
                          </En>
                          <En>
                            <S N="Key">File</S>
                            <S N="Value">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1</S>
                          </En>
                          <En>
                            <S N="Key">Line</S>
                            <S N="Value">166</S>
                          </En>
                          <En>
                            <S N="Key">LineText</S>
                            <S N="Value">        $functionHelp.Description.Length | Should -BeGreaterThan 40</S>
                          </En>
                          <En>
                            <S N="Key">Terminating</S>
                            <B N="Value">true</B>
                          </En>
                          <En>
                            <S N="Key">ShouldResult</S>
                            <Obj N="Value" RefId="1007">
                              <TNRef RefId="61" />
                              <ToString>Pester.ShouldResult</ToString>
                              <Props>
                                <B N="Succeeded">false</B>
                                <S N="FailureMessage">Expected the actual value to be greater than 40, but got 0.</S>
                                <Obj N="ExpectResult" RefId="1008">
                                  <TNRef RefId="62" />
                                  <ToString>Expected: 40 Actual: 0 Because: </ToString>
                                  <Props>
                                    <S N="Actual">0</S>
                                    <S N="Expected">40</S>
                                    <S N="Because"></S>
                                  </Props>
                                </Obj>
                              </Props>
                            </Obj>
                          </En>
                        </DCT>
                      </Obj>
                      <S N="FullyQualifiedErrorId">PesterAssertionFailed</S>
                      <Obj N="InvocationInfo" RefId="1009">
                        <TNRef RefId="37" />
                        <ToString>System.Management.Automation.InvocationInfo</ToString>
                        <Props>
                          <Nil N="MyCommand" />
                          <Obj N="BoundParameters" RefId="1010">
                            <TNRef RefId="38" />
                            <DCT />
                          </Obj>
                          <Obj N="UnboundArguments" RefId="1011">
                            <TNRef RefId="31" />
                            <LST />
                          </Obj>
                          <I32 N="ScriptLineNumber">8392</I32>
                          <I32 N="OffsetInLine">13</I32>
                          <I64 N="HistoryId">18</I64>
                          <S N="ScriptName">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1</S>
                          <S N="Line">            throw $errorRecord_x000D__x000A_</S>
                          <S N="Statement">throw $errorRecord</S>
                          <S N="PositionMessage">At C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1:8392 char:13_x000D__x000A_+             throw $errorRecord_x000D__x000A_+             ~~~~~~~~~~~~~~~~~~</S>
                          <S N="PSScriptRoot">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1</S>
                          <S N="PSCommandPath">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1</S>
                          <S N="InvocationName"></S>
                          <I32 N="PipelineLength">0</I32>
                          <I32 N="PipelinePosition">0</I32>
                          <B N="ExpectingInput">false</B>
                          <Obj N="CommandOrigin" RefId="1012">
                            <TNRef RefId="39" />
                            <ToString>Internal</ToString>
                            <I32>1</I32>
                          </Obj>
                          <Nil N="DisplayScriptPosition" />
                        </Props>
                        <MS>
                          <Obj N="ParameterValues" RefId="1013">
                            <TNRef RefId="25" />
                            <DCT />
                          </Obj>
                        </MS>
                      </Obj>
                      <I32 N="ErrorCategory_Category">8</I32>
                      <S N="ErrorCategory_Activity"></S>
                      <S N="ErrorCategory_Reason">Exception</S>
                      <S N="ErrorCategory_TargetName">System.Collections.Generic.Dictionary`2[System.String,System.Object]</S>
                      <S N="ErrorCategory_TargetType">Dictionary`2</S>
                      <S N="ErrorCategory_Message">InvalidResult: (System.Collections.…ring,System.Object]:Dictionary`2) [], Exception</S>
                      <B N="SerializeExtendedInfo">false</B>
                      <S N="ErrorDetails_ScriptStackTrace">at Invoke-Assertion, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 8392_x000D__x000A_at Should&lt;End&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 8335_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1: line 166_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2024_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1985_x000D__x000A_at Invoke-ScriptBlock, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2157_x000D__x000A_at Invoke-TestItem, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1199_x000D__x000A_at Invoke-Block, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 835_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 893_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2024_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1985_x000D__x000A_at Invoke-ScriptBlock, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2160_x000D__x000A_at Invoke-Block, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 940_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 893_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2024_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1985_x000D__x000A_at Invoke-ScriptBlock, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2160_x000D__x000A_at Invoke-Block, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 940_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1688_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.ps1: line 3_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 3260_x000D__x000A_at Invoke-InNewScriptScope, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 3267_x000D__x000A_at Run-Test, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1691_x000D__x000A_at Invoke-Test, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2512_x000D__x000A_at Invoke-Pester&lt;End&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 5110_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Sampler\0.118.1\tasks\Invoke-Pester.pester.build.ps1: line 906_x000D__x000A_at *Task, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 629_x000D__x000A_at *Task, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 601_x000D__x000A_at *Task, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 601_x000D__x000A_at &lt;ScriptBlock&gt;&lt;End&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 787_x000D__x000A_at &lt;ScriptBlock&gt;&lt;Begin&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\build.ps1: line 532_x000D__x000A_at &lt;ScriptBlock&gt;, &lt;No file&gt;: line 1</S>
                      <Nil N="PSMessageDetails" />
                    </MS>
                  </Obj>
                </LST>
              </Obj>
              <Nil N="StandardOutput" />
              <TS N="Duration">PT0.0174692S</TS>
              <S N="ItemType">Test</S>
              <S N="Id">150:5</S>
              <S N="GroupId">150:5</S>
              <SBK N="ScriptBlock">_x000D__x000A_        $functionFile = Get-ChildItem -Path $sourcePath -Recurse -Include "$Name.ps1"_x000D__x000A__x000D__x000A_        $scriptFileRawContent = Get-Content -Raw -Path $functionFile.FullName_x000D__x000A__x000D__x000A_        $abstractSyntaxTree = [System.Management.Automation.Language.Parser]::ParseInput($scriptFileRawContent, [ref] $null, [ref] $null)_x000D__x000A__x000D__x000A_        $astSearchDelegate = { $args[0] -is [System.Management.Automation.Language.FunctionDefinitionAst] }_x000D__x000A__x000D__x000A_        $parsedFunction = $abstractSyntaxTree.FindAll($astSearchDelegate, $true) |_x000D__x000A_            Where-Object -FilterScript {_x000D__x000A_                $_.Name -eq $Name_x000D__x000A_            }_x000D__x000A__x000D__x000A_        $functionHelp = $parsedFunction.GetHelpContent()_x000D__x000A__x000D__x000A_        $functionHelp.Description.Length | Should -BeGreaterThan 40_x000D__x000A_    </SBK>
              <Nil N="Tag" />
              <B N="Focus">false</B>
              <B N="Skip">false</B>
              <Ref N="Block" RefId="67" />
              <B N="First">false</B>
              <B N="Last">false</B>
              <B N="Include">false</B>
              <B N="Exclude">false</B>
              <B N="Explicit">false</B>
              <B N="ShouldRun">true</B>
              <I32 N="StartLine">150</I32>
              <B N="Executed">true</B>
              <DT N="ExecutedAt">2024-08-03T17:35:52.7536882-07:00</DT>
              <B N="Passed">false</B>
              <B N="Skipped">false</B>
              <B N="Inconclusive">false</B>
              <TS N="UserDuration">PT0.0052303S</TS>
              <TS N="FrameworkDuration">PT0.0122389S</TS>
              <Nil N="PluginData" />
              <Nil N="FrameworkData" />
            </Props>
          </Obj>
          <Obj RefId="1014">
            <TNRef RefId="30" />
            <ToString>[-] Should have a .DESCRIPTION with length greater than 40 characters for Log-Params</ToString>
            <Props>
              <S N="Name">Should have a .DESCRIPTION with length greater than 40 characters for &lt;Name&gt;</S>
              <Obj N="Path" RefId="1015">
                <TNRef RefId="28" />
                <LST>
                  <S>Help for module</S>
                  <S>Should have a .DESCRIPTION with length greater than 40 characters for &lt;Name&gt;</S>
                </LST>
              </Obj>
              <Ref N="Data" RefId="509" />
              <S N="ExpandedName">Should have a .DESCRIPTION with length greater than 40 characters for Log-Params</S>
              <S N="ExpandedPath">Help for module.Should have a .DESCRIPTION with length greater than 40 characters for Log-Params</S>
              <S N="Result">Failed</S>
              <Obj N="ErrorRecord" RefId="1016">
                <TNRef RefId="31" />
                <LST>
                  <Obj RefId="1017">
                    <TNRef RefId="33" />
                    <ToString>Expected the actual value to be greater than 40, but got 0.</ToString>
                    <MS>
                      <S N="DisplayErrorMessage">Expected the actual value to be greater than 40, but got 0.</S>
                      <S N="DisplayStackTrace">at $functionHelp.Description.Length | Should -BeGreaterThan 40, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:166_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:166</S>
                      <Obj N="Exception" RefId="1018">
                        <TNRef RefId="60" />
                        <ToString>System.Exception: Expected the actual value to be greater than 40, but got 0.</ToString>
                        <Props>
                          <Nil N="TargetSite" />
                          <S N="Message">Expected the actual value to be greater than 40, but got 0.</S>
                          <Obj N="Data" RefId="1019">
                            <TNRef RefId="35" />
                            <DCT />
                          </Obj>
                          <Nil N="InnerException" />
                          <Nil N="HelpLink" />
                          <Nil N="Source" />
                          <I32 N="HResult">-2146233088</I32>
                          <Nil N="StackTrace" />
                        </Props>
                      </Obj>
                      <Obj N="TargetObject" RefId="1020">
                        <TNRef RefId="38" />
                        <DCT>
                          <En>
                            <S N="Key">Message</S>
                            <S N="Value">Expected the actual value to be greater than 40, but got 0.</S>
                          </En>
                          <En>
                            <S N="Key">File</S>
                            <S N="Value">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1</S>
                          </En>
                          <En>
                            <S N="Key">Line</S>
                            <S N="Value">166</S>
                          </En>
                          <En>
                            <S N="Key">LineText</S>
                            <S N="Value">        $functionHelp.Description.Length | Should -BeGreaterThan 40</S>
                          </En>
                          <En>
                            <S N="Key">Terminating</S>
                            <B N="Value">true</B>
                          </En>
                          <En>
                            <S N="Key">ShouldResult</S>
                            <Obj N="Value" RefId="1021">
                              <TNRef RefId="61" />
                              <ToString>Pester.ShouldResult</ToString>
                              <Props>
                                <B N="Succeeded">false</B>
                                <S N="FailureMessage">Expected the actual value to be greater than 40, but got 0.</S>
                                <Obj N="ExpectResult" RefId="1022">
                                  <TNRef RefId="62" />
                                  <ToString>Expected: 40 Actual: 0 Because: </ToString>
                                  <Props>
                                    <S N="Actual">0</S>
                                    <S N="Expected">40</S>
                                    <S N="Because"></S>
                                  </Props>
                                </Obj>
                              </Props>
                            </Obj>
                          </En>
                        </DCT>
                      </Obj>
                      <S N="FullyQualifiedErrorId">PesterAssertionFailed</S>
                      <Obj N="InvocationInfo" RefId="1023">
                        <TNRef RefId="37" />
                        <ToString>System.Management.Automation.InvocationInfo</ToString>
                        <Props>
                          <Nil N="MyCommand" />
                          <Obj N="BoundParameters" RefId="1024">
                            <TNRef RefId="38" />
                            <DCT />
                          </Obj>
                          <Obj N="UnboundArguments" RefId="1025">
                            <TNRef RefId="31" />
                            <LST />
                          </Obj>
                          <I32 N="ScriptLineNumber">8392</I32>
                          <I32 N="OffsetInLine">13</I32>
                          <I64 N="HistoryId">18</I64>
                          <S N="ScriptName">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1</S>
                          <S N="Line">            throw $errorRecord_x000D__x000A_</S>
                          <S N="Statement">throw $errorRecord</S>
                          <S N="PositionMessage">At C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1:8392 char:13_x000D__x000A_+             throw $errorRecord_x000D__x000A_+             ~~~~~~~~~~~~~~~~~~</S>
                          <S N="PSScriptRoot">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1</S>
                          <S N="PSCommandPath">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1</S>
                          <S N="InvocationName"></S>
                          <I32 N="PipelineLength">0</I32>
                          <I32 N="PipelinePosition">0</I32>
                          <B N="ExpectingInput">false</B>
                          <Obj N="CommandOrigin" RefId="1026">
                            <TNRef RefId="39" />
                            <ToString>Internal</ToString>
                            <I32>1</I32>
                          </Obj>
                          <Nil N="DisplayScriptPosition" />
                        </Props>
                        <MS>
                          <Obj N="ParameterValues" RefId="1027">
                            <TNRef RefId="25" />
                            <DCT />
                          </Obj>
                        </MS>
                      </Obj>
                      <I32 N="ErrorCategory_Category">8</I32>
                      <S N="ErrorCategory_Activity"></S>
                      <S N="ErrorCategory_Reason">Exception</S>
                      <S N="ErrorCategory_TargetName">System.Collections.Generic.Dictionary`2[System.String,System.Object]</S>
                      <S N="ErrorCategory_TargetType">Dictionary`2</S>
                      <S N="ErrorCategory_Message">InvalidResult: (System.Collections.…ring,System.Object]:Dictionary`2) [], Exception</S>
                      <B N="SerializeExtendedInfo">false</B>
                      <S N="ErrorDetails_ScriptStackTrace">at Invoke-Assertion, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 8392_x000D__x000A_at Should&lt;End&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 8335_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1: line 166_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2024_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1985_x000D__x000A_at Invoke-ScriptBlock, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2157_x000D__x000A_at Invoke-TestItem, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1199_x000D__x000A_at Invoke-Block, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 835_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 893_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2024_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1985_x000D__x000A_at Invoke-ScriptBlock, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2160_x000D__x000A_at Invoke-Block, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 940_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 893_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2024_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1985_x000D__x000A_at Invoke-ScriptBlock, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2160_x000D__x000A_at Invoke-Block, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 940_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1688_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.ps1: line 3_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 3260_x000D__x000A_at Invoke-InNewScriptScope, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 3267_x000D__x000A_at Run-Test, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1691_x000D__x000A_at Invoke-Test, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2512_x000D__x000A_at Invoke-Pester&lt;End&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 5110_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Sampler\0.118.1\tasks\Invoke-Pester.pester.build.ps1: line 906_x000D__x000A_at *Task, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 629_x000D__x000A_at *Task, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 601_x000D__x000A_at *Task, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 601_x000D__x000A_at &lt;ScriptBlock&gt;&lt;End&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 787_x000D__x000A_at &lt;ScriptBlock&gt;&lt;Begin&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\build.ps1: line 532_x000D__x000A_at &lt;ScriptBlock&gt;, &lt;No file&gt;: line 1</S>
                      <Nil N="PSMessageDetails" />
                    </MS>
                  </Obj>
                </LST>
              </Obj>
              <Nil N="StandardOutput" />
              <TS N="Duration">PT0.0359356S</TS>
              <S N="ItemType">Test</S>
              <S N="Id">150:5</S>
              <S N="GroupId">150:5</S>
              <SBK N="ScriptBlock">_x000D__x000A_        $functionFile = Get-ChildItem -Path $sourcePath -Recurse -Include "$Name.ps1"_x000D__x000A__x000D__x000A_        $scriptFileRawContent = Get-Content -Raw -Path $functionFile.FullName_x000D__x000A__x000D__x000A_        $abstractSyntaxTree = [System.Management.Automation.Language.Parser]::ParseInput($scriptFileRawContent, [ref] $null, [ref] $null)_x000D__x000A__x000D__x000A_        $astSearchDelegate = { $args[0] -is [System.Management.Automation.Language.FunctionDefinitionAst] }_x000D__x000A__x000D__x000A_        $parsedFunction = $abstractSyntaxTree.FindAll($astSearchDelegate, $true) |_x000D__x000A_            Where-Object -FilterScript {_x000D__x000A_                $_.Name -eq $Name_x000D__x000A_            }_x000D__x000A__x000D__x000A_        $functionHelp = $parsedFunction.GetHelpContent()_x000D__x000A__x000D__x000A_        $functionHelp.Description.Length | Should -BeGreaterThan 40_x000D__x000A_    </SBK>
              <Nil N="Tag" />
              <B N="Focus">false</B>
              <B N="Skip">false</B>
              <Ref N="Block" RefId="67" />
              <B N="First">false</B>
              <B N="Last">false</B>
              <B N="Include">false</B>
              <B N="Exclude">false</B>
              <B N="Explicit">false</B>
              <B N="ShouldRun">true</B>
              <I32 N="StartLine">150</I32>
              <B N="Executed">true</B>
              <DT N="ExecutedAt">2024-08-03T17:35:52.7713735-07:00</DT>
              <B N="Passed">false</B>
              <B N="Skipped">false</B>
              <B N="Inconclusive">false</B>
              <TS N="UserDuration">PT0.0292548S</TS>
              <TS N="FrameworkDuration">PT0.0066808S</TS>
              <Nil N="PluginData" />
              <Nil N="FrameworkData" />
            </Props>
          </Obj>
          <Obj RefId="1028">
            <TNRef RefId="30" />
            <ToString>[-] Should have a .DESCRIPTION with length greater than 40 characters for Write-EnhancedLog</ToString>
            <Props>
              <S N="Name">Should have a .DESCRIPTION with length greater than 40 characters for &lt;Name&gt;</S>
              <Obj N="Path" RefId="1029">
                <TNRef RefId="28" />
                <LST>
                  <S>Help for module</S>
                  <S>Should have a .DESCRIPTION with length greater than 40 characters for &lt;Name&gt;</S>
                </LST>
              </Obj>
              <Ref N="Data" RefId="524" />
              <S N="ExpandedName">Should have a .DESCRIPTION with length greater than 40 characters for Write-EnhancedLog</S>
              <S N="ExpandedPath">Help for module.Should have a .DESCRIPTION with length greater than 40 characters for Write-EnhancedLog</S>
              <S N="Result">Failed</S>
              <Obj N="ErrorRecord" RefId="1030">
                <TNRef RefId="31" />
                <LST>
                  <Obj RefId="1031">
                    <TNRef RefId="33" />
                    <ToString>Expected the actual value to be greater than 40, but got 0.</ToString>
                    <MS>
                      <S N="DisplayErrorMessage">Expected the actual value to be greater than 40, but got 0.</S>
                      <S N="DisplayStackTrace">at $functionHelp.Description.Length | Should -BeGreaterThan 40, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:166_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:166</S>
                      <Obj N="Exception" RefId="1032">
                        <TNRef RefId="60" />
                        <ToString>System.Exception: Expected the actual value to be greater than 40, but got 0.</ToString>
                        <Props>
                          <Nil N="TargetSite" />
                          <S N="Message">Expected the actual value to be greater than 40, but got 0.</S>
                          <Obj N="Data" RefId="1033">
                            <TNRef RefId="35" />
                            <DCT />
                          </Obj>
                          <Nil N="InnerException" />
                          <Nil N="HelpLink" />
                          <Nil N="Source" />
                          <I32 N="HResult">-2146233088</I32>
                          <Nil N="StackTrace" />
                        </Props>
                      </Obj>
                      <Obj N="TargetObject" RefId="1034">
                        <TNRef RefId="38" />
                        <DCT>
                          <En>
                            <S N="Key">Message</S>
                            <S N="Value">Expected the actual value to be greater than 40, but got 0.</S>
                          </En>
                          <En>
                            <S N="Key">File</S>
                            <S N="Value">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1</S>
                          </En>
                          <En>
                            <S N="Key">Line</S>
                            <S N="Value">166</S>
                          </En>
                          <En>
                            <S N="Key">LineText</S>
                            <S N="Value">        $functionHelp.Description.Length | Should -BeGreaterThan 40</S>
                          </En>
                          <En>
                            <S N="Key">Terminating</S>
                            <B N="Value">true</B>
                          </En>
                          <En>
                            <S N="Key">ShouldResult</S>
                            <Obj N="Value" RefId="1035">
                              <TNRef RefId="61" />
                              <ToString>Pester.ShouldResult</ToString>
                              <Props>
                                <B N="Succeeded">false</B>
                                <S N="FailureMessage">Expected the actual value to be greater than 40, but got 0.</S>
                                <Obj N="ExpectResult" RefId="1036">
                                  <TNRef RefId="62" />
                                  <ToString>Expected: 40 Actual: 0 Because: </ToString>
                                  <Props>
                                    <S N="Actual">0</S>
                                    <S N="Expected">40</S>
                                    <S N="Because"></S>
                                  </Props>
                                </Obj>
                              </Props>
                            </Obj>
                          </En>
                        </DCT>
                      </Obj>
                      <S N="FullyQualifiedErrorId">PesterAssertionFailed</S>
                      <Obj N="InvocationInfo" RefId="1037">
                        <TNRef RefId="37" />
                        <ToString>System.Management.Automation.InvocationInfo</ToString>
                        <Props>
                          <Nil N="MyCommand" />
                          <Obj N="BoundParameters" RefId="1038">
                            <TNRef RefId="38" />
                            <DCT />
                          </Obj>
                          <Obj N="UnboundArguments" RefId="1039">
                            <TNRef RefId="31" />
                            <LST />
                          </Obj>
                          <I32 N="ScriptLineNumber">8392</I32>
                          <I32 N="OffsetInLine">13</I32>
                          <I64 N="HistoryId">18</I64>
                          <S N="ScriptName">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1</S>
                          <S N="Line">            throw $errorRecord_x000D__x000A_</S>
                          <S N="Statement">throw $errorRecord</S>
                          <S N="PositionMessage">At C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1:8392 char:13_x000D__x000A_+             throw $errorRecord_x000D__x000A_+             ~~~~~~~~~~~~~~~~~~</S>
                          <S N="PSScriptRoot">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1</S>
                          <S N="PSCommandPath">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1</S>
                          <S N="InvocationName"></S>
                          <I32 N="PipelineLength">0</I32>
                          <I32 N="PipelinePosition">0</I32>
                          <B N="ExpectingInput">false</B>
                          <Obj N="CommandOrigin" RefId="1040">
                            <TNRef RefId="39" />
                            <ToString>Internal</ToString>
                            <I32>1</I32>
                          </Obj>
                          <Nil N="DisplayScriptPosition" />
                        </Props>
                        <MS>
                          <Obj N="ParameterValues" RefId="1041">
                            <TNRef RefId="25" />
                            <DCT />
                          </Obj>
                        </MS>
                      </Obj>
                      <I32 N="ErrorCategory_Category">8</I32>
                      <S N="ErrorCategory_Activity"></S>
                      <S N="ErrorCategory_Reason">Exception</S>
                      <S N="ErrorCategory_TargetName">System.Collections.Generic.Dictionary`2[System.String,System.Object]</S>
                      <S N="ErrorCategory_TargetType">Dictionary`2</S>
                      <S N="ErrorCategory_Message">InvalidResult: (System.Collections.…ring,System.Object]:Dictionary`2) [], Exception</S>
                      <B N="SerializeExtendedInfo">false</B>
                      <S N="ErrorDetails_ScriptStackTrace">at Invoke-Assertion, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 8392_x000D__x000A_at Should&lt;End&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 8335_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1: line 166_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2024_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1985_x000D__x000A_at Invoke-ScriptBlock, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2157_x000D__x000A_at Invoke-TestItem, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1199_x000D__x000A_at Invoke-Block, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 835_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 893_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2024_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1985_x000D__x000A_at Invoke-ScriptBlock, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2160_x000D__x000A_at Invoke-Block, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 940_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 893_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2024_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1985_x000D__x000A_at Invoke-ScriptBlock, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2160_x000D__x000A_at Invoke-Block, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 940_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1688_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.ps1: line 3_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 3260_x000D__x000A_at Invoke-InNewScriptScope, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 3267_x000D__x000A_at Run-Test, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1691_x000D__x000A_at Invoke-Test, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2512_x000D__x000A_at Invoke-Pester&lt;End&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 5110_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Sampler\0.118.1\tasks\Invoke-Pester.pester.build.ps1: line 906_x000D__x000A_at *Task, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 629_x000D__x000A_at *Task, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 601_x000D__x000A_at *Task, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 601_x000D__x000A_at &lt;ScriptBlock&gt;&lt;End&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 787_x000D__x000A_at &lt;ScriptBlock&gt;&lt;Begin&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\build.ps1: line 532_x000D__x000A_at &lt;ScriptBlock&gt;, &lt;No file&gt;: line 1</S>
                      <Nil N="PSMessageDetails" />
                    </MS>
                  </Obj>
                </LST>
              </Obj>
              <Nil N="StandardOutput" />
              <TS N="Duration">PT0.0197501S</TS>
              <S N="ItemType">Test</S>
              <S N="Id">150:5</S>
              <S N="GroupId">150:5</S>
              <SBK N="ScriptBlock">_x000D__x000A_        $functionFile = Get-ChildItem -Path $sourcePath -Recurse -Include "$Name.ps1"_x000D__x000A__x000D__x000A_        $scriptFileRawContent = Get-Content -Raw -Path $functionFile.FullName_x000D__x000A__x000D__x000A_        $abstractSyntaxTree = [System.Management.Automation.Language.Parser]::ParseInput($scriptFileRawContent, [ref] $null, [ref] $null)_x000D__x000A__x000D__x000A_        $astSearchDelegate = { $args[0] -is [System.Management.Automation.Language.FunctionDefinitionAst] }_x000D__x000A__x000D__x000A_        $parsedFunction = $abstractSyntaxTree.FindAll($astSearchDelegate, $true) |_x000D__x000A_            Where-Object -FilterScript {_x000D__x000A_                $_.Name -eq $Name_x000D__x000A_            }_x000D__x000A__x000D__x000A_        $functionHelp = $parsedFunction.GetHelpContent()_x000D__x000A__x000D__x000A_        $functionHelp.Description.Length | Should -BeGreaterThan 40_x000D__x000A_    </SBK>
              <Nil N="Tag" />
              <B N="Focus">false</B>
              <B N="Skip">false</B>
              <Ref N="Block" RefId="67" />
              <B N="First">false</B>
              <B N="Last">false</B>
              <B N="Include">false</B>
              <B N="Exclude">false</B>
              <B N="Explicit">false</B>
              <B N="ShouldRun">true</B>
              <I32 N="StartLine">150</I32>
              <B N="Executed">true</B>
              <DT N="ExecutedAt">2024-08-03T17:35:52.8072787-07:00</DT>
              <B N="Passed">false</B>
              <B N="Skipped">false</B>
              <B N="Inconclusive">false</B>
              <TS N="UserDuration">PT0.0124495S</TS>
              <TS N="FrameworkDuration">PT0.0073006S</TS>
              <Nil N="PluginData" />
              <Nil N="FrameworkData" />
            </Props>
          </Obj>
          <Obj RefId="1042">
            <TNRef RefId="30" />
            <ToString>[-] Should have a .DESCRIPTION with length greater than 40 characters for Write-EventLogMessage</ToString>
            <Props>
              <S N="Name">Should have a .DESCRIPTION with length greater than 40 characters for &lt;Name&gt;</S>
              <Obj N="Path" RefId="1043">
                <TNRef RefId="28" />
                <LST>
                  <S>Help for module</S>
                  <S>Should have a .DESCRIPTION with length greater than 40 characters for &lt;Name&gt;</S>
                </LST>
              </Obj>
              <Ref N="Data" RefId="539" />
              <S N="ExpandedName">Should have a .DESCRIPTION with length greater than 40 characters for Write-EventLogMessage</S>
              <S N="ExpandedPath">Help for module.Should have a .DESCRIPTION with length greater than 40 characters for Write-EventLogMessage</S>
              <S N="Result">Failed</S>
              <Obj N="ErrorRecord" RefId="1044">
                <TNRef RefId="31" />
                <LST>
                  <Obj RefId="1045">
                    <TNRef RefId="33" />
                    <ToString>Expected the actual value to be greater than 40, but got 0.</ToString>
                    <MS>
                      <S N="DisplayErrorMessage">Expected the actual value to be greater than 40, but got 0.</S>
                      <S N="DisplayStackTrace">at $functionHelp.Description.Length | Should -BeGreaterThan 40, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:166_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:166</S>
                      <Obj N="Exception" RefId="1046">
                        <TNRef RefId="60" />
                        <ToString>System.Exception: Expected the actual value to be greater than 40, but got 0.</ToString>
                        <Props>
                          <Nil N="TargetSite" />
                          <S N="Message">Expected the actual value to be greater than 40, but got 0.</S>
                          <Obj N="Data" RefId="1047">
                            <TNRef RefId="35" />
                            <DCT />
                          </Obj>
                          <Nil N="InnerException" />
                          <Nil N="HelpLink" />
                          <Nil N="Source" />
                          <I32 N="HResult">-2146233088</I32>
                          <Nil N="StackTrace" />
                        </Props>
                      </Obj>
                      <Obj N="TargetObject" RefId="1048">
                        <TNRef RefId="38" />
                        <DCT>
                          <En>
                            <S N="Key">Message</S>
                            <S N="Value">Expected the actual value to be greater than 40, but got 0.</S>
                          </En>
                          <En>
                            <S N="Key">File</S>
                            <S N="Value">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1</S>
                          </En>
                          <En>
                            <S N="Key">Line</S>
                            <S N="Value">166</S>
                          </En>
                          <En>
                            <S N="Key">LineText</S>
                            <S N="Value">        $functionHelp.Description.Length | Should -BeGreaterThan 40</S>
                          </En>
                          <En>
                            <S N="Key">Terminating</S>
                            <B N="Value">true</B>
                          </En>
                          <En>
                            <S N="Key">ShouldResult</S>
                            <Obj N="Value" RefId="1049">
                              <TNRef RefId="61" />
                              <ToString>Pester.ShouldResult</ToString>
                              <Props>
                                <B N="Succeeded">false</B>
                                <S N="FailureMessage">Expected the actual value to be greater than 40, but got 0.</S>
                                <Obj N="ExpectResult" RefId="1050">
                                  <TNRef RefId="62" />
                                  <ToString>Expected: 40 Actual: 0 Because: </ToString>
                                  <Props>
                                    <S N="Actual">0</S>
                                    <S N="Expected">40</S>
                                    <S N="Because"></S>
                                  </Props>
                                </Obj>
                              </Props>
                            </Obj>
                          </En>
                        </DCT>
                      </Obj>
                      <S N="FullyQualifiedErrorId">PesterAssertionFailed</S>
                      <Obj N="InvocationInfo" RefId="1051">
                        <TNRef RefId="37" />
                        <ToString>System.Management.Automation.InvocationInfo</ToString>
                        <Props>
                          <Nil N="MyCommand" />
                          <Obj N="BoundParameters" RefId="1052">
                            <TNRef RefId="38" />
                            <DCT />
                          </Obj>
                          <Obj N="UnboundArguments" RefId="1053">
                            <TNRef RefId="31" />
                            <LST />
                          </Obj>
                          <I32 N="ScriptLineNumber">8392</I32>
                          <I32 N="OffsetInLine">13</I32>
                          <I64 N="HistoryId">18</I64>
                          <S N="ScriptName">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1</S>
                          <S N="Line">            throw $errorRecord_x000D__x000A_</S>
                          <S N="Statement">throw $errorRecord</S>
                          <S N="PositionMessage">At C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1:8392 char:13_x000D__x000A_+             throw $errorRecord_x000D__x000A_+             ~~~~~~~~~~~~~~~~~~</S>
                          <S N="PSScriptRoot">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1</S>
                          <S N="PSCommandPath">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1</S>
                          <S N="InvocationName"></S>
                          <I32 N="PipelineLength">0</I32>
                          <I32 N="PipelinePosition">0</I32>
                          <B N="ExpectingInput">false</B>
                          <Obj N="CommandOrigin" RefId="1054">
                            <TNRef RefId="39" />
                            <ToString>Internal</ToString>
                            <I32>1</I32>
                          </Obj>
                          <Nil N="DisplayScriptPosition" />
                        </Props>
                        <MS>
                          <Obj N="ParameterValues" RefId="1055">
                            <TNRef RefId="25" />
                            <DCT />
                          </Obj>
                        </MS>
                      </Obj>
                      <I32 N="ErrorCategory_Category">8</I32>
                      <S N="ErrorCategory_Activity"></S>
                      <S N="ErrorCategory_Reason">Exception</S>
                      <S N="ErrorCategory_TargetName">System.Collections.Generic.Dictionary`2[System.String,System.Object]</S>
                      <S N="ErrorCategory_TargetType">Dictionary`2</S>
                      <S N="ErrorCategory_Message">InvalidResult: (System.Collections.…ring,System.Object]:Dictionary`2) [], Exception</S>
                      <B N="SerializeExtendedInfo">false</B>
                      <S N="ErrorDetails_ScriptStackTrace">at Invoke-Assertion, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 8392_x000D__x000A_at Should&lt;End&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 8335_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1: line 166_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2024_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1985_x000D__x000A_at Invoke-ScriptBlock, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2157_x000D__x000A_at Invoke-TestItem, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1199_x000D__x000A_at Invoke-Block, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 835_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 893_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2024_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1985_x000D__x000A_at Invoke-ScriptBlock, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2160_x000D__x000A_at Invoke-Block, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 940_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 893_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2024_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1985_x000D__x000A_at Invoke-ScriptBlock, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2160_x000D__x000A_at Invoke-Block, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 940_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1688_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.ps1: line 3_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 3260_x000D__x000A_at Invoke-InNewScriptScope, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 3267_x000D__x000A_at Run-Test, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1691_x000D__x000A_at Invoke-Test, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2512_x000D__x000A_at Invoke-Pester&lt;End&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 5110_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Sampler\0.118.1\tasks\Invoke-Pester.pester.build.ps1: line 906_x000D__x000A_at *Task, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 629_x000D__x000A_at *Task, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 601_x000D__x000A_at *Task, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 601_x000D__x000A_at &lt;ScriptBlock&gt;&lt;End&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 787_x000D__x000A_at &lt;ScriptBlock&gt;&lt;Begin&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\build.ps1: line 532_x000D__x000A_at &lt;ScriptBlock&gt;, &lt;No file&gt;: line 1</S>
                      <Nil N="PSMessageDetails" />
                    </MS>
                  </Obj>
                </LST>
              </Obj>
              <Nil N="StandardOutput" />
              <TS N="Duration">PT0.0142075S</TS>
              <S N="ItemType">Test</S>
              <S N="Id">150:5</S>
              <S N="GroupId">150:5</S>
              <SBK N="ScriptBlock">_x000D__x000A_        $functionFile = Get-ChildItem -Path $sourcePath -Recurse -Include "$Name.ps1"_x000D__x000A__x000D__x000A_        $scriptFileRawContent = Get-Content -Raw -Path $functionFile.FullName_x000D__x000A__x000D__x000A_        $abstractSyntaxTree = [System.Management.Automation.Language.Parser]::ParseInput($scriptFileRawContent, [ref] $null, [ref] $null)_x000D__x000A__x000D__x000A_        $astSearchDelegate = { $args[0] -is [System.Management.Automation.Language.FunctionDefinitionAst] }_x000D__x000A__x000D__x000A_        $parsedFunction = $abstractSyntaxTree.FindAll($astSearchDelegate, $true) |_x000D__x000A_            Where-Object -FilterScript {_x000D__x000A_                $_.Name -eq $Name_x000D__x000A_            }_x000D__x000A__x000D__x000A_        $functionHelp = $parsedFunction.GetHelpContent()_x000D__x000A__x000D__x000A_        $functionHelp.Description.Length | Should -BeGreaterThan 40_x000D__x000A_    </SBK>
              <Nil N="Tag" />
              <B N="Focus">false</B>
              <B N="Skip">false</B>
              <Ref N="Block" RefId="67" />
              <B N="First">false</B>
              <B N="Last">false</B>
              <B N="Include">false</B>
              <B N="Exclude">false</B>
              <B N="Explicit">false</B>
              <B N="ShouldRun">true</B>
              <I32 N="StartLine">150</I32>
              <B N="Executed">true</B>
              <DT N="ExecutedAt">2024-08-03T17:35:52.8271321-07:00</DT>
              <B N="Passed">false</B>
              <B N="Skipped">false</B>
              <B N="Inconclusive">false</B>
              <TS N="UserDuration">PT0.0083019S</TS>
              <TS N="FrameworkDuration">PT0.0059056S</TS>
              <Nil N="PluginData" />
              <Nil N="FrameworkData" />
            </Props>
          </Obj>
          <Obj RefId="1056">
            <TNRef RefId="30" />
            <ToString>[-] Should have at least one (1) example for Add-Step</ToString>
            <Props>
              <S N="Name">Should have at least one (1) example for &lt;Name&gt;</S>
              <Obj N="Path" RefId="1057">
                <TNRef RefId="28" />
                <LST>
                  <S>Help for module</S>
                  <S>Should have at least one (1) example for &lt;Name&gt;</S>
                </LST>
              </Obj>
              <Ref N="Data" RefId="359" />
              <S N="ExpandedName">Should have at least one (1) example for Add-Step</S>
              <S N="ExpandedPath">Help for module.Should have at least one (1) example for Add-Step</S>
              <S N="Result">Failed</S>
              <Obj N="ErrorRecord" RefId="1058">
                <TNRef RefId="31" />
                <LST>
                  <Obj RefId="1059">
                    <TNRef RefId="33" />
                    <ToString>Expected the actual value to be greater than 0, but got 0.</ToString>
                    <MS>
                      <S N="DisplayErrorMessage">Expected the actual value to be greater than 0, but got 0.</S>
                      <S N="DisplayStackTrace">at $functionHelp.Examples.Count | Should -BeGreaterThan 0, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:185_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:185</S>
                      <Obj N="Exception" RefId="1060">
                        <TNRef RefId="60" />
                        <ToString>System.Exception: Expected the actual value to be greater than 0, but got 0.</ToString>
                        <Props>
                          <Nil N="TargetSite" />
                          <S N="Message">Expected the actual value to be greater than 0, but got 0.</S>
                          <Obj N="Data" RefId="1061">
                            <TNRef RefId="35" />
                            <DCT />
                          </Obj>
                          <Nil N="InnerException" />
                          <Nil N="HelpLink" />
                          <Nil N="Source" />
                          <I32 N="HResult">-2146233088</I32>
                          <Nil N="StackTrace" />
                        </Props>
                      </Obj>
                      <Obj N="TargetObject" RefId="1062">
                        <TNRef RefId="38" />
                        <DCT>
                          <En>
                            <S N="Key">Message</S>
                            <S N="Value">Expected the actual value to be greater than 0, but got 0.</S>
                          </En>
                          <En>
                            <S N="Key">File</S>
                            <S N="Value">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1</S>
                          </En>
                          <En>
                            <S N="Key">Line</S>
                            <S N="Value">185</S>
                          </En>
                          <En>
                            <S N="Key">LineText</S>
                            <S N="Value">        $functionHelp.Examples.Count | Should -BeGreaterThan 0</S>
                          </En>
                          <En>
                            <S N="Key">Terminating</S>
                            <B N="Value">true</B>
                          </En>
                          <En>
                            <S N="Key">ShouldResult</S>
                            <Obj N="Value" RefId="1063">
                              <TNRef RefId="61" />
                              <ToString>Pester.ShouldResult</ToString>
                              <Props>
                                <B N="Succeeded">false</B>
                                <S N="FailureMessage">Expected the actual value to be greater than 0, but got 0.</S>
                                <Obj N="ExpectResult" RefId="1064">
                                  <TNRef RefId="62" />
                                  <ToString>Expected: 0 Actual: 0 Because: </ToString>
                                  <Props>
                                    <S N="Actual">0</S>
                                    <S N="Expected">0</S>
                                    <S N="Because"></S>
                                  </Props>
                                </Obj>
                              </Props>
                            </Obj>
                          </En>
                        </DCT>
                      </Obj>
                      <S N="FullyQualifiedErrorId">PesterAssertionFailed</S>
                      <Obj N="InvocationInfo" RefId="1065">
                        <TNRef RefId="37" />
                        <ToString>System.Management.Automation.InvocationInfo</ToString>
                        <Props>
                          <Nil N="MyCommand" />
                          <Obj N="BoundParameters" RefId="1066">
                            <TNRef RefId="38" />
                            <DCT />
                          </Obj>
                          <Obj N="UnboundArguments" RefId="1067">
                            <TNRef RefId="31" />
                            <LST />
                          </Obj>
                          <I32 N="ScriptLineNumber">8392</I32>
                          <I32 N="OffsetInLine">13</I32>
                          <I64 N="HistoryId">18</I64>
                          <S N="ScriptName">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1</S>
                          <S N="Line">            throw $errorRecord_x000D__x000A_</S>
                          <S N="Statement">throw $errorRecord</S>
                          <S N="PositionMessage">At C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1:8392 char:13_x000D__x000A_+             throw $errorRecord_x000D__x000A_+             ~~~~~~~~~~~~~~~~~~</S>
                          <S N="PSScriptRoot">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1</S>
                          <S N="PSCommandPath">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1</S>
                          <S N="InvocationName"></S>
                          <I32 N="PipelineLength">0</I32>
                          <I32 N="PipelinePosition">0</I32>
                          <B N="ExpectingInput">false</B>
                          <Obj N="CommandOrigin" RefId="1068">
                            <TNRef RefId="39" />
                            <ToString>Internal</ToString>
                            <I32>1</I32>
                          </Obj>
                          <Nil N="DisplayScriptPosition" />
                        </Props>
                        <MS>
                          <Obj N="ParameterValues" RefId="1069">
                            <TNRef RefId="25" />
                            <DCT />
                          </Obj>
                        </MS>
                      </Obj>
                      <I32 N="ErrorCategory_Category">8</I32>
                      <S N="ErrorCategory_Activity"></S>
                      <S N="ErrorCategory_Reason">Exception</S>
                      <S N="ErrorCategory_TargetName">System.Collections.Generic.Dictionary`2[System.String,System.Object]</S>
                      <S N="ErrorCategory_TargetType">Dictionary`2</S>
                      <S N="ErrorCategory_Message">InvalidResult: (System.Collections.…ring,System.Object]:Dictionary`2) [], Exception</S>
                      <B N="SerializeExtendedInfo">false</B>
                      <S N="ErrorDetails_ScriptStackTrace">at Invoke-Assertion, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 8392_x000D__x000A_at Should&lt;End&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 8335_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1: line 185_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2024_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1985_x000D__x000A_at Invoke-ScriptBlock, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2157_x000D__x000A_at Invoke-TestItem, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1199_x000D__x000A_at Invoke-Block, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 835_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 893_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2024_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1985_x000D__x000A_at Invoke-ScriptBlock, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2160_x000D__x000A_at Invoke-Block, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 940_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 893_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2024_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1985_x000D__x000A_at Invoke-ScriptBlock, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2160_x000D__x000A_at Invoke-Block, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 940_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1688_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.ps1: line 3_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 3260_x000D__x000A_at Invoke-InNewScriptScope, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 3267_x000D__x000A_at Run-Test, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1691_x000D__x000A_at Invoke-Test, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2512_x000D__x000A_at Invoke-Pester&lt;End&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 5110_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Sampler\0.118.1\tasks\Invoke-Pester.pester.build.ps1: line 906_x000D__x000A_at *Task, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 629_x000D__x000A_at *Task, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 601_x000D__x000A_at *Task, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 601_x000D__x000A_at &lt;ScriptBlock&gt;&lt;End&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 787_x000D__x000A_at &lt;ScriptBlock&gt;&lt;Begin&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\build.ps1: line 532_x000D__x000A_at &lt;ScriptBlock&gt;, &lt;No file&gt;: line 1</S>
                      <Nil N="PSMessageDetails" />
                    </MS>
                  </Obj>
                </LST>
              </Obj>
              <Nil N="StandardOutput" />
              <TS N="Duration">PT0.0189806S</TS>
              <S N="ItemType">Test</S>
              <S N="Id">169:5</S>
              <S N="GroupId">169:5</S>
              <SBK N="ScriptBlock">_x000D__x000A_        $functionFile = Get-ChildItem -Path $sourcePath -Recurse -Include "$Name.ps1"_x000D__x000A__x000D__x000A_        $scriptFileRawContent = Get-Content -Raw -Path $functionFile.FullName_x000D__x000A__x000D__x000A_        $abstractSyntaxTree = [System.Management.Automation.Language.Parser]::ParseInput($scriptFileRawContent, [ref] $null, [ref] $null)_x000D__x000A__x000D__x000A_        $astSearchDelegate = { $args[0] -is [System.Management.Automation.Language.FunctionDefinitionAst] }_x000D__x000A__x000D__x000A_        $parsedFunction = $abstractSyntaxTree.FindAll( $astSearchDelegate, $true ) |_x000D__x000A_            Where-Object -FilterScript {_x000D__x000A_                $_.Name -eq $Name_x000D__x000A_            }_x000D__x000A__x000D__x000A_        $functionHelp = $parsedFunction.GetHelpContent()_x000D__x000A__x000D__x000A_        $functionHelp.Examples.Count | Should -BeGreaterThan 0_x000D__x000A_        $functionHelp.Examples[0] | Should -Match ([regex]::Escape($function.Name))_x000D__x000A_        $functionHelp.Examples[0].Length | Should -BeGreaterThan ($function.Name.Length + 10)_x000D__x000A__x000D__x000A_    </SBK>
              <Nil N="Tag" />
              <B N="Focus">false</B>
              <B N="Skip">false</B>
              <Ref N="Block" RefId="67" />
              <B N="First">false</B>
              <B N="Last">false</B>
              <B N="Include">false</B>
              <B N="Exclude">false</B>
              <B N="Explicit">false</B>
              <B N="ShouldRun">true</B>
              <I32 N="StartLine">169</I32>
              <B N="Executed">true</B>
              <DT N="ExecutedAt">2024-08-03T17:35:52.8413857-07:00</DT>
              <B N="Passed">false</B>
              <B N="Skipped">false</B>
              <B N="Inconclusive">false</B>
              <TS N="UserDuration">PT0.0113757S</TS>
              <TS N="FrameworkDuration">PT0.0076049S</TS>
              <Nil N="PluginData" />
              <Nil N="FrameworkData" />
            </Props>
          </Obj>
          <Obj RefId="1070">
            <TNRef RefId="30" />
            <ToString>[-] Should have at least one (1) example for AppendCSVLog</ToString>
            <Props>
              <S N="Name">Should have at least one (1) example for &lt;Name&gt;</S>
              <Obj N="Path" RefId="1071">
                <TNRef RefId="28" />
                <LST>
                  <S>Help for module</S>
                  <S>Should have at least one (1) example for &lt;Name&gt;</S>
                </LST>
              </Obj>
              <Ref N="Data" RefId="374" />
              <S N="ExpandedName">Should have at least one (1) example for AppendCSVLog</S>
              <S N="ExpandedPath">Help for module.Should have at least one (1) example for AppendCSVLog</S>
              <S N="Result">Failed</S>
              <Obj N="ErrorRecord" RefId="1072">
                <TNRef RefId="31" />
                <LST>
                  <Obj RefId="1073">
                    <TNRef RefId="33" />
                    <ToString>Expected the actual value to be greater than 0, but got 0.</ToString>
                    <MS>
                      <S N="DisplayErrorMessage">Expected the actual value to be greater than 0, but got 0.</S>
                      <S N="DisplayStackTrace">at $functionHelp.Examples.Count | Should -BeGreaterThan 0, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:185_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:185</S>
                      <Obj N="Exception" RefId="1074">
                        <TNRef RefId="60" />
                        <ToString>System.Exception: Expected the actual value to be greater than 0, but got 0.</ToString>
                        <Props>
                          <Nil N="TargetSite" />
                          <S N="Message">Expected the actual value to be greater than 0, but got 0.</S>
                          <Obj N="Data" RefId="1075">
                            <TNRef RefId="35" />
                            <DCT />
                          </Obj>
                          <Nil N="InnerException" />
                          <Nil N="HelpLink" />
                          <Nil N="Source" />
                          <I32 N="HResult">-2146233088</I32>
                          <Nil N="StackTrace" />
                        </Props>
                      </Obj>
                      <Obj N="TargetObject" RefId="1076">
                        <TNRef RefId="38" />
                        <DCT>
                          <En>
                            <S N="Key">Message</S>
                            <S N="Value">Expected the actual value to be greater than 0, but got 0.</S>
                          </En>
                          <En>
                            <S N="Key">File</S>
                            <S N="Value">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1</S>
                          </En>
                          <En>
                            <S N="Key">Line</S>
                            <S N="Value">185</S>
                          </En>
                          <En>
                            <S N="Key">LineText</S>
                            <S N="Value">        $functionHelp.Examples.Count | Should -BeGreaterThan 0</S>
                          </En>
                          <En>
                            <S N="Key">Terminating</S>
                            <B N="Value">true</B>
                          </En>
                          <En>
                            <S N="Key">ShouldResult</S>
                            <Obj N="Value" RefId="1077">
                              <TNRef RefId="61" />
                              <ToString>Pester.ShouldResult</ToString>
                              <Props>
                                <B N="Succeeded">false</B>
                                <S N="FailureMessage">Expected the actual value to be greater than 0, but got 0.</S>
                                <Obj N="ExpectResult" RefId="1078">
                                  <TNRef RefId="62" />
                                  <ToString>Expected: 0 Actual: 0 Because: </ToString>
                                  <Props>
                                    <S N="Actual">0</S>
                                    <S N="Expected">0</S>
                                    <S N="Because"></S>
                                  </Props>
                                </Obj>
                              </Props>
                            </Obj>
                          </En>
                        </DCT>
                      </Obj>
                      <S N="FullyQualifiedErrorId">PesterAssertionFailed</S>
                      <Obj N="InvocationInfo" RefId="1079">
                        <TNRef RefId="37" />
                        <ToString>System.Management.Automation.InvocationInfo</ToString>
                        <Props>
                          <Nil N="MyCommand" />
                          <Obj N="BoundParameters" RefId="1080">
                            <TNRef RefId="38" />
                            <DCT />
                          </Obj>
                          <Obj N="UnboundArguments" RefId="1081">
                            <TNRef RefId="31" />
                            <LST />
                          </Obj>
                          <I32 N="ScriptLineNumber">8392</I32>
                          <I32 N="OffsetInLine">13</I32>
                          <I64 N="HistoryId">18</I64>
                          <S N="ScriptName">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1</S>
                          <S N="Line">            throw $errorRecord_x000D__x000A_</S>
                          <S N="Statement">throw $errorRecord</S>
                          <S N="PositionMessage">At C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1:8392 char:13_x000D__x000A_+             throw $errorRecord_x000D__x000A_+             ~~~~~~~~~~~~~~~~~~</S>
                          <S N="PSScriptRoot">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1</S>
                          <S N="PSCommandPath">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1</S>
                          <S N="InvocationName"></S>
                          <I32 N="PipelineLength">0</I32>
                          <I32 N="PipelinePosition">0</I32>
                          <B N="ExpectingInput">false</B>
                          <Obj N="CommandOrigin" RefId="1082">
                            <TNRef RefId="39" />
                            <ToString>Internal</ToString>
                            <I32>1</I32>
                          </Obj>
                          <Nil N="DisplayScriptPosition" />
                        </Props>
                        <MS>
                          <Obj N="ParameterValues" RefId="1083">
                            <TNRef RefId="25" />
                            <DCT />
                          </Obj>
                        </MS>
                      </Obj>
                      <I32 N="ErrorCategory_Category">8</I32>
                      <S N="ErrorCategory_Activity"></S>
                      <S N="ErrorCategory_Reason">Exception</S>
                      <S N="ErrorCategory_TargetName">System.Collections.Generic.Dictionary`2[System.String,System.Object]</S>
                      <S N="ErrorCategory_TargetType">Dictionary`2</S>
                      <S N="ErrorCategory_Message">InvalidResult: (System.Collections.…ring,System.Object]:Dictionary`2) [], Exception</S>
                      <B N="SerializeExtendedInfo">false</B>
                      <S N="ErrorDetails_ScriptStackTrace">at Invoke-Assertion, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 8392_x000D__x000A_at Should&lt;End&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 8335_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1: line 185_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2024_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1985_x000D__x000A_at Invoke-ScriptBlock, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2157_x000D__x000A_at Invoke-TestItem, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1199_x000D__x000A_at Invoke-Block, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 835_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 893_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2024_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1985_x000D__x000A_at Invoke-ScriptBlock, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2160_x000D__x000A_at Invoke-Block, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 940_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 893_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2024_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1985_x000D__x000A_at Invoke-ScriptBlock, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2160_x000D__x000A_at Invoke-Block, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 940_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1688_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.ps1: line 3_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 3260_x000D__x000A_at Invoke-InNewScriptScope, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 3267_x000D__x000A_at Run-Test, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1691_x000D__x000A_at Invoke-Test, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2512_x000D__x000A_at Invoke-Pester&lt;End&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 5110_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Sampler\0.118.1\tasks\Invoke-Pester.pester.build.ps1: line 906_x000D__x000A_at *Task, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 629_x000D__x000A_at *Task, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 601_x000D__x000A_at *Task, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 601_x000D__x000A_at &lt;ScriptBlock&gt;&lt;End&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 787_x000D__x000A_at &lt;ScriptBlock&gt;&lt;Begin&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\build.ps1: line 532_x000D__x000A_at &lt;ScriptBlock&gt;, &lt;No file&gt;: line 1</S>
                      <Nil N="PSMessageDetails" />
                    </MS>
                  </Obj>
                </LST>
              </Obj>
              <Nil N="StandardOutput" />
              <TS N="Duration">PT0.0174958S</TS>
              <S N="ItemType">Test</S>
              <S N="Id">169:5</S>
              <S N="GroupId">169:5</S>
              <SBK N="ScriptBlock">_x000D__x000A_        $functionFile = Get-ChildItem -Path $sourcePath -Recurse -Include "$Name.ps1"_x000D__x000A__x000D__x000A_        $scriptFileRawContent = Get-Content -Raw -Path $functionFile.FullName_x000D__x000A__x000D__x000A_        $abstractSyntaxTree = [System.Management.Automation.Language.Parser]::ParseInput($scriptFileRawContent, [ref] $null, [ref] $null)_x000D__x000A__x000D__x000A_        $astSearchDelegate = { $args[0] -is [System.Management.Automation.Language.FunctionDefinitionAst] }_x000D__x000A__x000D__x000A_        $parsedFunction = $abstractSyntaxTree.FindAll( $astSearchDelegate, $true ) |_x000D__x000A_            Where-Object -FilterScript {_x000D__x000A_                $_.Name -eq $Name_x000D__x000A_            }_x000D__x000A__x000D__x000A_        $functionHelp = $parsedFunction.GetHelpContent()_x000D__x000A__x000D__x000A_        $functionHelp.Examples.Count | Should -BeGreaterThan 0_x000D__x000A_        $functionHelp.Examples[0] | Should -Match ([regex]::Escape($function.Name))_x000D__x000A_        $functionHelp.Examples[0].Length | Should -BeGreaterThan ($function.Name.Length + 10)_x000D__x000A__x000D__x000A_    </SBK>
              <Nil N="Tag" />
              <B N="Focus">false</B>
              <B N="Skip">false</B>
              <Ref N="Block" RefId="67" />
              <B N="First">false</B>
              <B N="Last">false</B>
              <B N="Include">false</B>
              <B N="Exclude">false</B>
              <B N="Explicit">false</B>
              <B N="ShouldRun">true</B>
              <I32 N="StartLine">169</I32>
              <B N="Executed">true</B>
              <DT N="ExecutedAt">2024-08-03T17:35:52.8604346-07:00</DT>
              <B N="Passed">false</B>
              <B N="Skipped">false</B>
              <B N="Inconclusive">false</B>
              <TS N="UserDuration">PT0.0096411S</TS>
              <TS N="FrameworkDuration">PT0.0078547S</TS>
              <Nil N="PluginData" />
              <Nil N="FrameworkData" />
            </Props>
          </Obj>
          <Obj RefId="1084">
            <TNRef RefId="30" />
            <ToString>[-] Should have at least one (1) example for CreateEventLogSource</ToString>
            <Props>
              <S N="Name">Should have at least one (1) example for &lt;Name&gt;</S>
              <Obj N="Path" RefId="1085">
                <TNRef RefId="28" />
                <LST>
                  <S>Help for module</S>
                  <S>Should have at least one (1) example for &lt;Name&gt;</S>
                </LST>
              </Obj>
              <Ref N="Data" RefId="389" />
              <S N="ExpandedName">Should have at least one (1) example for CreateEventLogSource</S>
              <S N="ExpandedPath">Help for module.Should have at least one (1) example for CreateEventLogSource</S>
              <S N="Result">Failed</S>
              <Obj N="ErrorRecord" RefId="1086">
                <TNRef RefId="31" />
                <LST>
                  <Obj RefId="1087">
                    <TNRef RefId="33" />
                    <ToString>Expected the actual value to be greater than 0, but got 0.</ToString>
                    <MS>
                      <S N="DisplayErrorMessage">Expected the actual value to be greater than 0, but got 0.</S>
                      <S N="DisplayStackTrace">at $functionHelp.Examples.Count | Should -BeGreaterThan 0, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:185_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:185</S>
                      <Obj N="Exception" RefId="1088">
                        <TNRef RefId="60" />
                        <ToString>System.Exception: Expected the actual value to be greater than 0, but got 0.</ToString>
                        <Props>
                          <Nil N="TargetSite" />
                          <S N="Message">Expected the actual value to be greater than 0, but got 0.</S>
                          <Obj N="Data" RefId="1089">
                            <TNRef RefId="35" />
                            <DCT />
                          </Obj>
                          <Nil N="InnerException" />
                          <Nil N="HelpLink" />
                          <Nil N="Source" />
                          <I32 N="HResult">-2146233088</I32>
                          <Nil N="StackTrace" />
                        </Props>
                      </Obj>
                      <Obj N="TargetObject" RefId="1090">
                        <TNRef RefId="38" />
                        <DCT>
                          <En>
                            <S N="Key">Message</S>
                            <S N="Value">Expected the actual value to be greater than 0, but got 0.</S>
                          </En>
                          <En>
                            <S N="Key">File</S>
                            <S N="Value">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1</S>
                          </En>
                          <En>
                            <S N="Key">Line</S>
                            <S N="Value">185</S>
                          </En>
                          <En>
                            <S N="Key">LineText</S>
                            <S N="Value">        $functionHelp.Examples.Count | Should -BeGreaterThan 0</S>
                          </En>
                          <En>
                            <S N="Key">Terminating</S>
                            <B N="Value">true</B>
                          </En>
                          <En>
                            <S N="Key">ShouldResult</S>
                            <Obj N="Value" RefId="1091">
                              <TNRef RefId="61" />
                              <ToString>Pester.ShouldResult</ToString>
                              <Props>
                                <B N="Succeeded">false</B>
                                <S N="FailureMessage">Expected the actual value to be greater than 0, but got 0.</S>
                                <Obj N="ExpectResult" RefId="1092">
                                  <TNRef RefId="62" />
                                  <ToString>Expected: 0 Actual: 0 Because: </ToString>
                                  <Props>
                                    <S N="Actual">0</S>
                                    <S N="Expected">0</S>
                                    <S N="Because"></S>
                                  </Props>
                                </Obj>
                              </Props>
                            </Obj>
                          </En>
                        </DCT>
                      </Obj>
                      <S N="FullyQualifiedErrorId">PesterAssertionFailed</S>
                      <Obj N="InvocationInfo" RefId="1093">
                        <TNRef RefId="37" />
                        <ToString>System.Management.Automation.InvocationInfo</ToString>
                        <Props>
                          <Nil N="MyCommand" />
                          <Obj N="BoundParameters" RefId="1094">
                            <TNRef RefId="38" />
                            <DCT />
                          </Obj>
                          <Obj N="UnboundArguments" RefId="1095">
                            <TNRef RefId="31" />
                            <LST />
                          </Obj>
                          <I32 N="ScriptLineNumber">8392</I32>
                          <I32 N="OffsetInLine">13</I32>
                          <I64 N="HistoryId">18</I64>
                          <S N="ScriptName">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1</S>
                          <S N="Line">            throw $errorRecord_x000D__x000A_</S>
                          <S N="Statement">throw $errorRecord</S>
                          <S N="PositionMessage">At C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1:8392 char:13_x000D__x000A_+             throw $errorRecord_x000D__x000A_+             ~~~~~~~~~~~~~~~~~~</S>
                          <S N="PSScriptRoot">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1</S>
                          <S N="PSCommandPath">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1</S>
                          <S N="InvocationName"></S>
                          <I32 N="PipelineLength">0</I32>
                          <I32 N="PipelinePosition">0</I32>
                          <B N="ExpectingInput">false</B>
                          <Obj N="CommandOrigin" RefId="1096">
                            <TNRef RefId="39" />
                            <ToString>Internal</ToString>
                            <I32>1</I32>
                          </Obj>
                          <Nil N="DisplayScriptPosition" />
                        </Props>
                        <MS>
                          <Obj N="ParameterValues" RefId="1097">
                            <TNRef RefId="25" />
                            <DCT />
                          </Obj>
                        </MS>
                      </Obj>
                      <I32 N="ErrorCategory_Category">8</I32>
                      <S N="ErrorCategory_Activity"></S>
                      <S N="ErrorCategory_Reason">Exception</S>
                      <S N="ErrorCategory_TargetName">System.Collections.Generic.Dictionary`2[System.String,System.Object]</S>
                      <S N="ErrorCategory_TargetType">Dictionary`2</S>
                      <S N="ErrorCategory_Message">InvalidResult: (System.Collections.…ring,System.Object]:Dictionary`2) [], Exception</S>
                      <B N="SerializeExtendedInfo">false</B>
                      <S N="ErrorDetails_ScriptStackTrace">at Invoke-Assertion, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 8392_x000D__x000A_at Should&lt;End&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 8335_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1: line 185_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2024_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1985_x000D__x000A_at Invoke-ScriptBlock, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2157_x000D__x000A_at Invoke-TestItem, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1199_x000D__x000A_at Invoke-Block, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 835_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 893_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2024_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1985_x000D__x000A_at Invoke-ScriptBlock, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2160_x000D__x000A_at Invoke-Block, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 940_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 893_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2024_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1985_x000D__x000A_at Invoke-ScriptBlock, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2160_x000D__x000A_at Invoke-Block, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 940_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1688_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.ps1: line 3_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 3260_x000D__x000A_at Invoke-InNewScriptScope, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 3267_x000D__x000A_at Run-Test, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1691_x000D__x000A_at Invoke-Test, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2512_x000D__x000A_at Invoke-Pester&lt;End&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 5110_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Sampler\0.118.1\tasks\Invoke-Pester.pester.build.ps1: line 906_x000D__x000A_at *Task, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 629_x000D__x000A_at *Task, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 601_x000D__x000A_at *Task, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 601_x000D__x000A_at &lt;ScriptBlock&gt;&lt;End&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 787_x000D__x000A_at &lt;ScriptBlock&gt;&lt;Begin&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\build.ps1: line 532_x000D__x000A_at &lt;ScriptBlock&gt;, &lt;No file&gt;: line 1</S>
                      <Nil N="PSMessageDetails" />
                    </MS>
                  </Obj>
                </LST>
              </Obj>
              <Nil N="StandardOutput" />
              <TS N="Duration">PT0.0286486S</TS>
              <S N="ItemType">Test</S>
              <S N="Id">169:5</S>
              <S N="GroupId">169:5</S>
              <SBK N="ScriptBlock">_x000D__x000A_        $functionFile = Get-ChildItem -Path $sourcePath -Recurse -Include "$Name.ps1"_x000D__x000A__x000D__x000A_        $scriptFileRawContent = Get-Content -Raw -Path $functionFile.FullName_x000D__x000A__x000D__x000A_        $abstractSyntaxTree = [System.Management.Automation.Language.Parser]::ParseInput($scriptFileRawContent, [ref] $null, [ref] $null)_x000D__x000A__x000D__x000A_        $astSearchDelegate = { $args[0] -is [System.Management.Automation.Language.FunctionDefinitionAst] }_x000D__x000A__x000D__x000A_        $parsedFunction = $abstractSyntaxTree.FindAll( $astSearchDelegate, $true ) |_x000D__x000A_            Where-Object -FilterScript {_x000D__x000A_                $_.Name -eq $Name_x000D__x000A_            }_x000D__x000A__x000D__x000A_        $functionHelp = $parsedFunction.GetHelpContent()_x000D__x000A__x000D__x000A_        $functionHelp.Examples.Count | Should -BeGreaterThan 0_x000D__x000A_        $functionHelp.Examples[0] | Should -Match ([regex]::Escape($function.Name))_x000D__x000A_        $functionHelp.Examples[0].Length | Should -BeGreaterThan ($function.Name.Length + 10)_x000D__x000A__x000D__x000A_    </SBK>
              <Nil N="Tag" />
              <B N="Focus">false</B>
              <B N="Skip">false</B>
              <Ref N="Block" RefId="67" />
              <B N="First">false</B>
              <B N="Last">false</B>
              <B N="Include">false</B>
              <B N="Exclude">false</B>
              <B N="Explicit">false</B>
              <B N="ShouldRun">true</B>
              <I32 N="StartLine">169</I32>
              <B N="Executed">true</B>
              <DT N="ExecutedAt">2024-08-03T17:35:52.8781761-07:00</DT>
              <B N="Passed">false</B>
              <B N="Skipped">false</B>
              <B N="Inconclusive">false</B>
              <TS N="UserDuration">PT0.0163221S</TS>
              <TS N="FrameworkDuration">PT0.0123265S</TS>
              <Nil N="PluginData" />
              <Nil N="FrameworkData" />
            </Props>
          </Obj>
          <Obj RefId="1098">
            <TNRef RefId="30" />
            <ToString>[-] Should have at least one (1) example for CreateEventSourceAndLog</ToString>
            <Props>
              <S N="Name">Should have at least one (1) example for &lt;Name&gt;</S>
              <Obj N="Path" RefId="1099">
                <TNRef RefId="28" />
                <LST>
                  <S>Help for module</S>
                  <S>Should have at least one (1) example for &lt;Name&gt;</S>
                </LST>
              </Obj>
              <Ref N="Data" RefId="404" />
              <S N="ExpandedName">Should have at least one (1) example for CreateEventSourceAndLog</S>
              <S N="ExpandedPath">Help for module.Should have at least one (1) example for CreateEventSourceAndLog</S>
              <S N="Result">Failed</S>
              <Obj N="ErrorRecord" RefId="1100">
                <TNRef RefId="31" />
                <LST>
                  <Obj RefId="1101">
                    <TNRef RefId="33" />
                    <ToString>Expected the actual value to be greater than 0, but got 0.</ToString>
                    <MS>
                      <S N="DisplayErrorMessage">Expected the actual value to be greater than 0, but got 0.</S>
                      <S N="DisplayStackTrace">at $functionHelp.Examples.Count | Should -BeGreaterThan 0, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:185_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:185</S>
                      <Obj N="Exception" RefId="1102">
                        <TNRef RefId="60" />
                        <ToString>System.Exception: Expected the actual value to be greater than 0, but got 0.</ToString>
                        <Props>
                          <Nil N="TargetSite" />
                          <S N="Message">Expected the actual value to be greater than 0, but got 0.</S>
                          <Obj N="Data" RefId="1103">
                            <TNRef RefId="35" />
                            <DCT />
                          </Obj>
                          <Nil N="InnerException" />
                          <Nil N="HelpLink" />
                          <Nil N="Source" />
                          <I32 N="HResult">-2146233088</I32>
                          <Nil N="StackTrace" />
                        </Props>
                      </Obj>
                      <Obj N="TargetObject" RefId="1104">
                        <TNRef RefId="38" />
                        <DCT>
                          <En>
                            <S N="Key">Message</S>
                            <S N="Value">Expected the actual value to be greater than 0, but got 0.</S>
                          </En>
                          <En>
                            <S N="Key">File</S>
                            <S N="Value">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1</S>
                          </En>
                          <En>
                            <S N="Key">Line</S>
                            <S N="Value">185</S>
                          </En>
                          <En>
                            <S N="Key">LineText</S>
                            <S N="Value">        $functionHelp.Examples.Count | Should -BeGreaterThan 0</S>
                          </En>
                          <En>
                            <S N="Key">Terminating</S>
                            <B N="Value">true</B>
                          </En>
                          <En>
                            <S N="Key">ShouldResult</S>
                            <Obj N="Value" RefId="1105">
                              <TNRef RefId="61" />
                              <ToString>Pester.ShouldResult</ToString>
                              <Props>
                                <B N="Succeeded">false</B>
                                <S N="FailureMessage">Expected the actual value to be greater than 0, but got 0.</S>
                                <Obj N="ExpectResult" RefId="1106">
                                  <TNRef RefId="62" />
                                  <ToString>Expected: 0 Actual: 0 Because: </ToString>
                                  <Props>
                                    <S N="Actual">0</S>
                                    <S N="Expected">0</S>
                                    <S N="Because"></S>
                                  </Props>
                                </Obj>
                              </Props>
                            </Obj>
                          </En>
                        </DCT>
                      </Obj>
                      <S N="FullyQualifiedErrorId">PesterAssertionFailed</S>
                      <Obj N="InvocationInfo" RefId="1107">
                        <TNRef RefId="37" />
                        <ToString>System.Management.Automation.InvocationInfo</ToString>
                        <Props>
                          <Nil N="MyCommand" />
                          <Obj N="BoundParameters" RefId="1108">
                            <TNRef RefId="38" />
                            <DCT />
                          </Obj>
                          <Obj N="UnboundArguments" RefId="1109">
                            <TNRef RefId="31" />
                            <LST />
                          </Obj>
                          <I32 N="ScriptLineNumber">8392</I32>
                          <I32 N="OffsetInLine">13</I32>
                          <I64 N="HistoryId">18</I64>
                          <S N="ScriptName">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1</S>
                          <S N="Line">            throw $errorRecord_x000D__x000A_</S>
                          <S N="Statement">throw $errorRecord</S>
                          <S N="PositionMessage">At C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1:8392 char:13_x000D__x000A_+             throw $errorRecord_x000D__x000A_+             ~~~~~~~~~~~~~~~~~~</S>
                          <S N="PSScriptRoot">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1</S>
                          <S N="PSCommandPath">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1</S>
                          <S N="InvocationName"></S>
                          <I32 N="PipelineLength">0</I32>
                          <I32 N="PipelinePosition">0</I32>
                          <B N="ExpectingInput">false</B>
                          <Obj N="CommandOrigin" RefId="1110">
                            <TNRef RefId="39" />
                            <ToString>Internal</ToString>
                            <I32>1</I32>
                          </Obj>
                          <Nil N="DisplayScriptPosition" />
                        </Props>
                        <MS>
                          <Obj N="ParameterValues" RefId="1111">
                            <TNRef RefId="25" />
                            <DCT />
                          </Obj>
                        </MS>
                      </Obj>
                      <I32 N="ErrorCategory_Category">8</I32>
                      <S N="ErrorCategory_Activity"></S>
                      <S N="ErrorCategory_Reason">Exception</S>
                      <S N="ErrorCategory_TargetName">System.Collections.Generic.Dictionary`2[System.String,System.Object]</S>
                      <S N="ErrorCategory_TargetType">Dictionary`2</S>
                      <S N="ErrorCategory_Message">InvalidResult: (System.Collections.…ring,System.Object]:Dictionary`2) [], Exception</S>
                      <B N="SerializeExtendedInfo">false</B>
                      <S N="ErrorDetails_ScriptStackTrace">at Invoke-Assertion, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 8392_x000D__x000A_at Should&lt;End&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 8335_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1: line 185_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2024_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1985_x000D__x000A_at Invoke-ScriptBlock, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2157_x000D__x000A_at Invoke-TestItem, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1199_x000D__x000A_at Invoke-Block, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 835_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 893_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2024_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1985_x000D__x000A_at Invoke-ScriptBlock, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2160_x000D__x000A_at Invoke-Block, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 940_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 893_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2024_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1985_x000D__x000A_at Invoke-ScriptBlock, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2160_x000D__x000A_at Invoke-Block, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 940_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1688_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.ps1: line 3_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 3260_x000D__x000A_at Invoke-InNewScriptScope, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 3267_x000D__x000A_at Run-Test, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1691_x000D__x000A_at Invoke-Test, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2512_x000D__x000A_at Invoke-Pester&lt;End&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 5110_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Sampler\0.118.1\tasks\Invoke-Pester.pester.build.ps1: line 906_x000D__x000A_at *Task, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 629_x000D__x000A_at *Task, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 601_x000D__x000A_at *Task, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 601_x000D__x000A_at &lt;ScriptBlock&gt;&lt;End&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 787_x000D__x000A_at &lt;ScriptBlock&gt;&lt;Begin&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\build.ps1: line 532_x000D__x000A_at &lt;ScriptBlock&gt;, &lt;No file&gt;: line 1</S>
                      <Nil N="PSMessageDetails" />
                    </MS>
                  </Obj>
                </LST>
              </Obj>
              <Nil N="StandardOutput" />
              <TS N="Duration">PT0.0520838S</TS>
              <S N="ItemType">Test</S>
              <S N="Id">169:5</S>
              <S N="GroupId">169:5</S>
              <SBK N="ScriptBlock">_x000D__x000A_        $functionFile = Get-ChildItem -Path $sourcePath -Recurse -Include "$Name.ps1"_x000D__x000A__x000D__x000A_        $scriptFileRawContent = Get-Content -Raw -Path $functionFile.FullName_x000D__x000A__x000D__x000A_        $abstractSyntaxTree = [System.Management.Automation.Language.Parser]::ParseInput($scriptFileRawContent, [ref] $null, [ref] $null)_x000D__x000A__x000D__x000A_        $astSearchDelegate = { $args[0] -is [System.Management.Automation.Language.FunctionDefinitionAst] }_x000D__x000A__x000D__x000A_        $parsedFunction = $abstractSyntaxTree.FindAll( $astSearchDelegate, $true ) |_x000D__x000A_            Where-Object -FilterScript {_x000D__x000A_                $_.Name -eq $Name_x000D__x000A_            }_x000D__x000A__x000D__x000A_        $functionHelp = $parsedFunction.GetHelpContent()_x000D__x000A__x000D__x000A_        $functionHelp.Examples.Count | Should -BeGreaterThan 0_x000D__x000A_        $functionHelp.Examples[0] | Should -Match ([regex]::Escape($function.Name))_x000D__x000A_        $functionHelp.Examples[0].Length | Should -BeGreaterThan ($function.Name.Length + 10)_x000D__x000A__x000D__x000A_    </SBK>
              <Nil N="Tag" />
              <B N="Focus">false</B>
              <B N="Skip">false</B>
              <Ref N="Block" RefId="67" />
              <B N="First">false</B>
              <B N="Last">false</B>
              <B N="Include">false</B>
              <B N="Exclude">false</B>
              <B N="Explicit">false</B>
              <B N="ShouldRun">true</B>
              <I32 N="StartLine">169</I32>
              <B N="Executed">true</B>
              <DT N="ExecutedAt">2024-08-03T17:35:52.9069026-07:00</DT>
              <B N="Passed">false</B>
              <B N="Skipped">false</B>
              <B N="Inconclusive">false</B>
              <TS N="UserDuration">PT0.0132106S</TS>
              <TS N="FrameworkDuration">PT0.0388732S</TS>
              <Nil N="PluginData" />
              <Nil N="FrameworkData" />
            </Props>
          </Obj>
          <Obj RefId="1112">
            <TNRef RefId="30" />
            <ToString>[-] Should have at least one (1) example for Export-EventLog</ToString>
            <Props>
              <S N="Name">Should have at least one (1) example for &lt;Name&gt;</S>
              <Obj N="Path" RefId="1113">
                <TNRef RefId="28" />
                <LST>
                  <S>Help for module</S>
                  <S>Should have at least one (1) example for &lt;Name&gt;</S>
                </LST>
              </Obj>
              <Ref N="Data" RefId="434" />
              <S N="ExpandedName">Should have at least one (1) example for Export-EventLog</S>
              <S N="ExpandedPath">Help for module.Should have at least one (1) example for Export-EventLog</S>
              <S N="Result">Failed</S>
              <Obj N="ErrorRecord" RefId="1114">
                <TNRef RefId="31" />
                <LST>
                  <Obj RefId="1115">
                    <TNRef RefId="33" />
                    <ToString>Expected the actual value to be greater than 0, but got 0.</ToString>
                    <MS>
                      <S N="DisplayErrorMessage">Expected the actual value to be greater than 0, but got 0.</S>
                      <S N="DisplayStackTrace">at $functionHelp.Examples.Count | Should -BeGreaterThan 0, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:185_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:185</S>
                      <Obj N="Exception" RefId="1116">
                        <TNRef RefId="60" />
                        <ToString>System.Exception: Expected the actual value to be greater than 0, but got 0.</ToString>
                        <Props>
                          <Nil N="TargetSite" />
                          <S N="Message">Expected the actual value to be greater than 0, but got 0.</S>
                          <Obj N="Data" RefId="1117">
                            <TNRef RefId="35" />
                            <DCT />
                          </Obj>
                          <Nil N="InnerException" />
                          <Nil N="HelpLink" />
                          <Nil N="Source" />
                          <I32 N="HResult">-2146233088</I32>
                          <Nil N="StackTrace" />
                        </Props>
                      </Obj>
                      <Obj N="TargetObject" RefId="1118">
                        <TNRef RefId="38" />
                        <DCT>
                          <En>
                            <S N="Key">Message</S>
                            <S N="Value">Expected the actual value to be greater than 0, but got 0.</S>
                          </En>
                          <En>
                            <S N="Key">File</S>
                            <S N="Value">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1</S>
                          </En>
                          <En>
                            <S N="Key">Line</S>
                            <S N="Value">185</S>
                          </En>
                          <En>
                            <S N="Key">LineText</S>
                            <S N="Value">        $functionHelp.Examples.Count | Should -BeGreaterThan 0</S>
                          </En>
                          <En>
                            <S N="Key">Terminating</S>
                            <B N="Value">true</B>
                          </En>
                          <En>
                            <S N="Key">ShouldResult</S>
                            <Obj N="Value" RefId="1119">
                              <TNRef RefId="61" />
                              <ToString>Pester.ShouldResult</ToString>
                              <Props>
                                <B N="Succeeded">false</B>
                                <S N="FailureMessage">Expected the actual value to be greater than 0, but got 0.</S>
                                <Obj N="ExpectResult" RefId="1120">
                                  <TNRef RefId="62" />
                                  <ToString>Expected: 0 Actual: 0 Because: </ToString>
                                  <Props>
                                    <S N="Actual">0</S>
                                    <S N="Expected">0</S>
                                    <S N="Because"></S>
                                  </Props>
                                </Obj>
                              </Props>
                            </Obj>
                          </En>
                        </DCT>
                      </Obj>
                      <S N="FullyQualifiedErrorId">PesterAssertionFailed</S>
                      <Obj N="InvocationInfo" RefId="1121">
                        <TNRef RefId="37" />
                        <ToString>System.Management.Automation.InvocationInfo</ToString>
                        <Props>
                          <Nil N="MyCommand" />
                          <Obj N="BoundParameters" RefId="1122">
                            <TNRef RefId="38" />
                            <DCT />
                          </Obj>
                          <Obj N="UnboundArguments" RefId="1123">
                            <TNRef RefId="31" />
                            <LST />
                          </Obj>
                          <I32 N="ScriptLineNumber">8392</I32>
                          <I32 N="OffsetInLine">13</I32>
                          <I64 N="HistoryId">18</I64>
                          <S N="ScriptName">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1</S>
                          <S N="Line">            throw $errorRecord_x000D__x000A_</S>
                          <S N="Statement">throw $errorRecord</S>
                          <S N="PositionMessage">At C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1:8392 char:13_x000D__x000A_+             throw $errorRecord_x000D__x000A_+             ~~~~~~~~~~~~~~~~~~</S>
                          <S N="PSScriptRoot">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1</S>
                          <S N="PSCommandPath">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1</S>
                          <S N="InvocationName"></S>
                          <I32 N="PipelineLength">0</I32>
                          <I32 N="PipelinePosition">0</I32>
                          <B N="ExpectingInput">false</B>
                          <Obj N="CommandOrigin" RefId="1124">
                            <TNRef RefId="39" />
                            <ToString>Internal</ToString>
                            <I32>1</I32>
                          </Obj>
                          <Nil N="DisplayScriptPosition" />
                        </Props>
                        <MS>
                          <Obj N="ParameterValues" RefId="1125">
                            <TNRef RefId="25" />
                            <DCT />
                          </Obj>
                        </MS>
                      </Obj>
                      <I32 N="ErrorCategory_Category">8</I32>
                      <S N="ErrorCategory_Activity"></S>
                      <S N="ErrorCategory_Reason">Exception</S>
                      <S N="ErrorCategory_TargetName">System.Collections.Generic.Dictionary`2[System.String,System.Object]</S>
                      <S N="ErrorCategory_TargetType">Dictionary`2</S>
                      <S N="ErrorCategory_Message">InvalidResult: (System.Collections.…ring,System.Object]:Dictionary`2) [], Exception</S>
                      <B N="SerializeExtendedInfo">false</B>
                      <S N="ErrorDetails_ScriptStackTrace">at Invoke-Assertion, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 8392_x000D__x000A_at Should&lt;End&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 8335_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1: line 185_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2024_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1985_x000D__x000A_at Invoke-ScriptBlock, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2157_x000D__x000A_at Invoke-TestItem, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1199_x000D__x000A_at Invoke-Block, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 835_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 893_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2024_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1985_x000D__x000A_at Invoke-ScriptBlock, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2160_x000D__x000A_at Invoke-Block, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 940_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 893_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2024_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1985_x000D__x000A_at Invoke-ScriptBlock, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2160_x000D__x000A_at Invoke-Block, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 940_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1688_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.ps1: line 3_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 3260_x000D__x000A_at Invoke-InNewScriptScope, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 3267_x000D__x000A_at Run-Test, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1691_x000D__x000A_at Invoke-Test, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2512_x000D__x000A_at Invoke-Pester&lt;End&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 5110_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Sampler\0.118.1\tasks\Invoke-Pester.pester.build.ps1: line 906_x000D__x000A_at *Task, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 629_x000D__x000A_at *Task, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 601_x000D__x000A_at *Task, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 601_x000D__x000A_at &lt;ScriptBlock&gt;&lt;End&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 787_x000D__x000A_at &lt;ScriptBlock&gt;&lt;Begin&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\build.ps1: line 532_x000D__x000A_at &lt;ScriptBlock&gt;, &lt;No file&gt;: line 1</S>
                      <Nil N="PSMessageDetails" />
                    </MS>
                  </Obj>
                </LST>
              </Obj>
              <Nil N="StandardOutput" />
              <TS N="Duration">PT0.0113887S</TS>
              <S N="ItemType">Test</S>
              <S N="Id">169:5</S>
              <S N="GroupId">169:5</S>
              <SBK N="ScriptBlock">_x000D__x000A_        $functionFile = Get-ChildItem -Path $sourcePath -Recurse -Include "$Name.ps1"_x000D__x000A__x000D__x000A_        $scriptFileRawContent = Get-Content -Raw -Path $functionFile.FullName_x000D__x000A__x000D__x000A_        $abstractSyntaxTree = [System.Management.Automation.Language.Parser]::ParseInput($scriptFileRawContent, [ref] $null, [ref] $null)_x000D__x000A__x000D__x000A_        $astSearchDelegate = { $args[0] -is [System.Management.Automation.Language.FunctionDefinitionAst] }_x000D__x000A__x000D__x000A_        $parsedFunction = $abstractSyntaxTree.FindAll( $astSearchDelegate, $true ) |_x000D__x000A_            Where-Object -FilterScript {_x000D__x000A_                $_.Name -eq $Name_x000D__x000A_            }_x000D__x000A__x000D__x000A_        $functionHelp = $parsedFunction.GetHelpContent()_x000D__x000A__x000D__x000A_        $functionHelp.Examples.Count | Should -BeGreaterThan 0_x000D__x000A_        $functionHelp.Examples[0] | Should -Match ([regex]::Escape($function.Name))_x000D__x000A_        $functionHelp.Examples[0].Length | Should -BeGreaterThan ($function.Name.Length + 10)_x000D__x000A__x000D__x000A_    </SBK>
              <Nil N="Tag" />
              <B N="Focus">false</B>
              <B N="Skip">false</B>
              <Ref N="Block" RefId="67" />
              <B N="First">false</B>
              <B N="Last">false</B>
              <B N="Include">false</B>
              <B N="Exclude">false</B>
              <B N="Explicit">false</B>
              <B N="ShouldRun">true</B>
              <I32 N="StartLine">169</I32>
              <B N="Executed">true</B>
              <DT N="ExecutedAt">2024-08-03T17:35:53.0273804-07:00</DT>
              <B N="Passed">false</B>
              <B N="Skipped">false</B>
              <B N="Inconclusive">false</B>
              <TS N="UserDuration">PT0.0064444S</TS>
              <TS N="FrameworkDuration">PT0.0049443S</TS>
              <Nil N="PluginData" />
              <Nil N="FrameworkData" />
            </Props>
          </Obj>
          <Obj RefId="1126">
            <TNRef RefId="30" />
            <ToString>[-] Should have at least one (1) example for Handle-Error</ToString>
            <Props>
              <S N="Name">Should have at least one (1) example for &lt;Name&gt;</S>
              <Obj N="Path" RefId="1127">
                <TNRef RefId="28" />
                <LST>
                  <S>Help for module</S>
                  <S>Should have at least one (1) example for &lt;Name&gt;</S>
                </LST>
              </Obj>
              <Ref N="Data" RefId="449" />
              <S N="ExpandedName">Should have at least one (1) example for Handle-Error</S>
              <S N="ExpandedPath">Help for module.Should have at least one (1) example for Handle-Error</S>
              <S N="Result">Failed</S>
              <Obj N="ErrorRecord" RefId="1128">
                <TNRef RefId="31" />
                <LST>
                  <Obj RefId="1129">
                    <TNRef RefId="33" />
                    <ToString>Expected the actual value to be greater than 0, but got 0.</ToString>
                    <MS>
                      <S N="DisplayErrorMessage">Expected the actual value to be greater than 0, but got 0.</S>
                      <S N="DisplayStackTrace">at $functionHelp.Examples.Count | Should -BeGreaterThan 0, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:185_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:185</S>
                      <Obj N="Exception" RefId="1130">
                        <TNRef RefId="60" />
                        <ToString>System.Exception: Expected the actual value to be greater than 0, but got 0.</ToString>
                        <Props>
                          <Nil N="TargetSite" />
                          <S N="Message">Expected the actual value to be greater than 0, but got 0.</S>
                          <Obj N="Data" RefId="1131">
                            <TNRef RefId="35" />
                            <DCT />
                          </Obj>
                          <Nil N="InnerException" />
                          <Nil N="HelpLink" />
                          <Nil N="Source" />
                          <I32 N="HResult">-2146233088</I32>
                          <Nil N="StackTrace" />
                        </Props>
                      </Obj>
                      <Obj N="TargetObject" RefId="1132">
                        <TNRef RefId="38" />
                        <DCT>
                          <En>
                            <S N="Key">Message</S>
                            <S N="Value">Expected the actual value to be greater than 0, but got 0.</S>
                          </En>
                          <En>
                            <S N="Key">File</S>
                            <S N="Value">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1</S>
                          </En>
                          <En>
                            <S N="Key">Line</S>
                            <S N="Value">185</S>
                          </En>
                          <En>
                            <S N="Key">LineText</S>
                            <S N="Value">        $functionHelp.Examples.Count | Should -BeGreaterThan 0</S>
                          </En>
                          <En>
                            <S N="Key">Terminating</S>
                            <B N="Value">true</B>
                          </En>
                          <En>
                            <S N="Key">ShouldResult</S>
                            <Obj N="Value" RefId="1133">
                              <TNRef RefId="61" />
                              <ToString>Pester.ShouldResult</ToString>
                              <Props>
                                <B N="Succeeded">false</B>
                                <S N="FailureMessage">Expected the actual value to be greater than 0, but got 0.</S>
                                <Obj N="ExpectResult" RefId="1134">
                                  <TNRef RefId="62" />
                                  <ToString>Expected: 0 Actual: 0 Because: </ToString>
                                  <Props>
                                    <S N="Actual">0</S>
                                    <S N="Expected">0</S>
                                    <S N="Because"></S>
                                  </Props>
                                </Obj>
                              </Props>
                            </Obj>
                          </En>
                        </DCT>
                      </Obj>
                      <S N="FullyQualifiedErrorId">PesterAssertionFailed</S>
                      <Obj N="InvocationInfo" RefId="1135">
                        <TNRef RefId="37" />
                        <ToString>System.Management.Automation.InvocationInfo</ToString>
                        <Props>
                          <Nil N="MyCommand" />
                          <Obj N="BoundParameters" RefId="1136">
                            <TNRef RefId="38" />
                            <DCT />
                          </Obj>
                          <Obj N="UnboundArguments" RefId="1137">
                            <TNRef RefId="31" />
                            <LST />
                          </Obj>
                          <I32 N="ScriptLineNumber">8392</I32>
                          <I32 N="OffsetInLine">13</I32>
                          <I64 N="HistoryId">18</I64>
                          <S N="ScriptName">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1</S>
                          <S N="Line">            throw $errorRecord_x000D__x000A_</S>
                          <S N="Statement">throw $errorRecord</S>
                          <S N="PositionMessage">At C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1:8392 char:13_x000D__x000A_+             throw $errorRecord_x000D__x000A_+             ~~~~~~~~~~~~~~~~~~</S>
                          <S N="PSScriptRoot">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1</S>
                          <S N="PSCommandPath">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1</S>
                          <S N="InvocationName"></S>
                          <I32 N="PipelineLength">0</I32>
                          <I32 N="PipelinePosition">0</I32>
                          <B N="ExpectingInput">false</B>
                          <Obj N="CommandOrigin" RefId="1138">
                            <TNRef RefId="39" />
                            <ToString>Internal</ToString>
                            <I32>1</I32>
                          </Obj>
                          <Nil N="DisplayScriptPosition" />
                        </Props>
                        <MS>
                          <Obj N="ParameterValues" RefId="1139">
                            <TNRef RefId="25" />
                            <DCT />
                          </Obj>
                        </MS>
                      </Obj>
                      <I32 N="ErrorCategory_Category">8</I32>
                      <S N="ErrorCategory_Activity"></S>
                      <S N="ErrorCategory_Reason">Exception</S>
                      <S N="ErrorCategory_TargetName">System.Collections.Generic.Dictionary`2[System.String,System.Object]</S>
                      <S N="ErrorCategory_TargetType">Dictionary`2</S>
                      <S N="ErrorCategory_Message">InvalidResult: (System.Collections.…ring,System.Object]:Dictionary`2) [], Exception</S>
                      <B N="SerializeExtendedInfo">false</B>
                      <S N="ErrorDetails_ScriptStackTrace">at Invoke-Assertion, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 8392_x000D__x000A_at Should&lt;End&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 8335_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1: line 185_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2024_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1985_x000D__x000A_at Invoke-ScriptBlock, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2157_x000D__x000A_at Invoke-TestItem, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1199_x000D__x000A_at Invoke-Block, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 835_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 893_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2024_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1985_x000D__x000A_at Invoke-ScriptBlock, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2160_x000D__x000A_at Invoke-Block, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 940_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 893_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2024_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1985_x000D__x000A_at Invoke-ScriptBlock, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2160_x000D__x000A_at Invoke-Block, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 940_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1688_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.ps1: line 3_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 3260_x000D__x000A_at Invoke-InNewScriptScope, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 3267_x000D__x000A_at Run-Test, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1691_x000D__x000A_at Invoke-Test, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2512_x000D__x000A_at Invoke-Pester&lt;End&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 5110_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Sampler\0.118.1\tasks\Invoke-Pester.pester.build.ps1: line 906_x000D__x000A_at *Task, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 629_x000D__x000A_at *Task, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 601_x000D__x000A_at *Task, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 601_x000D__x000A_at &lt;ScriptBlock&gt;&lt;End&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 787_x000D__x000A_at &lt;ScriptBlock&gt;&lt;Begin&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\build.ps1: line 532_x000D__x000A_at &lt;ScriptBlock&gt;, &lt;No file&gt;: line 1</S>
                      <Nil N="PSMessageDetails" />
                    </MS>
                  </Obj>
                </LST>
              </Obj>
              <Nil N="StandardOutput" />
              <TS N="Duration">PT0.0110422S</TS>
              <S N="ItemType">Test</S>
              <S N="Id">169:5</S>
              <S N="GroupId">169:5</S>
              <SBK N="ScriptBlock">_x000D__x000A_        $functionFile = Get-ChildItem -Path $sourcePath -Recurse -Include "$Name.ps1"_x000D__x000A__x000D__x000A_        $scriptFileRawContent = Get-Content -Raw -Path $functionFile.FullName_x000D__x000A__x000D__x000A_        $abstractSyntaxTree = [System.Management.Automation.Language.Parser]::ParseInput($scriptFileRawContent, [ref] $null, [ref] $null)_x000D__x000A__x000D__x000A_        $astSearchDelegate = { $args[0] -is [System.Management.Automation.Language.FunctionDefinitionAst] }_x000D__x000A__x000D__x000A_        $parsedFunction = $abstractSyntaxTree.FindAll( $astSearchDelegate, $true ) |_x000D__x000A_            Where-Object -FilterScript {_x000D__x000A_                $_.Name -eq $Name_x000D__x000A_            }_x000D__x000A__x000D__x000A_        $functionHelp = $parsedFunction.GetHelpContent()_x000D__x000A__x000D__x000A_        $functionHelp.Examples.Count | Should -BeGreaterThan 0_x000D__x000A_        $functionHelp.Examples[0] | Should -Match ([regex]::Escape($function.Name))_x000D__x000A_        $functionHelp.Examples[0].Length | Should -BeGreaterThan ($function.Name.Length + 10)_x000D__x000A__x000D__x000A_    </SBK>
              <Nil N="Tag" />
              <B N="Focus">false</B>
              <B N="Skip">false</B>
              <Ref N="Block" RefId="67" />
              <B N="First">false</B>
              <B N="Last">false</B>
              <B N="Include">false</B>
              <B N="Exclude">false</B>
              <B N="Explicit">false</B>
              <B N="ShouldRun">true</B>
              <I32 N="StartLine">169</I32>
              <B N="Executed">true</B>
              <DT N="ExecutedAt">2024-08-03T17:35:53.038796-07:00</DT>
              <B N="Passed">false</B>
              <B N="Skipped">false</B>
              <B N="Inconclusive">false</B>
              <TS N="UserDuration">PT0.0059047S</TS>
              <TS N="FrameworkDuration">PT0.0051375S</TS>
              <Nil N="PluginData" />
              <Nil N="FrameworkData" />
            </Props>
          </Obj>
          <Obj RefId="1140">
            <TNRef RefId="30" />
            <ToString>[-] Should have at least one (1) example for Initialize-CSVDirectory</ToString>
            <Props>
              <S N="Name">Should have at least one (1) example for &lt;Name&gt;</S>
              <Obj N="Path" RefId="1141">
                <TNRef RefId="28" />
                <LST>
                  <S>Help for module</S>
                  <S>Should have at least one (1) example for &lt;Name&gt;</S>
                </LST>
              </Obj>
              <Ref N="Data" RefId="464" />
              <S N="ExpandedName">Should have at least one (1) example for Initialize-CSVDirectory</S>
              <S N="ExpandedPath">Help for module.Should have at least one (1) example for Initialize-CSVDirectory</S>
              <S N="Result">Failed</S>
              <Obj N="ErrorRecord" RefId="1142">
                <TNRef RefId="31" />
                <LST>
                  <Obj RefId="1143">
                    <TNRef RefId="33" />
                    <ToString>Expected the actual value to be greater than 0, but got 0.</ToString>
                    <MS>
                      <S N="DisplayErrorMessage">Expected the actual value to be greater than 0, but got 0.</S>
                      <S N="DisplayStackTrace">at $functionHelp.Examples.Count | Should -BeGreaterThan 0, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:185_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:185</S>
                      <Obj N="Exception" RefId="1144">
                        <TNRef RefId="60" />
                        <ToString>System.Exception: Expected the actual value to be greater than 0, but got 0.</ToString>
                        <Props>
                          <Nil N="TargetSite" />
                          <S N="Message">Expected the actual value to be greater than 0, but got 0.</S>
                          <Obj N="Data" RefId="1145">
                            <TNRef RefId="35" />
                            <DCT />
                          </Obj>
                          <Nil N="InnerException" />
                          <Nil N="HelpLink" />
                          <Nil N="Source" />
                          <I32 N="HResult">-2146233088</I32>
                          <Nil N="StackTrace" />
                        </Props>
                      </Obj>
                      <Obj N="TargetObject" RefId="1146">
                        <TNRef RefId="38" />
                        <DCT>
                          <En>
                            <S N="Key">Message</S>
                            <S N="Value">Expected the actual value to be greater than 0, but got 0.</S>
                          </En>
                          <En>
                            <S N="Key">File</S>
                            <S N="Value">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1</S>
                          </En>
                          <En>
                            <S N="Key">Line</S>
                            <S N="Value">185</S>
                          </En>
                          <En>
                            <S N="Key">LineText</S>
                            <S N="Value">        $functionHelp.Examples.Count | Should -BeGreaterThan 0</S>
                          </En>
                          <En>
                            <S N="Key">Terminating</S>
                            <B N="Value">true</B>
                          </En>
                          <En>
                            <S N="Key">ShouldResult</S>
                            <Obj N="Value" RefId="1147">
                              <TNRef RefId="61" />
                              <ToString>Pester.ShouldResult</ToString>
                              <Props>
                                <B N="Succeeded">false</B>
                                <S N="FailureMessage">Expected the actual value to be greater than 0, but got 0.</S>
                                <Obj N="ExpectResult" RefId="1148">
                                  <TNRef RefId="62" />
                                  <ToString>Expected: 0 Actual: 0 Because: </ToString>
                                  <Props>
                                    <S N="Actual">0</S>
                                    <S N="Expected">0</S>
                                    <S N="Because"></S>
                                  </Props>
                                </Obj>
                              </Props>
                            </Obj>
                          </En>
                        </DCT>
                      </Obj>
                      <S N="FullyQualifiedErrorId">PesterAssertionFailed</S>
                      <Obj N="InvocationInfo" RefId="1149">
                        <TNRef RefId="37" />
                        <ToString>System.Management.Automation.InvocationInfo</ToString>
                        <Props>
                          <Nil N="MyCommand" />
                          <Obj N="BoundParameters" RefId="1150">
                            <TNRef RefId="38" />
                            <DCT />
                          </Obj>
                          <Obj N="UnboundArguments" RefId="1151">
                            <TNRef RefId="31" />
                            <LST />
                          </Obj>
                          <I32 N="ScriptLineNumber">8392</I32>
                          <I32 N="OffsetInLine">13</I32>
                          <I64 N="HistoryId">18</I64>
                          <S N="ScriptName">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1</S>
                          <S N="Line">            throw $errorRecord_x000D__x000A_</S>
                          <S N="Statement">throw $errorRecord</S>
                          <S N="PositionMessage">At C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1:8392 char:13_x000D__x000A_+             throw $errorRecord_x000D__x000A_+             ~~~~~~~~~~~~~~~~~~</S>
                          <S N="PSScriptRoot">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1</S>
                          <S N="PSCommandPath">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1</S>
                          <S N="InvocationName"></S>
                          <I32 N="PipelineLength">0</I32>
                          <I32 N="PipelinePosition">0</I32>
                          <B N="ExpectingInput">false</B>
                          <Obj N="CommandOrigin" RefId="1152">
                            <TNRef RefId="39" />
                            <ToString>Internal</ToString>
                            <I32>1</I32>
                          </Obj>
                          <Nil N="DisplayScriptPosition" />
                        </Props>
                        <MS>
                          <Obj N="ParameterValues" RefId="1153">
                            <TNRef RefId="25" />
                            <DCT />
                          </Obj>
                        </MS>
                      </Obj>
                      <I32 N="ErrorCategory_Category">8</I32>
                      <S N="ErrorCategory_Activity"></S>
                      <S N="ErrorCategory_Reason">Exception</S>
                      <S N="ErrorCategory_TargetName">System.Collections.Generic.Dictionary`2[System.String,System.Object]</S>
                      <S N="ErrorCategory_TargetType">Dictionary`2</S>
                      <S N="ErrorCategory_Message">InvalidResult: (System.Collections.…ring,System.Object]:Dictionary`2) [], Exception</S>
                      <B N="SerializeExtendedInfo">false</B>
                      <S N="ErrorDetails_ScriptStackTrace">at Invoke-Assertion, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 8392_x000D__x000A_at Should&lt;End&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 8335_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1: line 185_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2024_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1985_x000D__x000A_at Invoke-ScriptBlock, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2157_x000D__x000A_at Invoke-TestItem, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1199_x000D__x000A_at Invoke-Block, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 835_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 893_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2024_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1985_x000D__x000A_at Invoke-ScriptBlock, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2160_x000D__x000A_at Invoke-Block, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 940_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 893_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2024_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1985_x000D__x000A_at Invoke-ScriptBlock, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2160_x000D__x000A_at Invoke-Block, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 940_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1688_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.ps1: line 3_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 3260_x000D__x000A_at Invoke-InNewScriptScope, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 3267_x000D__x000A_at Run-Test, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1691_x000D__x000A_at Invoke-Test, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2512_x000D__x000A_at Invoke-Pester&lt;End&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 5110_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Sampler\0.118.1\tasks\Invoke-Pester.pester.build.ps1: line 906_x000D__x000A_at *Task, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 629_x000D__x000A_at *Task, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 601_x000D__x000A_at *Task, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 601_x000D__x000A_at &lt;ScriptBlock&gt;&lt;End&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 787_x000D__x000A_at &lt;ScriptBlock&gt;&lt;Begin&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\build.ps1: line 532_x000D__x000A_at &lt;ScriptBlock&gt;, &lt;No file&gt;: line 1</S>
                      <Nil N="PSMessageDetails" />
                    </MS>
                  </Obj>
                </LST>
              </Obj>
              <Nil N="StandardOutput" />
              <TS N="Duration">PT0.010286S</TS>
              <S N="ItemType">Test</S>
              <S N="Id">169:5</S>
              <S N="GroupId">169:5</S>
              <SBK N="ScriptBlock">_x000D__x000A_        $functionFile = Get-ChildItem -Path $sourcePath -Recurse -Include "$Name.ps1"_x000D__x000A__x000D__x000A_        $scriptFileRawContent = Get-Content -Raw -Path $functionFile.FullName_x000D__x000A__x000D__x000A_        $abstractSyntaxTree = [System.Management.Automation.Language.Parser]::ParseInput($scriptFileRawContent, [ref] $null, [ref] $null)_x000D__x000A__x000D__x000A_        $astSearchDelegate = { $args[0] -is [System.Management.Automation.Language.FunctionDefinitionAst] }_x000D__x000A__x000D__x000A_        $parsedFunction = $abstractSyntaxTree.FindAll( $astSearchDelegate, $true ) |_x000D__x000A_            Where-Object -FilterScript {_x000D__x000A_                $_.Name -eq $Name_x000D__x000A_            }_x000D__x000A__x000D__x000A_        $functionHelp = $parsedFunction.GetHelpContent()_x000D__x000A__x000D__x000A_        $functionHelp.Examples.Count | Should -BeGreaterThan 0_x000D__x000A_        $functionHelp.Examples[0] | Should -Match ([regex]::Escape($function.Name))_x000D__x000A_        $functionHelp.Examples[0].Length | Should -BeGreaterThan ($function.Name.Length + 10)_x000D__x000A__x000D__x000A_    </SBK>
              <Nil N="Tag" />
              <B N="Focus">false</B>
              <B N="Skip">false</B>
              <Ref N="Block" RefId="67" />
              <B N="First">false</B>
              <B N="Last">false</B>
              <B N="Include">false</B>
              <B N="Exclude">false</B>
              <B N="Explicit">false</B>
              <B N="ShouldRun">true</B>
              <I32 N="StartLine">169</I32>
              <B N="Executed">true</B>
              <DT N="ExecutedAt">2024-08-03T17:35:53.0498771-07:00</DT>
              <B N="Passed">false</B>
              <B N="Skipped">false</B>
              <B N="Inconclusive">false</B>
              <TS N="UserDuration">PT0.004909S</TS>
              <TS N="FrameworkDuration">PT0.005377S</TS>
              <Nil N="PluginData" />
              <Nil N="FrameworkData" />
            </Props>
          </Obj>
          <Obj RefId="1154">
            <TNRef RefId="30" />
            <ToString>[-] Should have at least one (1) example for Initialize-ScriptAndLogging</ToString>
            <Props>
              <S N="Name">Should have at least one (1) example for &lt;Name&gt;</S>
              <Obj N="Path" RefId="1155">
                <TNRef RefId="28" />
                <LST>
                  <S>Help for module</S>
                  <S>Should have at least one (1) example for &lt;Name&gt;</S>
                </LST>
              </Obj>
              <Ref N="Data" RefId="479" />
              <S N="ExpandedName">Should have at least one (1) example for Initialize-ScriptAndLogging</S>
              <S N="ExpandedPath">Help for module.Should have at least one (1) example for Initialize-ScriptAndLogging</S>
              <S N="Result">Failed</S>
              <Obj N="ErrorRecord" RefId="1156">
                <TNRef RefId="31" />
                <LST>
                  <Obj RefId="1157">
                    <TNRef RefId="33" />
                    <ToString>Expected the actual value to be greater than 0, but got 0.</ToString>
                    <MS>
                      <S N="DisplayErrorMessage">Expected the actual value to be greater than 0, but got 0.</S>
                      <S N="DisplayStackTrace">at $functionHelp.Examples.Count | Should -BeGreaterThan 0, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:185_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:185</S>
                      <Obj N="Exception" RefId="1158">
                        <TNRef RefId="60" />
                        <ToString>System.Exception: Expected the actual value to be greater than 0, but got 0.</ToString>
                        <Props>
                          <Nil N="TargetSite" />
                          <S N="Message">Expected the actual value to be greater than 0, but got 0.</S>
                          <Obj N="Data" RefId="1159">
                            <TNRef RefId="35" />
                            <DCT />
                          </Obj>
                          <Nil N="InnerException" />
                          <Nil N="HelpLink" />
                          <Nil N="Source" />
                          <I32 N="HResult">-2146233088</I32>
                          <Nil N="StackTrace" />
                        </Props>
                      </Obj>
                      <Obj N="TargetObject" RefId="1160">
                        <TNRef RefId="38" />
                        <DCT>
                          <En>
                            <S N="Key">Message</S>
                            <S N="Value">Expected the actual value to be greater than 0, but got 0.</S>
                          </En>
                          <En>
                            <S N="Key">File</S>
                            <S N="Value">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1</S>
                          </En>
                          <En>
                            <S N="Key">Line</S>
                            <S N="Value">185</S>
                          </En>
                          <En>
                            <S N="Key">LineText</S>
                            <S N="Value">        $functionHelp.Examples.Count | Should -BeGreaterThan 0</S>
                          </En>
                          <En>
                            <S N="Key">Terminating</S>
                            <B N="Value">true</B>
                          </En>
                          <En>
                            <S N="Key">ShouldResult</S>
                            <Obj N="Value" RefId="1161">
                              <TNRef RefId="61" />
                              <ToString>Pester.ShouldResult</ToString>
                              <Props>
                                <B N="Succeeded">false</B>
                                <S N="FailureMessage">Expected the actual value to be greater than 0, but got 0.</S>
                                <Obj N="ExpectResult" RefId="1162">
                                  <TNRef RefId="62" />
                                  <ToString>Expected: 0 Actual: 0 Because: </ToString>
                                  <Props>
                                    <S N="Actual">0</S>
                                    <S N="Expected">0</S>
                                    <S N="Because"></S>
                                  </Props>
                                </Obj>
                              </Props>
                            </Obj>
                          </En>
                        </DCT>
                      </Obj>
                      <S N="FullyQualifiedErrorId">PesterAssertionFailed</S>
                      <Obj N="InvocationInfo" RefId="1163">
                        <TNRef RefId="37" />
                        <ToString>System.Management.Automation.InvocationInfo</ToString>
                        <Props>
                          <Nil N="MyCommand" />
                          <Obj N="BoundParameters" RefId="1164">
                            <TNRef RefId="38" />
                            <DCT />
                          </Obj>
                          <Obj N="UnboundArguments" RefId="1165">
                            <TNRef RefId="31" />
                            <LST />
                          </Obj>
                          <I32 N="ScriptLineNumber">8392</I32>
                          <I32 N="OffsetInLine">13</I32>
                          <I64 N="HistoryId">18</I64>
                          <S N="ScriptName">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1</S>
                          <S N="Line">            throw $errorRecord_x000D__x000A_</S>
                          <S N="Statement">throw $errorRecord</S>
                          <S N="PositionMessage">At C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1:8392 char:13_x000D__x000A_+             throw $errorRecord_x000D__x000A_+             ~~~~~~~~~~~~~~~~~~</S>
                          <S N="PSScriptRoot">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1</S>
                          <S N="PSCommandPath">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1</S>
                          <S N="InvocationName"></S>
                          <I32 N="PipelineLength">0</I32>
                          <I32 N="PipelinePosition">0</I32>
                          <B N="ExpectingInput">false</B>
                          <Obj N="CommandOrigin" RefId="1166">
                            <TNRef RefId="39" />
                            <ToString>Internal</ToString>
                            <I32>1</I32>
                          </Obj>
                          <Nil N="DisplayScriptPosition" />
                        </Props>
                        <MS>
                          <Obj N="ParameterValues" RefId="1167">
                            <TNRef RefId="25" />
                            <DCT />
                          </Obj>
                        </MS>
                      </Obj>
                      <I32 N="ErrorCategory_Category">8</I32>
                      <S N="ErrorCategory_Activity"></S>
                      <S N="ErrorCategory_Reason">Exception</S>
                      <S N="ErrorCategory_TargetName">System.Collections.Generic.Dictionary`2[System.String,System.Object]</S>
                      <S N="ErrorCategory_TargetType">Dictionary`2</S>
                      <S N="ErrorCategory_Message">InvalidResult: (System.Collections.…ring,System.Object]:Dictionary`2) [], Exception</S>
                      <B N="SerializeExtendedInfo">false</B>
                      <S N="ErrorDetails_ScriptStackTrace">at Invoke-Assertion, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 8392_x000D__x000A_at Should&lt;End&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 8335_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1: line 185_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2024_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1985_x000D__x000A_at Invoke-ScriptBlock, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2157_x000D__x000A_at Invoke-TestItem, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1199_x000D__x000A_at Invoke-Block, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 835_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 893_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2024_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1985_x000D__x000A_at Invoke-ScriptBlock, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2160_x000D__x000A_at Invoke-Block, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 940_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 893_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2024_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1985_x000D__x000A_at Invoke-ScriptBlock, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2160_x000D__x000A_at Invoke-Block, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 940_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1688_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.ps1: line 3_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 3260_x000D__x000A_at Invoke-InNewScriptScope, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 3267_x000D__x000A_at Run-Test, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1691_x000D__x000A_at Invoke-Test, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2512_x000D__x000A_at Invoke-Pester&lt;End&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 5110_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Sampler\0.118.1\tasks\Invoke-Pester.pester.build.ps1: line 906_x000D__x000A_at *Task, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 629_x000D__x000A_at *Task, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 601_x000D__x000A_at *Task, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 601_x000D__x000A_at &lt;ScriptBlock&gt;&lt;End&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 787_x000D__x000A_at &lt;ScriptBlock&gt;&lt;Begin&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\build.ps1: line 532_x000D__x000A_at &lt;ScriptBlock&gt;, &lt;No file&gt;: line 1</S>
                      <Nil N="PSMessageDetails" />
                    </MS>
                  </Obj>
                </LST>
              </Obj>
              <Nil N="StandardOutput" />
              <TS N="Duration">PT0.010573S</TS>
              <S N="ItemType">Test</S>
              <S N="Id">169:5</S>
              <S N="GroupId">169:5</S>
              <SBK N="ScriptBlock">_x000D__x000A_        $functionFile = Get-ChildItem -Path $sourcePath -Recurse -Include "$Name.ps1"_x000D__x000A__x000D__x000A_        $scriptFileRawContent = Get-Content -Raw -Path $functionFile.FullName_x000D__x000A__x000D__x000A_        $abstractSyntaxTree = [System.Management.Automation.Language.Parser]::ParseInput($scriptFileRawContent, [ref] $null, [ref] $null)_x000D__x000A__x000D__x000A_        $astSearchDelegate = { $args[0] -is [System.Management.Automation.Language.FunctionDefinitionAst] }_x000D__x000A__x000D__x000A_        $parsedFunction = $abstractSyntaxTree.FindAll( $astSearchDelegate, $true ) |_x000D__x000A_            Where-Object -FilterScript {_x000D__x000A_                $_.Name -eq $Name_x000D__x000A_            }_x000D__x000A__x000D__x000A_        $functionHelp = $parsedFunction.GetHelpContent()_x000D__x000A__x000D__x000A_        $functionHelp.Examples.Count | Should -BeGreaterThan 0_x000D__x000A_        $functionHelp.Examples[0] | Should -Match ([regex]::Escape($function.Name))_x000D__x000A_        $functionHelp.Examples[0].Length | Should -BeGreaterThan ($function.Name.Length + 10)_x000D__x000A__x000D__x000A_    </SBK>
              <Nil N="Tag" />
              <B N="Focus">false</B>
              <B N="Skip">false</B>
              <Ref N="Block" RefId="67" />
              <B N="First">false</B>
              <B N="Last">false</B>
              <B N="Include">false</B>
              <B N="Exclude">false</B>
              <B N="Explicit">false</B>
              <B N="ShouldRun">true</B>
              <I32 N="StartLine">169</I32>
              <B N="Executed">true</B>
              <DT N="ExecutedAt">2024-08-03T17:35:53.0602525-07:00</DT>
              <B N="Passed">false</B>
              <B N="Skipped">false</B>
              <B N="Inconclusive">false</B>
              <TS N="UserDuration">PT0.0051947S</TS>
              <TS N="FrameworkDuration">PT0.0053783S</TS>
              <Nil N="PluginData" />
              <Nil N="FrameworkData" />
            </Props>
          </Obj>
          <Obj RefId="1168">
            <TNRef RefId="30" />
            <ToString>[-] Should have at least one (1) example for Log-And-Execute-Step</ToString>
            <Props>
              <S N="Name">Should have at least one (1) example for &lt;Name&gt;</S>
              <Obj N="Path" RefId="1169">
                <TNRef RefId="28" />
                <LST>
                  <S>Help for module</S>
                  <S>Should have at least one (1) example for &lt;Name&gt;</S>
                </LST>
              </Obj>
              <Ref N="Data" RefId="494" />
              <S N="ExpandedName">Should have at least one (1) example for Log-And-Execute-Step</S>
              <S N="ExpandedPath">Help for module.Should have at least one (1) example for Log-And-Execute-Step</S>
              <S N="Result">Failed</S>
              <Obj N="ErrorRecord" RefId="1170">
                <TNRef RefId="31" />
                <LST>
                  <Obj RefId="1171">
                    <TNRef RefId="33" />
                    <ToString>Expected the actual value to be greater than 0, but got 0.</ToString>
                    <MS>
                      <S N="DisplayErrorMessage">Expected the actual value to be greater than 0, but got 0.</S>
                      <S N="DisplayStackTrace">at $functionHelp.Examples.Count | Should -BeGreaterThan 0, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:185_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:185</S>
                      <Obj N="Exception" RefId="1172">
                        <TNRef RefId="60" />
                        <ToString>System.Exception: Expected the actual value to be greater than 0, but got 0.</ToString>
                        <Props>
                          <Nil N="TargetSite" />
                          <S N="Message">Expected the actual value to be greater than 0, but got 0.</S>
                          <Obj N="Data" RefId="1173">
                            <TNRef RefId="35" />
                            <DCT />
                          </Obj>
                          <Nil N="InnerException" />
                          <Nil N="HelpLink" />
                          <Nil N="Source" />
                          <I32 N="HResult">-2146233088</I32>
                          <Nil N="StackTrace" />
                        </Props>
                      </Obj>
                      <Obj N="TargetObject" RefId="1174">
                        <TNRef RefId="38" />
                        <DCT>
                          <En>
                            <S N="Key">Message</S>
                            <S N="Value">Expected the actual value to be greater than 0, but got 0.</S>
                          </En>
                          <En>
                            <S N="Key">File</S>
                            <S N="Value">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1</S>
                          </En>
                          <En>
                            <S N="Key">Line</S>
                            <S N="Value">185</S>
                          </En>
                          <En>
                            <S N="Key">LineText</S>
                            <S N="Value">        $functionHelp.Examples.Count | Should -BeGreaterThan 0</S>
                          </En>
                          <En>
                            <S N="Key">Terminating</S>
                            <B N="Value">true</B>
                          </En>
                          <En>
                            <S N="Key">ShouldResult</S>
                            <Obj N="Value" RefId="1175">
                              <TNRef RefId="61" />
                              <ToString>Pester.ShouldResult</ToString>
                              <Props>
                                <B N="Succeeded">false</B>
                                <S N="FailureMessage">Expected the actual value to be greater than 0, but got 0.</S>
                                <Obj N="ExpectResult" RefId="1176">
                                  <TNRef RefId="62" />
                                  <ToString>Expected: 0 Actual: 0 Because: </ToString>
                                  <Props>
                                    <S N="Actual">0</S>
                                    <S N="Expected">0</S>
                                    <S N="Because"></S>
                                  </Props>
                                </Obj>
                              </Props>
                            </Obj>
                          </En>
                        </DCT>
                      </Obj>
                      <S N="FullyQualifiedErrorId">PesterAssertionFailed</S>
                      <Obj N="InvocationInfo" RefId="1177">
                        <TNRef RefId="37" />
                        <ToString>System.Management.Automation.InvocationInfo</ToString>
                        <Props>
                          <Nil N="MyCommand" />
                          <Obj N="BoundParameters" RefId="1178">
                            <TNRef RefId="38" />
                            <DCT />
                          </Obj>
                          <Obj N="UnboundArguments" RefId="1179">
                            <TNRef RefId="31" />
                            <LST />
                          </Obj>
                          <I32 N="ScriptLineNumber">8392</I32>
                          <I32 N="OffsetInLine">13</I32>
                          <I64 N="HistoryId">18</I64>
                          <S N="ScriptName">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1</S>
                          <S N="Line">            throw $errorRecord_x000D__x000A_</S>
                          <S N="Statement">throw $errorRecord</S>
                          <S N="PositionMessage">At C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1:8392 char:13_x000D__x000A_+             throw $errorRecord_x000D__x000A_+             ~~~~~~~~~~~~~~~~~~</S>
                          <S N="PSScriptRoot">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1</S>
                          <S N="PSCommandPath">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1</S>
                          <S N="InvocationName"></S>
                          <I32 N="PipelineLength">0</I32>
                          <I32 N="PipelinePosition">0</I32>
                          <B N="ExpectingInput">false</B>
                          <Obj N="CommandOrigin" RefId="1180">
                            <TNRef RefId="39" />
                            <ToString>Internal</ToString>
                            <I32>1</I32>
                          </Obj>
                          <Nil N="DisplayScriptPosition" />
                        </Props>
                        <MS>
                          <Obj N="ParameterValues" RefId="1181">
                            <TNRef RefId="25" />
                            <DCT />
                          </Obj>
                        </MS>
                      </Obj>
                      <I32 N="ErrorCategory_Category">8</I32>
                      <S N="ErrorCategory_Activity"></S>
                      <S N="ErrorCategory_Reason">Exception</S>
                      <S N="ErrorCategory_TargetName">System.Collections.Generic.Dictionary`2[System.String,System.Object]</S>
                      <S N="ErrorCategory_TargetType">Dictionary`2</S>
                      <S N="ErrorCategory_Message">InvalidResult: (System.Collections.…ring,System.Object]:Dictionary`2) [], Exception</S>
                      <B N="SerializeExtendedInfo">false</B>
                      <S N="ErrorDetails_ScriptStackTrace">at Invoke-Assertion, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 8392_x000D__x000A_at Should&lt;End&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 8335_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1: line 185_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2024_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1985_x000D__x000A_at Invoke-ScriptBlock, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2157_x000D__x000A_at Invoke-TestItem, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1199_x000D__x000A_at Invoke-Block, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 835_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 893_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2024_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1985_x000D__x000A_at Invoke-ScriptBlock, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2160_x000D__x000A_at Invoke-Block, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 940_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 893_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2024_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1985_x000D__x000A_at Invoke-ScriptBlock, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2160_x000D__x000A_at Invoke-Block, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 940_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1688_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.ps1: line 3_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 3260_x000D__x000A_at Invoke-InNewScriptScope, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 3267_x000D__x000A_at Run-Test, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1691_x000D__x000A_at Invoke-Test, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2512_x000D__x000A_at Invoke-Pester&lt;End&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 5110_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Sampler\0.118.1\tasks\Invoke-Pester.pester.build.ps1: line 906_x000D__x000A_at *Task, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 629_x000D__x000A_at *Task, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 601_x000D__x000A_at *Task, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 601_x000D__x000A_at &lt;ScriptBlock&gt;&lt;End&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 787_x000D__x000A_at &lt;ScriptBlock&gt;&lt;Begin&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\build.ps1: line 532_x000D__x000A_at &lt;ScriptBlock&gt;, &lt;No file&gt;: line 1</S>
                      <Nil N="PSMessageDetails" />
                    </MS>
                  </Obj>
                </LST>
              </Obj>
              <Nil N="StandardOutput" />
              <TS N="Duration">PT0.0164093S</TS>
              <S N="ItemType">Test</S>
              <S N="Id">169:5</S>
              <S N="GroupId">169:5</S>
              <SBK N="ScriptBlock">_x000D__x000A_        $functionFile = Get-ChildItem -Path $sourcePath -Recurse -Include "$Name.ps1"_x000D__x000A__x000D__x000A_        $scriptFileRawContent = Get-Content -Raw -Path $functionFile.FullName_x000D__x000A__x000D__x000A_        $abstractSyntaxTree = [System.Management.Automation.Language.Parser]::ParseInput($scriptFileRawContent, [ref] $null, [ref] $null)_x000D__x000A__x000D__x000A_        $astSearchDelegate = { $args[0] -is [System.Management.Automation.Language.FunctionDefinitionAst] }_x000D__x000A__x000D__x000A_        $parsedFunction = $abstractSyntaxTree.FindAll( $astSearchDelegate, $true ) |_x000D__x000A_            Where-Object -FilterScript {_x000D__x000A_                $_.Name -eq $Name_x000D__x000A_            }_x000D__x000A__x000D__x000A_        $functionHelp = $parsedFunction.GetHelpContent()_x000D__x000A__x000D__x000A_        $functionHelp.Examples.Count | Should -BeGreaterThan 0_x000D__x000A_        $functionHelp.Examples[0] | Should -Match ([regex]::Escape($function.Name))_x000D__x000A_        $functionHelp.Examples[0].Length | Should -BeGreaterThan ($function.Name.Length + 10)_x000D__x000A__x000D__x000A_    </SBK>
              <Nil N="Tag" />
              <B N="Focus">false</B>
              <B N="Skip">false</B>
              <Ref N="Block" RefId="67" />
              <B N="First">false</B>
              <B N="Last">false</B>
              <B N="Include">false</B>
              <B N="Exclude">false</B>
              <B N="Explicit">false</B>
              <B N="ShouldRun">true</B>
              <I32 N="StartLine">169</I32>
              <B N="Executed">true</B>
              <DT N="ExecutedAt">2024-08-03T17:35:53.070843-07:00</DT>
              <B N="Passed">false</B>
              <B N="Skipped">false</B>
              <B N="Inconclusive">false</B>
              <TS N="UserDuration">PT0.0110148S</TS>
              <TS N="FrameworkDuration">PT0.0053945S</TS>
              <Nil N="PluginData" />
              <Nil N="FrameworkData" />
            </Props>
          </Obj>
          <Obj RefId="1182">
            <TNRef RefId="30" />
            <ToString>[-] Should have at least one (1) example for Log-Params</ToString>
            <Props>
              <S N="Name">Should have at least one (1) example for &lt;Name&gt;</S>
              <Obj N="Path" RefId="1183">
                <TNRef RefId="28" />
                <LST>
                  <S>Help for module</S>
                  <S>Should have at least one (1) example for &lt;Name&gt;</S>
                </LST>
              </Obj>
              <Ref N="Data" RefId="509" />
              <S N="ExpandedName">Should have at least one (1) example for Log-Params</S>
              <S N="ExpandedPath">Help for module.Should have at least one (1) example for Log-Params</S>
              <S N="Result">Failed</S>
              <Obj N="ErrorRecord" RefId="1184">
                <TNRef RefId="31" />
                <LST>
                  <Obj RefId="1185">
                    <TNRef RefId="33" />
                    <ToString>Expected the actual value to be greater than 0, but got 0.</ToString>
                    <MS>
                      <S N="DisplayErrorMessage">Expected the actual value to be greater than 0, but got 0.</S>
                      <S N="DisplayStackTrace">at $functionHelp.Examples.Count | Should -BeGreaterThan 0, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:185_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:185</S>
                      <Obj N="Exception" RefId="1186">
                        <TNRef RefId="60" />
                        <ToString>System.Exception: Expected the actual value to be greater than 0, but got 0.</ToString>
                        <Props>
                          <Nil N="TargetSite" />
                          <S N="Message">Expected the actual value to be greater than 0, but got 0.</S>
                          <Obj N="Data" RefId="1187">
                            <TNRef RefId="35" />
                            <DCT />
                          </Obj>
                          <Nil N="InnerException" />
                          <Nil N="HelpLink" />
                          <Nil N="Source" />
                          <I32 N="HResult">-2146233088</I32>
                          <Nil N="StackTrace" />
                        </Props>
                      </Obj>
                      <Obj N="TargetObject" RefId="1188">
                        <TNRef RefId="38" />
                        <DCT>
                          <En>
                            <S N="Key">Message</S>
                            <S N="Value">Expected the actual value to be greater than 0, but got 0.</S>
                          </En>
                          <En>
                            <S N="Key">File</S>
                            <S N="Value">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1</S>
                          </En>
                          <En>
                            <S N="Key">Line</S>
                            <S N="Value">185</S>
                          </En>
                          <En>
                            <S N="Key">LineText</S>
                            <S N="Value">        $functionHelp.Examples.Count | Should -BeGreaterThan 0</S>
                          </En>
                          <En>
                            <S N="Key">Terminating</S>
                            <B N="Value">true</B>
                          </En>
                          <En>
                            <S N="Key">ShouldResult</S>
                            <Obj N="Value" RefId="1189">
                              <TNRef RefId="61" />
                              <ToString>Pester.ShouldResult</ToString>
                              <Props>
                                <B N="Succeeded">false</B>
                                <S N="FailureMessage">Expected the actual value to be greater than 0, but got 0.</S>
                                <Obj N="ExpectResult" RefId="1190">
                                  <TNRef RefId="62" />
                                  <ToString>Expected: 0 Actual: 0 Because: </ToString>
                                  <Props>
                                    <S N="Actual">0</S>
                                    <S N="Expected">0</S>
                                    <S N="Because"></S>
                                  </Props>
                                </Obj>
                              </Props>
                            </Obj>
                          </En>
                        </DCT>
                      </Obj>
                      <S N="FullyQualifiedErrorId">PesterAssertionFailed</S>
                      <Obj N="InvocationInfo" RefId="1191">
                        <TNRef RefId="37" />
                        <ToString>System.Management.Automation.InvocationInfo</ToString>
                        <Props>
                          <Nil N="MyCommand" />
                          <Obj N="BoundParameters" RefId="1192">
                            <TNRef RefId="38" />
                            <DCT />
                          </Obj>
                          <Obj N="UnboundArguments" RefId="1193">
                            <TNRef RefId="31" />
                            <LST />
                          </Obj>
                          <I32 N="ScriptLineNumber">8392</I32>
                          <I32 N="OffsetInLine">13</I32>
                          <I64 N="HistoryId">18</I64>
                          <S N="ScriptName">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1</S>
                          <S N="Line">            throw $errorRecord_x000D__x000A_</S>
                          <S N="Statement">throw $errorRecord</S>
                          <S N="PositionMessage">At C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1:8392 char:13_x000D__x000A_+             throw $errorRecord_x000D__x000A_+             ~~~~~~~~~~~~~~~~~~</S>
                          <S N="PSScriptRoot">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1</S>
                          <S N="PSCommandPath">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1</S>
                          <S N="InvocationName"></S>
                          <I32 N="PipelineLength">0</I32>
                          <I32 N="PipelinePosition">0</I32>
                          <B N="ExpectingInput">false</B>
                          <Obj N="CommandOrigin" RefId="1194">
                            <TNRef RefId="39" />
                            <ToString>Internal</ToString>
                            <I32>1</I32>
                          </Obj>
                          <Nil N="DisplayScriptPosition" />
                        </Props>
                        <MS>
                          <Obj N="ParameterValues" RefId="1195">
                            <TNRef RefId="25" />
                            <DCT />
                          </Obj>
                        </MS>
                      </Obj>
                      <I32 N="ErrorCategory_Category">8</I32>
                      <S N="ErrorCategory_Activity"></S>
                      <S N="ErrorCategory_Reason">Exception</S>
                      <S N="ErrorCategory_TargetName">System.Collections.Generic.Dictionary`2[System.String,System.Object]</S>
                      <S N="ErrorCategory_TargetType">Dictionary`2</S>
                      <S N="ErrorCategory_Message">InvalidResult: (System.Collections.…ring,System.Object]:Dictionary`2) [], Exception</S>
                      <B N="SerializeExtendedInfo">false</B>
                      <S N="ErrorDetails_ScriptStackTrace">at Invoke-Assertion, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 8392_x000D__x000A_at Should&lt;End&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 8335_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1: line 185_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2024_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1985_x000D__x000A_at Invoke-ScriptBlock, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2157_x000D__x000A_at Invoke-TestItem, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1199_x000D__x000A_at Invoke-Block, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 835_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 893_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2024_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1985_x000D__x000A_at Invoke-ScriptBlock, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2160_x000D__x000A_at Invoke-Block, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 940_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 893_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2024_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1985_x000D__x000A_at Invoke-ScriptBlock, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2160_x000D__x000A_at Invoke-Block, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 940_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1688_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.ps1: line 3_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 3260_x000D__x000A_at Invoke-InNewScriptScope, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 3267_x000D__x000A_at Run-Test, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1691_x000D__x000A_at Invoke-Test, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2512_x000D__x000A_at Invoke-Pester&lt;End&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 5110_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Sampler\0.118.1\tasks\Invoke-Pester.pester.build.ps1: line 906_x000D__x000A_at *Task, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 629_x000D__x000A_at *Task, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 601_x000D__x000A_at *Task, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 601_x000D__x000A_at &lt;ScriptBlock&gt;&lt;End&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 787_x000D__x000A_at &lt;ScriptBlock&gt;&lt;Begin&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\build.ps1: line 532_x000D__x000A_at &lt;ScriptBlock&gt;, &lt;No file&gt;: line 1</S>
                      <Nil N="PSMessageDetails" />
                    </MS>
                  </Obj>
                </LST>
              </Obj>
              <Nil N="StandardOutput" />
              <TS N="Duration">PT0.0135651S</TS>
              <S N="ItemType">Test</S>
              <S N="Id">169:5</S>
              <S N="GroupId">169:5</S>
              <SBK N="ScriptBlock">_x000D__x000A_        $functionFile = Get-ChildItem -Path $sourcePath -Recurse -Include "$Name.ps1"_x000D__x000A__x000D__x000A_        $scriptFileRawContent = Get-Content -Raw -Path $functionFile.FullName_x000D__x000A__x000D__x000A_        $abstractSyntaxTree = [System.Management.Automation.Language.Parser]::ParseInput($scriptFileRawContent, [ref] $null, [ref] $null)_x000D__x000A__x000D__x000A_        $astSearchDelegate = { $args[0] -is [System.Management.Automation.Language.FunctionDefinitionAst] }_x000D__x000A__x000D__x000A_        $parsedFunction = $abstractSyntaxTree.FindAll( $astSearchDelegate, $true ) |_x000D__x000A_            Where-Object -FilterScript {_x000D__x000A_                $_.Name -eq $Name_x000D__x000A_            }_x000D__x000A__x000D__x000A_        $functionHelp = $parsedFunction.GetHelpContent()_x000D__x000A__x000D__x000A_        $functionHelp.Examples.Count | Should -BeGreaterThan 0_x000D__x000A_        $functionHelp.Examples[0] | Should -Match ([regex]::Escape($function.Name))_x000D__x000A_        $functionHelp.Examples[0].Length | Should -BeGreaterThan ($function.Name.Length + 10)_x000D__x000A__x000D__x000A_    </SBK>
              <Nil N="Tag" />
              <B N="Focus">false</B>
              <B N="Skip">false</B>
              <Ref N="Block" RefId="67" />
              <B N="First">false</B>
              <B N="Last">false</B>
              <B N="Include">false</B>
              <B N="Exclude">false</B>
              <B N="Explicit">false</B>
              <B N="ShouldRun">true</B>
              <I32 N="StartLine">169</I32>
              <B N="Executed">true</B>
              <DT N="ExecutedAt">2024-08-03T17:35:53.087285-07:00</DT>
              <B N="Passed">false</B>
              <B N="Skipped">false</B>
              <B N="Inconclusive">false</B>
              <TS N="UserDuration">PT0.0074227S</TS>
              <TS N="FrameworkDuration">PT0.0061424S</TS>
              <Nil N="PluginData" />
              <Nil N="FrameworkData" />
            </Props>
          </Obj>
          <Obj RefId="1196">
            <TNRef RefId="30" />
            <ToString>[-] Should have at least one (1) example for Write-EnhancedLog</ToString>
            <Props>
              <S N="Name">Should have at least one (1) example for &lt;Name&gt;</S>
              <Obj N="Path" RefId="1197">
                <TNRef RefId="28" />
                <LST>
                  <S>Help for module</S>
                  <S>Should have at least one (1) example for &lt;Name&gt;</S>
                </LST>
              </Obj>
              <Ref N="Data" RefId="524" />
              <S N="ExpandedName">Should have at least one (1) example for Write-EnhancedLog</S>
              <S N="ExpandedPath">Help for module.Should have at least one (1) example for Write-EnhancedLog</S>
              <S N="Result">Failed</S>
              <Obj N="ErrorRecord" RefId="1198">
                <TNRef RefId="31" />
                <LST>
                  <Obj RefId="1199">
                    <TNRef RefId="33" />
                    <ToString>Expected the actual value to be greater than 0, but got 0.</ToString>
                    <MS>
                      <S N="DisplayErrorMessage">Expected the actual value to be greater than 0, but got 0.</S>
                      <S N="DisplayStackTrace">at $functionHelp.Examples.Count | Should -BeGreaterThan 0, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:185_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:185</S>
                      <Obj N="Exception" RefId="1200">
                        <TNRef RefId="60" />
                        <ToString>System.Exception: Expected the actual value to be greater than 0, but got 0.</ToString>
                        <Props>
                          <Nil N="TargetSite" />
                          <S N="Message">Expected the actual value to be greater than 0, but got 0.</S>
                          <Obj N="Data" RefId="1201">
                            <TNRef RefId="35" />
                            <DCT />
                          </Obj>
                          <Nil N="InnerException" />
                          <Nil N="HelpLink" />
                          <Nil N="Source" />
                          <I32 N="HResult">-2146233088</I32>
                          <Nil N="StackTrace" />
                        </Props>
                      </Obj>
                      <Obj N="TargetObject" RefId="1202">
                        <TNRef RefId="38" />
                        <DCT>
                          <En>
                            <S N="Key">Message</S>
                            <S N="Value">Expected the actual value to be greater than 0, but got 0.</S>
                          </En>
                          <En>
                            <S N="Key">File</S>
                            <S N="Value">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1</S>
                          </En>
                          <En>
                            <S N="Key">Line</S>
                            <S N="Value">185</S>
                          </En>
                          <En>
                            <S N="Key">LineText</S>
                            <S N="Value">        $functionHelp.Examples.Count | Should -BeGreaterThan 0</S>
                          </En>
                          <En>
                            <S N="Key">Terminating</S>
                            <B N="Value">true</B>
                          </En>
                          <En>
                            <S N="Key">ShouldResult</S>
                            <Obj N="Value" RefId="1203">
                              <TNRef RefId="61" />
                              <ToString>Pester.ShouldResult</ToString>
                              <Props>
                                <B N="Succeeded">false</B>
                                <S N="FailureMessage">Expected the actual value to be greater than 0, but got 0.</S>
                                <Obj N="ExpectResult" RefId="1204">
                                  <TNRef RefId="62" />
                                  <ToString>Expected: 0 Actual: 0 Because: </ToString>
                                  <Props>
                                    <S N="Actual">0</S>
                                    <S N="Expected">0</S>
                                    <S N="Because"></S>
                                  </Props>
                                </Obj>
                              </Props>
                            </Obj>
                          </En>
                        </DCT>
                      </Obj>
                      <S N="FullyQualifiedErrorId">PesterAssertionFailed</S>
                      <Obj N="InvocationInfo" RefId="1205">
                        <TNRef RefId="37" />
                        <ToString>System.Management.Automation.InvocationInfo</ToString>
                        <Props>
                          <Nil N="MyCommand" />
                          <Obj N="BoundParameters" RefId="1206">
                            <TNRef RefId="38" />
                            <DCT />
                          </Obj>
                          <Obj N="UnboundArguments" RefId="1207">
                            <TNRef RefId="31" />
                            <LST />
                          </Obj>
                          <I32 N="ScriptLineNumber">8392</I32>
                          <I32 N="OffsetInLine">13</I32>
                          <I64 N="HistoryId">18</I64>
                          <S N="ScriptName">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1</S>
                          <S N="Line">            throw $errorRecord_x000D__x000A_</S>
                          <S N="Statement">throw $errorRecord</S>
                          <S N="PositionMessage">At C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1:8392 char:13_x000D__x000A_+             throw $errorRecord_x000D__x000A_+             ~~~~~~~~~~~~~~~~~~</S>
                          <S N="PSScriptRoot">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1</S>
                          <S N="PSCommandPath">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1</S>
                          <S N="InvocationName"></S>
                          <I32 N="PipelineLength">0</I32>
                          <I32 N="PipelinePosition">0</I32>
                          <B N="ExpectingInput">false</B>
                          <Obj N="CommandOrigin" RefId="1208">
                            <TNRef RefId="39" />
                            <ToString>Internal</ToString>
                            <I32>1</I32>
                          </Obj>
                          <Nil N="DisplayScriptPosition" />
                        </Props>
                        <MS>
                          <Obj N="ParameterValues" RefId="1209">
                            <TNRef RefId="25" />
                            <DCT />
                          </Obj>
                        </MS>
                      </Obj>
                      <I32 N="ErrorCategory_Category">8</I32>
                      <S N="ErrorCategory_Activity"></S>
                      <S N="ErrorCategory_Reason">Exception</S>
                      <S N="ErrorCategory_TargetName">System.Collections.Generic.Dictionary`2[System.String,System.Object]</S>
                      <S N="ErrorCategory_TargetType">Dictionary`2</S>
                      <S N="ErrorCategory_Message">InvalidResult: (System.Collections.…ring,System.Object]:Dictionary`2) [], Exception</S>
                      <B N="SerializeExtendedInfo">false</B>
                      <S N="ErrorDetails_ScriptStackTrace">at Invoke-Assertion, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 8392_x000D__x000A_at Should&lt;End&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 8335_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1: line 185_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2024_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1985_x000D__x000A_at Invoke-ScriptBlock, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2157_x000D__x000A_at Invoke-TestItem, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1199_x000D__x000A_at Invoke-Block, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 835_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 893_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2024_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1985_x000D__x000A_at Invoke-ScriptBlock, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2160_x000D__x000A_at Invoke-Block, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 940_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 893_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2024_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1985_x000D__x000A_at Invoke-ScriptBlock, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2160_x000D__x000A_at Invoke-Block, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 940_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1688_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.ps1: line 3_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 3260_x000D__x000A_at Invoke-InNewScriptScope, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 3267_x000D__x000A_at Run-Test, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1691_x000D__x000A_at Invoke-Test, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2512_x000D__x000A_at Invoke-Pester&lt;End&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 5110_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Sampler\0.118.1\tasks\Invoke-Pester.pester.build.ps1: line 906_x000D__x000A_at *Task, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 629_x000D__x000A_at *Task, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 601_x000D__x000A_at *Task, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 601_x000D__x000A_at &lt;ScriptBlock&gt;&lt;End&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 787_x000D__x000A_at &lt;ScriptBlock&gt;&lt;Begin&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\build.ps1: line 532_x000D__x000A_at &lt;ScriptBlock&gt;, &lt;No file&gt;: line 1</S>
                      <Nil N="PSMessageDetails" />
                    </MS>
                  </Obj>
                </LST>
              </Obj>
              <Nil N="StandardOutput" />
              <TS N="Duration">PT0.017085S</TS>
              <S N="ItemType">Test</S>
              <S N="Id">169:5</S>
              <S N="GroupId">169:5</S>
              <SBK N="ScriptBlock">_x000D__x000A_        $functionFile = Get-ChildItem -Path $sourcePath -Recurse -Include "$Name.ps1"_x000D__x000A__x000D__x000A_        $scriptFileRawContent = Get-Content -Raw -Path $functionFile.FullName_x000D__x000A__x000D__x000A_        $abstractSyntaxTree = [System.Management.Automation.Language.Parser]::ParseInput($scriptFileRawContent, [ref] $null, [ref] $null)_x000D__x000A__x000D__x000A_        $astSearchDelegate = { $args[0] -is [System.Management.Automation.Language.FunctionDefinitionAst] }_x000D__x000A__x000D__x000A_        $parsedFunction = $abstractSyntaxTree.FindAll( $astSearchDelegate, $true ) |_x000D__x000A_            Where-Object -FilterScript {_x000D__x000A_                $_.Name -eq $Name_x000D__x000A_            }_x000D__x000A__x000D__x000A_        $functionHelp = $parsedFunction.GetHelpContent()_x000D__x000A__x000D__x000A_        $functionHelp.Examples.Count | Should -BeGreaterThan 0_x000D__x000A_        $functionHelp.Examples[0] | Should -Match ([regex]::Escape($function.Name))_x000D__x000A_        $functionHelp.Examples[0].Length | Should -BeGreaterThan ($function.Name.Length + 10)_x000D__x000A__x000D__x000A_    </SBK>
              <Nil N="Tag" />
              <B N="Focus">false</B>
              <B N="Skip">false</B>
              <Ref N="Block" RefId="67" />
              <B N="First">false</B>
              <B N="Last">false</B>
              <B N="Include">false</B>
              <B N="Exclude">false</B>
              <B N="Explicit">false</B>
              <B N="ShouldRun">true</B>
              <I32 N="StartLine">169</I32>
              <B N="Executed">true</B>
              <DT N="ExecutedAt">2024-08-03T17:35:53.1010526-07:00</DT>
              <B N="Passed">false</B>
              <B N="Skipped">false</B>
              <B N="Inconclusive">false</B>
              <TS N="UserDuration">PT0.0073497S</TS>
              <TS N="FrameworkDuration">PT0.0097353S</TS>
              <Nil N="PluginData" />
              <Nil N="FrameworkData" />
            </Props>
          </Obj>
          <Obj RefId="1210">
            <TNRef RefId="30" />
            <ToString>[-] Should have at least one (1) example for Write-EventLogMessage</ToString>
            <Props>
              <S N="Name">Should have at least one (1) example for &lt;Name&gt;</S>
              <Obj N="Path" RefId="1211">
                <TNRef RefId="28" />
                <LST>
                  <S>Help for module</S>
                  <S>Should have at least one (1) example for &lt;Name&gt;</S>
                </LST>
              </Obj>
              <Ref N="Data" RefId="539" />
              <S N="ExpandedName">Should have at least one (1) example for Write-EventLogMessage</S>
              <S N="ExpandedPath">Help for module.Should have at least one (1) example for Write-EventLogMessage</S>
              <S N="Result">Failed</S>
              <Obj N="ErrorRecord" RefId="1212">
                <TNRef RefId="31" />
                <LST>
                  <Obj RefId="1213">
                    <TNRef RefId="33" />
                    <ToString>Expected the actual value to be greater than 0, but got 0.</ToString>
                    <MS>
                      <S N="DisplayErrorMessage">Expected the actual value to be greater than 0, but got 0.</S>
                      <S N="DisplayStackTrace">at $functionHelp.Examples.Count | Should -BeGreaterThan 0, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:185_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:185</S>
                      <Obj N="Exception" RefId="1214">
                        <TNRef RefId="60" />
                        <ToString>System.Exception: Expected the actual value to be greater than 0, but got 0.</ToString>
                        <Props>
                          <Nil N="TargetSite" />
                          <S N="Message">Expected the actual value to be greater than 0, but got 0.</S>
                          <Obj N="Data" RefId="1215">
                            <TNRef RefId="35" />
                            <DCT />
                          </Obj>
                          <Nil N="InnerException" />
                          <Nil N="HelpLink" />
                          <Nil N="Source" />
                          <I32 N="HResult">-2146233088</I32>
                          <Nil N="StackTrace" />
                        </Props>
                      </Obj>
                      <Obj N="TargetObject" RefId="1216">
                        <TNRef RefId="38" />
                        <DCT>
                          <En>
                            <S N="Key">Message</S>
                            <S N="Value">Expected the actual value to be greater than 0, but got 0.</S>
                          </En>
                          <En>
                            <S N="Key">File</S>
                            <S N="Value">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1</S>
                          </En>
                          <En>
                            <S N="Key">Line</S>
                            <S N="Value">185</S>
                          </En>
                          <En>
                            <S N="Key">LineText</S>
                            <S N="Value">        $functionHelp.Examples.Count | Should -BeGreaterThan 0</S>
                          </En>
                          <En>
                            <S N="Key">Terminating</S>
                            <B N="Value">true</B>
                          </En>
                          <En>
                            <S N="Key">ShouldResult</S>
                            <Obj N="Value" RefId="1217">
                              <TNRef RefId="61" />
                              <ToString>Pester.ShouldResult</ToString>
                              <Props>
                                <B N="Succeeded">false</B>
                                <S N="FailureMessage">Expected the actual value to be greater than 0, but got 0.</S>
                                <Obj N="ExpectResult" RefId="1218">
                                  <TNRef RefId="62" />
                                  <ToString>Expected: 0 Actual: 0 Because: </ToString>
                                  <Props>
                                    <S N="Actual">0</S>
                                    <S N="Expected">0</S>
                                    <S N="Because"></S>
                                  </Props>
                                </Obj>
                              </Props>
                            </Obj>
                          </En>
                        </DCT>
                      </Obj>
                      <S N="FullyQualifiedErrorId">PesterAssertionFailed</S>
                      <Obj N="InvocationInfo" RefId="1219">
                        <TNRef RefId="37" />
                        <ToString>System.Management.Automation.InvocationInfo</ToString>
                        <Props>
                          <Nil N="MyCommand" />
                          <Obj N="BoundParameters" RefId="1220">
                            <TNRef RefId="38" />
                            <DCT />
                          </Obj>
                          <Obj N="UnboundArguments" RefId="1221">
                            <TNRef RefId="31" />
                            <LST />
                          </Obj>
                          <I32 N="ScriptLineNumber">8392</I32>
                          <I32 N="OffsetInLine">13</I32>
                          <I64 N="HistoryId">18</I64>
                          <S N="ScriptName">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1</S>
                          <S N="Line">            throw $errorRecord_x000D__x000A_</S>
                          <S N="Statement">throw $errorRecord</S>
                          <S N="PositionMessage">At C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1:8392 char:13_x000D__x000A_+             throw $errorRecord_x000D__x000A_+             ~~~~~~~~~~~~~~~~~~</S>
                          <S N="PSScriptRoot">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1</S>
                          <S N="PSCommandPath">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1</S>
                          <S N="InvocationName"></S>
                          <I32 N="PipelineLength">0</I32>
                          <I32 N="PipelinePosition">0</I32>
                          <B N="ExpectingInput">false</B>
                          <Obj N="CommandOrigin" RefId="1222">
                            <TNRef RefId="39" />
                            <ToString>Internal</ToString>
                            <I32>1</I32>
                          </Obj>
                          <Nil N="DisplayScriptPosition" />
                        </Props>
                        <MS>
                          <Obj N="ParameterValues" RefId="1223">
                            <TNRef RefId="25" />
                            <DCT />
                          </Obj>
                        </MS>
                      </Obj>
                      <I32 N="ErrorCategory_Category">8</I32>
                      <S N="ErrorCategory_Activity"></S>
                      <S N="ErrorCategory_Reason">Exception</S>
                      <S N="ErrorCategory_TargetName">System.Collections.Generic.Dictionary`2[System.String,System.Object]</S>
                      <S N="ErrorCategory_TargetType">Dictionary`2</S>
                      <S N="ErrorCategory_Message">InvalidResult: (System.Collections.…ring,System.Object]:Dictionary`2) [], Exception</S>
                      <B N="SerializeExtendedInfo">false</B>
                      <S N="ErrorDetails_ScriptStackTrace">at Invoke-Assertion, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 8392_x000D__x000A_at Should&lt;End&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 8335_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1: line 185_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2024_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1985_x000D__x000A_at Invoke-ScriptBlock, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2157_x000D__x000A_at Invoke-TestItem, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1199_x000D__x000A_at Invoke-Block, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 835_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 893_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2024_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1985_x000D__x000A_at Invoke-ScriptBlock, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2160_x000D__x000A_at Invoke-Block, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 940_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 893_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2024_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1985_x000D__x000A_at Invoke-ScriptBlock, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2160_x000D__x000A_at Invoke-Block, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 940_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1688_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.ps1: line 3_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 3260_x000D__x000A_at Invoke-InNewScriptScope, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 3267_x000D__x000A_at Run-Test, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1691_x000D__x000A_at Invoke-Test, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2512_x000D__x000A_at Invoke-Pester&lt;End&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 5110_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Sampler\0.118.1\tasks\Invoke-Pester.pester.build.ps1: line 906_x000D__x000A_at *Task, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 629_x000D__x000A_at *Task, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 601_x000D__x000A_at *Task, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 601_x000D__x000A_at &lt;ScriptBlock&gt;&lt;End&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 787_x000D__x000A_at &lt;ScriptBlock&gt;&lt;Begin&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\build.ps1: line 532_x000D__x000A_at &lt;ScriptBlock&gt;, &lt;No file&gt;: line 1</S>
                      <Nil N="PSMessageDetails" />
                    </MS>
                  </Obj>
                </LST>
              </Obj>
              <Nil N="StandardOutput" />
              <TS N="Duration">PT0.0110389S</TS>
              <S N="ItemType">Test</S>
              <S N="Id">169:5</S>
              <S N="GroupId">169:5</S>
              <SBK N="ScriptBlock">_x000D__x000A_        $functionFile = Get-ChildItem -Path $sourcePath -Recurse -Include "$Name.ps1"_x000D__x000A__x000D__x000A_        $scriptFileRawContent = Get-Content -Raw -Path $functionFile.FullName_x000D__x000A__x000D__x000A_        $abstractSyntaxTree = [System.Management.Automation.Language.Parser]::ParseInput($scriptFileRawContent, [ref] $null, [ref] $null)_x000D__x000A__x000D__x000A_        $astSearchDelegate = { $args[0] -is [System.Management.Automation.Language.FunctionDefinitionAst] }_x000D__x000A__x000D__x000A_        $parsedFunction = $abstractSyntaxTree.FindAll( $astSearchDelegate, $true ) |_x000D__x000A_            Where-Object -FilterScript {_x000D__x000A_                $_.Name -eq $Name_x000D__x000A_            }_x000D__x000A__x000D__x000A_        $functionHelp = $parsedFunction.GetHelpContent()_x000D__x000A__x000D__x000A_        $functionHelp.Examples.Count | Should -BeGreaterThan 0_x000D__x000A_        $functionHelp.Examples[0] | Should -Match ([regex]::Escape($function.Name))_x000D__x000A_        $functionHelp.Examples[0].Length | Should -BeGreaterThan ($function.Name.Length + 10)_x000D__x000A__x000D__x000A_    </SBK>
              <Nil N="Tag" />
              <B N="Focus">false</B>
              <B N="Skip">false</B>
              <Ref N="Block" RefId="67" />
              <B N="First">false</B>
              <B N="Last">false</B>
              <B N="Include">false</B>
              <B N="Exclude">false</B>
              <B N="Explicit">false</B>
              <B N="ShouldRun">true</B>
              <I32 N="StartLine">169</I32>
              <B N="Executed">true</B>
              <DT N="ExecutedAt">2024-08-03T17:35:53.118115-07:00</DT>
              <B N="Passed">false</B>
              <B N="Skipped">false</B>
              <B N="Inconclusive">false</B>
              <TS N="UserDuration">PT0.0055592S</TS>
              <TS N="FrameworkDuration">PT0.0054797S</TS>
              <Nil N="PluginData" />
              <Nil N="FrameworkData" />
            </Props>
          </Obj>
          <Obj RefId="1224">
            <TNRef RefId="30" />
            <ToString>[-] Should have described all parameters for Add-Step</ToString>
            <Props>
              <S N="Name">Should have described all parameters for &lt;Name&gt;</S>
              <Obj N="Path" RefId="1225">
                <TNRef RefId="28" />
                <LST>
                  <S>Help for module</S>
                  <S>Should have described all parameters for &lt;Name&gt;</S>
                </LST>
              </Obj>
              <Ref N="Data" RefId="359" />
              <S N="ExpandedName">Should have described all parameters for Add-Step</S>
              <S N="ExpandedPath">Help for module.Should have described all parameters for Add-Step</S>
              <S N="Result">Failed</S>
              <Obj N="ErrorRecord" RefId="1226">
                <TNRef RefId="31" />
                <LST>
                  <Obj RefId="1227">
                    <TNRef RefId="33" />
                    <ToString>Expected a value, because the parameter Description must have a description, but got $null or empty.</ToString>
                    <MS>
                      <S N="DisplayErrorMessage">Expected a value, because the parameter Description must have a description, but got $null or empty.</S>
                      <S N="DisplayStackTrace">at $functionHelp.Parameters.($parameter.ToUpper()) | Should -Not -BeNullOrEmpty -Because ('the parameter {0} must have a description' -f $parameter), C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:211_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:211</S>
                      <Obj N="Exception" RefId="1228">
                        <TNRef RefId="60" />
                        <ToString>System.Exception: Expected a value, because the parameter Description must have a description, but got $null or empty.</ToString>
                        <Props>
                          <Nil N="TargetSite" />
                          <S N="Message">Expected a value, because the parameter Description must have a description, but got $null or empty.</S>
                          <Obj N="Data" RefId="1229">
                            <TNRef RefId="35" />
                            <DCT />
                          </Obj>
                          <Nil N="InnerException" />
                          <Nil N="HelpLink" />
                          <Nil N="Source" />
                          <I32 N="HResult">-2146233088</I32>
                          <Nil N="StackTrace" />
                        </Props>
                      </Obj>
                      <Obj N="TargetObject" RefId="1230">
                        <TNRef RefId="38" />
                        <DCT>
                          <En>
                            <S N="Key">Message</S>
                            <S N="Value">Expected a value, because the parameter Description must have a description, but got $null or empty.</S>
                          </En>
                          <En>
                            <S N="Key">File</S>
                            <S N="Value">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1</S>
                          </En>
                          <En>
                            <S N="Key">Line</S>
                            <S N="Value">211</S>
                          </En>
                          <En>
                            <S N="Key">LineText</S>
                            <S N="Value">            $functionHelp.Parameters.($parameter.ToUpper()) | Should -Not -BeNullOrEmpty -Because ('the parameter {0} must have a description' -f $parameter)</S>
                          </En>
                          <En>
                            <S N="Key">Terminating</S>
                            <B N="Value">true</B>
                          </En>
                          <En>
                            <S N="Key">ShouldResult</S>
                            <Obj N="Value" RefId="1231">
                              <TNRef RefId="61" />
                              <ToString>Pester.ShouldResult</ToString>
                              <Props>
                                <B N="Succeeded">false</B>
                                <S N="FailureMessage">Expected a value, because the parameter Description must have a description, but got $null or empty.</S>
                                <Obj N="ExpectResult" RefId="1232">
                                  <TNRef RefId="62" />
                                  <ToString>Expected: '$null or empty' Actual: @($null) Because: the parameter Description must have a description</ToString>
                                  <Props>
                                    <S N="Actual">@($null)</S>
                                    <S N="Expected">'$null or empty'</S>
                                    <S N="Because">the parameter Description must have a description</S>
                                  </Props>
                                </Obj>
                              </Props>
                            </Obj>
                          </En>
                        </DCT>
                      </Obj>
                      <S N="FullyQualifiedErrorId">PesterAssertionFailed</S>
                      <Obj N="InvocationInfo" RefId="1233">
                        <TNRef RefId="37" />
                        <ToString>System.Management.Automation.InvocationInfo</ToString>
                        <Props>
                          <Nil N="MyCommand" />
                          <Obj N="BoundParameters" RefId="1234">
                            <TNRef RefId="38" />
                            <DCT />
                          </Obj>
                          <Obj N="UnboundArguments" RefId="1235">
                            <TNRef RefId="31" />
                            <LST />
                          </Obj>
                          <I32 N="ScriptLineNumber">8392</I32>
                          <I32 N="OffsetInLine">13</I32>
                          <I64 N="HistoryId">18</I64>
                          <S N="ScriptName">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1</S>
                          <S N="Line">            throw $errorRecord_x000D__x000A_</S>
                          <S N="Statement">throw $errorRecord</S>
                          <S N="PositionMessage">At C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1:8392 char:13_x000D__x000A_+             throw $errorRecord_x000D__x000A_+             ~~~~~~~~~~~~~~~~~~</S>
                          <S N="PSScriptRoot">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1</S>
                          <S N="PSCommandPath">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1</S>
                          <S N="InvocationName"></S>
                          <I32 N="PipelineLength">0</I32>
                          <I32 N="PipelinePosition">0</I32>
                          <B N="ExpectingInput">false</B>
                          <Obj N="CommandOrigin" RefId="1236">
                            <TNRef RefId="39" />
                            <ToString>Internal</ToString>
                            <I32>1</I32>
                          </Obj>
                          <Nil N="DisplayScriptPosition" />
                        </Props>
                        <MS>
                          <Obj N="ParameterValues" RefId="1237">
                            <TNRef RefId="25" />
                            <DCT />
                          </Obj>
                        </MS>
                      </Obj>
                      <I32 N="ErrorCategory_Category">8</I32>
                      <S N="ErrorCategory_Activity"></S>
                      <S N="ErrorCategory_Reason">Exception</S>
                      <S N="ErrorCategory_TargetName">System.Collections.Generic.Dictionary`2[System.String,System.Object]</S>
                      <S N="ErrorCategory_TargetType">Dictionary`2</S>
                      <S N="ErrorCategory_Message">InvalidResult: (System.Collections.…ring,System.Object]:Dictionary`2) [], Exception</S>
                      <B N="SerializeExtendedInfo">false</B>
                      <S N="ErrorDetails_ScriptStackTrace">at Invoke-Assertion, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 8392_x000D__x000A_at Should&lt;End&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 8331_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1: line 211_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2024_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1985_x000D__x000A_at Invoke-ScriptBlock, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2157_x000D__x000A_at Invoke-TestItem, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1199_x000D__x000A_at Invoke-Block, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 835_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 893_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2024_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1985_x000D__x000A_at Invoke-ScriptBlock, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2160_x000D__x000A_at Invoke-Block, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 940_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 893_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2024_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1985_x000D__x000A_at Invoke-ScriptBlock, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2160_x000D__x000A_at Invoke-Block, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 940_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1688_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.ps1: line 3_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 3260_x000D__x000A_at Invoke-InNewScriptScope, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 3267_x000D__x000A_at Run-Test, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1691_x000D__x000A_at Invoke-Test, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2512_x000D__x000A_at Invoke-Pester&lt;End&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 5110_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Sampler\0.118.1\tasks\Invoke-Pester.pester.build.ps1: line 906_x000D__x000A_at *Task, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 629_x000D__x000A_at *Task, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 601_x000D__x000A_at *Task, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 601_x000D__x000A_at &lt;ScriptBlock&gt;&lt;End&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 787_x000D__x000A_at &lt;ScriptBlock&gt;&lt;Begin&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\build.ps1: line 532_x000D__x000A_at &lt;ScriptBlock&gt;, &lt;No file&gt;: line 1</S>
                      <Nil N="PSMessageDetails" />
                    </MS>
                  </Obj>
                </LST>
              </Obj>
              <Nil N="StandardOutput" />
              <TS N="Duration">PT0.0264314S</TS>
              <S N="ItemType">Test</S>
              <S N="Id">191:5</S>
              <S N="GroupId">191:5</S>
              <SBK N="ScriptBlock">_x000D__x000A_        $functionFile = Get-ChildItem -Path $sourcePath -Recurse -Include "$Name.ps1"_x000D__x000A__x000D__x000A_        $scriptFileRawContent = Get-Content -Raw -Path $functionFile.FullName_x000D__x000A__x000D__x000A_        $abstractSyntaxTree = [System.Management.Automation.Language.Parser]::ParseInput($scriptFileRawContent, [ref] $null, [ref] $null)_x000D__x000A__x000D__x000A_        $astSearchDelegate = { $args[0] -is [System.Management.Automation.Language.FunctionDefinitionAst] }_x000D__x000A__x000D__x000A_        $parsedFunction = $abstractSyntaxTree.FindAll( $astSearchDelegate, $true ) |_x000D__x000A_            Where-Object -FilterScript {_x000D__x000A_                $_.Name -eq $Name_x000D__x000A_            }_x000D__x000A__x000D__x000A_        $functionHelp = $parsedFunction.GetHelpContent()_x000D__x000A__x000D__x000A_        $parameters = $parsedFunction.Body.ParamBlock.Parameters.Name.VariablePath.ForEach({ $_.ToString() })_x000D__x000A__x000D__x000A_        foreach ($parameter in $parameters)_x000D__x000A_        {_x000D__x000A_            $functionHelp.Parameters.($parameter.ToUpper()) | Should -Not -BeNullOrEmpty -Because ('the parameter {0} must have a description' -f $parameter)_x000D__x000A_            $functionHelp.Parameters.($parameter.ToUpper()).Length | Should -BeGreaterThan 25 -Because ('the parameter {0} must have descriptive description' -f $parameter)_x000D__x000A_        }_x000D__x000A_    </SBK>
              <Nil N="Tag" />
              <B N="Focus">false</B>
              <B N="Skip">false</B>
              <Ref N="Block" RefId="67" />
              <B N="First">false</B>
              <B N="Last">false</B>
              <B N="Include">false</B>
              <B N="Exclude">false</B>
              <B N="Explicit">false</B>
              <B N="ShouldRun">true</B>
              <I32 N="StartLine">191</I32>
              <B N="Executed">true</B>
              <DT N="ExecutedAt">2024-08-03T17:35:53.1291758-07:00</DT>
              <B N="Passed">false</B>
              <B N="Skipped">false</B>
              <B N="Inconclusive">false</B>
              <TS N="UserDuration">PT0.020878S</TS>
              <TS N="FrameworkDuration">PT0.0055534S</TS>
              <Nil N="PluginData" />
              <Nil N="FrameworkData" />
            </Props>
          </Obj>
          <Obj RefId="1238">
            <TNRef RefId="30" />
            <ToString>[-] Should have described all parameters for AppendCSVLog</ToString>
            <Props>
              <S N="Name">Should have described all parameters for &lt;Name&gt;</S>
              <Obj N="Path" RefId="1239">
                <TNRef RefId="28" />
                <LST>
                  <S>Help for module</S>
                  <S>Should have described all parameters for &lt;Name&gt;</S>
                </LST>
              </Obj>
              <Ref N="Data" RefId="374" />
              <S N="ExpandedName">Should have described all parameters for AppendCSVLog</S>
              <S N="ExpandedPath">Help for module.Should have described all parameters for AppendCSVLog</S>
              <S N="Result">Failed</S>
              <Obj N="ErrorRecord" RefId="1240">
                <TNRef RefId="31" />
                <LST>
                  <Obj RefId="1241">
                    <TNRef RefId="33" />
                    <ToString>Expected a value, because the parameter Message must have a description, but got $null or empty.</ToString>
                    <MS>
                      <S N="DisplayErrorMessage">Expected a value, because the parameter Message must have a description, but got $null or empty.</S>
                      <S N="DisplayStackTrace">at $functionHelp.Parameters.($parameter.ToUpper()) | Should -Not -BeNullOrEmpty -Because ('the parameter {0} must have a description' -f $parameter), C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:211_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:211</S>
                      <Obj N="Exception" RefId="1242">
                        <TNRef RefId="60" />
                        <ToString>System.Exception: Expected a value, because the parameter Message must have a description, but got $null or empty.</ToString>
                        <Props>
                          <Nil N="TargetSite" />
                          <S N="Message">Expected a value, because the parameter Message must have a description, but got $null or empty.</S>
                          <Obj N="Data" RefId="1243">
                            <TNRef RefId="35" />
                            <DCT />
                          </Obj>
                          <Nil N="InnerException" />
                          <Nil N="HelpLink" />
                          <Nil N="Source" />
                          <I32 N="HResult">-2146233088</I32>
                          <Nil N="StackTrace" />
                        </Props>
                      </Obj>
                      <Obj N="TargetObject" RefId="1244">
                        <TNRef RefId="38" />
                        <DCT>
                          <En>
                            <S N="Key">Message</S>
                            <S N="Value">Expected a value, because the parameter Message must have a description, but got $null or empty.</S>
                          </En>
                          <En>
                            <S N="Key">File</S>
                            <S N="Value">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1</S>
                          </En>
                          <En>
                            <S N="Key">Line</S>
                            <S N="Value">211</S>
                          </En>
                          <En>
                            <S N="Key">LineText</S>
                            <S N="Value">            $functionHelp.Parameters.($parameter.ToUpper()) | Should -Not -BeNullOrEmpty -Because ('the parameter {0} must have a description' -f $parameter)</S>
                          </En>
                          <En>
                            <S N="Key">Terminating</S>
                            <B N="Value">true</B>
                          </En>
                          <En>
                            <S N="Key">ShouldResult</S>
                            <Obj N="Value" RefId="1245">
                              <TNRef RefId="61" />
                              <ToString>Pester.ShouldResult</ToString>
                              <Props>
                                <B N="Succeeded">false</B>
                                <S N="FailureMessage">Expected a value, because the parameter Message must have a description, but got $null or empty.</S>
                                <Obj N="ExpectResult" RefId="1246">
                                  <TNRef RefId="62" />
                                  <ToString>Expected: '$null or empty' Actual: @($null) Because: the parameter Message must have a description</ToString>
                                  <Props>
                                    <S N="Actual">@($null)</S>
                                    <S N="Expected">'$null or empty'</S>
                                    <S N="Because">the parameter Message must have a description</S>
                                  </Props>
                                </Obj>
                              </Props>
                            </Obj>
                          </En>
                        </DCT>
                      </Obj>
                      <S N="FullyQualifiedErrorId">PesterAssertionFailed</S>
                      <Obj N="InvocationInfo" RefId="1247">
                        <TNRef RefId="37" />
                        <ToString>System.Management.Automation.InvocationInfo</ToString>
                        <Props>
                          <Nil N="MyCommand" />
                          <Obj N="BoundParameters" RefId="1248">
                            <TNRef RefId="38" />
                            <DCT />
                          </Obj>
                          <Obj N="UnboundArguments" RefId="1249">
                            <TNRef RefId="31" />
                            <LST />
                          </Obj>
                          <I32 N="ScriptLineNumber">8392</I32>
                          <I32 N="OffsetInLine">13</I32>
                          <I64 N="HistoryId">18</I64>
                          <S N="ScriptName">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1</S>
                          <S N="Line">            throw $errorRecord_x000D__x000A_</S>
                          <S N="Statement">throw $errorRecord</S>
                          <S N="PositionMessage">At C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1:8392 char:13_x000D__x000A_+             throw $errorRecord_x000D__x000A_+             ~~~~~~~~~~~~~~~~~~</S>
                          <S N="PSScriptRoot">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1</S>
                          <S N="PSCommandPath">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1</S>
                          <S N="InvocationName"></S>
                          <I32 N="PipelineLength">0</I32>
                          <I32 N="PipelinePosition">0</I32>
                          <B N="ExpectingInput">false</B>
                          <Obj N="CommandOrigin" RefId="1250">
                            <TNRef RefId="39" />
                            <ToString>Internal</ToString>
                            <I32>1</I32>
                          </Obj>
                          <Nil N="DisplayScriptPosition" />
                        </Props>
                        <MS>
                          <Obj N="ParameterValues" RefId="1251">
                            <TNRef RefId="25" />
                            <DCT />
                          </Obj>
                        </MS>
                      </Obj>
                      <I32 N="ErrorCategory_Category">8</I32>
                      <S N="ErrorCategory_Activity"></S>
                      <S N="ErrorCategory_Reason">Exception</S>
                      <S N="ErrorCategory_TargetName">System.Collections.Generic.Dictionary`2[System.String,System.Object]</S>
                      <S N="ErrorCategory_TargetType">Dictionary`2</S>
                      <S N="ErrorCategory_Message">InvalidResult: (System.Collections.…ring,System.Object]:Dictionary`2) [], Exception</S>
                      <B N="SerializeExtendedInfo">false</B>
                      <S N="ErrorDetails_ScriptStackTrace">at Invoke-Assertion, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 8392_x000D__x000A_at Should&lt;End&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 8331_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1: line 211_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2024_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1985_x000D__x000A_at Invoke-ScriptBlock, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2157_x000D__x000A_at Invoke-TestItem, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1199_x000D__x000A_at Invoke-Block, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 835_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 893_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2024_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1985_x000D__x000A_at Invoke-ScriptBlock, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2160_x000D__x000A_at Invoke-Block, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 940_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 893_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2024_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1985_x000D__x000A_at Invoke-ScriptBlock, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2160_x000D__x000A_at Invoke-Block, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 940_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1688_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.ps1: line 3_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 3260_x000D__x000A_at Invoke-InNewScriptScope, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 3267_x000D__x000A_at Run-Test, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1691_x000D__x000A_at Invoke-Test, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2512_x000D__x000A_at Invoke-Pester&lt;End&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 5110_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Sampler\0.118.1\tasks\Invoke-Pester.pester.build.ps1: line 906_x000D__x000A_at *Task, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 629_x000D__x000A_at *Task, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 601_x000D__x000A_at *Task, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 601_x000D__x000A_at &lt;ScriptBlock&gt;&lt;End&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 787_x000D__x000A_at &lt;ScriptBlock&gt;&lt;Begin&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\build.ps1: line 532_x000D__x000A_at &lt;ScriptBlock&gt;, &lt;No file&gt;: line 1</S>
                      <Nil N="PSMessageDetails" />
                    </MS>
                  </Obj>
                </LST>
              </Obj>
              <Nil N="StandardOutput" />
              <TS N="Duration">PT0.0123289S</TS>
              <S N="ItemType">Test</S>
              <S N="Id">191:5</S>
              <S N="GroupId">191:5</S>
              <SBK N="ScriptBlock">_x000D__x000A_        $functionFile = Get-ChildItem -Path $sourcePath -Recurse -Include "$Name.ps1"_x000D__x000A__x000D__x000A_        $scriptFileRawContent = Get-Content -Raw -Path $functionFile.FullName_x000D__x000A__x000D__x000A_        $abstractSyntaxTree = [System.Management.Automation.Language.Parser]::ParseInput($scriptFileRawContent, [ref] $null, [ref] $null)_x000D__x000A__x000D__x000A_        $astSearchDelegate = { $args[0] -is [System.Management.Automation.Language.FunctionDefinitionAst] }_x000D__x000A__x000D__x000A_        $parsedFunction = $abstractSyntaxTree.FindAll( $astSearchDelegate, $true ) |_x000D__x000A_            Where-Object -FilterScript {_x000D__x000A_                $_.Name -eq $Name_x000D__x000A_            }_x000D__x000A__x000D__x000A_        $functionHelp = $parsedFunction.GetHelpContent()_x000D__x000A__x000D__x000A_        $parameters = $parsedFunction.Body.ParamBlock.Parameters.Name.VariablePath.ForEach({ $_.ToString() })_x000D__x000A__x000D__x000A_        foreach ($parameter in $parameters)_x000D__x000A_        {_x000D__x000A_            $functionHelp.Parameters.($parameter.ToUpper()) | Should -Not -BeNullOrEmpty -Because ('the parameter {0} must have a description' -f $parameter)_x000D__x000A_            $functionHelp.Parameters.($parameter.ToUpper()).Length | Should -BeGreaterThan 25 -Because ('the parameter {0} must have descriptive description' -f $parameter)_x000D__x000A_        }_x000D__x000A_    </SBK>
              <Nil N="Tag" />
              <B N="Focus">false</B>
              <B N="Skip">false</B>
              <Ref N="Block" RefId="67" />
              <B N="First">false</B>
              <B N="Last">false</B>
              <B N="Include">false</B>
              <B N="Exclude">false</B>
              <B N="Explicit">false</B>
              <B N="ShouldRun">true</B>
              <I32 N="StartLine">191</I32>
              <B N="Executed">true</B>
              <DT N="ExecutedAt">2024-08-03T17:35:53.1556775-07:00</DT>
              <B N="Passed">false</B>
              <B N="Skipped">false</B>
              <B N="Inconclusive">false</B>
              <TS N="UserDuration">PT0.006142S</TS>
              <TS N="FrameworkDuration">PT0.0061869S</TS>
              <Nil N="PluginData" />
              <Nil N="FrameworkData" />
            </Props>
          </Obj>
          <Obj RefId="1252">
            <TNRef RefId="30" />
            <ToString>[-] Should have described all parameters for CreateEventSourceAndLog</ToString>
            <Props>
              <S N="Name">Should have described all parameters for &lt;Name&gt;</S>
              <Obj N="Path" RefId="1253">
                <TNRef RefId="28" />
                <LST>
                  <S>Help for module</S>
                  <S>Should have described all parameters for &lt;Name&gt;</S>
                </LST>
              </Obj>
              <Ref N="Data" RefId="404" />
              <S N="ExpandedName">Should have described all parameters for CreateEventSourceAndLog</S>
              <S N="ExpandedPath">Help for module.Should have described all parameters for CreateEventSourceAndLog</S>
              <S N="Result">Failed</S>
              <Obj N="ErrorRecord" RefId="1254">
                <TNRef RefId="31" />
                <LST>
                  <Obj RefId="1255">
                    <TNRef RefId="33" />
                    <ToString>Expected a value, because the parameter LogName must have a description, but got $null or empty.</ToString>
                    <MS>
                      <S N="DisplayErrorMessage">Expected a value, because the parameter LogName must have a description, but got $null or empty.</S>
                      <S N="DisplayStackTrace">at $functionHelp.Parameters.($parameter.ToUpper()) | Should -Not -BeNullOrEmpty -Because ('the parameter {0} must have a description' -f $parameter), C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:211_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:211</S>
                      <Obj N="Exception" RefId="1256">
                        <TNRef RefId="60" />
                        <ToString>System.Exception: Expected a value, because the parameter LogName must have a description, but got $null or empty.</ToString>
                        <Props>
                          <Nil N="TargetSite" />
                          <S N="Message">Expected a value, because the parameter LogName must have a description, but got $null or empty.</S>
                          <Obj N="Data" RefId="1257">
                            <TNRef RefId="35" />
                            <DCT />
                          </Obj>
                          <Nil N="InnerException" />
                          <Nil N="HelpLink" />
                          <Nil N="Source" />
                          <I32 N="HResult">-2146233088</I32>
                          <Nil N="StackTrace" />
                        </Props>
                      </Obj>
                      <Obj N="TargetObject" RefId="1258">
                        <TNRef RefId="38" />
                        <DCT>
                          <En>
                            <S N="Key">Message</S>
                            <S N="Value">Expected a value, because the parameter LogName must have a description, but got $null or empty.</S>
                          </En>
                          <En>
                            <S N="Key">File</S>
                            <S N="Value">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1</S>
                          </En>
                          <En>
                            <S N="Key">Line</S>
                            <S N="Value">211</S>
                          </En>
                          <En>
                            <S N="Key">LineText</S>
                            <S N="Value">            $functionHelp.Parameters.($parameter.ToUpper()) | Should -Not -BeNullOrEmpty -Because ('the parameter {0} must have a description' -f $parameter)</S>
                          </En>
                          <En>
                            <S N="Key">Terminating</S>
                            <B N="Value">true</B>
                          </En>
                          <En>
                            <S N="Key">ShouldResult</S>
                            <Obj N="Value" RefId="1259">
                              <TNRef RefId="61" />
                              <ToString>Pester.ShouldResult</ToString>
                              <Props>
                                <B N="Succeeded">false</B>
                                <S N="FailureMessage">Expected a value, because the parameter LogName must have a description, but got $null or empty.</S>
                                <Obj N="ExpectResult" RefId="1260">
                                  <TNRef RefId="62" />
                                  <ToString>Expected: '$null or empty' Actual: @($null) Because: the parameter LogName must have a description</ToString>
                                  <Props>
                                    <S N="Actual">@($null)</S>
                                    <S N="Expected">'$null or empty'</S>
                                    <S N="Because">the parameter LogName must have a description</S>
                                  </Props>
                                </Obj>
                              </Props>
                            </Obj>
                          </En>
                        </DCT>
                      </Obj>
                      <S N="FullyQualifiedErrorId">PesterAssertionFailed</S>
                      <Obj N="InvocationInfo" RefId="1261">
                        <TNRef RefId="37" />
                        <ToString>System.Management.Automation.InvocationInfo</ToString>
                        <Props>
                          <Nil N="MyCommand" />
                          <Obj N="BoundParameters" RefId="1262">
                            <TNRef RefId="38" />
                            <DCT />
                          </Obj>
                          <Obj N="UnboundArguments" RefId="1263">
                            <TNRef RefId="31" />
                            <LST />
                          </Obj>
                          <I32 N="ScriptLineNumber">8392</I32>
                          <I32 N="OffsetInLine">13</I32>
                          <I64 N="HistoryId">18</I64>
                          <S N="ScriptName">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1</S>
                          <S N="Line">            throw $errorRecord_x000D__x000A_</S>
                          <S N="Statement">throw $errorRecord</S>
                          <S N="PositionMessage">At C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1:8392 char:13_x000D__x000A_+             throw $errorRecord_x000D__x000A_+             ~~~~~~~~~~~~~~~~~~</S>
                          <S N="PSScriptRoot">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1</S>
                          <S N="PSCommandPath">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1</S>
                          <S N="InvocationName"></S>
                          <I32 N="PipelineLength">0</I32>
                          <I32 N="PipelinePosition">0</I32>
                          <B N="ExpectingInput">false</B>
                          <Obj N="CommandOrigin" RefId="1264">
                            <TNRef RefId="39" />
                            <ToString>Internal</ToString>
                            <I32>1</I32>
                          </Obj>
                          <Nil N="DisplayScriptPosition" />
                        </Props>
                        <MS>
                          <Obj N="ParameterValues" RefId="1265">
                            <TNRef RefId="25" />
                            <DCT />
                          </Obj>
                        </MS>
                      </Obj>
                      <I32 N="ErrorCategory_Category">8</I32>
                      <S N="ErrorCategory_Activity"></S>
                      <S N="ErrorCategory_Reason">Exception</S>
                      <S N="ErrorCategory_TargetName">System.Collections.Generic.Dictionary`2[System.String,System.Object]</S>
                      <S N="ErrorCategory_TargetType">Dictionary`2</S>
                      <S N="ErrorCategory_Message">InvalidResult: (System.Collections.…ring,System.Object]:Dictionary`2) [], Exception</S>
                      <B N="SerializeExtendedInfo">false</B>
                      <S N="ErrorDetails_ScriptStackTrace">at Invoke-Assertion, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 8392_x000D__x000A_at Should&lt;End&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 8331_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1: line 211_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2024_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1985_x000D__x000A_at Invoke-ScriptBlock, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2157_x000D__x000A_at Invoke-TestItem, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1199_x000D__x000A_at Invoke-Block, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 835_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 893_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2024_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1985_x000D__x000A_at Invoke-ScriptBlock, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2160_x000D__x000A_at Invoke-Block, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 940_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 893_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2024_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1985_x000D__x000A_at Invoke-ScriptBlock, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2160_x000D__x000A_at Invoke-Block, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 940_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1688_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.ps1: line 3_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 3260_x000D__x000A_at Invoke-InNewScriptScope, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 3267_x000D__x000A_at Run-Test, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1691_x000D__x000A_at Invoke-Test, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2512_x000D__x000A_at Invoke-Pester&lt;End&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 5110_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Sampler\0.118.1\tasks\Invoke-Pester.pester.build.ps1: line 906_x000D__x000A_at *Task, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 629_x000D__x000A_at *Task, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 601_x000D__x000A_at *Task, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 601_x000D__x000A_at &lt;ScriptBlock&gt;&lt;End&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 787_x000D__x000A_at &lt;ScriptBlock&gt;&lt;Begin&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\build.ps1: line 532_x000D__x000A_at &lt;ScriptBlock&gt;, &lt;No file&gt;: line 1</S>
                      <Nil N="PSMessageDetails" />
                    </MS>
                  </Obj>
                </LST>
              </Obj>
              <Nil N="StandardOutput" />
              <TS N="Duration">PT0.0345247S</TS>
              <S N="ItemType">Test</S>
              <S N="Id">191:5</S>
              <S N="GroupId">191:5</S>
              <SBK N="ScriptBlock">_x000D__x000A_        $functionFile = Get-ChildItem -Path $sourcePath -Recurse -Include "$Name.ps1"_x000D__x000A__x000D__x000A_        $scriptFileRawContent = Get-Content -Raw -Path $functionFile.FullName_x000D__x000A__x000D__x000A_        $abstractSyntaxTree = [System.Management.Automation.Language.Parser]::ParseInput($scriptFileRawContent, [ref] $null, [ref] $null)_x000D__x000A__x000D__x000A_        $astSearchDelegate = { $args[0] -is [System.Management.Automation.Language.FunctionDefinitionAst] }_x000D__x000A__x000D__x000A_        $parsedFunction = $abstractSyntaxTree.FindAll( $astSearchDelegate, $true ) |_x000D__x000A_            Where-Object -FilterScript {_x000D__x000A_                $_.Name -eq $Name_x000D__x000A_            }_x000D__x000A__x000D__x000A_        $functionHelp = $parsedFunction.GetHelpContent()_x000D__x000A__x000D__x000A_        $parameters = $parsedFunction.Body.ParamBlock.Parameters.Name.VariablePath.ForEach({ $_.ToString() })_x000D__x000A__x000D__x000A_        foreach ($parameter in $parameters)_x000D__x000A_        {_x000D__x000A_            $functionHelp.Parameters.($parameter.ToUpper()) | Should -Not -BeNullOrEmpty -Because ('the parameter {0} must have a description' -f $parameter)_x000D__x000A_            $functionHelp.Parameters.($parameter.ToUpper()).Length | Should -BeGreaterThan 25 -Because ('the parameter {0} must have descriptive description' -f $parameter)_x000D__x000A_        }_x000D__x000A_    </SBK>
              <Nil N="Tag" />
              <B N="Focus">false</B>
              <B N="Skip">false</B>
              <Ref N="Block" RefId="67" />
              <B N="First">false</B>
              <B N="Last">false</B>
              <B N="Include">false</B>
              <B N="Exclude">false</B>
              <B N="Explicit">false</B>
              <B N="ShouldRun">true</B>
              <I32 N="StartLine">191</I32>
              <B N="Executed">true</B>
              <DT N="ExecutedAt">2024-08-03T17:35:53.1844189-07:00</DT>
              <B N="Passed">false</B>
              <B N="Skipped">false</B>
              <B N="Inconclusive">false</B>
              <TS N="UserDuration">PT0.0243967S</TS>
              <TS N="FrameworkDuration">PT0.010128S</TS>
              <Nil N="PluginData" />
              <Nil N="FrameworkData" />
            </Props>
          </Obj>
          <Obj RefId="1266">
            <TNRef RefId="30" />
            <ToString>[-] Should have described all parameters for Export-EventLog</ToString>
            <Props>
              <S N="Name">Should have described all parameters for &lt;Name&gt;</S>
              <Obj N="Path" RefId="1267">
                <TNRef RefId="28" />
                <LST>
                  <S>Help for module</S>
                  <S>Should have described all parameters for &lt;Name&gt;</S>
                </LST>
              </Obj>
              <Ref N="Data" RefId="434" />
              <S N="ExpandedName">Should have described all parameters for Export-EventLog</S>
              <S N="ExpandedPath">Help for module.Should have described all parameters for Export-EventLog</S>
              <S N="Result">Failed</S>
              <Obj N="ErrorRecord" RefId="1268">
                <TNRef RefId="31" />
                <LST>
                  <Obj RefId="1269">
                    <TNRef RefId="33" />
                    <ToString>Expected a value, because the parameter LogName must have a description, but got $null or empty.</ToString>
                    <MS>
                      <S N="DisplayErrorMessage">Expected a value, because the parameter LogName must have a description, but got $null or empty.</S>
                      <S N="DisplayStackTrace">at $functionHelp.Parameters.($parameter.ToUpper()) | Should -Not -BeNullOrEmpty -Because ('the parameter {0} must have a description' -f $parameter), C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:211_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:211</S>
                      <Obj N="Exception" RefId="1270">
                        <TNRef RefId="60" />
                        <ToString>System.Exception: Expected a value, because the parameter LogName must have a description, but got $null or empty.</ToString>
                        <Props>
                          <Nil N="TargetSite" />
                          <S N="Message">Expected a value, because the parameter LogName must have a description, but got $null or empty.</S>
                          <Obj N="Data" RefId="1271">
                            <TNRef RefId="35" />
                            <DCT />
                          </Obj>
                          <Nil N="InnerException" />
                          <Nil N="HelpLink" />
                          <Nil N="Source" />
                          <I32 N="HResult">-2146233088</I32>
                          <Nil N="StackTrace" />
                        </Props>
                      </Obj>
                      <Obj N="TargetObject" RefId="1272">
                        <TNRef RefId="38" />
                        <DCT>
                          <En>
                            <S N="Key">Message</S>
                            <S N="Value">Expected a value, because the parameter LogName must have a description, but got $null or empty.</S>
                          </En>
                          <En>
                            <S N="Key">File</S>
                            <S N="Value">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1</S>
                          </En>
                          <En>
                            <S N="Key">Line</S>
                            <S N="Value">211</S>
                          </En>
                          <En>
                            <S N="Key">LineText</S>
                            <S N="Value">            $functionHelp.Parameters.($parameter.ToUpper()) | Should -Not -BeNullOrEmpty -Because ('the parameter {0} must have a description' -f $parameter)</S>
                          </En>
                          <En>
                            <S N="Key">Terminating</S>
                            <B N="Value">true</B>
                          </En>
                          <En>
                            <S N="Key">ShouldResult</S>
                            <Obj N="Value" RefId="1273">
                              <TNRef RefId="61" />
                              <ToString>Pester.ShouldResult</ToString>
                              <Props>
                                <B N="Succeeded">false</B>
                                <S N="FailureMessage">Expected a value, because the parameter LogName must have a description, but got $null or empty.</S>
                                <Obj N="ExpectResult" RefId="1274">
                                  <TNRef RefId="62" />
                                  <ToString>Expected: '$null or empty' Actual: @($null) Because: the parameter LogName must have a description</ToString>
                                  <Props>
                                    <S N="Actual">@($null)</S>
                                    <S N="Expected">'$null or empty'</S>
                                    <S N="Because">the parameter LogName must have a description</S>
                                  </Props>
                                </Obj>
                              </Props>
                            </Obj>
                          </En>
                        </DCT>
                      </Obj>
                      <S N="FullyQualifiedErrorId">PesterAssertionFailed</S>
                      <Obj N="InvocationInfo" RefId="1275">
                        <TNRef RefId="37" />
                        <ToString>System.Management.Automation.InvocationInfo</ToString>
                        <Props>
                          <Nil N="MyCommand" />
                          <Obj N="BoundParameters" RefId="1276">
                            <TNRef RefId="38" />
                            <DCT />
                          </Obj>
                          <Obj N="UnboundArguments" RefId="1277">
                            <TNRef RefId="31" />
                            <LST />
                          </Obj>
                          <I32 N="ScriptLineNumber">8392</I32>
                          <I32 N="OffsetInLine">13</I32>
                          <I64 N="HistoryId">18</I64>
                          <S N="ScriptName">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1</S>
                          <S N="Line">            throw $errorRecord_x000D__x000A_</S>
                          <S N="Statement">throw $errorRecord</S>
                          <S N="PositionMessage">At C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1:8392 char:13_x000D__x000A_+             throw $errorRecord_x000D__x000A_+             ~~~~~~~~~~~~~~~~~~</S>
                          <S N="PSScriptRoot">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1</S>
                          <S N="PSCommandPath">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1</S>
                          <S N="InvocationName"></S>
                          <I32 N="PipelineLength">0</I32>
                          <I32 N="PipelinePosition">0</I32>
                          <B N="ExpectingInput">false</B>
                          <Obj N="CommandOrigin" RefId="1278">
                            <TNRef RefId="39" />
                            <ToString>Internal</ToString>
                            <I32>1</I32>
                          </Obj>
                          <Nil N="DisplayScriptPosition" />
                        </Props>
                        <MS>
                          <Obj N="ParameterValues" RefId="1279">
                            <TNRef RefId="25" />
                            <DCT />
                          </Obj>
                        </MS>
                      </Obj>
                      <I32 N="ErrorCategory_Category">8</I32>
                      <S N="ErrorCategory_Activity"></S>
                      <S N="ErrorCategory_Reason">Exception</S>
                      <S N="ErrorCategory_TargetName">System.Collections.Generic.Dictionary`2[System.String,System.Object]</S>
                      <S N="ErrorCategory_TargetType">Dictionary`2</S>
                      <S N="ErrorCategory_Message">InvalidResult: (System.Collections.…ring,System.Object]:Dictionary`2) [], Exception</S>
                      <B N="SerializeExtendedInfo">false</B>
                      <S N="ErrorDetails_ScriptStackTrace">at Invoke-Assertion, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 8392_x000D__x000A_at Should&lt;End&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 8331_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1: line 211_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2024_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1985_x000D__x000A_at Invoke-ScriptBlock, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2157_x000D__x000A_at Invoke-TestItem, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1199_x000D__x000A_at Invoke-Block, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 835_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 893_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2024_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1985_x000D__x000A_at Invoke-ScriptBlock, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2160_x000D__x000A_at Invoke-Block, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 940_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 893_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2024_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1985_x000D__x000A_at Invoke-ScriptBlock, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2160_x000D__x000A_at Invoke-Block, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 940_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1688_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.ps1: line 3_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 3260_x000D__x000A_at Invoke-InNewScriptScope, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 3267_x000D__x000A_at Run-Test, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1691_x000D__x000A_at Invoke-Test, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2512_x000D__x000A_at Invoke-Pester&lt;End&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 5110_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Sampler\0.118.1\tasks\Invoke-Pester.pester.build.ps1: line 906_x000D__x000A_at *Task, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 629_x000D__x000A_at *Task, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 601_x000D__x000A_at *Task, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 601_x000D__x000A_at &lt;ScriptBlock&gt;&lt;End&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 787_x000D__x000A_at &lt;ScriptBlock&gt;&lt;Begin&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\build.ps1: line 532_x000D__x000A_at &lt;ScriptBlock&gt;, &lt;No file&gt;: line 1</S>
                      <Nil N="PSMessageDetails" />
                    </MS>
                  </Obj>
                </LST>
              </Obj>
              <Nil N="StandardOutput" />
              <TS N="Duration">PT0.0212559S</TS>
              <S N="ItemType">Test</S>
              <S N="Id">191:5</S>
              <S N="GroupId">191:5</S>
              <SBK N="ScriptBlock">_x000D__x000A_        $functionFile = Get-ChildItem -Path $sourcePath -Recurse -Include "$Name.ps1"_x000D__x000A__x000D__x000A_        $scriptFileRawContent = Get-Content -Raw -Path $functionFile.FullName_x000D__x000A__x000D__x000A_        $abstractSyntaxTree = [System.Management.Automation.Language.Parser]::ParseInput($scriptFileRawContent, [ref] $null, [ref] $null)_x000D__x000A__x000D__x000A_        $astSearchDelegate = { $args[0] -is [System.Management.Automation.Language.FunctionDefinitionAst] }_x000D__x000A__x000D__x000A_        $parsedFunction = $abstractSyntaxTree.FindAll( $astSearchDelegate, $true ) |_x000D__x000A_            Where-Object -FilterScript {_x000D__x000A_                $_.Name -eq $Name_x000D__x000A_            }_x000D__x000A__x000D__x000A_        $functionHelp = $parsedFunction.GetHelpContent()_x000D__x000A__x000D__x000A_        $parameters = $parsedFunction.Body.ParamBlock.Parameters.Name.VariablePath.ForEach({ $_.ToString() })_x000D__x000A__x000D__x000A_        foreach ($parameter in $parameters)_x000D__x000A_        {_x000D__x000A_            $functionHelp.Parameters.($parameter.ToUpper()) | Should -Not -BeNullOrEmpty -Because ('the parameter {0} must have a description' -f $parameter)_x000D__x000A_            $functionHelp.Parameters.($parameter.ToUpper()).Length | Should -BeGreaterThan 25 -Because ('the parameter {0} must have descriptive description' -f $parameter)_x000D__x000A_        }_x000D__x000A_    </SBK>
              <Nil N="Tag" />
              <B N="Focus">false</B>
              <B N="Skip">false</B>
              <Ref N="Block" RefId="67" />
              <B N="First">false</B>
              <B N="Last">false</B>
              <B N="Include">false</B>
              <B N="Exclude">false</B>
              <B N="Explicit">false</B>
              <B N="ShouldRun">true</B>
              <I32 N="StartLine">191</I32>
              <B N="Executed">true</B>
              <DT N="ExecutedAt">2024-08-03T17:35:53.2660286-07:00</DT>
              <B N="Passed">false</B>
              <B N="Skipped">false</B>
              <B N="Inconclusive">false</B>
              <TS N="UserDuration">PT0.0130498S</TS>
              <TS N="FrameworkDuration">PT0.0082061S</TS>
              <Nil N="PluginData" />
              <Nil N="FrameworkData" />
            </Props>
          </Obj>
          <Obj RefId="1280">
            <TNRef RefId="30" />
            <ToString>[-] Should have described all parameters for Handle-Error</ToString>
            <Props>
              <S N="Name">Should have described all parameters for &lt;Name&gt;</S>
              <Obj N="Path" RefId="1281">
                <TNRef RefId="28" />
                <LST>
                  <S>Help for module</S>
                  <S>Should have described all parameters for &lt;Name&gt;</S>
                </LST>
              </Obj>
              <Ref N="Data" RefId="449" />
              <S N="ExpandedName">Should have described all parameters for Handle-Error</S>
              <S N="ExpandedPath">Help for module.Should have described all parameters for Handle-Error</S>
              <S N="Result">Failed</S>
              <Obj N="ErrorRecord" RefId="1282">
                <TNRef RefId="31" />
                <LST>
                  <Obj RefId="1283">
                    <TNRef RefId="33" />
                    <ToString>Expected a value, because the parameter ErrorRecord must have a description, but got $null or empty.</ToString>
                    <MS>
                      <S N="DisplayErrorMessage">Expected a value, because the parameter ErrorRecord must have a description, but got $null or empty.</S>
                      <S N="DisplayStackTrace">at $functionHelp.Parameters.($parameter.ToUpper()) | Should -Not -BeNullOrEmpty -Because ('the parameter {0} must have a description' -f $parameter), C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:211_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:211</S>
                      <Obj N="Exception" RefId="1284">
                        <TNRef RefId="60" />
                        <ToString>System.Exception: Expected a value, because the parameter ErrorRecord must have a description, but got $null or empty.</ToString>
                        <Props>
                          <Nil N="TargetSite" />
                          <S N="Message">Expected a value, because the parameter ErrorRecord must have a description, but got $null or empty.</S>
                          <Obj N="Data" RefId="1285">
                            <TNRef RefId="35" />
                            <DCT />
                          </Obj>
                          <Nil N="InnerException" />
                          <Nil N="HelpLink" />
                          <Nil N="Source" />
                          <I32 N="HResult">-2146233088</I32>
                          <Nil N="StackTrace" />
                        </Props>
                      </Obj>
                      <Obj N="TargetObject" RefId="1286">
                        <TNRef RefId="38" />
                        <DCT>
                          <En>
                            <S N="Key">Message</S>
                            <S N="Value">Expected a value, because the parameter ErrorRecord must have a description, but got $null or empty.</S>
                          </En>
                          <En>
                            <S N="Key">File</S>
                            <S N="Value">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1</S>
                          </En>
                          <En>
                            <S N="Key">Line</S>
                            <S N="Value">211</S>
                          </En>
                          <En>
                            <S N="Key">LineText</S>
                            <S N="Value">            $functionHelp.Parameters.($parameter.ToUpper()) | Should -Not -BeNullOrEmpty -Because ('the parameter {0} must have a description' -f $parameter)</S>
                          </En>
                          <En>
                            <S N="Key">Terminating</S>
                            <B N="Value">true</B>
                          </En>
                          <En>
                            <S N="Key">ShouldResult</S>
                            <Obj N="Value" RefId="1287">
                              <TNRef RefId="61" />
                              <ToString>Pester.ShouldResult</ToString>
                              <Props>
                                <B N="Succeeded">false</B>
                                <S N="FailureMessage">Expected a value, because the parameter ErrorRecord must have a description, but got $null or empty.</S>
                                <Obj N="ExpectResult" RefId="1288">
                                  <TNRef RefId="62" />
                                  <ToString>Expected: '$null or empty' Actual: @($null) Because: the parameter ErrorRecord must have a description</ToString>
                                  <Props>
                                    <S N="Actual">@($null)</S>
                                    <S N="Expected">'$null or empty'</S>
                                    <S N="Because">the parameter ErrorRecord must have a description</S>
                                  </Props>
                                </Obj>
                              </Props>
                            </Obj>
                          </En>
                        </DCT>
                      </Obj>
                      <S N="FullyQualifiedErrorId">PesterAssertionFailed</S>
                      <Obj N="InvocationInfo" RefId="1289">
                        <TNRef RefId="37" />
                        <ToString>System.Management.Automation.InvocationInfo</ToString>
                        <Props>
                          <Nil N="MyCommand" />
                          <Obj N="BoundParameters" RefId="1290">
                            <TNRef RefId="38" />
                            <DCT />
                          </Obj>
                          <Obj N="UnboundArguments" RefId="1291">
                            <TNRef RefId="31" />
                            <LST />
                          </Obj>
                          <I32 N="ScriptLineNumber">8392</I32>
                          <I32 N="OffsetInLine">13</I32>
                          <I64 N="HistoryId">18</I64>
                          <S N="ScriptName">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1</S>
                          <S N="Line">            throw $errorRecord_x000D__x000A_</S>
                          <S N="Statement">throw $errorRecord</S>
                          <S N="PositionMessage">At C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1:8392 char:13_x000D__x000A_+             throw $errorRecord_x000D__x000A_+             ~~~~~~~~~~~~~~~~~~</S>
                          <S N="PSScriptRoot">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1</S>
                          <S N="PSCommandPath">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1</S>
                          <S N="InvocationName"></S>
                          <I32 N="PipelineLength">0</I32>
                          <I32 N="PipelinePosition">0</I32>
                          <B N="ExpectingInput">false</B>
                          <Obj N="CommandOrigin" RefId="1292">
                            <TNRef RefId="39" />
                            <ToString>Internal</ToString>
                            <I32>1</I32>
                          </Obj>
                          <Nil N="DisplayScriptPosition" />
                        </Props>
                        <MS>
                          <Obj N="ParameterValues" RefId="1293">
                            <TNRef RefId="25" />
                            <DCT />
                          </Obj>
                        </MS>
                      </Obj>
                      <I32 N="ErrorCategory_Category">8</I32>
                      <S N="ErrorCategory_Activity"></S>
                      <S N="ErrorCategory_Reason">Exception</S>
                      <S N="ErrorCategory_TargetName">System.Collections.Generic.Dictionary`2[System.String,System.Object]</S>
                      <S N="ErrorCategory_TargetType">Dictionary`2</S>
                      <S N="ErrorCategory_Message">InvalidResult: (System.Collections.…ring,System.Object]:Dictionary`2) [], Exception</S>
                      <B N="SerializeExtendedInfo">false</B>
                      <S N="ErrorDetails_ScriptStackTrace">at Invoke-Assertion, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 8392_x000D__x000A_at Should&lt;End&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 8331_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1: line 211_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2024_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1985_x000D__x000A_at Invoke-ScriptBlock, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2157_x000D__x000A_at Invoke-TestItem, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1199_x000D__x000A_at Invoke-Block, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 835_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 893_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2024_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1985_x000D__x000A_at Invoke-ScriptBlock, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2160_x000D__x000A_at Invoke-Block, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 940_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 893_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2024_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1985_x000D__x000A_at Invoke-ScriptBlock, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2160_x000D__x000A_at Invoke-Block, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 940_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1688_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.ps1: line 3_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 3260_x000D__x000A_at Invoke-InNewScriptScope, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 3267_x000D__x000A_at Run-Test, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1691_x000D__x000A_at Invoke-Test, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2512_x000D__x000A_at Invoke-Pester&lt;End&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 5110_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Sampler\0.118.1\tasks\Invoke-Pester.pester.build.ps1: line 906_x000D__x000A_at *Task, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 629_x000D__x000A_at *Task, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 601_x000D__x000A_at *Task, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 601_x000D__x000A_at &lt;ScriptBlock&gt;&lt;End&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 787_x000D__x000A_at &lt;ScriptBlock&gt;&lt;Begin&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\build.ps1: line 532_x000D__x000A_at &lt;ScriptBlock&gt;, &lt;No file&gt;: line 1</S>
                      <Nil N="PSMessageDetails" />
                    </MS>
                  </Obj>
                </LST>
              </Obj>
              <Nil N="StandardOutput" />
              <TS N="Duration">PT0.0191458S</TS>
              <S N="ItemType">Test</S>
              <S N="Id">191:5</S>
              <S N="GroupId">191:5</S>
              <SBK N="ScriptBlock">_x000D__x000A_        $functionFile = Get-ChildItem -Path $sourcePath -Recurse -Include "$Name.ps1"_x000D__x000A__x000D__x000A_        $scriptFileRawContent = Get-Content -Raw -Path $functionFile.FullName_x000D__x000A__x000D__x000A_        $abstractSyntaxTree = [System.Management.Automation.Language.Parser]::ParseInput($scriptFileRawContent, [ref] $null, [ref] $null)_x000D__x000A__x000D__x000A_        $astSearchDelegate = { $args[0] -is [System.Management.Automation.Language.FunctionDefinitionAst] }_x000D__x000A__x000D__x000A_        $parsedFunction = $abstractSyntaxTree.FindAll( $astSearchDelegate, $true ) |_x000D__x000A_            Where-Object -FilterScript {_x000D__x000A_                $_.Name -eq $Name_x000D__x000A_            }_x000D__x000A__x000D__x000A_        $functionHelp = $parsedFunction.GetHelpContent()_x000D__x000A__x000D__x000A_        $parameters = $parsedFunction.Body.ParamBlock.Parameters.Name.VariablePath.ForEach({ $_.ToString() })_x000D__x000A__x000D__x000A_        foreach ($parameter in $parameters)_x000D__x000A_        {_x000D__x000A_            $functionHelp.Parameters.($parameter.ToUpper()) | Should -Not -BeNullOrEmpty -Because ('the parameter {0} must have a description' -f $parameter)_x000D__x000A_            $functionHelp.Parameters.($parameter.ToUpper()).Length | Should -BeGreaterThan 25 -Because ('the parameter {0} must have descriptive description' -f $parameter)_x000D__x000A_        }_x000D__x000A_    </SBK>
              <Nil N="Tag" />
              <B N="Focus">false</B>
              <B N="Skip">false</B>
              <Ref N="Block" RefId="67" />
              <B N="First">false</B>
              <B N="Last">false</B>
              <B N="Include">false</B>
              <B N="Exclude">false</B>
              <B N="Explicit">false</B>
              <B N="ShouldRun">true</B>
              <I32 N="StartLine">191</I32>
              <B N="Executed">true</B>
              <DT N="ExecutedAt">2024-08-03T17:35:53.2874134-07:00</DT>
              <B N="Passed">false</B>
              <B N="Skipped">false</B>
              <B N="Inconclusive">false</B>
              <TS N="UserDuration">PT0.0120101S</TS>
              <TS N="FrameworkDuration">PT0.0071357S</TS>
              <Nil N="PluginData" />
              <Nil N="FrameworkData" />
            </Props>
          </Obj>
          <Obj RefId="1294">
            <TNRef RefId="30" />
            <ToString>[-] Should have described all parameters for Initialize-CSVDirectory</ToString>
            <Props>
              <S N="Name">Should have described all parameters for &lt;Name&gt;</S>
              <Obj N="Path" RefId="1295">
                <TNRef RefId="28" />
                <LST>
                  <S>Help for module</S>
                  <S>Should have described all parameters for &lt;Name&gt;</S>
                </LST>
              </Obj>
              <Ref N="Data" RefId="464" />
              <S N="ExpandedName">Should have described all parameters for Initialize-CSVDirectory</S>
              <S N="ExpandedPath">Help for module.Should have described all parameters for Initialize-CSVDirectory</S>
              <S N="Result">Failed</S>
              <Obj N="ErrorRecord" RefId="1296">
                <TNRef RefId="31" />
                <LST>
                  <Obj RefId="1297">
                    <TNRef RefId="33" />
                    <ToString>Expected a value, because the parameter deploymentName must have a description, but got $null or empty.</ToString>
                    <MS>
                      <S N="DisplayErrorMessage">Expected a value, because the parameter deploymentName must have a description, but got $null or empty.</S>
                      <S N="DisplayStackTrace">at $functionHelp.Parameters.($parameter.ToUpper()) | Should -Not -BeNullOrEmpty -Because ('the parameter {0} must have a description' -f $parameter), C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:211_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:211</S>
                      <Obj N="Exception" RefId="1298">
                        <TNRef RefId="60" />
                        <ToString>System.Exception: Expected a value, because the parameter deploymentName must have a description, but got $null or empty.</ToString>
                        <Props>
                          <Nil N="TargetSite" />
                          <S N="Message">Expected a value, because the parameter deploymentName must have a description, but got $null or empty.</S>
                          <Obj N="Data" RefId="1299">
                            <TNRef RefId="35" />
                            <DCT />
                          </Obj>
                          <Nil N="InnerException" />
                          <Nil N="HelpLink" />
                          <Nil N="Source" />
                          <I32 N="HResult">-2146233088</I32>
                          <Nil N="StackTrace" />
                        </Props>
                      </Obj>
                      <Obj N="TargetObject" RefId="1300">
                        <TNRef RefId="38" />
                        <DCT>
                          <En>
                            <S N="Key">Message</S>
                            <S N="Value">Expected a value, because the parameter deploymentName must have a description, but got $null or empty.</S>
                          </En>
                          <En>
                            <S N="Key">File</S>
                            <S N="Value">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1</S>
                          </En>
                          <En>
                            <S N="Key">Line</S>
                            <S N="Value">211</S>
                          </En>
                          <En>
                            <S N="Key">LineText</S>
                            <S N="Value">            $functionHelp.Parameters.($parameter.ToUpper()) | Should -Not -BeNullOrEmpty -Because ('the parameter {0} must have a description' -f $parameter)</S>
                          </En>
                          <En>
                            <S N="Key">Terminating</S>
                            <B N="Value">true</B>
                          </En>
                          <En>
                            <S N="Key">ShouldResult</S>
                            <Obj N="Value" RefId="1301">
                              <TNRef RefId="61" />
                              <ToString>Pester.ShouldResult</ToString>
                              <Props>
                                <B N="Succeeded">false</B>
                                <S N="FailureMessage">Expected a value, because the parameter deploymentName must have a description, but got $null or empty.</S>
                                <Obj N="ExpectResult" RefId="1302">
                                  <TNRef RefId="62" />
                                  <ToString>Expected: '$null or empty' Actual: @($null) Because: the parameter deploymentName must have a description</ToString>
                                  <Props>
                                    <S N="Actual">@($null)</S>
                                    <S N="Expected">'$null or empty'</S>
                                    <S N="Because">the parameter deploymentName must have a description</S>
                                  </Props>
                                </Obj>
                              </Props>
                            </Obj>
                          </En>
                        </DCT>
                      </Obj>
                      <S N="FullyQualifiedErrorId">PesterAssertionFailed</S>
                      <Obj N="InvocationInfo" RefId="1303">
                        <TNRef RefId="37" />
                        <ToString>System.Management.Automation.InvocationInfo</ToString>
                        <Props>
                          <Nil N="MyCommand" />
                          <Obj N="BoundParameters" RefId="1304">
                            <TNRef RefId="38" />
                            <DCT />
                          </Obj>
                          <Obj N="UnboundArguments" RefId="1305">
                            <TNRef RefId="31" />
                            <LST />
                          </Obj>
                          <I32 N="ScriptLineNumber">8392</I32>
                          <I32 N="OffsetInLine">13</I32>
                          <I64 N="HistoryId">18</I64>
                          <S N="ScriptName">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1</S>
                          <S N="Line">            throw $errorRecord_x000D__x000A_</S>
                          <S N="Statement">throw $errorRecord</S>
                          <S N="PositionMessage">At C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1:8392 char:13_x000D__x000A_+             throw $errorRecord_x000D__x000A_+             ~~~~~~~~~~~~~~~~~~</S>
                          <S N="PSScriptRoot">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1</S>
                          <S N="PSCommandPath">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1</S>
                          <S N="InvocationName"></S>
                          <I32 N="PipelineLength">0</I32>
                          <I32 N="PipelinePosition">0</I32>
                          <B N="ExpectingInput">false</B>
                          <Obj N="CommandOrigin" RefId="1306">
                            <TNRef RefId="39" />
                            <ToString>Internal</ToString>
                            <I32>1</I32>
                          </Obj>
                          <Nil N="DisplayScriptPosition" />
                        </Props>
                        <MS>
                          <Obj N="ParameterValues" RefId="1307">
                            <TNRef RefId="25" />
                            <DCT />
                          </Obj>
                        </MS>
                      </Obj>
                      <I32 N="ErrorCategory_Category">8</I32>
                      <S N="ErrorCategory_Activity"></S>
                      <S N="ErrorCategory_Reason">Exception</S>
                      <S N="ErrorCategory_TargetName">System.Collections.Generic.Dictionary`2[System.String,System.Object]</S>
                      <S N="ErrorCategory_TargetType">Dictionary`2</S>
                      <S N="ErrorCategory_Message">InvalidResult: (System.Collections.…ring,System.Object]:Dictionary`2) [], Exception</S>
                      <B N="SerializeExtendedInfo">false</B>
                      <S N="ErrorDetails_ScriptStackTrace">at Invoke-Assertion, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 8392_x000D__x000A_at Should&lt;End&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 8331_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1: line 211_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2024_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1985_x000D__x000A_at Invoke-ScriptBlock, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2157_x000D__x000A_at Invoke-TestItem, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1199_x000D__x000A_at Invoke-Block, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 835_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 893_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2024_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1985_x000D__x000A_at Invoke-ScriptBlock, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2160_x000D__x000A_at Invoke-Block, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 940_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 893_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2024_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1985_x000D__x000A_at Invoke-ScriptBlock, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2160_x000D__x000A_at Invoke-Block, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 940_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1688_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.ps1: line 3_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 3260_x000D__x000A_at Invoke-InNewScriptScope, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 3267_x000D__x000A_at Run-Test, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1691_x000D__x000A_at Invoke-Test, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2512_x000D__x000A_at Invoke-Pester&lt;End&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 5110_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Sampler\0.118.1\tasks\Invoke-Pester.pester.build.ps1: line 906_x000D__x000A_at *Task, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 629_x000D__x000A_at *Task, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 601_x000D__x000A_at *Task, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 601_x000D__x000A_at &lt;ScriptBlock&gt;&lt;End&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 787_x000D__x000A_at &lt;ScriptBlock&gt;&lt;Begin&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\build.ps1: line 532_x000D__x000A_at &lt;ScriptBlock&gt;, &lt;No file&gt;: line 1</S>
                      <Nil N="PSMessageDetails" />
                    </MS>
                  </Obj>
                </LST>
              </Obj>
              <Nil N="StandardOutput" />
              <TS N="Duration">PT0.0246537S</TS>
              <S N="ItemType">Test</S>
              <S N="Id">191:5</S>
              <S N="GroupId">191:5</S>
              <SBK N="ScriptBlock">_x000D__x000A_        $functionFile = Get-ChildItem -Path $sourcePath -Recurse -Include "$Name.ps1"_x000D__x000A__x000D__x000A_        $scriptFileRawContent = Get-Content -Raw -Path $functionFile.FullName_x000D__x000A__x000D__x000A_        $abstractSyntaxTree = [System.Management.Automation.Language.Parser]::ParseInput($scriptFileRawContent, [ref] $null, [ref] $null)_x000D__x000A__x000D__x000A_        $astSearchDelegate = { $args[0] -is [System.Management.Automation.Language.FunctionDefinitionAst] }_x000D__x000A__x000D__x000A_        $parsedFunction = $abstractSyntaxTree.FindAll( $astSearchDelegate, $true ) |_x000D__x000A_            Where-Object -FilterScript {_x000D__x000A_                $_.Name -eq $Name_x000D__x000A_            }_x000D__x000A__x000D__x000A_        $functionHelp = $parsedFunction.GetHelpContent()_x000D__x000A__x000D__x000A_        $parameters = $parsedFunction.Body.ParamBlock.Parameters.Name.VariablePath.ForEach({ $_.ToString() })_x000D__x000A__x000D__x000A_        foreach ($parameter in $parameters)_x000D__x000A_        {_x000D__x000A_            $functionHelp.Parameters.($parameter.ToUpper()) | Should -Not -BeNullOrEmpty -Because ('the parameter {0} must have a description' -f $parameter)_x000D__x000A_            $functionHelp.Parameters.($parameter.ToUpper()).Length | Should -BeGreaterThan 25 -Because ('the parameter {0} must have descriptive description' -f $parameter)_x000D__x000A_        }_x000D__x000A_    </SBK>
              <Nil N="Tag" />
              <B N="Focus">false</B>
              <B N="Skip">false</B>
              <Ref N="Block" RefId="67" />
              <B N="First">false</B>
              <B N="Last">false</B>
              <B N="Include">false</B>
              <B N="Exclude">false</B>
              <B N="Explicit">false</B>
              <B N="ShouldRun">true</B>
              <I32 N="StartLine">191</I32>
              <B N="Executed">true</B>
              <DT N="ExecutedAt">2024-08-03T17:35:53.3066187-07:00</DT>
              <B N="Passed">false</B>
              <B N="Skipped">false</B>
              <B N="Inconclusive">false</B>
              <TS N="UserDuration">PT0.0170982S</TS>
              <TS N="FrameworkDuration">PT0.0075555S</TS>
              <Nil N="PluginData" />
              <Nil N="FrameworkData" />
            </Props>
          </Obj>
          <Obj RefId="1308">
            <TNRef RefId="30" />
            <ToString>[-] Should have described all parameters for Log-Params</ToString>
            <Props>
              <S N="Name">Should have described all parameters for &lt;Name&gt;</S>
              <Obj N="Path" RefId="1309">
                <TNRef RefId="28" />
                <LST>
                  <S>Help for module</S>
                  <S>Should have described all parameters for &lt;Name&gt;</S>
                </LST>
              </Obj>
              <Ref N="Data" RefId="509" />
              <S N="ExpandedName">Should have described all parameters for Log-Params</S>
              <S N="ExpandedPath">Help for module.Should have described all parameters for Log-Params</S>
              <S N="Result">Failed</S>
              <Obj N="ErrorRecord" RefId="1310">
                <TNRef RefId="31" />
                <LST>
                  <Obj RefId="1311">
                    <TNRef RefId="33" />
                    <ToString>Expected a value, because the parameter Params must have a description, but got $null or empty.</ToString>
                    <MS>
                      <S N="DisplayErrorMessage">Expected a value, because the parameter Params must have a description, but got $null or empty.</S>
                      <S N="DisplayStackTrace">at $functionHelp.Parameters.($parameter.ToUpper()) | Should -Not -BeNullOrEmpty -Because ('the parameter {0} must have a description' -f $parameter), C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:211_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:211</S>
                      <Obj N="Exception" RefId="1312">
                        <TNRef RefId="60" />
                        <ToString>System.Exception: Expected a value, because the parameter Params must have a description, but got $null or empty.</ToString>
                        <Props>
                          <Nil N="TargetSite" />
                          <S N="Message">Expected a value, because the parameter Params must have a description, but got $null or empty.</S>
                          <Obj N="Data" RefId="1313">
                            <TNRef RefId="35" />
                            <DCT />
                          </Obj>
                          <Nil N="InnerException" />
                          <Nil N="HelpLink" />
                          <Nil N="Source" />
                          <I32 N="HResult">-2146233088</I32>
                          <Nil N="StackTrace" />
                        </Props>
                      </Obj>
                      <Obj N="TargetObject" RefId="1314">
                        <TNRef RefId="38" />
                        <DCT>
                          <En>
                            <S N="Key">Message</S>
                            <S N="Value">Expected a value, because the parameter Params must have a description, but got $null or empty.</S>
                          </En>
                          <En>
                            <S N="Key">File</S>
                            <S N="Value">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1</S>
                          </En>
                          <En>
                            <S N="Key">Line</S>
                            <S N="Value">211</S>
                          </En>
                          <En>
                            <S N="Key">LineText</S>
                            <S N="Value">            $functionHelp.Parameters.($parameter.ToUpper()) | Should -Not -BeNullOrEmpty -Because ('the parameter {0} must have a description' -f $parameter)</S>
                          </En>
                          <En>
                            <S N="Key">Terminating</S>
                            <B N="Value">true</B>
                          </En>
                          <En>
                            <S N="Key">ShouldResult</S>
                            <Obj N="Value" RefId="1315">
                              <TNRef RefId="61" />
                              <ToString>Pester.ShouldResult</ToString>
                              <Props>
                                <B N="Succeeded">false</B>
                                <S N="FailureMessage">Expected a value, because the parameter Params must have a description, but got $null or empty.</S>
                                <Obj N="ExpectResult" RefId="1316">
                                  <TNRef RefId="62" />
                                  <ToString>Expected: '$null or empty' Actual: @($null) Because: the parameter Params must have a description</ToString>
                                  <Props>
                                    <S N="Actual">@($null)</S>
                                    <S N="Expected">'$null or empty'</S>
                                    <S N="Because">the parameter Params must have a description</S>
                                  </Props>
                                </Obj>
                              </Props>
                            </Obj>
                          </En>
                        </DCT>
                      </Obj>
                      <S N="FullyQualifiedErrorId">PesterAssertionFailed</S>
                      <Obj N="InvocationInfo" RefId="1317">
                        <TNRef RefId="37" />
                        <ToString>System.Management.Automation.InvocationInfo</ToString>
                        <Props>
                          <Nil N="MyCommand" />
                          <Obj N="BoundParameters" RefId="1318">
                            <TNRef RefId="38" />
                            <DCT />
                          </Obj>
                          <Obj N="UnboundArguments" RefId="1319">
                            <TNRef RefId="31" />
                            <LST />
                          </Obj>
                          <I32 N="ScriptLineNumber">8392</I32>
                          <I32 N="OffsetInLine">13</I32>
                          <I64 N="HistoryId">18</I64>
                          <S N="ScriptName">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1</S>
                          <S N="Line">            throw $errorRecord_x000D__x000A_</S>
                          <S N="Statement">throw $errorRecord</S>
                          <S N="PositionMessage">At C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1:8392 char:13_x000D__x000A_+             throw $errorRecord_x000D__x000A_+             ~~~~~~~~~~~~~~~~~~</S>
                          <S N="PSScriptRoot">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1</S>
                          <S N="PSCommandPath">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1</S>
                          <S N="InvocationName"></S>
                          <I32 N="PipelineLength">0</I32>
                          <I32 N="PipelinePosition">0</I32>
                          <B N="ExpectingInput">false</B>
                          <Obj N="CommandOrigin" RefId="1320">
                            <TNRef RefId="39" />
                            <ToString>Internal</ToString>
                            <I32>1</I32>
                          </Obj>
                          <Nil N="DisplayScriptPosition" />
                        </Props>
                        <MS>
                          <Obj N="ParameterValues" RefId="1321">
                            <TNRef RefId="25" />
                            <DCT />
                          </Obj>
                        </MS>
                      </Obj>
                      <I32 N="ErrorCategory_Category">8</I32>
                      <S N="ErrorCategory_Activity"></S>
                      <S N="ErrorCategory_Reason">Exception</S>
                      <S N="ErrorCategory_TargetName">System.Collections.Generic.Dictionary`2[System.String,System.Object]</S>
                      <S N="ErrorCategory_TargetType">Dictionary`2</S>
                      <S N="ErrorCategory_Message">InvalidResult: (System.Collections.…ring,System.Object]:Dictionary`2) [], Exception</S>
                      <B N="SerializeExtendedInfo">false</B>
                      <S N="ErrorDetails_ScriptStackTrace">at Invoke-Assertion, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 8392_x000D__x000A_at Should&lt;End&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 8331_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1: line 211_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2024_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1985_x000D__x000A_at Invoke-ScriptBlock, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2157_x000D__x000A_at Invoke-TestItem, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1199_x000D__x000A_at Invoke-Block, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 835_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 893_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2024_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1985_x000D__x000A_at Invoke-ScriptBlock, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2160_x000D__x000A_at Invoke-Block, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 940_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 893_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2024_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1985_x000D__x000A_at Invoke-ScriptBlock, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2160_x000D__x000A_at Invoke-Block, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 940_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1688_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.ps1: line 3_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 3260_x000D__x000A_at Invoke-InNewScriptScope, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 3267_x000D__x000A_at Run-Test, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1691_x000D__x000A_at Invoke-Test, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2512_x000D__x000A_at Invoke-Pester&lt;End&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 5110_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Sampler\0.118.1\tasks\Invoke-Pester.pester.build.ps1: line 906_x000D__x000A_at *Task, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 629_x000D__x000A_at *Task, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 601_x000D__x000A_at *Task, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 601_x000D__x000A_at &lt;ScriptBlock&gt;&lt;End&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 787_x000D__x000A_at &lt;ScriptBlock&gt;&lt;Begin&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\build.ps1: line 532_x000D__x000A_at &lt;ScriptBlock&gt;, &lt;No file&gt;: line 1</S>
                      <Nil N="PSMessageDetails" />
                    </MS>
                  </Obj>
                </LST>
              </Obj>
              <Nil N="StandardOutput" />
              <TS N="Duration">PT0.0120676S</TS>
              <S N="ItemType">Test</S>
              <S N="Id">191:5</S>
              <S N="GroupId">191:5</S>
              <SBK N="ScriptBlock">_x000D__x000A_        $functionFile = Get-ChildItem -Path $sourcePath -Recurse -Include "$Name.ps1"_x000D__x000A__x000D__x000A_        $scriptFileRawContent = Get-Content -Raw -Path $functionFile.FullName_x000D__x000A__x000D__x000A_        $abstractSyntaxTree = [System.Management.Automation.Language.Parser]::ParseInput($scriptFileRawContent, [ref] $null, [ref] $null)_x000D__x000A__x000D__x000A_        $astSearchDelegate = { $args[0] -is [System.Management.Automation.Language.FunctionDefinitionAst] }_x000D__x000A__x000D__x000A_        $parsedFunction = $abstractSyntaxTree.FindAll( $astSearchDelegate, $true ) |_x000D__x000A_            Where-Object -FilterScript {_x000D__x000A_                $_.Name -eq $Name_x000D__x000A_            }_x000D__x000A__x000D__x000A_        $functionHelp = $parsedFunction.GetHelpContent()_x000D__x000A__x000D__x000A_        $parameters = $parsedFunction.Body.ParamBlock.Parameters.Name.VariablePath.ForEach({ $_.ToString() })_x000D__x000A__x000D__x000A_        foreach ($parameter in $parameters)_x000D__x000A_        {_x000D__x000A_            $functionHelp.Parameters.($parameter.ToUpper()) | Should -Not -BeNullOrEmpty -Because ('the parameter {0} must have a description' -f $parameter)_x000D__x000A_            $functionHelp.Parameters.($parameter.ToUpper()).Length | Should -BeGreaterThan 25 -Because ('the parameter {0} must have descriptive description' -f $parameter)_x000D__x000A_        }_x000D__x000A_    </SBK>
              <Nil N="Tag" />
              <B N="Focus">false</B>
              <B N="Skip">false</B>
              <Ref N="Block" RefId="67" />
              <B N="First">false</B>
              <B N="Last">false</B>
              <B N="Include">false</B>
              <B N="Exclude">false</B>
              <B N="Explicit">false</B>
              <B N="ShouldRun">true</B>
              <I32 N="StartLine">191</I32>
              <B N="Executed">true</B>
              <DT N="ExecutedAt">2024-08-03T17:35:53.3576229-07:00</DT>
              <B N="Passed">false</B>
              <B N="Skipped">false</B>
              <B N="Inconclusive">false</B>
              <TS N="UserDuration">PT0.0067045S</TS>
              <TS N="FrameworkDuration">PT0.0053631S</TS>
              <Nil N="PluginData" />
              <Nil N="FrameworkData" />
            </Props>
          </Obj>
          <Obj RefId="1322">
            <TNRef RefId="30" />
            <ToString>[-] Should have described all parameters for Write-EnhancedLog</ToString>
            <Props>
              <S N="Name">Should have described all parameters for &lt;Name&gt;</S>
              <Obj N="Path" RefId="1323">
                <TNRef RefId="28" />
                <LST>
                  <S>Help for module</S>
                  <S>Should have described all parameters for &lt;Name&gt;</S>
                </LST>
              </Obj>
              <Ref N="Data" RefId="524" />
              <S N="ExpandedName">Should have described all parameters for Write-EnhancedLog</S>
              <S N="ExpandedPath">Help for module.Should have described all parameters for Write-EnhancedLog</S>
              <S N="Result">Failed</S>
              <Obj N="ErrorRecord" RefId="1324">
                <TNRef RefId="31" />
                <LST>
                  <Obj RefId="1325">
                    <TNRef RefId="33" />
                    <ToString>Expected a value, because the parameter Message must have a description, but got $null or empty.</ToString>
                    <MS>
                      <S N="DisplayErrorMessage">Expected a value, because the parameter Message must have a description, but got $null or empty.</S>
                      <S N="DisplayStackTrace">at $functionHelp.Parameters.($parameter.ToUpper()) | Should -Not -BeNullOrEmpty -Because ('the parameter {0} must have a description' -f $parameter), C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:211_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:211</S>
                      <Obj N="Exception" RefId="1326">
                        <TNRef RefId="60" />
                        <ToString>System.Exception: Expected a value, because the parameter Message must have a description, but got $null or empty.</ToString>
                        <Props>
                          <Nil N="TargetSite" />
                          <S N="Message">Expected a value, because the parameter Message must have a description, but got $null or empty.</S>
                          <Obj N="Data" RefId="1327">
                            <TNRef RefId="35" />
                            <DCT />
                          </Obj>
                          <Nil N="InnerException" />
                          <Nil N="HelpLink" />
                          <Nil N="Source" />
                          <I32 N="HResult">-2146233088</I32>
                          <Nil N="StackTrace" />
                        </Props>
                      </Obj>
                      <Obj N="TargetObject" RefId="1328">
                        <TNRef RefId="38" />
                        <DCT>
                          <En>
                            <S N="Key">Message</S>
                            <S N="Value">Expected a value, because the parameter Message must have a description, but got $null or empty.</S>
                          </En>
                          <En>
                            <S N="Key">File</S>
                            <S N="Value">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1</S>
                          </En>
                          <En>
                            <S N="Key">Line</S>
                            <S N="Value">211</S>
                          </En>
                          <En>
                            <S N="Key">LineText</S>
                            <S N="Value">            $functionHelp.Parameters.($parameter.ToUpper()) | Should -Not -BeNullOrEmpty -Because ('the parameter {0} must have a description' -f $parameter)</S>
                          </En>
                          <En>
                            <S N="Key">Terminating</S>
                            <B N="Value">true</B>
                          </En>
                          <En>
                            <S N="Key">ShouldResult</S>
                            <Obj N="Value" RefId="1329">
                              <TNRef RefId="61" />
                              <ToString>Pester.ShouldResult</ToString>
                              <Props>
                                <B N="Succeeded">false</B>
                                <S N="FailureMessage">Expected a value, because the parameter Message must have a description, but got $null or empty.</S>
                                <Obj N="ExpectResult" RefId="1330">
                                  <TNRef RefId="62" />
                                  <ToString>Expected: '$null or empty' Actual: @($null) Because: the parameter Message must have a description</ToString>
                                  <Props>
                                    <S N="Actual">@($null)</S>
                                    <S N="Expected">'$null or empty'</S>
                                    <S N="Because">the parameter Message must have a description</S>
                                  </Props>
                                </Obj>
                              </Props>
                            </Obj>
                          </En>
                        </DCT>
                      </Obj>
                      <S N="FullyQualifiedErrorId">PesterAssertionFailed</S>
                      <Obj N="InvocationInfo" RefId="1331">
                        <TNRef RefId="37" />
                        <ToString>System.Management.Automation.InvocationInfo</ToString>
                        <Props>
                          <Nil N="MyCommand" />
                          <Obj N="BoundParameters" RefId="1332">
                            <TNRef RefId="38" />
                            <DCT />
                          </Obj>
                          <Obj N="UnboundArguments" RefId="1333">
                            <TNRef RefId="31" />
                            <LST />
                          </Obj>
                          <I32 N="ScriptLineNumber">8392</I32>
                          <I32 N="OffsetInLine">13</I32>
                          <I64 N="HistoryId">18</I64>
                          <S N="ScriptName">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1</S>
                          <S N="Line">            throw $errorRecord_x000D__x000A_</S>
                          <S N="Statement">throw $errorRecord</S>
                          <S N="PositionMessage">At C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1:8392 char:13_x000D__x000A_+             throw $errorRecord_x000D__x000A_+             ~~~~~~~~~~~~~~~~~~</S>
                          <S N="PSScriptRoot">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1</S>
                          <S N="PSCommandPath">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1</S>
                          <S N="InvocationName"></S>
                          <I32 N="PipelineLength">0</I32>
                          <I32 N="PipelinePosition">0</I32>
                          <B N="ExpectingInput">false</B>
                          <Obj N="CommandOrigin" RefId="1334">
                            <TNRef RefId="39" />
                            <ToString>Internal</ToString>
                            <I32>1</I32>
                          </Obj>
                          <Nil N="DisplayScriptPosition" />
                        </Props>
                        <MS>
                          <Obj N="ParameterValues" RefId="1335">
                            <TNRef RefId="25" />
                            <DCT />
                          </Obj>
                        </MS>
                      </Obj>
                      <I32 N="ErrorCategory_Category">8</I32>
                      <S N="ErrorCategory_Activity"></S>
                      <S N="ErrorCategory_Reason">Exception</S>
                      <S N="ErrorCategory_TargetName">System.Collections.Generic.Dictionary`2[System.String,System.Object]</S>
                      <S N="ErrorCategory_TargetType">Dictionary`2</S>
                      <S N="ErrorCategory_Message">InvalidResult: (System.Collections.…ring,System.Object]:Dictionary`2) [], Exception</S>
                      <B N="SerializeExtendedInfo">false</B>
                      <S N="ErrorDetails_ScriptStackTrace">at Invoke-Assertion, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 8392_x000D__x000A_at Should&lt;End&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 8331_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1: line 211_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2024_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1985_x000D__x000A_at Invoke-ScriptBlock, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2157_x000D__x000A_at Invoke-TestItem, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1199_x000D__x000A_at Invoke-Block, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 835_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 893_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2024_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1985_x000D__x000A_at Invoke-ScriptBlock, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2160_x000D__x000A_at Invoke-Block, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 940_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 893_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2024_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1985_x000D__x000A_at Invoke-ScriptBlock, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2160_x000D__x000A_at Invoke-Block, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 940_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1688_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.ps1: line 3_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 3260_x000D__x000A_at Invoke-InNewScriptScope, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 3267_x000D__x000A_at Run-Test, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1691_x000D__x000A_at Invoke-Test, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2512_x000D__x000A_at Invoke-Pester&lt;End&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 5110_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Sampler\0.118.1\tasks\Invoke-Pester.pester.build.ps1: line 906_x000D__x000A_at *Task, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 629_x000D__x000A_at *Task, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 601_x000D__x000A_at *Task, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 601_x000D__x000A_at &lt;ScriptBlock&gt;&lt;End&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 787_x000D__x000A_at &lt;ScriptBlock&gt;&lt;Begin&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\build.ps1: line 532_x000D__x000A_at &lt;ScriptBlock&gt;, &lt;No file&gt;: line 1</S>
                      <Nil N="PSMessageDetails" />
                    </MS>
                  </Obj>
                </LST>
              </Obj>
              <Nil N="StandardOutput" />
              <TS N="Duration">PT0.0107727S</TS>
              <S N="ItemType">Test</S>
              <S N="Id">191:5</S>
              <S N="GroupId">191:5</S>
              <SBK N="ScriptBlock">_x000D__x000A_        $functionFile = Get-ChildItem -Path $sourcePath -Recurse -Include "$Name.ps1"_x000D__x000A__x000D__x000A_        $scriptFileRawContent = Get-Content -Raw -Path $functionFile.FullName_x000D__x000A__x000D__x000A_        $abstractSyntaxTree = [System.Management.Automation.Language.Parser]::ParseInput($scriptFileRawContent, [ref] $null, [ref] $null)_x000D__x000A__x000D__x000A_        $astSearchDelegate = { $args[0] -is [System.Management.Automation.Language.FunctionDefinitionAst] }_x000D__x000A__x000D__x000A_        $parsedFunction = $abstractSyntaxTree.FindAll( $astSearchDelegate, $true ) |_x000D__x000A_            Where-Object -FilterScript {_x000D__x000A_                $_.Name -eq $Name_x000D__x000A_            }_x000D__x000A__x000D__x000A_        $functionHelp = $parsedFunction.GetHelpContent()_x000D__x000A__x000D__x000A_        $parameters = $parsedFunction.Body.ParamBlock.Parameters.Name.VariablePath.ForEach({ $_.ToString() })_x000D__x000A__x000D__x000A_        foreach ($parameter in $parameters)_x000D__x000A_        {_x000D__x000A_            $functionHelp.Parameters.($parameter.ToUpper()) | Should -Not -BeNullOrEmpty -Because ('the parameter {0} must have a description' -f $parameter)_x000D__x000A_            $functionHelp.Parameters.($parameter.ToUpper()).Length | Should -BeGreaterThan 25 -Because ('the parameter {0} must have descriptive description' -f $parameter)_x000D__x000A_        }_x000D__x000A_    </SBK>
              <Nil N="Tag" />
              <B N="Focus">false</B>
              <B N="Skip">false</B>
              <Ref N="Block" RefId="67" />
              <B N="First">false</B>
              <B N="Last">false</B>
              <B N="Include">false</B>
              <B N="Exclude">false</B>
              <B N="Explicit">false</B>
              <B N="ShouldRun">true</B>
              <I32 N="StartLine">191</I32>
              <B N="Executed">true</B>
              <DT N="ExecutedAt">2024-08-03T17:35:53.3697167-07:00</DT>
              <B N="Passed">false</B>
              <B N="Skipped">false</B>
              <B N="Inconclusive">false</B>
              <TS N="UserDuration">PT0.0058439S</TS>
              <TS N="FrameworkDuration">PT0.0049288S</TS>
              <Nil N="PluginData" />
              <Nil N="FrameworkData" />
            </Props>
          </Obj>
          <Obj RefId="1336">
            <TNRef RefId="30" />
            <ToString>[-] Should have described all parameters for Write-EventLogMessage</ToString>
            <Props>
              <S N="Name">Should have described all parameters for &lt;Name&gt;</S>
              <Obj N="Path" RefId="1337">
                <TNRef RefId="28" />
                <LST>
                  <S>Help for module</S>
                  <S>Should have described all parameters for &lt;Name&gt;</S>
                </LST>
              </Obj>
              <Ref N="Data" RefId="539" />
              <S N="ExpandedName">Should have described all parameters for Write-EventLogMessage</S>
              <S N="ExpandedPath">Help for module.Should have described all parameters for Write-EventLogMessage</S>
              <S N="Result">Failed</S>
              <Obj N="ErrorRecord" RefId="1338">
                <TNRef RefId="31" />
                <LST>
                  <Obj RefId="1339">
                    <TNRef RefId="33" />
                    <ToString>Expected a value, because the parameter Message must have a description, but got $null or empty.</ToString>
                    <MS>
                      <S N="DisplayErrorMessage">Expected a value, because the parameter Message must have a description, but got $null or empty.</S>
                      <S N="DisplayStackTrace">at $functionHelp.Parameters.($parameter.ToUpper()) | Should -Not -BeNullOrEmpty -Because ('the parameter {0} must have a description' -f $parameter), C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:211_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1:211</S>
                      <Obj N="Exception" RefId="1340">
                        <TNRef RefId="60" />
                        <ToString>System.Exception: Expected a value, because the parameter Message must have a description, but got $null or empty.</ToString>
                        <Props>
                          <Nil N="TargetSite" />
                          <S N="Message">Expected a value, because the parameter Message must have a description, but got $null or empty.</S>
                          <Obj N="Data" RefId="1341">
                            <TNRef RefId="35" />
                            <DCT />
                          </Obj>
                          <Nil N="InnerException" />
                          <Nil N="HelpLink" />
                          <Nil N="Source" />
                          <I32 N="HResult">-2146233088</I32>
                          <Nil N="StackTrace" />
                        </Props>
                      </Obj>
                      <Obj N="TargetObject" RefId="1342">
                        <TNRef RefId="38" />
                        <DCT>
                          <En>
                            <S N="Key">Message</S>
                            <S N="Value">Expected a value, because the parameter Message must have a description, but got $null or empty.</S>
                          </En>
                          <En>
                            <S N="Key">File</S>
                            <S N="Value">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1</S>
                          </En>
                          <En>
                            <S N="Key">Line</S>
                            <S N="Value">211</S>
                          </En>
                          <En>
                            <S N="Key">LineText</S>
                            <S N="Value">            $functionHelp.Parameters.($parameter.ToUpper()) | Should -Not -BeNullOrEmpty -Because ('the parameter {0} must have a description' -f $parameter)</S>
                          </En>
                          <En>
                            <S N="Key">Terminating</S>
                            <B N="Value">true</B>
                          </En>
                          <En>
                            <S N="Key">ShouldResult</S>
                            <Obj N="Value" RefId="1343">
                              <TNRef RefId="61" />
                              <ToString>Pester.ShouldResult</ToString>
                              <Props>
                                <B N="Succeeded">false</B>
                                <S N="FailureMessage">Expected a value, because the parameter Message must have a description, but got $null or empty.</S>
                                <Obj N="ExpectResult" RefId="1344">
                                  <TNRef RefId="62" />
                                  <ToString>Expected: '$null or empty' Actual: @($null) Because: the parameter Message must have a description</ToString>
                                  <Props>
                                    <S N="Actual">@($null)</S>
                                    <S N="Expected">'$null or empty'</S>
                                    <S N="Because">the parameter Message must have a description</S>
                                  </Props>
                                </Obj>
                              </Props>
                            </Obj>
                          </En>
                        </DCT>
                      </Obj>
                      <S N="FullyQualifiedErrorId">PesterAssertionFailed</S>
                      <Obj N="InvocationInfo" RefId="1345">
                        <TNRef RefId="37" />
                        <ToString>System.Management.Automation.InvocationInfo</ToString>
                        <Props>
                          <Nil N="MyCommand" />
                          <Obj N="BoundParameters" RefId="1346">
                            <TNRef RefId="38" />
                            <DCT />
                          </Obj>
                          <Obj N="UnboundArguments" RefId="1347">
                            <TNRef RefId="31" />
                            <LST />
                          </Obj>
                          <I32 N="ScriptLineNumber">8392</I32>
                          <I32 N="OffsetInLine">13</I32>
                          <I64 N="HistoryId">18</I64>
                          <S N="ScriptName">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1</S>
                          <S N="Line">            throw $errorRecord_x000D__x000A_</S>
                          <S N="Statement">throw $errorRecord</S>
                          <S N="PositionMessage">At C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1:8392 char:13_x000D__x000A_+             throw $errorRecord_x000D__x000A_+             ~~~~~~~~~~~~~~~~~~</S>
                          <S N="PSScriptRoot">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1</S>
                          <S N="PSCommandPath">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1</S>
                          <S N="InvocationName"></S>
                          <I32 N="PipelineLength">0</I32>
                          <I32 N="PipelinePosition">0</I32>
                          <B N="ExpectingInput">false</B>
                          <Obj N="CommandOrigin" RefId="1348">
                            <TNRef RefId="39" />
                            <ToString>Internal</ToString>
                            <I32>1</I32>
                          </Obj>
                          <Nil N="DisplayScriptPosition" />
                        </Props>
                        <MS>
                          <Obj N="ParameterValues" RefId="1349">
                            <TNRef RefId="25" />
                            <DCT />
                          </Obj>
                        </MS>
                      </Obj>
                      <I32 N="ErrorCategory_Category">8</I32>
                      <S N="ErrorCategory_Activity"></S>
                      <S N="ErrorCategory_Reason">Exception</S>
                      <S N="ErrorCategory_TargetName">System.Collections.Generic.Dictionary`2[System.String,System.Object]</S>
                      <S N="ErrorCategory_TargetType">Dictionary`2</S>
                      <S N="ErrorCategory_Message">InvalidResult: (System.Collections.…ring,System.Object]:Dictionary`2) [], Exception</S>
                      <B N="SerializeExtendedInfo">false</B>
                      <S N="ErrorDetails_ScriptStackTrace">at Invoke-Assertion, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 8392_x000D__x000A_at Should&lt;End&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 8331_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\tests\QA\module.tests.ps1: line 211_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2024_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1985_x000D__x000A_at Invoke-ScriptBlock, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2157_x000D__x000A_at Invoke-TestItem, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1199_x000D__x000A_at Invoke-Block, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 835_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 893_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2024_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1985_x000D__x000A_at Invoke-ScriptBlock, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2160_x000D__x000A_at Invoke-Block, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 940_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 893_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2024_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1985_x000D__x000A_at Invoke-ScriptBlock, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2160_x000D__x000A_at Invoke-Block, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 940_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1688_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.ps1: line 3_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 3260_x000D__x000A_at Invoke-InNewScriptScope, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 3267_x000D__x000A_at Run-Test, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 1691_x000D__x000A_at Invoke-Test, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 2512_x000D__x000A_at Invoke-Pester&lt;End&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Pester\5.6.1\Pester.psm1: line 5110_x000D__x000A_at &lt;ScriptBlock&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\Sampler\0.118.1\tasks\Invoke-Pester.pester.build.ps1: line 906_x000D__x000A_at *Task, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 629_x000D__x000A_at *Task, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 601_x000D__x000A_at *Task, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 601_x000D__x000A_at &lt;ScriptBlock&gt;&lt;End&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\RequiredModules\InvokeBuild\5.11.3\Invoke-Build.ps1: line 787_x000D__x000A_at &lt;ScriptBlock&gt;&lt;Begin&gt;, C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\build.ps1: line 532_x000D__x000A_at &lt;ScriptBlock&gt;, &lt;No file&gt;: line 1</S>
                      <Nil N="PSMessageDetails" />
                    </MS>
                  </Obj>
                </LST>
              </Obj>
              <Nil N="StandardOutput" />
              <TS N="Duration">PT0.0233987S</TS>
              <S N="ItemType">Test</S>
              <S N="Id">191:5</S>
              <S N="GroupId">191:5</S>
              <SBK N="ScriptBlock">_x000D__x000A_        $functionFile = Get-ChildItem -Path $sourcePath -Recurse -Include "$Name.ps1"_x000D__x000A__x000D__x000A_        $scriptFileRawContent = Get-Content -Raw -Path $functionFile.FullName_x000D__x000A__x000D__x000A_        $abstractSyntaxTree = [System.Management.Automation.Language.Parser]::ParseInput($scriptFileRawContent, [ref] $null, [ref] $null)_x000D__x000A__x000D__x000A_        $astSearchDelegate = { $args[0] -is [System.Management.Automation.Language.FunctionDefinitionAst] }_x000D__x000A__x000D__x000A_        $parsedFunction = $abstractSyntaxTree.FindAll( $astSearchDelegate, $true ) |_x000D__x000A_            Where-Object -FilterScript {_x000D__x000A_                $_.Name -eq $Name_x000D__x000A_            }_x000D__x000A__x000D__x000A_        $functionHelp = $parsedFunction.GetHelpContent()_x000D__x000A__x000D__x000A_        $parameters = $parsedFunction.Body.ParamBlock.Parameters.Name.VariablePath.ForEach({ $_.ToString() })_x000D__x000A__x000D__x000A_        foreach ($parameter in $parameters)_x000D__x000A_        {_x000D__x000A_            $functionHelp.Parameters.($parameter.ToUpper()) | Should -Not -BeNullOrEmpty -Because ('the parameter {0} must have a description' -f $parameter)_x000D__x000A_            $functionHelp.Parameters.($parameter.ToUpper()).Length | Should -BeGreaterThan 25 -Because ('the parameter {0} must have descriptive description' -f $parameter)_x000D__x000A_        }_x000D__x000A_    </SBK>
              <Nil N="Tag" />
              <B N="Focus">false</B>
              <B N="Skip">false</B>
              <Ref N="Block" RefId="67" />
              <B N="First">false</B>
              <B N="Last">true</B>
              <B N="Include">false</B>
              <B N="Exclude">false</B>
              <B N="Explicit">false</B>
              <B N="ShouldRun">true</B>
              <I32 N="StartLine">191</I32>
              <B N="Executed">true</B>
              <DT N="ExecutedAt">2024-08-03T17:35:53.3806615-07:00</DT>
              <B N="Passed">false</B>
              <B N="Skipped">false</B>
              <B N="Inconclusive">false</B>
              <TS N="UserDuration">PT0.0159719S</TS>
              <TS N="FrameworkDuration">PT0.0074268S</TS>
              <Nil N="PluginData" />
              <Nil N="FrameworkData" />
            </Props>
          </Obj>
          <Ref RefId="102" />
          <Ref RefId="106" />
          <Ref RefId="150" />
          <Ref RefId="153" />
          <Ref RefId="156" />
          <Ref RefId="180" />
          <Ref RefId="183" />
          <Ref RefId="186" />
          <Ref RefId="189" />
          <Ref RefId="199" />
          <Ref RefId="202" />
          <Ref RefId="205" />
        </LST>
      </Obj>
      <Obj N="FailedBlocks" RefId="1350">
        <TNRef RefId="26" />
        <LST>
          <Ref RefId="143" />
        </LST>
      </Obj>
      <Obj N="FailedContainers" RefId="1351">
        <TNRef RefId="1" />
        <LST />
      </Obj>
      <Obj N="Passed" RefId="1352">
        <TNRef RefId="29" />
        <LST>
          <Ref RefId="39" />
          <Ref RefId="42" />
          <Obj RefId="1353">
            <TNRef RefId="30" />
            <ToString>[+] Should import without errors</ToString>
            <Props>
              <S N="Name">Should import without errors</S>
              <Obj N="Path" RefId="1354">
                <TNRef RefId="28" />
                <LST>
                  <S>General module control</S>
                  <S>Should import without errors</S>
                </LST>
              </Obj>
              <Nil N="Data" />
              <S N="ExpandedName">Should import without errors</S>
              <S N="ExpandedPath">General module control.Should import without errors</S>
              <S N="Result">Passed</S>
              <Obj N="ErrorRecord" RefId="1355">
                <TNRef RefId="31" />
                <LST />
              </Obj>
              <Nil N="StandardOutput" />
              <TS N="Duration">PT0.013581S</TS>
              <S N="ItemType">Test</S>
              <S N="Id"></S>
              <S N="GroupId"></S>
              <SBK N="ScriptBlock">_x000D__x000A_        { Import-Module -Name $script:moduleName -Force -ErrorAction Stop } | Should -Not -Throw_x000D__x000A__x000D__x000A_        Get-Module -Name $script:moduleName | Should -Not -BeNullOrEmpty_x000D__x000A_    </SBK>
              <Nil N="Tag" />
              <B N="Focus">false</B>
              <B N="Skip">false</B>
              <Ref N="Block" RefId="53" />
              <B N="First">true</B>
              <B N="Last">false</B>
              <B N="Include">false</B>
              <B N="Exclude">false</B>
              <B N="Explicit">false</B>
              <B N="ShouldRun">true</B>
              <I32 N="StartLine">69</I32>
              <B N="Executed">true</B>
              <DT N="ExecutedAt">2024-08-03T17:35:50.3001111-07:00</DT>
              <B N="Passed">true</B>
              <B N="Skipped">false</B>
              <B N="Inconclusive">false</B>
              <TS N="UserDuration">PT0.0096363S</TS>
              <TS N="FrameworkDuration">PT0.0039447S</TS>
              <Nil N="PluginData" />
              <Nil N="FrameworkData" />
            </Props>
          </Obj>
          <Obj RefId="1356">
            <TNRef RefId="30" />
            <ToString>[+] Should remove without error</ToString>
            <Props>
              <S N="Name">Should remove without error</S>
              <Obj N="Path" RefId="1357">
                <TNRef RefId="28" />
                <LST>
                  <S>General module control</S>
                  <S>Should remove without error</S>
                </LST>
              </Obj>
              <Nil N="Data" />
              <S N="ExpandedName">Should remove without error</S>
              <S N="ExpandedPath">General module control.Should remove without error</S>
              <S N="Result">Passed</S>
              <Obj N="ErrorRecord" RefId="1358">
                <TNRef RefId="31" />
                <LST />
              </Obj>
              <Nil N="StandardOutput" />
              <TS N="Duration">PT0.0029302S</TS>
              <S N="ItemType">Test</S>
              <S N="Id"></S>
              <S N="GroupId"></S>
              <SBK N="ScriptBlock">_x000D__x000A_        { Remove-Module -Name $script:moduleName -ErrorAction Stop } | Should -Not -Throw_x000D__x000A__x000D__x000A_        Get-Module $script:moduleName | Should -BeNullOrEmpty_x000D__x000A_    </SBK>
              <Nil N="Tag" />
              <B N="Focus">false</B>
              <B N="Skip">false</B>
              <Ref N="Block" RefId="53" />
              <B N="First">false</B>
              <B N="Last">true</B>
              <B N="Include">false</B>
              <B N="Exclude">false</B>
              <B N="Explicit">false</B>
              <B N="ShouldRun">true</B>
              <I32 N="StartLine">75</I32>
              <B N="Executed">true</B>
              <DT N="ExecutedAt">2024-08-03T17:35:50.3137368-07:00</DT>
              <B N="Passed">true</B>
              <B N="Skipped">false</B>
              <B N="Inconclusive">false</B>
              <TS N="UserDuration">PT0.0010039S</TS>
              <TS N="FrameworkDuration">PT0.0019263S</TS>
              <Nil N="PluginData" />
              <Nil N="FrameworkData" />
            </Props>
          </Obj>
          <Obj RefId="1359">
            <TNRef RefId="30" />
            <ToString>[+] Should have .SYNOPSIS for Export-Data</ToString>
            <Props>
              <S N="Name">Should have .SYNOPSIS for &lt;Name&gt;</S>
              <Obj N="Path" RefId="1360">
                <TNRef RefId="28" />
                <LST>
                  <S>Help for module</S>
                  <S>Should have .SYNOPSIS for &lt;Name&gt;</S>
                </LST>
              </Obj>
              <Ref N="Data" RefId="419" />
              <S N="ExpandedName">Should have .SYNOPSIS for Export-Data</S>
              <S N="ExpandedPath">Help for module.Should have .SYNOPSIS for Export-Data</S>
              <S N="Result">Passed</S>
              <Obj N="ErrorRecord" RefId="1361">
                <TNRef RefId="31" />
                <LST />
              </Obj>
              <Nil N="StandardOutput" />
              <TS N="Duration">PT0.0439152S</TS>
              <S N="ItemType">Test</S>
              <S N="Id">131:5</S>
              <S N="GroupId">131:5</S>
              <SBK N="ScriptBlock">_x000D__x000A_        $functionFile = Get-ChildItem -Path $sourcePath -Recurse -Include "$Name.ps1"_x000D__x000A__x000D__x000A_        $scriptFileRawContent = Get-Content -Raw -Path $functionFile.FullName_x000D__x000A__x000D__x000A_        $abstractSyntaxTree = [System.Management.Automation.Language.Parser]::ParseInput($scriptFileRawContent, [ref] $null, [ref] $null)_x000D__x000A__x000D__x000A_        $astSearchDelegate = { $args[0] -is [System.Management.Automation.Language.FunctionDefinitionAst] }_x000D__x000A__x000D__x000A_        $parsedFunction = $abstractSyntaxTree.FindAll( $astSearchDelegate, $true ) |_x000D__x000A_            Where-Object -FilterScript {_x000D__x000A_                $_.Name -eq $Name_x000D__x000A_            }_x000D__x000A__x000D__x000A_        $functionHelp = $parsedFunction.GetHelpContent()_x000D__x000A__x000D__x000A_        $functionHelp.Synopsis | Should -Not -BeNullOrEmpty_x000D__x000A_    </SBK>
              <Nil N="Tag" />
              <B N="Focus">false</B>
              <B N="Skip">false</B>
              <Ref N="Block" RefId="67" />
              <B N="First">false</B>
              <B N="Last">false</B>
              <B N="Include">false</B>
              <B N="Exclude">false</B>
              <B N="Explicit">false</B>
              <B N="ShouldRun">true</B>
              <I32 N="StartLine">131</I32>
              <B N="Executed">true</B>
              <DT N="ExecutedAt">2024-08-03T17:35:52.2372874-07:00</DT>
              <B N="Passed">true</B>
              <B N="Skipped">false</B>
              <B N="Inconclusive">false</B>
              <TS N="UserDuration">PT0.0394265S</TS>
              <TS N="FrameworkDuration">PT0.0044887S</TS>
              <Nil N="PluginData" />
              <Nil N="FrameworkData" />
            </Props>
          </Obj>
          <Obj RefId="1362">
            <TNRef RefId="30" />
            <ToString>[+] Should have .SYNOPSIS for Log-Params</ToString>
            <Props>
              <S N="Name">Should have .SYNOPSIS for &lt;Name&gt;</S>
              <Obj N="Path" RefId="1363">
                <TNRef RefId="28" />
                <LST>
                  <S>Help for module</S>
                  <S>Should have .SYNOPSIS for &lt;Name&gt;</S>
                </LST>
              </Obj>
              <Ref N="Data" RefId="509" />
              <S N="ExpandedName">Should have .SYNOPSIS for Log-Params</S>
              <S N="ExpandedPath">Help for module.Should have .SYNOPSIS for Log-Params</S>
              <S N="Result">Passed</S>
              <Obj N="ErrorRecord" RefId="1364">
                <TNRef RefId="31" />
                <LST />
              </Obj>
              <Nil N="StandardOutput" />
              <TS N="Duration">PT0.0436452S</TS>
              <S N="ItemType">Test</S>
              <S N="Id">131:5</S>
              <S N="GroupId">131:5</S>
              <SBK N="ScriptBlock">_x000D__x000A_        $functionFile = Get-ChildItem -Path $sourcePath -Recurse -Include "$Name.ps1"_x000D__x000A__x000D__x000A_        $scriptFileRawContent = Get-Content -Raw -Path $functionFile.FullName_x000D__x000A__x000D__x000A_        $abstractSyntaxTree = [System.Management.Automation.Language.Parser]::ParseInput($scriptFileRawContent, [ref] $null, [ref] $null)_x000D__x000A__x000D__x000A_        $astSearchDelegate = { $args[0] -is [System.Management.Automation.Language.FunctionDefinitionAst] }_x000D__x000A__x000D__x000A_        $parsedFunction = $abstractSyntaxTree.FindAll( $astSearchDelegate, $true ) |_x000D__x000A_            Where-Object -FilterScript {_x000D__x000A_                $_.Name -eq $Name_x000D__x000A_            }_x000D__x000A__x000D__x000A_        $functionHelp = $parsedFunction.GetHelpContent()_x000D__x000A__x000D__x000A_        $functionHelp.Synopsis | Should -Not -BeNullOrEmpty_x000D__x000A_    </SBK>
              <Nil N="Tag" />
              <B N="Focus">false</B>
              <B N="Skip">false</B>
              <Ref N="Block" RefId="67" />
              <B N="First">false</B>
              <B N="Last">false</B>
              <B N="Include">false</B>
              <B N="Exclude">false</B>
              <B N="Explicit">false</B>
              <B N="ShouldRun">true</B>
              <I32 N="StartLine">131</I32>
              <B N="Executed">true</B>
              <DT N="ExecutedAt">2024-08-03T17:35:52.4879816-07:00</DT>
              <B N="Passed">true</B>
              <B N="Skipped">false</B>
              <B N="Inconclusive">false</B>
              <TS N="UserDuration">PT0.0376809S</TS>
              <TS N="FrameworkDuration">PT0.0059643S</TS>
              <Nil N="PluginData" />
              <Nil N="FrameworkData" />
            </Props>
          </Obj>
          <Obj RefId="1365">
            <TNRef RefId="30" />
            <ToString>[+] Should have a .DESCRIPTION with length greater than 40 characters for Export-Data</ToString>
            <Props>
              <S N="Name">Should have a .DESCRIPTION with length greater than 40 characters for &lt;Name&gt;</S>
              <Obj N="Path" RefId="1366">
                <TNRef RefId="28" />
                <LST>
                  <S>Help for module</S>
                  <S>Should have a .DESCRIPTION with length greater than 40 characters for &lt;Name&gt;</S>
                </LST>
              </Obj>
              <Ref N="Data" RefId="419" />
              <S N="ExpandedName">Should have a .DESCRIPTION with length greater than 40 characters for Export-Data</S>
              <S N="ExpandedPath">Help for module.Should have a .DESCRIPTION with length greater than 40 characters for Export-Data</S>
              <S N="Result">Passed</S>
              <Obj N="ErrorRecord" RefId="1367">
                <TNRef RefId="31" />
                <LST />
              </Obj>
              <Nil N="StandardOutput" />
              <TS N="Duration">PT0.0517849S</TS>
              <S N="ItemType">Test</S>
              <S N="Id">150:5</S>
              <S N="GroupId">150:5</S>
              <SBK N="ScriptBlock">_x000D__x000A_        $functionFile = Get-ChildItem -Path $sourcePath -Recurse -Include "$Name.ps1"_x000D__x000A__x000D__x000A_        $scriptFileRawContent = Get-Content -Raw -Path $functionFile.FullName_x000D__x000A__x000D__x000A_        $abstractSyntaxTree = [System.Management.Automation.Language.Parser]::ParseInput($scriptFileRawContent, [ref] $null, [ref] $null)_x000D__x000A__x000D__x000A_        $astSearchDelegate = { $args[0] -is [System.Management.Automation.Language.FunctionDefinitionAst] }_x000D__x000A__x000D__x000A_        $parsedFunction = $abstractSyntaxTree.FindAll($astSearchDelegate, $true) |_x000D__x000A_            Where-Object -FilterScript {_x000D__x000A_                $_.Name -eq $Name_x000D__x000A_            }_x000D__x000A__x000D__x000A_        $functionHelp = $parsedFunction.GetHelpContent()_x000D__x000A__x000D__x000A_        $functionHelp.Description.Length | Should -BeGreaterThan 40_x000D__x000A_    </SBK>
              <Nil N="Tag" />
              <B N="Focus">false</B>
              <B N="Skip">false</B>
              <Ref N="Block" RefId="67" />
              <B N="First">false</B>
              <B N="Last">false</B>
              <B N="Include">false</B>
              <B N="Exclude">false</B>
              <B N="Explicit">false</B>
              <B N="ShouldRun">true</B>
              <I32 N="StartLine">150</I32>
              <B N="Executed">true</B>
              <DT N="ExecutedAt">2024-08-03T17:35:52.638729-07:00</DT>
              <B N="Passed">true</B>
              <B N="Skipped">false</B>
              <B N="Inconclusive">false</B>
              <TS N="UserDuration">PT0.0478902S</TS>
              <TS N="FrameworkDuration">PT0.0038947S</TS>
              <Nil N="PluginData" />
              <Nil N="FrameworkData" />
            </Props>
          </Obj>
          <Obj RefId="1368">
            <TNRef RefId="30" />
            <ToString>[+] Should have at least one (1) example for Export-Data</ToString>
            <Props>
              <S N="Name">Should have at least one (1) example for &lt;Name&gt;</S>
              <Obj N="Path" RefId="1369">
                <TNRef RefId="28" />
                <LST>
                  <S>Help for module</S>
                  <S>Should have at least one (1) example for &lt;Name&gt;</S>
                </LST>
              </Obj>
              <Ref N="Data" RefId="419" />
              <S N="ExpandedName">Should have at least one (1) example for Export-Data</S>
              <S N="ExpandedPath">Help for module.Should have at least one (1) example for Export-Data</S>
              <S N="Result">Passed</S>
              <Obj N="ErrorRecord" RefId="1370">
                <TNRef RefId="31" />
                <LST />
              </Obj>
              <Nil N="StandardOutput" />
              <TS N="Duration">PT0.0684082S</TS>
              <S N="ItemType">Test</S>
              <S N="Id">169:5</S>
              <S N="GroupId">169:5</S>
              <SBK N="ScriptBlock">_x000D__x000A_        $functionFile = Get-ChildItem -Path $sourcePath -Recurse -Include "$Name.ps1"_x000D__x000A__x000D__x000A_        $scriptFileRawContent = Get-Content -Raw -Path $functionFile.FullName_x000D__x000A__x000D__x000A_        $abstractSyntaxTree = [System.Management.Automation.Language.Parser]::ParseInput($scriptFileRawContent, [ref] $null, [ref] $null)_x000D__x000A__x000D__x000A_        $astSearchDelegate = { $args[0] -is [System.Management.Automation.Language.FunctionDefinitionAst] }_x000D__x000A__x000D__x000A_        $parsedFunction = $abstractSyntaxTree.FindAll( $astSearchDelegate, $true ) |_x000D__x000A_            Where-Object -FilterScript {_x000D__x000A_                $_.Name -eq $Name_x000D__x000A_            }_x000D__x000A__x000D__x000A_        $functionHelp = $parsedFunction.GetHelpContent()_x000D__x000A__x000D__x000A_        $functionHelp.Examples.Count | Should -BeGreaterThan 0_x000D__x000A_        $functionHelp.Examples[0] | Should -Match ([regex]::Escape($function.Name))_x000D__x000A_        $functionHelp.Examples[0].Length | Should -BeGreaterThan ($function.Name.Length + 10)_x000D__x000A__x000D__x000A_    </SBK>
              <Nil N="Tag" />
              <B N="Focus">false</B>
              <B N="Skip">false</B>
              <Ref N="Block" RefId="67" />
              <B N="First">false</B>
              <B N="Last">false</B>
              <B N="Include">false</B>
              <B N="Exclude">false</B>
              <B N="Explicit">false</B>
              <B N="ShouldRun">true</B>
              <I32 N="StartLine">169</I32>
              <B N="Executed">true</B>
              <DT N="ExecutedAt">2024-08-03T17:35:52.9589399-07:00</DT>
              <B N="Passed">true</B>
              <B N="Skipped">false</B>
              <B N="Inconclusive">false</B>
              <TS N="UserDuration">PT0.0646915S</TS>
              <TS N="FrameworkDuration">PT0.0037167S</TS>
              <Nil N="PluginData" />
              <Nil N="FrameworkData" />
            </Props>
          </Obj>
          <Obj RefId="1371">
            <TNRef RefId="30" />
            <ToString>[+] Should have described all parameters for CreateEventLogSource</ToString>
            <Props>
              <S N="Name">Should have described all parameters for &lt;Name&gt;</S>
              <Obj N="Path" RefId="1372">
                <TNRef RefId="28" />
                <LST>
                  <S>Help for module</S>
                  <S>Should have described all parameters for &lt;Name&gt;</S>
                </LST>
              </Obj>
              <Ref N="Data" RefId="389" />
              <S N="ExpandedName">Should have described all parameters for CreateEventLogSource</S>
              <S N="ExpandedPath">Help for module.Should have described all parameters for CreateEventLogSource</S>
              <S N="Result">Passed</S>
              <Obj N="ErrorRecord" RefId="1373">
                <TNRef RefId="31" />
                <LST />
              </Obj>
              <Nil N="StandardOutput" />
              <TS N="Duration">PT0.0161841S</TS>
              <S N="ItemType">Test</S>
              <S N="Id">191:5</S>
              <S N="GroupId">191:5</S>
              <SBK N="ScriptBlock">_x000D__x000A_        $functionFile = Get-ChildItem -Path $sourcePath -Recurse -Include "$Name.ps1"_x000D__x000A__x000D__x000A_        $scriptFileRawContent = Get-Content -Raw -Path $functionFile.FullName_x000D__x000A__x000D__x000A_        $abstractSyntaxTree = [System.Management.Automation.Language.Parser]::ParseInput($scriptFileRawContent, [ref] $null, [ref] $null)_x000D__x000A__x000D__x000A_        $astSearchDelegate = { $args[0] -is [System.Management.Automation.Language.FunctionDefinitionAst] }_x000D__x000A__x000D__x000A_        $parsedFunction = $abstractSyntaxTree.FindAll( $astSearchDelegate, $true ) |_x000D__x000A_            Where-Object -FilterScript {_x000D__x000A_                $_.Name -eq $Name_x000D__x000A_            }_x000D__x000A__x000D__x000A_        $functionHelp = $parsedFunction.GetHelpContent()_x000D__x000A__x000D__x000A_        $parameters = $parsedFunction.Body.ParamBlock.Parameters.Name.VariablePath.ForEach({ $_.ToString() })_x000D__x000A__x000D__x000A_        foreach ($parameter in $parameters)_x000D__x000A_        {_x000D__x000A_            $functionHelp.Parameters.($parameter.ToUpper()) | Should -Not -BeNullOrEmpty -Because ('the parameter {0} must have a description' -f $parameter)_x000D__x000A_            $functionHelp.Parameters.($parameter.ToUpper()).Length | Should -BeGreaterThan 25 -Because ('the parameter {0} must have descriptive description' -f $parameter)_x000D__x000A_        }_x000D__x000A_    </SBK>
              <Nil N="Tag" />
              <B N="Focus">false</B>
              <B N="Skip">false</B>
              <Ref N="Block" RefId="67" />
              <B N="First">false</B>
              <B N="Last">false</B>
              <B N="Include">false</B>
              <B N="Exclude">false</B>
              <B N="Explicit">false</B>
              <B N="ShouldRun">true</B>
              <I32 N="StartLine">191</I32>
              <B N="Executed">true</B>
              <DT N="ExecutedAt">2024-08-03T17:35:53.1680376-07:00</DT>
              <B N="Passed">true</B>
              <B N="Skipped">false</B>
              <B N="Inconclusive">false</B>
              <TS N="UserDuration">PT0.0065692S</TS>
              <TS N="FrameworkDuration">PT0.0096149S</TS>
              <Nil N="PluginData" />
              <Nil N="FrameworkData" />
            </Props>
          </Obj>
          <Obj RefId="1374">
            <TNRef RefId="30" />
            <ToString>[+] Should have described all parameters for Export-Data</ToString>
            <Props>
              <S N="Name">Should have described all parameters for &lt;Name&gt;</S>
              <Obj N="Path" RefId="1375">
                <TNRef RefId="28" />
                <LST>
                  <S>Help for module</S>
                  <S>Should have described all parameters for &lt;Name&gt;</S>
                </LST>
              </Obj>
              <Ref N="Data" RefId="419" />
              <S N="ExpandedName">Should have described all parameters for Export-Data</S>
              <S N="ExpandedPath">Help for module.Should have described all parameters for Export-Data</S>
              <S N="Result">Passed</S>
              <Obj N="ErrorRecord" RefId="1376">
                <TNRef RefId="31" />
                <LST />
              </Obj>
              <Nil N="StandardOutput" />
              <TS N="Duration">PT0.0470671S</TS>
              <S N="ItemType">Test</S>
              <S N="Id">191:5</S>
              <S N="GroupId">191:5</S>
              <SBK N="ScriptBlock">_x000D__x000A_        $functionFile = Get-ChildItem -Path $sourcePath -Recurse -Include "$Name.ps1"_x000D__x000A__x000D__x000A_        $scriptFileRawContent = Get-Content -Raw -Path $functionFile.FullName_x000D__x000A__x000D__x000A_        $abstractSyntaxTree = [System.Management.Automation.Language.Parser]::ParseInput($scriptFileRawContent, [ref] $null, [ref] $null)_x000D__x000A__x000D__x000A_        $astSearchDelegate = { $args[0] -is [System.Management.Automation.Language.FunctionDefinitionAst] }_x000D__x000A__x000D__x000A_        $parsedFunction = $abstractSyntaxTree.FindAll( $astSearchDelegate, $true ) |_x000D__x000A_            Where-Object -FilterScript {_x000D__x000A_                $_.Name -eq $Name_x000D__x000A_            }_x000D__x000A__x000D__x000A_        $functionHelp = $parsedFunction.GetHelpContent()_x000D__x000A__x000D__x000A_        $parameters = $parsedFunction.Body.ParamBlock.Parameters.Name.VariablePath.ForEach({ $_.ToString() })_x000D__x000A__x000D__x000A_        foreach ($parameter in $parameters)_x000D__x000A_        {_x000D__x000A_            $functionHelp.Parameters.($parameter.ToUpper()) | Should -Not -BeNullOrEmpty -Because ('the parameter {0} must have a description' -f $parameter)_x000D__x000A_            $functionHelp.Parameters.($parameter.ToUpper()).Length | Should -BeGreaterThan 25 -Because ('the parameter {0} must have descriptive description' -f $parameter)_x000D__x000A_        }_x000D__x000A_    </SBK>
              <Nil N="Tag" />
              <B N="Focus">false</B>
              <B N="Skip">false</B>
              <Ref N="Block" RefId="67" />
              <B N="First">false</B>
              <B N="Last">false</B>
              <B N="Include">false</B>
              <B N="Exclude">false</B>
              <B N="Explicit">false</B>
              <B N="ShouldRun">true</B>
              <I32 N="StartLine">191</I32>
              <B N="Executed">true</B>
              <DT N="ExecutedAt">2024-08-03T17:35:53.2189647-07:00</DT>
              <B N="Passed">true</B>
              <B N="Skipped">false</B>
              <B N="Inconclusive">false</B>
              <TS N="UserDuration">PT0.041448S</TS>
              <TS N="FrameworkDuration">PT0.0056191S</TS>
              <Nil N="PluginData" />
              <Nil N="FrameworkData" />
            </Props>
          </Obj>
          <Obj RefId="1377">
            <TNRef RefId="30" />
            <ToString>[+] Should have described all parameters for Initialize-ScriptAndLogging</ToString>
            <Props>
              <S N="Name">Should have described all parameters for &lt;Name&gt;</S>
              <Obj N="Path" RefId="1378">
                <TNRef RefId="28" />
                <LST>
                  <S>Help for module</S>
                  <S>Should have described all parameters for &lt;Name&gt;</S>
                </LST>
              </Obj>
              <Ref N="Data" RefId="479" />
              <S N="ExpandedName">Should have described all parameters for Initialize-ScriptAndLogging</S>
              <S N="ExpandedPath">Help for module.Should have described all parameters for Initialize-ScriptAndLogging</S>
              <S N="Result">Passed</S>
              <Obj N="ErrorRecord" RefId="1379">
                <TNRef RefId="31" />
                <LST />
              </Obj>
              <Nil N="StandardOutput" />
              <TS N="Duration">PT0.0174675S</TS>
              <S N="ItemType">Test</S>
              <S N="Id">191:5</S>
              <S N="GroupId">191:5</S>
              <SBK N="ScriptBlock">_x000D__x000A_        $functionFile = Get-ChildItem -Path $sourcePath -Recurse -Include "$Name.ps1"_x000D__x000A__x000D__x000A_        $scriptFileRawContent = Get-Content -Raw -Path $functionFile.FullName_x000D__x000A__x000D__x000A_        $abstractSyntaxTree = [System.Management.Automation.Language.Parser]::ParseInput($scriptFileRawContent, [ref] $null, [ref] $null)_x000D__x000A__x000D__x000A_        $astSearchDelegate = { $args[0] -is [System.Management.Automation.Language.FunctionDefinitionAst] }_x000D__x000A__x000D__x000A_        $parsedFunction = $abstractSyntaxTree.FindAll( $astSearchDelegate, $true ) |_x000D__x000A_            Where-Object -FilterScript {_x000D__x000A_                $_.Name -eq $Name_x000D__x000A_            }_x000D__x000A__x000D__x000A_        $functionHelp = $parsedFunction.GetHelpContent()_x000D__x000A__x000D__x000A_        $parameters = $parsedFunction.Body.ParamBlock.Parameters.Name.VariablePath.ForEach({ $_.ToString() })_x000D__x000A__x000D__x000A_        foreach ($parameter in $parameters)_x000D__x000A_        {_x000D__x000A_            $functionHelp.Parameters.($parameter.ToUpper()) | Should -Not -BeNullOrEmpty -Because ('the parameter {0} must have a description' -f $parameter)_x000D__x000A_            $functionHelp.Parameters.($parameter.ToUpper()).Length | Should -BeGreaterThan 25 -Because ('the parameter {0} must have descriptive description' -f $parameter)_x000D__x000A_        }_x000D__x000A_    </SBK>
              <Nil N="Tag" />
              <B N="Focus">false</B>
              <B N="Skip">false</B>
              <Ref N="Block" RefId="67" />
              <B N="First">false</B>
              <B N="Last">false</B>
              <B N="Include">false</B>
              <B N="Exclude">false</B>
              <B N="Explicit">false</B>
              <B N="ShouldRun">true</B>
              <I32 N="StartLine">191</I32>
              <B N="Executed">true</B>
              <DT N="ExecutedAt">2024-08-03T17:35:53.3313474-07:00</DT>
              <B N="Passed">true</B>
              <B N="Skipped">false</B>
              <B N="Inconclusive">false</B>
              <TS N="UserDuration">PT0.0125586S</TS>
              <TS N="FrameworkDuration">PT0.0049089S</TS>
              <Nil N="PluginData" />
              <Nil N="FrameworkData" />
            </Props>
          </Obj>
          <Obj RefId="1380">
            <TNRef RefId="30" />
            <ToString>[+] Should have described all parameters for Log-And-Execute-Step</ToString>
            <Props>
              <S N="Name">Should have described all parameters for &lt;Name&gt;</S>
              <Obj N="Path" RefId="1381">
                <TNRef RefId="28" />
                <LST>
                  <S>Help for module</S>
                  <S>Should have described all parameters for &lt;Name&gt;</S>
                </LST>
              </Obj>
              <Ref N="Data" RefId="494" />
              <S N="ExpandedName">Should have described all parameters for Log-And-Execute-Step</S>
              <S N="ExpandedPath">Help for module.Should have described all parameters for Log-And-Execute-Step</S>
              <S N="Result">Passed</S>
              <Obj N="ErrorRecord" RefId="1382">
                <TNRef RefId="31" />
                <LST />
              </Obj>
              <Nil N="StandardOutput" />
              <TS N="Duration">PT0.0087296S</TS>
              <S N="ItemType">Test</S>
              <S N="Id">191:5</S>
              <S N="GroupId">191:5</S>
              <SBK N="ScriptBlock">_x000D__x000A_        $functionFile = Get-ChildItem -Path $sourcePath -Recurse -Include "$Name.ps1"_x000D__x000A__x000D__x000A_        $scriptFileRawContent = Get-Content -Raw -Path $functionFile.FullName_x000D__x000A__x000D__x000A_        $abstractSyntaxTree = [System.Management.Automation.Language.Parser]::ParseInput($scriptFileRawContent, [ref] $null, [ref] $null)_x000D__x000A__x000D__x000A_        $astSearchDelegate = { $args[0] -is [System.Management.Automation.Language.FunctionDefinitionAst] }_x000D__x000A__x000D__x000A_        $parsedFunction = $abstractSyntaxTree.FindAll( $astSearchDelegate, $true ) |_x000D__x000A_            Where-Object -FilterScript {_x000D__x000A_                $_.Name -eq $Name_x000D__x000A_            }_x000D__x000A__x000D__x000A_        $functionHelp = $parsedFunction.GetHelpContent()_x000D__x000A__x000D__x000A_        $parameters = $parsedFunction.Body.ParamBlock.Parameters.Name.VariablePath.ForEach({ $_.ToString() })_x000D__x000A__x000D__x000A_        foreach ($parameter in $parameters)_x000D__x000A_        {_x000D__x000A_            $functionHelp.Parameters.($parameter.ToUpper()) | Should -Not -BeNullOrEmpty -Because ('the parameter {0} must have a description' -f $parameter)_x000D__x000A_            $functionHelp.Parameters.($parameter.ToUpper()).Length | Should -BeGreaterThan 25 -Because ('the parameter {0} must have descriptive description' -f $parameter)_x000D__x000A_        }_x000D__x000A_    </SBK>
              <Nil N="Tag" />
              <B N="Focus">false</B>
              <B N="Skip">false</B>
              <Ref N="Block" RefId="67" />
              <B N="First">false</B>
              <B N="Last">false</B>
              <B N="Include">false</B>
              <B N="Exclude">false</B>
              <B N="Explicit">false</B>
              <B N="ShouldRun">true</B>
              <I32 N="StartLine">191</I32>
              <B N="Executed">true</B>
              <DT N="ExecutedAt">2024-08-03T17:35:53.3487979-07:00</DT>
              <B N="Passed">true</B>
              <B N="Skipped">false</B>
              <B N="Inconclusive">false</B>
              <TS N="UserDuration">PT0.0047501S</TS>
              <TS N="FrameworkDuration">PT0.0039795S</TS>
              <Nil N="PluginData" />
              <Nil N="FrameworkData" />
            </Props>
          </Obj>
        </LST>
      </Obj>
      <Obj N="Skipped" RefId="1383">
        <TNRef RefId="29" />
        <LST />
      </Obj>
      <Obj N="Inconclusive" RefId="1384">
        <TNRef RefId="29" />
        <LST />
      </Obj>
      <Obj N="NotRun" RefId="1385">
        <TNRef RefId="29" />
        <LST />
      </Obj>
      <Obj N="Tests" RefId="1386">
        <TNRef RefId="29" />
        <LST>
          <Ref RefId="39" />
          <Ref RefId="42" />
          <Ref RefId="1353" />
          <Ref RefId="1356" />
          <Ref RefId="357" />
          <Ref RefId="372" />
          <Ref RefId="387" />
          <Ref RefId="402" />
          <Ref RefId="417" />
          <Ref RefId="432" />
          <Ref RefId="447" />
          <Ref RefId="462" />
          <Ref RefId="477" />
          <Ref RefId="492" />
          <Ref RefId="507" />
          <Ref RefId="522" />
          <Ref RefId="537" />
          <Ref RefId="552" />
          <Ref RefId="566" />
          <Ref RefId="580" />
          <Ref RefId="594" />
          <Ref RefId="608" />
          <Ref RefId="622" />
          <Ref RefId="636" />
          <Ref RefId="650" />
          <Ref RefId="664" />
          <Ref RefId="678" />
          <Ref RefId="692" />
          <Ref RefId="706" />
          <Ref RefId="720" />
          <Ref RefId="734" />
          <Ref RefId="748" />
          <Ref RefId="762" />
          <Ref RefId="776" />
          <Ref RefId="1359" />
          <Ref RefId="790" />
          <Ref RefId="804" />
          <Ref RefId="818" />
          <Ref RefId="832" />
          <Ref RefId="846" />
          <Ref RefId="1362" />
          <Ref RefId="860" />
          <Ref RefId="874" />
          <Ref RefId="888" />
          <Ref RefId="902" />
          <Ref RefId="916" />
          <Ref RefId="930" />
          <Ref RefId="1365" />
          <Ref RefId="944" />
          <Ref RefId="958" />
          <Ref RefId="972" />
          <Ref RefId="986" />
          <Ref RefId="1000" />
          <Ref RefId="1014" />
          <Ref RefId="1028" />
          <Ref RefId="1042" />
          <Ref RefId="1056" />
          <Ref RefId="1070" />
          <Ref RefId="1084" />
          <Ref RefId="1098" />
          <Ref RefId="1368" />
          <Ref RefId="1112" />
          <Ref RefId="1126" />
          <Ref RefId="1140" />
          <Ref RefId="1154" />
          <Ref RefId="1168" />
          <Ref RefId="1182" />
          <Ref RefId="1196" />
          <Ref RefId="1210" />
          <Ref RefId="1224" />
          <Ref RefId="1238" />
          <Ref RefId="1371" />
          <Ref RefId="1252" />
          <Ref RefId="1374" />
          <Ref RefId="1266" />
          <Ref RefId="1280" />
          <Ref RefId="1294" />
          <Ref RefId="1377" />
          <Ref RefId="1380" />
          <Ref RefId="1308" />
          <Ref RefId="1322" />
          <Ref RefId="1336" />
          <Ref RefId="102" />
          <Ref RefId="106" />
          <Ref RefId="150" />
          <Ref RefId="153" />
          <Ref RefId="156" />
          <Ref RefId="180" />
          <Ref RefId="183" />
          <Ref RefId="186" />
          <Ref RefId="189" />
          <Ref RefId="199" />
          <Ref RefId="202" />
          <Ref RefId="205" />
        </LST>
      </Obj>
      <Obj N="CodeCoverage" RefId="1387">
        <TN RefId="63">
          <T>Pester.CodeCoverage</T>
          <T>System.Object</T>
        </TN>
        <ToString>0% / 85%</ToString>
        <Props>
          <D N="CoveragePercent">0</D>
          <D N="CoveragePercentTarget">85</D>
          <S N="CoverageReport">Covered 0% / 85%. 272 analyzed Commands in 1 File._x000A_ Missed commands:_x000A_ _x000D__x000A_File                   Class  Function                    Line Command_x000D__x000A_----                   -----  --------                    ---- -------_x000D__x000A_EnhancedLoggingAO.psm1 Logger LogClassCall                   5 $callerFunction = ''_x000D__x000A_EnhancedLoggingAO.psm1 Logger LogClassCall                   6 $callerClass = ''_x000D__x000A_EnhancedLoggingAO.psm1 Logger LogClassCall                   9 $callStack = Get-PSCallStack_x000D__x000A_EnhancedLoggingAO.psm1 Logger LogClassCall                  12 if ($callStack.Count -ge 3) { 2 } else { 1 }_x000D__x000A_EnhancedLoggingAO.psm1 Logger LogClassCall                  12 2_x000D__x000A_EnhancedLoggingAO.psm1 Logger LogClassCall                  12 1_x000D__x000A_EnhancedLoggingAO.psm1 Logger LogClassCall                  15 if ($callStack.Count -ge $stackIndex + 1) {…_x000D__x000A_EnhancedLoggingAO.psm1 Logger LogClassCall                  16 $callerFunction = $callStack[$stackIndex].Command_x000D__x000A_EnhancedLoggingAO.psm1 Logger LogClassCall                  20 $Loggingstacktrace = [System.Diagnostics.stacktrace]::new($true)_x000D__x000A_EnhancedLoggingAO.psm1 Logger LogClassCall                  21 $i = $stackIndex + 1_x000D__x000A_EnhancedLoggingAO.psm1 Logger LogClassCall                  21 $i -lt $Loggingstacktrace.FrameCount_x000D__x000A_EnhancedLoggingAO.psm1 Logger LogClassCall                  21 $i++_x000D__x000A_EnhancedLoggingAO.psm1 Logger LogClassCall                  22 $frame = $Loggingstacktrace.GetFrame($i)_x000D__x000A_EnhancedLoggingAO.psm1 Logger LogClassCall                  23 $methodBase = $frame.GetMethod()_x000D__x000A_EnhancedLoggingAO.psm1 Logger LogClassCall                  24 if ($null -ne $methodBase -and $null -ne $methodBase.DeclaringType) {…_x000D__x000A_EnhancedLoggingAO.psm1 Logger LogClassCall                  26 if ($methodBase.DeclaringType.FullName -notmatch '^System\.|^Microsoft\.') {…_x000D__x000A_EnhancedLoggingAO.psm1 Logger LogClassCall                  27 $callerClass = $methodBase.DeclaringType.FullName_x000D__x000A_EnhancedLoggingAO.psm1 Logger LogClassCall                  33 $callerInfo = ''_x000D__x000A_EnhancedLoggingAO.psm1 Logger LogClassCall                  34 if ($callerClass) {…_x000D__x000A_EnhancedLoggingAO.psm1 Logger LogClassCall                  35 $callerInfo += "[Class: $callerClass] "_x000D__x000A_EnhancedLoggingAO.psm1 Logger LogClassCall                  37 if ($callerFunction) {…_x000D__x000A_EnhancedLoggingAO.psm1 Logger LogClassCall                  38 $callerInfo += "[Function: $callerFunction]"_x000D__x000A_EnhancedLoggingAO.psm1 Logger LogClassCall                  41 $formattedMessage = "$(Get-Date -Format 'yyyy-MM-dd HH:mm:ss') $($env:COMPUTERNAME): [$Level] $callerInfo $Message"_x000D__x000A_EnhancedLoggingAO.psm1 Logger LogClassCall                  41 Get-Date -Format 'yyyy-MM-dd HH:mm:ss'_x000D__x000A_EnhancedLoggingAO.psm1 Logger LogClassCall                  41 $env:COMPUTERNAME_x000D__x000A_EnhancedLoggingAO.psm1 Logger LogClassCall                  44 $ForegroundColor = [ConsoleColor]::White_x000D__x000A_EnhancedLoggingAO.psm1 Logger LogClassCall                  45 $Level_x000D__x000A_EnhancedLoggingAO.psm1 Logger LogClassCall                  46 $ForegroundColor = [ConsoleColor]::Gray_x000D__x000A_EnhancedLoggingAO.psm1 Logger LogClassCall                  47 $ForegroundColor = [ConsoleColor]::Green_x000D__x000A_EnhancedLoggingAO.psm1 Logger LogClassCall                  48 $ForegroundColor = [ConsoleColor]::Cyan_x000D__x000A_EnhancedLoggingAO.psm1 Logger LogClassCall                  49 $ForegroundColor = [ConsoleColor]::Yellow_x000D__x000A_EnhancedLoggingAO.psm1 Logger LogClassCall                  50 $ForegroundColor = [ConsoleColor]::Red_x000D__x000A_EnhancedLoggingAO.psm1 Logger LogClassCall                  51 $ForegroundColor = [ConsoleColor]::Magenta_x000D__x000A_EnhancedLoggingAO.psm1 Logger LogClassCall                  52 $ForegroundColor = [ConsoleColor]::White_x000D__x000A_EnhancedLoggingAO.psm1 Logger LogClassCall                  56 if ($global:Host -and $global:Host.UI -and $global:Host.UI.RawUI) {…_x000D__x000A_EnhancedLoggingAO.psm1 Logger LogClassCall                  57 $currentForegroundColor = $global:Host.UI.RawUI.ForegroundColor_x000D__x000A_EnhancedLoggingAO.psm1 Logger LogClassCall                  58 $global:Host.UI.RawUI.ForegroundColor = $ForegroundColor_x000D__x000A_EnhancedLoggingAO.psm1 Logger LogClassCall                  59 Write-Host $formattedMessage_x000D__x000A_EnhancedLoggingAO.psm1 Logger LogClassCall                  60 $global:Host.UI.RawUI.ForegroundColor = $currentForegroundColor_x000D__x000A_EnhancedLoggingAO.psm1 Logger LogClassCall                  62 Write-Host $formattedMessage -ForegroundColor $ForegroundColor_x000D__x000A_EnhancedLoggingAO.psm1        AppendCSVLog                  76 $csvData = [PSCustomObject]@{…_x000D__x000A_EnhancedLoggingAO.psm1        AppendCSVLog                  77 TimeStamp = (Get-Date -Format 'yyyy-MM-dd HH:mm:ss')_x000D__x000A_EnhancedLoggingAO.psm1        AppendCSVLog                  77 Get-Date -Format 'yyyy-MM-dd HH:mm:ss'_x000D__x000A_EnhancedLoggingAO.psm1        AppendCSVLog                  78 ComputerName = $env:COMPUTERNAME_x000D__x000A_EnhancedLoggingAO.psm1        AppendCSVLog                  79 Message = $Message_x000D__x000A_EnhancedLoggingAO.psm1        AppendCSVLog                  82 $csvData_x000D__x000A_EnhancedLoggingAO.psm1        AppendCSVLog                  82 Export-Csv -Path $CSVFilePath_1001 -Append -NoTypeInformation -Force_x000D__x000A_EnhancedLoggingAO.psm1        CreateEventLogSource          89 if ($PSVersionTable.PSVersion.Major -lt 6) {…_x000D__x000A_EnhancedLoggingAO.psm1        CreateEventLogSource          90 New-EventLog -LogName $logName -Source $EventSource_x000D__x000A_EnhancedLoggingAO.psm1        CreateEventLogSource          93 [System.Diagnostics.EventLog]::CreateEventSource($EventSource, $logName)_x000D__x000A_EnhancedLoggingAO.psm1        CreateEventLogSource          95 Write-Host "Event source '$EventSource' created in log '$logName'" -ForegroundColor Green_x000D__x000A_EnhancedLoggingAO.psm1        CreateEventLogSource          98 Write-Warning "Error creating the event log. Make sure you run PowerShell as an Administrator."_x000D__x000A_EnhancedLoggingAO.psm1        CreateEventSourceAndLog      122 if (-not $LogName) {…_x000D__x000A_EnhancedLoggingAO.psm1        CreateEventSourceAndLog      123 Write-Warning "LogName is required."_x000D__x000A_EnhancedLoggingAO.psm1        CreateEventSourceAndLog      126 if (-not $EventSource) {…_x000D__x000A_EnhancedLoggingAO.psm1        CreateEventSourceAndLog      127 Write-Warning "Source is required."_x000D__x000A_EnhancedLoggingAO.psm1        CreateEventSourceAndLog      134 if (-not (Get-WinEvent -ListLog $LogName -ErrorAction SilentlyContinue)) {…_x000D__x000A_EnhancedLoggingAO.psm1        CreateEventSourceAndLog      134 Get-WinEvent -ListLog $LogName -ErrorAction SilentlyContinue_x000D__x000A_EnhancedLoggingAO.psm1        CreateEventSourceAndLog      138 if (-not (Get-WinEvent -ListLog $LogName -ErrorAction SilentlyContinue)) {…_x000D__x000A_EnhancedLoggingAO.psm1        CreateEventSourceAndLog      138 [System.Diagnostics.EventLog]::SourceExists($EventSource)_x000D__x000A_EnhancedLoggingAO.psm1        CreateEventSourceAndLog      140 $existingLogName = (Get-WinEvent -ListLog * | Where-Object { $_.LogName -contains $EventSource }).LogName_x000D__x000A_EnhancedLoggingAO.psm1        CreateEventSourceAndLog      140 Get-WinEvent -ListLog *_x000D__x000A_EnhancedLoggingAO.psm1        CreateEventSourceAndLog      140 Where-Object { $_.LogName -contains $EventSource }_x000D__x000A_EnhancedLoggingAO.psm1        CreateEventSourceAndLog      140 $_.LogName -contains $EventSource_x000D__x000A_EnhancedLoggingAO.psm1        CreateEventSourceAndLog      141 if ($existingLogName -ne $LogName) {…_x000D__x000A_EnhancedLoggingAO.psm1        CreateEventSourceAndLog      142 Remove-EventLog -Source $EventSource -ErrorAction SilentlyContinue_x000D__x000A_EnhancedLoggingAO.psm1        CreateEventSourceAndLog      147 Write-Host "Event source '$EventSource' already exists in log '$LogName'" -ForegroundColor Yellow_x000D__x000A_EnhancedLoggingAO.psm1        Export-EventLog              171 wevtutil epl $LogName $ExportPath_x000D__x000A_EnhancedLoggingAO.psm1        Export-EventLog              173 if (Test-Path $ExportPath) {…_x000D__x000A_EnhancedLoggingAO.psm1        Export-EventLog              174 Write-EnhancedLog -Message "Event log '$LogName' exported to '$ExportPath'" -Level "INFO" -ForegroundColor ([ConsoleColor]::Green)_x000D__x000A_EnhancedLoggingAO.psm1        Export-EventLog              174 [ConsoleColor]::Green_x000D__x000A_EnhancedLoggingAO.psm1        Export-EventLog              177 Write-EnhancedLog -Message "Event log '$LogName' not exported: File does not exist at '$ExportPath'" -Level "WARNING" -ForegroundColor ([Cons…_x000D__x000A_EnhancedLoggingAO.psm1        Export-EventLog              177 [ConsoleColor]::Yellow_x000D__x000A_EnhancedLoggingAO.psm1        Export-EventLog              181 Write-EnhancedLog -Message "Error exporting event log '$LogName': $($_.Exception.Message)" -Level "ERROR" -ForegroundColor ([ConsoleColor]::R…_x000D__x000A_EnhancedLoggingAO.psm1        Export-EventLog              181 $_.Exception.Message_x000D__x000A_EnhancedLoggingAO.psm1        Export-EventLog              181 [ConsoleColor]::Red_x000D__x000A_EnhancedLoggingAO.psm1        Initialize-CSVDirectory      203 $isWindowsOS = $false_x000D__x000A_EnhancedLoggingAO.psm1        Initialize-CSVDirectory      204 if ($PSVersionTable.PSVersion.Major -ge 6) {…_x000D__x000A_EnhancedLoggingAO.psm1        Initialize-CSVDirectory      205 $isWindowsOS = $isWindowsOS -or ($PSVersionTable.Platform -eq 'Win32NT')_x000D__x000A_EnhancedLoggingAO.psm1        Initialize-CSVDirectory      205 $PSVersionTable.Platform -eq 'Win32NT'_x000D__x000A_EnhancedLoggingAO.psm1        Initialize-CSVDirectory      208 $isWindowsOS = $isWindowsOS -or ($env:OS -eq 'Windows_NT')_x000D__x000A_EnhancedLoggingAO.psm1        Initialize-CSVDirectory      208 $env:OS -eq 'Windows_NT'_x000D__x000A_EnhancedLoggingAO.psm1        Initialize-CSVDirectory      211 if ($isWindowsOS) { "C:\code" } else { "/home/code" }_x000D__x000A_EnhancedLoggingAO.psm1        Initialize-CSVDirectory      211 "C:\code"_x000D__x000A_EnhancedLoggingAO.psm1        Initialize-CSVDirectory      211 "/home/code"_x000D__x000A_EnhancedLoggingAO.psm1        Initialize-CSVDirectory      212 $scriptPath_1001 = Join-Path -Path $baseScriptPath -ChildPath $deploymentName_x000D__x000A_EnhancedLoggingAO.psm1        Initialize-CSVDirectory      213 $CSVDir_1001 = Join-Path -Path $scriptPath_1001 -ChildPath "exports/CSV"_x000D__x000A_EnhancedLoggingAO.psm1        Initialize-CSVDirectory      214 $CSVFilePath_1001 = Join-Path -Path $CSVDir_1001 -ChildPath "$computerName"_x000D__x000A_EnhancedLoggingAO.psm1        Initialize-CSVDirectory      217 if (-not (Test-Path $CSVFilePath_1001)) {…_x000D__x000A_EnhancedLoggingAO.psm1        Initialize-CSVDirectory      217 Test-Path $CSVFilePath_1001_x000D__x000A_EnhancedLoggingAO.psm1        Initialize-CSVDirectory      218 Write-Host "Did not find CSV directory at $CSVFilePath_1001" -ForegroundColor Yellow_x000D__x000A_EnhancedLoggingAO.psm1        Initialize-CSVDirectory      219 Write-Host "Creating CSV directory at $CSVFilePath_1001" -ForegroundColor Yellow_x000D__x000A_EnhancedLoggingAO.psm1        Initialize-CSVDirectory      220 New-Item -ItemType Directory -Path $CSVFilePath_1001 -Force -ErrorAction Stop_x000D__x000A_EnhancedLoggingAO.psm1        Initialize-CSVDirectory      220 Out-Null_x000D__x000A_EnhancedLoggingAO.psm1        Initialize-CSVDirectory      221 Write-Host "Created CSV directory at $CSVFilePath_1001" -ForegroundColor Green_x000D__x000A_EnhancedLoggingAO.psm1        Initialize-CSVDirectory      224 return @{…_x000D__x000A_EnhancedLoggingAO.psm1        Initialize-CSVDirectory      225 CSVFilePath = $CSVFilePath_1001_x000D__x000A_EnhancedLoggingAO.psm1        Initialize-CSVDirectory      229 Write-Host "An error occurred while initializing CSV directory: $_" -ForegroundColor Red_x000D__x000A_EnhancedLoggingAO.psm1        Write-EventLogMessage        248 $ErrorActionPreference = 'SilentlyContinue'_x000D__x000A_EnhancedLoggingAO.psm1        Write-EventLogMessage        249 $hadError = $false_x000D__x000A_EnhancedLoggingAO.psm1        Write-EventLogMessage        252 if (-not $EventSource) {…_x000D__x000A_EnhancedLoggingAO.psm1        Write-EventLogMessage        253 throw "EventSource is required."_x000D__x000A_EnhancedLoggingAO.psm1        Write-EventLogMessage        256 if ($PSVersionTable.PSVersion.Major -lt 6) {…_x000D__x000A_EnhancedLoggingAO.psm1        Write-EventLogMessage        258 Write-EventLog -LogName $logName -Source $EventSource -EntryType Information -EventId $EventID -Message $Message_x000D__x000A_EnhancedLoggingAO.psm1        Write-EventLogMessage        262 $eventLog = New-Object System.Diagnostics.EventLog($logName)_x000D__x000A_EnhancedLoggingAO.psm1        Write-EventLogMessage        262 $logName_x000D__x000A_EnhancedLoggingAO.psm1        Write-EventLogMessage        263 $eventLog.Source = $EventSource_x000D__x000A_EnhancedLoggingAO.psm1        Write-EventLogMessage        264 $eventLog.WriteEntry($Message, [System.Diagnostics.EventLogEntryType]::Information, $EventID)_x000D__x000A_EnhancedLoggingAO.psm1        Write-EventLogMessage        270 Write-Host "Error creating event log entry: $_"_x000D__x000A_EnhancedLoggingAO.psm1        Write-EventLogMessage        271 $hadError = $true_x000D__x000A_EnhancedLoggingAO.psm1        Write-EventLogMessage        274 if (-not $hadError) {…_x000D__x000A_EnhancedLoggingAO.psm1        Add-Step                     298 Write-EnhancedLog -Message "Starting Add-Step function" -Level "INFO"_x000D__x000A_EnhancedLoggingAO.psm1        Add-Step                     299 Log-Params -Params @{…_x000D__x000A_EnhancedLoggingAO.psm1        Add-Step                     300 Description = $Description_x000D__x000A_EnhancedLoggingAO.psm1        Add-Step                     301 Action = $Action.ToString()_x000D__x000A_EnhancedLoggingAO.psm1        Add-Step                     307 Write-EnhancedLog -Message "Adding step: $Description" -Level "INFO"_x000D__x000A_EnhancedLoggingAO.psm1        Add-Step                     308 $global:steps.Add([PSCustomObject]@{ Description = $Description; Action = $Action })_x000D__x000A_EnhancedLoggingAO.psm1        Add-Step                     308 Description = $Description_x000D__x000A_EnhancedLoggingAO.psm1        Add-Step                     308 Action = $Action_x000D__x000A_EnhancedLoggingAO.psm1        Add-Step                     310 Write-EnhancedLog -Message "An error occurred while adding step: $($_.Exception.Message)" -Level "ERROR"_x000D__x000A_EnhancedLoggingAO.psm1        Add-Step                     310 $_.Exception.Message_x000D__x000A_EnhancedLoggingAO.psm1        Add-Step                     311 Handle-Error -ErrorRecord $__x000D__x000A_EnhancedLoggingAO.psm1        Add-Step                     316 Write-EnhancedLog -Message "Exiting Add-Step function" -Level "INFO"_x000D__x000A_EnhancedLoggingAO.psm1        Export-Data                  404 Write-Host "BaseOutputPath before change: '$BaseOutputPath'"_x000D__x000A_EnhancedLoggingAO.psm1        Export-Data                  405 $basePathWithoutExtension = [System.IO.Path]::ChangeExtension($BaseOutputPath, $null)_x000D__x000A_EnhancedLoggingAO.psm1        Export-Data                  408 if ($BaseOutputPath -match '\.') {…_x000D__x000A_EnhancedLoggingAO.psm1        Export-Data                  409 $BaseOutputPath.Substring(0, $BaseOutputPath.LastIndexOf('.'))_x000D__x000A_EnhancedLoggingAO.psm1        Export-Data                  412 $BaseOutputPath_x000D__x000A_EnhancedLoggingAO.psm1        Export-Data                  416 $basePathWithoutExtension = $basePathWithoutExtension.TrimEnd('.')_x000D__x000A_EnhancedLoggingAO.psm1        Export-Data                  421 if ($IncludeCSV) {…_x000D__x000A_EnhancedLoggingAO.psm1        Export-Data                  422 $csvPath = "$basePathWithoutExtension.csv"_x000D__x000A_EnhancedLoggingAO.psm1        Export-Data                  423 $Data_x000D__x000A_EnhancedLoggingAO.psm1        Export-Data                  423 Export-Csv -Path $csvPath -NoTypeInformation_x000D__x000A_EnhancedLoggingAO.psm1        Export-Data                  426 if ($IncludeJSON) {…_x000D__x000A_EnhancedLoggingAO.psm1        Export-Data                  427 $jsonPath = "$basePathWithoutExtension.json"_x000D__x000A_EnhancedLoggingAO.psm1        Export-Data                  428 $Data_x000D__x000A_EnhancedLoggingAO.psm1        Export-Data                  428 ConvertTo-Json -Depth 10_x000D__x000A_EnhancedLoggingAO.psm1        Export-Data                  428 Set-Content -Path $jsonPath_x000D__x000A_EnhancedLoggingAO.psm1        Export-Data                  431 if ($IncludeXML) {…_x000D__x000A_EnhancedLoggingAO.psm1        Export-Data                  432 $xmlPath = "$basePathWithoutExtension.xml"_x000D__x000A_EnhancedLoggingAO.psm1        Export-Data                  433 $Data_x000D__x000A_EnhancedLoggingAO.psm1        Export-Data                  433 Export-Clixml -Path $xmlPath_x000D__x000A_EnhancedLoggingAO.psm1        Export-Data                  436 if ($IncludeGridView) {…_x000D__x000A_EnhancedLoggingAO.psm1        Export-Data                  437 $Data_x000D__x000A_EnhancedLoggingAO.psm1        Export-Data                  437 Out-GridView -Title "Data Preview"_x000D__x000A_EnhancedLoggingAO.psm1        Export-Data                  440 if ($IncludeHTML) {…_x000D__x000A_EnhancedLoggingAO.psm1        Export-Data                  444 $htmlPath = "$basePathWithoutExtension.html"_x000D__x000A_EnhancedLoggingAO.psm1        Export-Data                  447 New-HTML -Title "Data Export Report" -FilePath $htmlPath -ShowHTML {…_x000D__x000A_EnhancedLoggingAO.psm1        Export-Data                  448 New-HTMLSection -HeaderText "Data Export Details" -Content {…_x000D__x000A_EnhancedLoggingAO.psm1        Export-Data                  449 New-HTMLTable -DataTable $Data -ScrollX -HideFooter_x000D__x000A_EnhancedLoggingAO.psm1        Export-Data                  453 Write-Host "HTML report generated: '$htmlPath'"_x000D__x000A_EnhancedLoggingAO.psm1        Export-Data                  457 if ($IncludePlainText) {…_x000D__x000A_EnhancedLoggingAO.psm1        Export-Data                  458 $txtPath = "$basePathWithoutExtension.txt"_x000D__x000A_EnhancedLoggingAO.psm1        Export-Data                  459 $Data_x000D__x000A_EnhancedLoggingAO.psm1        Export-Data                  459 Out-String_x000D__x000A_EnhancedLoggingAO.psm1        Export-Data                  459 Set-Content -Path $txtPath_x000D__x000A_EnhancedLoggingAO.psm1        Export-Data                  462 if ($IncludeExcel) {…_x000D__x000A_EnhancedLoggingAO.psm1        Export-Data                  463 $excelPath = "$basePathWithoutExtension.xlsx"_x000D__x000A_EnhancedLoggingAO.psm1        Export-Data                  464 $Data_x000D__x000A_EnhancedLoggingAO.psm1        Export-Data                  464 Export-Excel -Path $excelPath_x000D__x000A_EnhancedLoggingAO.psm1        Export-Data                  468 if ($IncludeYAML) {…_x000D__x000A_EnhancedLoggingAO.psm1        Export-Data                  469 $yamlPath = "$basePathWithoutExtension.yaml"_x000D__x000A_EnhancedLoggingAO.psm1        Export-Data                  472 if (Get-Module -ListAvailable -Name powershell-yaml) {…_x000D__x000A_EnhancedLoggingAO.psm1        Export-Data                  473 Import-Module powershell-yaml_x000D__x000A_EnhancedLoggingAO.psm1        Export-Data                  476 $processedData = $Data | ForEach-Object {…_x000D__x000A_EnhancedLoggingAO.psm1        Export-Data                  476 $processedData = $Data | ForEach-Object {…_x000D__x000A_EnhancedLoggingAO.psm1        Export-Data                  477 $originalObject = $__x000D__x000A_EnhancedLoggingAO.psm1        Export-Data                  478 $properties = $_ | Get-Member -MemberType Properties_x000D__x000A_EnhancedLoggingAO.psm1        Export-Data                  478 $properties = $_ | Get-Member -MemberType Properties_x000D__x000A_EnhancedLoggingAO.psm1        Export-Data                  479 $clonedObject = New-Object -TypeName PSObject_x000D__x000A_EnhancedLoggingAO.psm1        Export-Data                  481 $properties_x000D__x000A_EnhancedLoggingAO.psm1        Export-Data                  483 $clonedObject_x000D__x000A_EnhancedLoggingAO.psm1        Export-Data                  483 Add-Member -MemberType NoteProperty -Name $prop.Name -Value $originalObject.$($prop.Name) -ErrorAction Stop_x000D__x000A_EnhancedLoggingAO.psm1        Export-Data                  483 $prop.Name_x000D__x000A_EnhancedLoggingAO.psm1        Export-Data                  487 $clonedObject_x000D__x000A_EnhancedLoggingAO.psm1        Export-Data                  487 Add-Member -MemberType NoteProperty -Name $prop.Name -Value "Error serializing property" -ErrorAction SilentlyContinue_x000D__x000A_EnhancedLoggingAO.psm1        Export-Data                  491 return $clonedObject_x000D__x000A_EnhancedLoggingAO.psm1        Export-Data                  495 $processedData_x000D__x000A_EnhancedLoggingAO.psm1        Export-Data                  495 ConvertTo-Yaml_x000D__x000A_EnhancedLoggingAO.psm1        Export-Data                  495 Set-Content -Path $yamlPath -Encoding Unicode_x000D__x000A_EnhancedLoggingAO.psm1        Export-Data                  496 Write-Host "YAML export completed successfully: $yamlPath"_x000D__x000A_EnhancedLoggingAO.psm1        Export-Data                  499 Write-Warning "The 'powershell-yaml' module is not installed. YAML export skipped."_x000D__x000A_EnhancedLoggingAO.psm1        Export-Data                  503 if ($IncludeMarkdown) {…_x000D__x000A_EnhancedLoggingAO.psm1        Export-Data                  505 $markdownPath = "$basePathWithoutExtension.md"_x000D__x000A_EnhancedLoggingAO.psm1        Export-Data                  506 $Data_x000D__x000A_EnhancedLoggingAO.psm1        Export-Data                  506 ConvertTo-Markdown_x000D__x000A_EnhancedLoggingAO.psm1        Export-Data                  506 Set-Content -Path $markdownPath_x000D__x000A_EnhancedLoggingAO.psm1        Export-Data                  509 if ($IncludePDF) {…_x000D__x000A_EnhancedLoggingAO.psm1        Export-Data                  512 $pdfPath = "$basePathWithoutExtension.pdf"_x000D__x000A_EnhancedLoggingAO.psm1        Export-Data                  514 $htmlPath = "$basePathWithoutExtension.html"_x000D__x000A_EnhancedLoggingAO.psm1        Export-Data                  515 $Data_x000D__x000A_EnhancedLoggingAO.psm1        Export-Data                  515 ConvertTo-Html_x000D__x000A_EnhancedLoggingAO.psm1        Export-Data                  515 Convert-HtmlToPdf -OutputPath $pdfPath_x000D__x000A_EnhancedLoggingAO.psm1        Export-Data                  520 Write-Error "An error occurred during export: $_"_x000D__x000A_EnhancedLoggingAO.psm1        Export-Data                  525 Write-Verbose "Export-Data function execution completed."_x000D__x000A_EnhancedLoggingAO.psm1        Handle-Error                 547 if ($PSVersionTable.PSVersion.Major -ge 7) {…_x000D__x000A_EnhancedLoggingAO.psm1        Handle-Error                 548 $fullErrorDetails = Get-Error -InputObject $ErrorRecord | Out-String_x000D__x000A_EnhancedLoggingAO.psm1        Handle-Error                 548 $fullErrorDetails = Get-Error -InputObject $ErrorRecord | Out-String_x000D__x000A_EnhancedLoggingAO.psm1        Handle-Error                 551 $fullErrorDetails = $ErrorRecord.Exception | Format-List * -Force | Out-String_x000D__x000A_EnhancedLoggingAO.psm1        Handle-Error                 551 $fullErrorDetails = $ErrorRecord.Exception | Format-List * -Force | Out-String_x000D__x000A_EnhancedLoggingAO.psm1        Handle-Error                 551 $fullErrorDetails = $ErrorRecord.Exception | Format-List * -Force | Out-String_x000D__x000A_EnhancedLoggingAO.psm1        Handle-Error                 554 Write-EnhancedLog -Message "Exception Message: $($ErrorRecord.Exception.Message)" -Level "ERROR"_x000D__x000A_EnhancedLoggingAO.psm1        Handle-Error                 554 $ErrorRecord.Exception.Message_x000D__x000A_EnhancedLoggingAO.psm1        Handle-Error                 555 Write-EnhancedLog -Message "Full Exception: $fullErrorDetails" -Level "ERROR"_x000D__x000A_EnhancedLoggingAO.psm1        Handle-Error                 559 Write-EnhancedLog -Message "An error occurred while handling another error. Original Exception: $($ErrorRecord.Exception.Message)" -Level "CR…_x000D__x000A_EnhancedLoggingAO.psm1        Handle-Error                 559 $ErrorRecord.Exception.Message_x000D__x000A_EnhancedLoggingAO.psm1        Handle-Error                 560 Write-EnhancedLog -Message "Handler Exception: $($_.Exception.Message)" -Level "CRITICAL"_x000D__x000A_EnhancedLoggingAO.psm1        Handle-Error                 560 $_.Exception.Message_x000D__x000A_EnhancedLoggingAO.psm1        Handle-Error                 561 Write-EnhancedLog -Message "Handler Full Exception: $($_ | Out-String)" -Level "CRITICAL"_x000D__x000A_EnhancedLoggingAO.psm1        Handle-Error                 561 $__x000D__x000A_EnhancedLoggingAO.psm1        Handle-Error                 561 Out-String_x000D__x000A_EnhancedLoggingAO.psm1        Initialize-ScriptAndLogging  581 $LoggingDeploymentName = $config.LoggingDeploymentName_x000D__x000A_EnhancedLoggingAO.psm1        Initialize-ScriptAndLogging  584 $isWindowsOS = $false_x000D__x000A_EnhancedLoggingAO.psm1        Initialize-ScriptAndLogging  585 if ($PSVersionTable.PSVersion.Major -ge 6) {…_x000D__x000A_EnhancedLoggingAO.psm1        Initialize-ScriptAndLogging  586 $isWindowsOS = $isWindowsOS -or ($PSVersionTable.Platform -eq 'Win32NT')_x000D__x000A_EnhancedLoggingAO.psm1        Initialize-ScriptAndLogging  586 $PSVersionTable.Platform -eq 'Win32NT'_x000D__x000A_EnhancedLoggingAO.psm1        Initialize-ScriptAndLogging  589 $isWindowsOS = $isWindowsOS -or ($env:OS -eq 'Windows_NT')_x000D__x000A_EnhancedLoggingAO.psm1        Initialize-ScriptAndLogging  589 $env:OS -eq 'Windows_NT'_x000D__x000A_EnhancedLoggingAO.psm1        Initialize-ScriptAndLogging  592 $deploymentName = "$LoggingDeploymentName"_x000D__x000A_EnhancedLoggingAO.psm1        Initialize-ScriptAndLogging  593 if ($isWindowsOS) { "C:\code" } else { "/home/code" }_x000D__x000A_EnhancedLoggingAO.psm1        Initialize-ScriptAndLogging  593 "C:\code"_x000D__x000A_EnhancedLoggingAO.psm1        Initialize-ScriptAndLogging  593 "/home/code"_x000D__x000A_EnhancedLoggingAO.psm1        Initialize-ScriptAndLogging  594 $scriptPath_1001 = Join-Path -Path $baseScriptPath -ChildPath $deploymentName_x000D__x000A_EnhancedLoggingAO.psm1        Initialize-ScriptAndLogging  595 if ($isWindowsOS) { $env:COMPUTERNAME } else { (hostname) }_x000D__x000A_EnhancedLoggingAO.psm1        Initialize-ScriptAndLogging  595 $env:COMPUTERNAME_x000D__x000A_EnhancedLoggingAO.psm1        Initialize-ScriptAndLogging  595 (hostname)_x000D__x000A_EnhancedLoggingAO.psm1        Initialize-ScriptAndLogging  595 hostname_x000D__x000A_EnhancedLoggingAO.psm1        Initialize-ScriptAndLogging  598 if (-not (Test-Path -Path $scriptPath_1001)) {…_x000D__x000A_EnhancedLoggingAO.psm1        Initialize-ScriptAndLogging  598 Test-Path -Path $scriptPath_1001_x000D__x000A_EnhancedLoggingAO.psm1        Initialize-ScriptAndLogging  599 New-Item -ItemType Directory -Path $scriptPath_1001 -Force_x000D__x000A_EnhancedLoggingAO.psm1        Initialize-ScriptAndLogging  599 Out-Null_x000D__x000A_EnhancedLoggingAO.psm1        Initialize-ScriptAndLogging  600 Write-Host "Created directory: $scriptPath_1001" -ForegroundColor Green_x000D__x000A_EnhancedLoggingAO.psm1        Initialize-ScriptAndLogging  603 $Filename = "$LoggingDeploymentName"_x000D__x000A_EnhancedLoggingAO.psm1        Initialize-ScriptAndLogging  604 $logDir = Join-Path -Path $scriptPath_1001 -ChildPath "exports/Logs/$computerName"_x000D__x000A_EnhancedLoggingAO.psm1        Initialize-ScriptAndLogging  605 $logPath = Join-Path -Path $logDir -ChildPath "$(Get-Date -Format 'yyyy-MM-dd-HH-mm-ss')"_x000D__x000A_EnhancedLoggingAO.psm1        Initialize-ScriptAndLogging  605 Get-Date -Format 'yyyy-MM-dd-HH-mm-ss'_x000D__x000A_EnhancedLoggingAO.psm1        Initialize-ScriptAndLogging  607 if (-not (Test-Path $logPath)) {…_x000D__x000A_EnhancedLoggingAO.psm1        Initialize-ScriptAndLogging  607 Test-Path $logPath_x000D__x000A_EnhancedLoggingAO.psm1        Initialize-ScriptAndLogging  608 Write-Host "Did not find log directory at $logPath" -ForegroundColor Yellow_x000D__x000A_EnhancedLoggingAO.psm1        Initialize-ScriptAndLogging  609 Write-Host "Creating log directory at $logPath" -ForegroundColor Yellow_x000D__x000A_EnhancedLoggingAO.psm1        Initialize-ScriptAndLogging  610 New-Item -ItemType Directory -Path $logPath -Force -ErrorAction Stop_x000D__x000A_EnhancedLoggingAO.psm1        Initialize-ScriptAndLogging  610 Out-Null_x000D__x000A_EnhancedLoggingAO.psm1        Initialize-ScriptAndLogging  611 Write-Host "Created log directory at $logPath" -ForegroundColor Green_x000D__x000A_EnhancedLoggingAO.psm1        Initialize-ScriptAndLogging  614 $logFile = Join-Path -Path $logPath -ChildPath "$Filename-Transcript.log"_x000D__x000A_EnhancedLoggingAO.psm1        Initialize-ScriptAndLogging  615 Start-Transcript -Path $logFile -ErrorAction Stop_x000D__x000A_EnhancedLoggingAO.psm1        Initialize-ScriptAndLogging  615 Out-Null_x000D__x000A_EnhancedLoggingAO.psm1        Initialize-ScriptAndLogging  617 return @{…_x000D__x000A_EnhancedLoggingAO.psm1        Initialize-ScriptAndLogging  618 ScriptPath = $scriptPath_1001_x000D__x000A_EnhancedLoggingAO.psm1        Initialize-ScriptAndLogging  619 Filename = $Filename_x000D__x000A_EnhancedLoggingAO.psm1        Initialize-ScriptAndLogging  620 LogPath = $logPath_x000D__x000A_EnhancedLoggingAO.psm1        Initialize-ScriptAndLogging  621 LogFile = $logFile_x000D__x000A_EnhancedLoggingAO.psm1        Initialize-ScriptAndLogging  625 Write-Host "An error occurred while initializing script and logging: $_" -ForegroundColor Red_x000D__x000A_EnhancedLoggingAO.psm1        Log-And-Execute-Step         640 Write-EnhancedLog -Message "Starting Log-And-Execute-Step function" -Level "INFO"_x000D__x000A_EnhancedLoggingAO.psm1        Log-And-Execute-Step         645 $global:currentStep++_x000D__x000A_EnhancedLoggingAO.psm1        Log-And-Execute-Step         646 $totalSteps = $global:steps.Count_x000D__x000A_EnhancedLoggingAO.psm1        Log-And-Execute-Step         647 $step = $global:steps[$global:currentStep - 1]_x000D__x000A_EnhancedLoggingAO.psm1        Log-And-Execute-Step         648 Write-EnhancedLog -Message "Step [$global:currentStep/$totalSteps]: $($step.Description)" -Level "INFO"_x000D__x000A_EnhancedLoggingAO.psm1        Log-And-Execute-Step         648 $step.Description_x000D__x000A_EnhancedLoggingAO.psm1        Log-And-Execute-Step         650 &amp; $step.Action_x000D__x000A_EnhancedLoggingAO.psm1        Log-And-Execute-Step         653 Write-EnhancedLog -Message "Error in step: $($step.Description) - $($_.Exception.Message)" -Level "ERROR"_x000D__x000A_EnhancedLoggingAO.psm1        Log-And-Execute-Step         653 $step.Description_x000D__x000A_EnhancedLoggingAO.psm1        Log-And-Execute-Step         653 $_.Exception.Message_x000D__x000A_EnhancedLoggingAO.psm1        Log-And-Execute-Step         654 Handle-Error -ErrorRecord $__x000D__x000A_EnhancedLoggingAO.psm1        Log-And-Execute-Step         659 Write-EnhancedLog -Message "Exiting Log-And-Execute-Step function" -Level "INFO"_x000D__x000A_EnhancedLoggingAO.psm1        Log-Params                   682 $Params.Keys_x000D__x000A_EnhancedLoggingAO.psm1        Log-Params                   683 Write-EnhancedLog -Message "$key $($Params[$key])" -Level "INFO"_x000D__x000A_EnhancedLoggingAO.psm1        Log-Params                   683 $Params[$key]_x000D__x000A_EnhancedLoggingAO.psm1        Log-Params                   686 Write-EnhancedLog -Message "An error occurred while logging parameters: $($_.Exception.Message)" -Level "ERROR"_x000D__x000A_EnhancedLoggingAO.psm1        Log-Params                   686 $_.Exception.Message_x000D__x000A_EnhancedLoggingAO.psm1        Log-Params                   687 Handle-Error -ErrorRecord $__x000D__x000A_EnhancedLoggingAO.psm1        Write-EnhancedLog            728 $logger = [Logger]::new()_x000D__x000A_EnhancedLoggingAO.psm1        Write-EnhancedLog            729 $logger.LogClassCall($Message, $Level)_x000D__x000A__x000D__x000A__x000A_</S>
          <I64 N="CommandsAnalyzedCount">272</I64>
          <I64 N="CommandsExecutedCount">0</I64>
          <I64 N="CommandsMissedCount">272</I64>
          <I64 N="FilesAnalyzedCount">1</I64>
          <Obj N="CommandsMissed" RefId="1388">
            <TNRef RefId="31" />
            <LST>
              <Obj RefId="1389">
                <TN RefId="64">
                  <T>Selected.System.Management.Automation.PSCustomObject</T>
                  <T>System.Management.Automation.PSCustomObject</T>
                  <T>System.Object</T>
                </TN>
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">5</I32>
                  <I32 N="StartLine">5</I32>
                  <I32 N="EndLine">5</I32>
                  <I32 N="StartColumn">27</I32>
                  <I32 N="EndColumn">29</I32>
                  <S N="Class">Logger</S>
                  <S N="Function">LogClassCall</S>
                  <S N="Command">$callerFunction = ''</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1390">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">6</I32>
                  <I32 N="StartLine">6</I32>
                  <I32 N="EndLine">6</I32>
                  <I32 N="StartColumn">24</I32>
                  <I32 N="EndColumn">26</I32>
                  <S N="Class">Logger</S>
                  <S N="Function">LogClassCall</S>
                  <S N="Command">$callerClass = ''</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1391">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">9</I32>
                  <I32 N="StartLine">9</I32>
                  <I32 N="EndLine">9</I32>
                  <I32 N="StartColumn">22</I32>
                  <I32 N="EndColumn">37</I32>
                  <S N="Class">Logger</S>
                  <S N="Function">LogClassCall</S>
                  <S N="Command">$callStack = Get-PSCallStack</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1392">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">12</I32>
                  <I32 N="StartLine">12</I32>
                  <I32 N="EndLine">12</I32>
                  <I32 N="StartColumn">27</I32>
                  <I32 N="EndColumn">49</I32>
                  <S N="Class">Logger</S>
                  <S N="Function">LogClassCall</S>
                  <S N="Command">if ($callStack.Count -ge 3) { 2 } else { 1 }</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1393">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">12</I32>
                  <I32 N="StartLine">12</I32>
                  <I32 N="EndLine">12</I32>
                  <I32 N="StartColumn">53</I32>
                  <I32 N="EndColumn">54</I32>
                  <S N="Class">Logger</S>
                  <S N="Function">LogClassCall</S>
                  <S N="Command">2</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1394">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">12</I32>
                  <I32 N="StartLine">12</I32>
                  <I32 N="EndLine">12</I32>
                  <I32 N="StartColumn">64</I32>
                  <I32 N="EndColumn">65</I32>
                  <S N="Class">Logger</S>
                  <S N="Function">LogClassCall</S>
                  <S N="Command">1</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1395">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">15</I32>
                  <I32 N="StartLine">15</I32>
                  <I32 N="EndLine">15</I32>
                  <I32 N="StartColumn">13</I32>
                  <I32 N="EndColumn">49</I32>
                  <S N="Class">Logger</S>
                  <S N="Function">LogClassCall</S>
                  <S N="Command">if ($callStack.Count -ge $stackIndex + 1) {_x000D__x000A_            $callerFunction = $callStack[$stackIndex].Command_x000D__x000A_        }</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1396">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">16</I32>
                  <I32 N="StartLine">16</I32>
                  <I32 N="EndLine">16</I32>
                  <I32 N="StartColumn">31</I32>
                  <I32 N="EndColumn">62</I32>
                  <S N="Class">Logger</S>
                  <S N="Function">LogClassCall</S>
                  <S N="Command">$callerFunction = $callStack[$stackIndex].Command</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1397">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">20</I32>
                  <I32 N="StartLine">20</I32>
                  <I32 N="EndLine">20</I32>
                  <I32 N="StartColumn">30</I32>
                  <I32 N="EndColumn">73</I32>
                  <S N="Class">Logger</S>
                  <S N="Function">LogClassCall</S>
                  <S N="Command">$Loggingstacktrace = [System.Diagnostics.stacktrace]::new($true)</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1398">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">21</I32>
                  <I32 N="StartLine">21</I32>
                  <I32 N="EndLine">21</I32>
                  <I32 N="StartColumn">19</I32>
                  <I32 N="EndColumn">34</I32>
                  <S N="Class">Logger</S>
                  <S N="Function">LogClassCall</S>
                  <S N="Command">$i = $stackIndex + 1</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1399">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">21</I32>
                  <I32 N="StartLine">21</I32>
                  <I32 N="EndLine">21</I32>
                  <I32 N="StartColumn">36</I32>
                  <I32 N="EndColumn">72</I32>
                  <S N="Class">Logger</S>
                  <S N="Function">LogClassCall</S>
                  <S N="Command">$i -lt $Loggingstacktrace.FrameCount</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1400">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">21</I32>
                  <I32 N="StartLine">21</I32>
                  <I32 N="EndLine">21</I32>
                  <I32 N="StartColumn">74</I32>
                  <I32 N="EndColumn">78</I32>
                  <S N="Class">Logger</S>
                  <S N="Function">LogClassCall</S>
                  <S N="Command">$i++</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1401">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">22</I32>
                  <I32 N="StartLine">22</I32>
                  <I32 N="EndLine">22</I32>
                  <I32 N="StartColumn">22</I32>
                  <I32 N="EndColumn">53</I32>
                  <S N="Class">Logger</S>
                  <S N="Function">LogClassCall</S>
                  <S N="Command">$frame = $Loggingstacktrace.GetFrame($i)</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1402">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">23</I32>
                  <I32 N="StartLine">23</I32>
                  <I32 N="EndLine">23</I32>
                  <I32 N="StartColumn">27</I32>
                  <I32 N="EndColumn">45</I32>
                  <S N="Class">Logger</S>
                  <S N="Function">LogClassCall</S>
                  <S N="Command">$methodBase = $frame.GetMethod()</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1403">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">24</I32>
                  <I32 N="StartLine">24</I32>
                  <I32 N="EndLine">24</I32>
                  <I32 N="StartColumn">17</I32>
                  <I32 N="EndColumn">79</I32>
                  <S N="Class">Logger</S>
                  <S N="Function">LogClassCall</S>
                  <S N="Command">if ($null -ne $methodBase -and $null -ne $methodBase.DeclaringType) {_x000D__x000A_                # Check if the declaring type is not a PowerShell internal type_x000D__x000A_                if ($methodBase.DeclaringType.FullName -notmatch '^System\.|^Microsoft\.') {_x000D__x000A_                    $callerClass = $methodBase.DeclaringType.FullName_x000D__x000A_                    break_x000D__x000A_                }_x000D__x000A_            }</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1404">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">26</I32>
                  <I32 N="StartLine">26</I32>
                  <I32 N="EndLine">26</I32>
                  <I32 N="StartColumn">21</I32>
                  <I32 N="EndColumn">90</I32>
                  <S N="Class">Logger</S>
                  <S N="Function">LogClassCall</S>
                  <S N="Command">if ($methodBase.DeclaringType.FullName -notmatch '^System\.|^Microsoft\.') {_x000D__x000A_                    $callerClass = $methodBase.DeclaringType.FullName_x000D__x000A_                    break_x000D__x000A_                }</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1405">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">27</I32>
                  <I32 N="StartLine">27</I32>
                  <I32 N="EndLine">27</I32>
                  <I32 N="StartColumn">36</I32>
                  <I32 N="EndColumn">70</I32>
                  <S N="Class">Logger</S>
                  <S N="Function">LogClassCall</S>
                  <S N="Command">$callerClass = $methodBase.DeclaringType.FullName</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1406">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">33</I32>
                  <I32 N="StartLine">33</I32>
                  <I32 N="EndLine">33</I32>
                  <I32 N="StartColumn">23</I32>
                  <I32 N="EndColumn">25</I32>
                  <S N="Class">Logger</S>
                  <S N="Function">LogClassCall</S>
                  <S N="Command">$callerInfo = ''</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1407">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">34</I32>
                  <I32 N="StartLine">34</I32>
                  <I32 N="EndLine">34</I32>
                  <I32 N="StartColumn">13</I32>
                  <I32 N="EndColumn">25</I32>
                  <S N="Class">Logger</S>
                  <S N="Function">LogClassCall</S>
                  <S N="Command">if ($callerClass) {_x000D__x000A_            $callerInfo += "[Class: $callerClass] "_x000D__x000A_        }</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1408">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">35</I32>
                  <I32 N="StartLine">35</I32>
                  <I32 N="EndLine">35</I32>
                  <I32 N="StartColumn">28</I32>
                  <I32 N="EndColumn">52</I32>
                  <S N="Class">Logger</S>
                  <S N="Function">LogClassCall</S>
                  <S N="Command">$callerInfo += "[Class: $callerClass] "</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1409">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">37</I32>
                  <I32 N="StartLine">37</I32>
                  <I32 N="EndLine">37</I32>
                  <I32 N="StartColumn">13</I32>
                  <I32 N="EndColumn">28</I32>
                  <S N="Class">Logger</S>
                  <S N="Function">LogClassCall</S>
                  <S N="Command">if ($callerFunction) {_x000D__x000A_            $callerInfo += "[Function: $callerFunction]"_x000D__x000A_        }</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1410">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">38</I32>
                  <I32 N="StartLine">38</I32>
                  <I32 N="EndLine">38</I32>
                  <I32 N="StartColumn">28</I32>
                  <I32 N="EndColumn">57</I32>
                  <S N="Class">Logger</S>
                  <S N="Function">LogClassCall</S>
                  <S N="Command">$callerInfo += "[Function: $callerFunction]"</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1411">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">41</I32>
                  <I32 N="StartLine">41</I32>
                  <I32 N="EndLine">41</I32>
                  <I32 N="StartColumn">29</I32>
                  <I32 N="EndColumn">124</I32>
                  <S N="Class">Logger</S>
                  <S N="Function">LogClassCall</S>
                  <S N="Command">$formattedMessage = "$(Get-Date -Format 'yyyy-MM-dd HH:mm:ss') $($env:COMPUTERNAME): [$Level] $callerInfo $Message"</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1412">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">41</I32>
                  <I32 N="StartLine">41</I32>
                  <I32 N="EndLine">41</I32>
                  <I32 N="StartColumn">32</I32>
                  <I32 N="EndColumn">70</I32>
                  <S N="Class">Logger</S>
                  <S N="Function">LogClassCall</S>
                  <S N="Command">Get-Date -Format 'yyyy-MM-dd HH:mm:ss'</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1413">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">41</I32>
                  <I32 N="StartLine">41</I32>
                  <I32 N="EndLine">41</I32>
                  <I32 N="StartColumn">74</I32>
                  <I32 N="EndColumn">91</I32>
                  <S N="Class">Logger</S>
                  <S N="Function">LogClassCall</S>
                  <S N="Command">$env:COMPUTERNAME</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1414">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">44</I32>
                  <I32 N="StartLine">44</I32>
                  <I32 N="EndLine">44</I32>
                  <I32 N="StartColumn">28</I32>
                  <I32 N="EndColumn">49</I32>
                  <S N="Class">Logger</S>
                  <S N="Function">LogClassCall</S>
                  <S N="Command">$ForegroundColor = [ConsoleColor]::White</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1415">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">45</I32>
                  <I32 N="StartLine">45</I32>
                  <I32 N="EndLine">45</I32>
                  <I32 N="StartColumn">17</I32>
                  <I32 N="EndColumn">23</I32>
                  <S N="Class">Logger</S>
                  <S N="Function">LogClassCall</S>
                  <S N="Command">$Level</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1416">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">46</I32>
                  <I32 N="StartLine">46</I32>
                  <I32 N="EndLine">46</I32>
                  <I32 N="StartColumn">42</I32>
                  <I32 N="EndColumn">62</I32>
                  <S N="Class">Logger</S>
                  <S N="Function">LogClassCall</S>
                  <S N="Command">$ForegroundColor = [ConsoleColor]::Gray</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1417">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">47</I32>
                  <I32 N="StartLine">47</I32>
                  <I32 N="EndLine">47</I32>
                  <I32 N="StartColumn">41</I32>
                  <I32 N="EndColumn">62</I32>
                  <S N="Class">Logger</S>
                  <S N="Function">LogClassCall</S>
                  <S N="Command">$ForegroundColor = [ConsoleColor]::Green</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1418">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">48</I32>
                  <I32 N="StartLine">48</I32>
                  <I32 N="EndLine">48</I32>
                  <I32 N="StartColumn">43</I32>
                  <I32 N="EndColumn">63</I32>
                  <S N="Class">Logger</S>
                  <S N="Function">LogClassCall</S>
                  <S N="Command">$ForegroundColor = [ConsoleColor]::Cyan</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1419">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">49</I32>
                  <I32 N="StartLine">49</I32>
                  <I32 N="EndLine">49</I32>
                  <I32 N="StartColumn">44</I32>
                  <I32 N="EndColumn">66</I32>
                  <S N="Class">Logger</S>
                  <S N="Function">LogClassCall</S>
                  <S N="Command">$ForegroundColor = [ConsoleColor]::Yellow</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1420">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">50</I32>
                  <I32 N="StartLine">50</I32>
                  <I32 N="EndLine">50</I32>
                  <I32 N="StartColumn">42</I32>
                  <I32 N="EndColumn">61</I32>
                  <S N="Class">Logger</S>
                  <S N="Function">LogClassCall</S>
                  <S N="Command">$ForegroundColor = [ConsoleColor]::Red</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1421">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">51</I32>
                  <I32 N="StartLine">51</I32>
                  <I32 N="EndLine">51</I32>
                  <I32 N="StartColumn">45</I32>
                  <I32 N="EndColumn">68</I32>
                  <S N="Class">Logger</S>
                  <S N="Function">LogClassCall</S>
                  <S N="Command">$ForegroundColor = [ConsoleColor]::Magenta</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1422">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">52</I32>
                  <I32 N="StartLine">52</I32>
                  <I32 N="EndLine">52</I32>
                  <I32 N="StartColumn">42</I32>
                  <I32 N="EndColumn">63</I32>
                  <S N="Class">Logger</S>
                  <S N="Function">LogClassCall</S>
                  <S N="Command">$ForegroundColor = [ConsoleColor]::White</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1423">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">56</I32>
                  <I32 N="StartLine">56</I32>
                  <I32 N="EndLine">56</I32>
                  <I32 N="StartColumn">13</I32>
                  <I32 N="EndColumn">73</I32>
                  <S N="Class">Logger</S>
                  <S N="Function">LogClassCall</S>
                  <S N="Command">if ($global:Host -and $global:Host.UI -and $global:Host.UI.RawUI) {_x000D__x000A_            $currentForegroundColor = $global:Host.UI.RawUI.ForegroundColor_x000D__x000A_            $global:Host.UI.RawUI.ForegroundColor = $ForegroundColor_x000D__x000A_            Write-Host $formattedMessage_x000D__x000A_            $global:Host.UI.RawUI.ForegroundColor = $currentForegroundColor_x000D__x000A_        } else {_x000D__x000A_            Write-Host $formattedMessage -ForegroundColor $ForegroundColor_x000D__x000A_        }</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1424">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">57</I32>
                  <I32 N="StartLine">57</I32>
                  <I32 N="EndLine">57</I32>
                  <I32 N="StartColumn">39</I32>
                  <I32 N="EndColumn">76</I32>
                  <S N="Class">Logger</S>
                  <S N="Function">LogClassCall</S>
                  <S N="Command">$currentForegroundColor = $global:Host.UI.RawUI.ForegroundColor</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1425">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">58</I32>
                  <I32 N="StartLine">58</I32>
                  <I32 N="EndLine">58</I32>
                  <I32 N="StartColumn">53</I32>
                  <I32 N="EndColumn">69</I32>
                  <S N="Class">Logger</S>
                  <S N="Function">LogClassCall</S>
                  <S N="Command">$global:Host.UI.RawUI.ForegroundColor = $ForegroundColor</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1426">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">59</I32>
                  <I32 N="StartLine">59</I32>
                  <I32 N="EndLine">59</I32>
                  <I32 N="StartColumn">13</I32>
                  <I32 N="EndColumn">41</I32>
                  <S N="Class">Logger</S>
                  <S N="Function">LogClassCall</S>
                  <S N="Command">Write-Host $formattedMessage</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1427">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">60</I32>
                  <I32 N="StartLine">60</I32>
                  <I32 N="EndLine">60</I32>
                  <I32 N="StartColumn">53</I32>
                  <I32 N="EndColumn">76</I32>
                  <S N="Class">Logger</S>
                  <S N="Function">LogClassCall</S>
                  <S N="Command">$global:Host.UI.RawUI.ForegroundColor = $currentForegroundColor</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1428">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">62</I32>
                  <I32 N="StartLine">62</I32>
                  <I32 N="EndLine">62</I32>
                  <I32 N="StartColumn">13</I32>
                  <I32 N="EndColumn">75</I32>
                  <S N="Class">Logger</S>
                  <S N="Function">LogClassCall</S>
                  <S N="Command">Write-Host $formattedMessage -ForegroundColor $ForegroundColor</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1429">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">76</I32>
                  <I32 N="StartLine">76</I32>
                  <I32 N="EndLine">80</I32>
                  <I32 N="StartColumn">16</I32>
                  <I32 N="EndColumn">6</I32>
                  <S N="Class"></S>
                  <S N="Function">AppendCSVLog</S>
                  <S N="Command">$csvData = [PSCustomObject]@{_x000D__x000A_        TimeStamp    = (Get-Date -Format 'yyyy-MM-dd HH:mm:ss')_x000D__x000A_        ComputerName = $env:COMPUTERNAME_x000D__x000A_        Message      = $Message_x000D__x000A_    }</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1430">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">77</I32>
                  <I32 N="StartLine">77</I32>
                  <I32 N="EndLine">77</I32>
                  <I32 N="StartColumn">24</I32>
                  <I32 N="EndColumn">64</I32>
                  <S N="Class"></S>
                  <S N="Function">AppendCSVLog</S>
                  <S N="Command">TimeStamp = (Get-Date -Format 'yyyy-MM-dd HH:mm:ss')</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1431">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">77</I32>
                  <I32 N="StartLine">77</I32>
                  <I32 N="EndLine">77</I32>
                  <I32 N="StartColumn">25</I32>
                  <I32 N="EndColumn">63</I32>
                  <S N="Class"></S>
                  <S N="Function">AppendCSVLog</S>
                  <S N="Command">Get-Date -Format 'yyyy-MM-dd HH:mm:ss'</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1432">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">78</I32>
                  <I32 N="StartLine">78</I32>
                  <I32 N="EndLine">78</I32>
                  <I32 N="StartColumn">24</I32>
                  <I32 N="EndColumn">41</I32>
                  <S N="Class"></S>
                  <S N="Function">AppendCSVLog</S>
                  <S N="Command">ComputerName = $env:COMPUTERNAME</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1433">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">79</I32>
                  <I32 N="StartLine">79</I32>
                  <I32 N="EndLine">79</I32>
                  <I32 N="StartColumn">24</I32>
                  <I32 N="EndColumn">32</I32>
                  <S N="Class"></S>
                  <S N="Function">AppendCSVLog</S>
                  <S N="Command">Message = $Message</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1434">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">82</I32>
                  <I32 N="StartLine">82</I32>
                  <I32 N="EndLine">82</I32>
                  <I32 N="StartColumn">5</I32>
                  <I32 N="EndColumn">13</I32>
                  <S N="Class"></S>
                  <S N="Function">AppendCSVLog</S>
                  <S N="Command">$csvData</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1435">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">82</I32>
                  <I32 N="StartLine">82</I32>
                  <I32 N="EndLine">82</I32>
                  <I32 N="StartColumn">16</I32>
                  <I32 N="EndColumn">84</I32>
                  <S N="Class"></S>
                  <S N="Function">AppendCSVLog</S>
                  <S N="Command">Export-Csv -Path $CSVFilePath_1001 -Append -NoTypeInformation -Force</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1436">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">89</I32>
                  <I32 N="StartLine">89</I32>
                  <I32 N="EndLine">89</I32>
                  <I32 N="StartColumn">13</I32>
                  <I32 N="EndColumn">50</I32>
                  <S N="Class"></S>
                  <S N="Function">CreateEventLogSource</S>
                  <S N="Command">if ($PSVersionTable.PSVersion.Major -lt 6) {_x000D__x000A_            New-EventLog -LogName $logName -Source $EventSource_x000D__x000A_        }_x000D__x000A_        else {_x000D__x000A_            [System.Diagnostics.EventLog]::CreateEventSource($EventSource, $logName)_x000D__x000A_        }</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1437">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">90</I32>
                  <I32 N="StartLine">90</I32>
                  <I32 N="EndLine">90</I32>
                  <I32 N="StartColumn">13</I32>
                  <I32 N="EndColumn">64</I32>
                  <S N="Class"></S>
                  <S N="Function">CreateEventLogSource</S>
                  <S N="Command">New-EventLog -LogName $logName -Source $EventSource</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1438">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">93</I32>
                  <I32 N="StartLine">93</I32>
                  <I32 N="EndLine">93</I32>
                  <I32 N="StartColumn">13</I32>
                  <I32 N="EndColumn">85</I32>
                  <S N="Class"></S>
                  <S N="Function">CreateEventLogSource</S>
                  <S N="Command">[System.Diagnostics.EventLog]::CreateEventSource($EventSource, $logName)</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1439">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">95</I32>
                  <I32 N="StartLine">95</I32>
                  <I32 N="EndLine">95</I32>
                  <I32 N="StartColumn">9</I32>
                  <I32 N="EndColumn">98</I32>
                  <S N="Class"></S>
                  <S N="Function">CreateEventLogSource</S>
                  <S N="Command">Write-Host "Event source '$EventSource' created in log '$logName'" -ForegroundColor Green</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1440">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">98</I32>
                  <I32 N="StartLine">98</I32>
                  <I32 N="EndLine">98</I32>
                  <I32 N="StartColumn">9</I32>
                  <I32 N="EndColumn">104</I32>
                  <S N="Class"></S>
                  <S N="Function">CreateEventLogSource</S>
                  <S N="Command">Write-Warning "Error creating the event log. Make sure you run PowerShell as an Administrator."</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1441">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">122</I32>
                  <I32 N="StartLine">122</I32>
                  <I32 N="EndLine">122</I32>
                  <I32 N="StartColumn">9</I32>
                  <I32 N="EndColumn">22</I32>
                  <S N="Class"></S>
                  <S N="Function">CreateEventSourceAndLog</S>
                  <S N="Command">if (-not $LogName) {_x000D__x000A_        Write-Warning "LogName is required."_x000D__x000A_        return_x000D__x000A_    }</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1442">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">123</I32>
                  <I32 N="StartLine">123</I32>
                  <I32 N="EndLine">123</I32>
                  <I32 N="StartColumn">9</I32>
                  <I32 N="EndColumn">45</I32>
                  <S N="Class"></S>
                  <S N="Function">CreateEventSourceAndLog</S>
                  <S N="Command">Write-Warning "LogName is required."</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1443">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">126</I32>
                  <I32 N="StartLine">126</I32>
                  <I32 N="EndLine">126</I32>
                  <I32 N="StartColumn">9</I32>
                  <I32 N="EndColumn">26</I32>
                  <S N="Class"></S>
                  <S N="Function">CreateEventSourceAndLog</S>
                  <S N="Command">if (-not $EventSource) {_x000D__x000A_        Write-Warning "Source is required."_x000D__x000A_        return_x000D__x000A_    }</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1444">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">127</I32>
                  <I32 N="StartLine">127</I32>
                  <I32 N="EndLine">127</I32>
                  <I32 N="StartColumn">9</I32>
                  <I32 N="EndColumn">44</I32>
                  <S N="Class"></S>
                  <S N="Function">CreateEventSourceAndLog</S>
                  <S N="Command">Write-Warning "Source is required."</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1445">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">134</I32>
                  <I32 N="StartLine">134</I32>
                  <I32 N="EndLine">134</I32>
                  <I32 N="StartColumn">9</I32>
                  <I32 N="EndColumn">76</I32>
                  <S N="Class"></S>
                  <S N="Function">CreateEventSourceAndLog</S>
                  <S N="Command">if (-not (Get-WinEvent -ListLog $LogName -ErrorAction SilentlyContinue)) {_x000D__x000A_        # CreateEventLogSource $LogName $EventSource_x000D__x000A_    }_x000D__x000A_    # Check if the event source exists_x000D__x000A_    elseif (-not ([System.Diagnostics.EventLog]::SourceExists($EventSource))) {_x000D__x000A_        # Unregister the source if it's registered with a different log_x000D__x000A_        $existingLogName = (Get-WinEvent -ListLog * | Where-Object { $_.LogName -contains $EventSource }).LogName_x000D__x000A_        if ($existingLogName -ne $LogName) {_x000D__x000A_            Remove-EventLog -Source $EventSource -ErrorAction SilentlyContinue_x000D__x000A_        }_x000D__x000A_        # CreateEventLogSource $LogName $EventSource_x000D__x000A_    }_x000D__x000A_    else {_x000D__x000A_        Write-Host "Event source '$EventSource' already exists in log '$LogName'" -ForegroundColor Yellow_x000D__x000A_    }</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1446">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">134</I32>
                  <I32 N="StartLine">134</I32>
                  <I32 N="EndLine">134</I32>
                  <I32 N="StartColumn">15</I32>
                  <I32 N="EndColumn">75</I32>
                  <S N="Class"></S>
                  <S N="Function">CreateEventSourceAndLog</S>
                  <S N="Command">Get-WinEvent -ListLog $LogName -ErrorAction SilentlyContinue</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1447">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">138</I32>
                  <I32 N="StartLine">138</I32>
                  <I32 N="EndLine">138</I32>
                  <I32 N="StartColumn">13</I32>
                  <I32 N="EndColumn">77</I32>
                  <S N="Class"></S>
                  <S N="Function">CreateEventSourceAndLog</S>
                  <S N="Command">if (-not (Get-WinEvent -ListLog $LogName -ErrorAction SilentlyContinue)) {_x000D__x000A_        # CreateEventLogSource $LogName $EventSource_x000D__x000A_    }_x000D__x000A_    # Check if the event source exists_x000D__x000A_    elseif (-not ([System.Diagnostics.EventLog]::SourceExists($EventSource))) {_x000D__x000A_        # Unregister the source if it's registered with a different log_x000D__x000A_        $existingLogName = (Get-WinEvent -ListLog * | Where-Object { $_.LogName -contains $EventSource }).LogName_x000D__x000A_        if ($existingLogName -ne $LogName) {_x000D__x000A_            Remove-EventLog -Source $EventSource -ErrorAction SilentlyContinue_x000D__x000A_        }_x000D__x000A_        # CreateEventLogSource $LogName $EventSource_x000D__x000A_    }_x000D__x000A_    else {_x000D__x000A_        Write-Host "Event source '$EventSource' already exists in log '$LogName'" -ForegroundColor Yellow_x000D__x000A_    }</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1448">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">138</I32>
                  <I32 N="StartLine">138</I32>
                  <I32 N="EndLine">138</I32>
                  <I32 N="StartColumn">19</I32>
                  <I32 N="EndColumn">76</I32>
                  <S N="Class"></S>
                  <S N="Function">CreateEventSourceAndLog</S>
                  <S N="Command">[System.Diagnostics.EventLog]::SourceExists($EventSource)</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1449">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">140</I32>
                  <I32 N="StartLine">140</I32>
                  <I32 N="EndLine">140</I32>
                  <I32 N="StartColumn">28</I32>
                  <I32 N="EndColumn">114</I32>
                  <S N="Class"></S>
                  <S N="Function">CreateEventSourceAndLog</S>
                  <S N="Command">$existingLogName = (Get-WinEvent -ListLog * | Where-Object { $_.LogName -contains $EventSource }).LogName</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1450">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">140</I32>
                  <I32 N="StartLine">140</I32>
                  <I32 N="EndLine">140</I32>
                  <I32 N="StartColumn">29</I32>
                  <I32 N="EndColumn">52</I32>
                  <S N="Class"></S>
                  <S N="Function">CreateEventSourceAndLog</S>
                  <S N="Command">Get-WinEvent -ListLog *</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1451">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">140</I32>
                  <I32 N="StartLine">140</I32>
                  <I32 N="EndLine">140</I32>
                  <I32 N="StartColumn">55</I32>
                  <I32 N="EndColumn">105</I32>
                  <S N="Class"></S>
                  <S N="Function">CreateEventSourceAndLog</S>
                  <S N="Command">Where-Object { $_.LogName -contains $EventSource }</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1452">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">140</I32>
                  <I32 N="StartLine">140</I32>
                  <I32 N="EndLine">140</I32>
                  <I32 N="StartColumn">70</I32>
                  <I32 N="EndColumn">103</I32>
                  <S N="Class"></S>
                  <S N="Function">CreateEventSourceAndLog</S>
                  <S N="Command">$_.LogName -contains $EventSource</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1453">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">141</I32>
                  <I32 N="StartLine">141</I32>
                  <I32 N="EndLine">141</I32>
                  <I32 N="StartColumn">13</I32>
                  <I32 N="EndColumn">42</I32>
                  <S N="Class"></S>
                  <S N="Function">CreateEventSourceAndLog</S>
                  <S N="Command">if ($existingLogName -ne $LogName) {_x000D__x000A_            Remove-EventLog -Source $EventSource -ErrorAction SilentlyContinue_x000D__x000A_        }</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1454">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">142</I32>
                  <I32 N="StartLine">142</I32>
                  <I32 N="EndLine">142</I32>
                  <I32 N="StartColumn">13</I32>
                  <I32 N="EndColumn">79</I32>
                  <S N="Class"></S>
                  <S N="Function">CreateEventSourceAndLog</S>
                  <S N="Command">Remove-EventLog -Source $EventSource -ErrorAction SilentlyContinue</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1455">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">147</I32>
                  <I32 N="StartLine">147</I32>
                  <I32 N="EndLine">147</I32>
                  <I32 N="StartColumn">9</I32>
                  <I32 N="EndColumn">106</I32>
                  <S N="Class"></S>
                  <S N="Function">CreateEventSourceAndLog</S>
                  <S N="Command">Write-Host "Event source '$EventSource' already exists in log '$LogName'" -ForegroundColor Yellow</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1456">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">171</I32>
                  <I32 N="StartLine">171</I32>
                  <I32 N="EndLine">171</I32>
                  <I32 N="StartColumn">9</I32>
                  <I32 N="EndColumn">42</I32>
                  <S N="Class"></S>
                  <S N="Function">Export-EventLog</S>
                  <S N="Command">wevtutil epl $LogName $ExportPath</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1457">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">173</I32>
                  <I32 N="StartLine">173</I32>
                  <I32 N="EndLine">173</I32>
                  <I32 N="StartColumn">13</I32>
                  <I32 N="EndColumn">34</I32>
                  <S N="Class"></S>
                  <S N="Function">Export-EventLog</S>
                  <S N="Command">if (Test-Path $ExportPath) {_x000D__x000A_            Write-EnhancedLog -Message "Event log '$LogName' exported to '$ExportPath'" -Level "INFO" -ForegroundColor ([ConsoleColor]::Green)_x000D__x000A_        }_x000D__x000A_        else {_x000D__x000A_            Write-EnhancedLog -Message "Event log '$LogName' not exported: File does not exist at '$ExportPath'" -Level "WARNING" -ForegroundColor ([ConsoleColor]::Yellow)_x000D__x000A_        }</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1458">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">174</I32>
                  <I32 N="StartLine">174</I32>
                  <I32 N="EndLine">174</I32>
                  <I32 N="StartColumn">13</I32>
                  <I32 N="EndColumn">143</I32>
                  <S N="Class"></S>
                  <S N="Function">Export-EventLog</S>
                  <S N="Command">Write-EnhancedLog -Message "Event log '$LogName' exported to '$ExportPath'" -Level "INFO" -ForegroundColor ([ConsoleColor]::Green)</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1459">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">174</I32>
                  <I32 N="StartLine">174</I32>
                  <I32 N="EndLine">174</I32>
                  <I32 N="StartColumn">121</I32>
                  <I32 N="EndColumn">142</I32>
                  <S N="Class"></S>
                  <S N="Function">Export-EventLog</S>
                  <S N="Command">[ConsoleColor]::Green</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1460">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">177</I32>
                  <I32 N="StartLine">177</I32>
                  <I32 N="EndLine">177</I32>
                  <I32 N="StartColumn">13</I32>
                  <I32 N="EndColumn">172</I32>
                  <S N="Class"></S>
                  <S N="Function">Export-EventLog</S>
                  <S N="Command">Write-EnhancedLog -Message "Event log '$LogName' not exported: File does not exist at '$ExportPath'" -Level "WARNING" -ForegroundColor ([ConsoleColor]::Yellow)</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1461">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">177</I32>
                  <I32 N="StartLine">177</I32>
                  <I32 N="EndLine">177</I32>
                  <I32 N="StartColumn">149</I32>
                  <I32 N="EndColumn">171</I32>
                  <S N="Class"></S>
                  <S N="Function">Export-EventLog</S>
                  <S N="Command">[ConsoleColor]::Yellow</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1462">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">181</I32>
                  <I32 N="StartLine">181</I32>
                  <I32 N="EndLine">181</I32>
                  <I32 N="StartColumn">9</I32>
                  <I32 N="EndColumn">153</I32>
                  <S N="Class"></S>
                  <S N="Function">Export-EventLog</S>
                  <S N="Command">Write-EnhancedLog -Message "Error exporting event log '$LogName': $($_.Exception.Message)" -Level "ERROR" -ForegroundColor ([ConsoleColor]::Red)</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1463">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">181</I32>
                  <I32 N="StartLine">181</I32>
                  <I32 N="EndLine">181</I32>
                  <I32 N="StartColumn">77</I32>
                  <I32 N="EndColumn">97</I32>
                  <S N="Class"></S>
                  <S N="Function">Export-EventLog</S>
                  <S N="Command">$_.Exception.Message</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1464">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">181</I32>
                  <I32 N="StartLine">181</I32>
                  <I32 N="EndLine">181</I32>
                  <I32 N="StartColumn">133</I32>
                  <I32 N="EndColumn">152</I32>
                  <S N="Class"></S>
                  <S N="Function">Export-EventLog</S>
                  <S N="Command">[ConsoleColor]::Red</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1465">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">203</I32>
                  <I32 N="StartLine">203</I32>
                  <I32 N="EndLine">203</I32>
                  <I32 N="StartColumn">20</I32>
                  <I32 N="EndColumn">26</I32>
                  <S N="Class"></S>
                  <S N="Function">Initialize-CSVDirectory</S>
                  <S N="Command">$isWindowsOS = $false</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1466">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">204</I32>
                  <I32 N="StartLine">204</I32>
                  <I32 N="EndLine">204</I32>
                  <I32 N="StartColumn">9</I32>
                  <I32 N="EndColumn">46</I32>
                  <S N="Class"></S>
                  <S N="Function">Initialize-CSVDirectory</S>
                  <S N="Command">if ($PSVersionTable.PSVersion.Major -ge 6) {_x000D__x000A_        $isWindowsOS = $isWindowsOS -or ($PSVersionTable.Platform -eq 'Win32NT')_x000D__x000A_    }_x000D__x000A_    else {_x000D__x000A_        $isWindowsOS = $isWindowsOS -or ($env:OS -eq 'Windows_NT')_x000D__x000A_    }</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1467">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">205</I32>
                  <I32 N="StartLine">205</I32>
                  <I32 N="EndLine">205</I32>
                  <I32 N="StartColumn">24</I32>
                  <I32 N="EndColumn">81</I32>
                  <S N="Class"></S>
                  <S N="Function">Initialize-CSVDirectory</S>
                  <S N="Command">$isWindowsOS = $isWindowsOS -or ($PSVersionTable.Platform -eq 'Win32NT')</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1468">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">205</I32>
                  <I32 N="StartLine">205</I32>
                  <I32 N="EndLine">205</I32>
                  <I32 N="StartColumn">42</I32>
                  <I32 N="EndColumn">80</I32>
                  <S N="Class"></S>
                  <S N="Function">Initialize-CSVDirectory</S>
                  <S N="Command">$PSVersionTable.Platform -eq 'Win32NT'</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1469">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">208</I32>
                  <I32 N="StartLine">208</I32>
                  <I32 N="EndLine">208</I32>
                  <I32 N="StartColumn">24</I32>
                  <I32 N="EndColumn">67</I32>
                  <S N="Class"></S>
                  <S N="Function">Initialize-CSVDirectory</S>
                  <S N="Command">$isWindowsOS = $isWindowsOS -or ($env:OS -eq 'Windows_NT')</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1470">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">208</I32>
                  <I32 N="StartLine">208</I32>
                  <I32 N="EndLine">208</I32>
                  <I32 N="StartColumn">42</I32>
                  <I32 N="EndColumn">66</I32>
                  <S N="Class"></S>
                  <S N="Function">Initialize-CSVDirectory</S>
                  <S N="Command">$env:OS -eq 'Windows_NT'</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1471">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">211</I32>
                  <I32 N="StartLine">211</I32>
                  <I32 N="EndLine">211</I32>
                  <I32 N="StartColumn">27</I32>
                  <I32 N="EndColumn">39</I32>
                  <S N="Class"></S>
                  <S N="Function">Initialize-CSVDirectory</S>
                  <S N="Command">if ($isWindowsOS) { "C:\code" } else { "/home/code" }</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1472">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">211</I32>
                  <I32 N="StartLine">211</I32>
                  <I32 N="EndLine">211</I32>
                  <I32 N="StartColumn">43</I32>
                  <I32 N="EndColumn">52</I32>
                  <S N="Class"></S>
                  <S N="Function">Initialize-CSVDirectory</S>
                  <S N="Command">"C:\code"</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1473">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">211</I32>
                  <I32 N="StartLine">211</I32>
                  <I32 N="EndLine">211</I32>
                  <I32 N="StartColumn">62</I32>
                  <I32 N="EndColumn">74</I32>
                  <S N="Class"></S>
                  <S N="Function">Initialize-CSVDirectory</S>
                  <S N="Command">"/home/code"</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1474">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">212</I32>
                  <I32 N="StartLine">212</I32>
                  <I32 N="EndLine">212</I32>
                  <I32 N="StartColumn">24</I32>
                  <I32 N="EndColumn">82</I32>
                  <S N="Class"></S>
                  <S N="Function">Initialize-CSVDirectory</S>
                  <S N="Command">$scriptPath_1001 = Join-Path -Path $baseScriptPath -ChildPath $deploymentName</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1475">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">213</I32>
                  <I32 N="StartLine">213</I32>
                  <I32 N="EndLine">213</I32>
                  <I32 N="StartColumn">20</I32>
                  <I32 N="EndColumn">77</I32>
                  <S N="Class"></S>
                  <S N="Function">Initialize-CSVDirectory</S>
                  <S N="Command">$CSVDir_1001 = Join-Path -Path $scriptPath_1001 -ChildPath "exports/CSV"</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1476">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">214</I32>
                  <I32 N="StartLine">214</I32>
                  <I32 N="EndLine">214</I32>
                  <I32 N="StartColumn">25</I32>
                  <I32 N="EndColumn">80</I32>
                  <S N="Class"></S>
                  <S N="Function">Initialize-CSVDirectory</S>
                  <S N="Command">$CSVFilePath_1001 = Join-Path -Path $CSVDir_1001 -ChildPath "$computerName"</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1477">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">217</I32>
                  <I32 N="StartLine">217</I32>
                  <I32 N="EndLine">217</I32>
                  <I32 N="StartColumn">13</I32>
                  <I32 N="EndColumn">47</I32>
                  <S N="Class"></S>
                  <S N="Function">Initialize-CSVDirectory</S>
                  <S N="Command">if (-not (Test-Path $CSVFilePath_1001)) {_x000D__x000A_            Write-Host "Did not find CSV directory at $CSVFilePath_1001" -ForegroundColor Yellow_x000D__x000A_            Write-Host "Creating CSV directory at $CSVFilePath_1001" -ForegroundColor Yellow_x000D__x000A_            New-Item -ItemType Directory -Path $CSVFilePath_1001 -Force -ErrorAction Stop | Out-Null_x000D__x000A_            Write-Host "Created CSV directory at $CSVFilePath_1001" -ForegroundColor Green_x000D__x000A_        }</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1478">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">217</I32>
                  <I32 N="StartLine">217</I32>
                  <I32 N="EndLine">217</I32>
                  <I32 N="StartColumn">19</I32>
                  <I32 N="EndColumn">46</I32>
                  <S N="Class"></S>
                  <S N="Function">Initialize-CSVDirectory</S>
                  <S N="Command">Test-Path $CSVFilePath_1001</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1479">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">218</I32>
                  <I32 N="StartLine">218</I32>
                  <I32 N="EndLine">218</I32>
                  <I32 N="StartColumn">13</I32>
                  <I32 N="EndColumn">97</I32>
                  <S N="Class"></S>
                  <S N="Function">Initialize-CSVDirectory</S>
                  <S N="Command">Write-Host "Did not find CSV directory at $CSVFilePath_1001" -ForegroundColor Yellow</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1480">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">219</I32>
                  <I32 N="StartLine">219</I32>
                  <I32 N="EndLine">219</I32>
                  <I32 N="StartColumn">13</I32>
                  <I32 N="EndColumn">93</I32>
                  <S N="Class"></S>
                  <S N="Function">Initialize-CSVDirectory</S>
                  <S N="Command">Write-Host "Creating CSV directory at $CSVFilePath_1001" -ForegroundColor Yellow</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1481">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">220</I32>
                  <I32 N="StartLine">220</I32>
                  <I32 N="EndLine">220</I32>
                  <I32 N="StartColumn">13</I32>
                  <I32 N="EndColumn">90</I32>
                  <S N="Class"></S>
                  <S N="Function">Initialize-CSVDirectory</S>
                  <S N="Command">New-Item -ItemType Directory -Path $CSVFilePath_1001 -Force -ErrorAction Stop</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1482">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">220</I32>
                  <I32 N="StartLine">220</I32>
                  <I32 N="EndLine">220</I32>
                  <I32 N="StartColumn">93</I32>
                  <I32 N="EndColumn">101</I32>
                  <S N="Class"></S>
                  <S N="Function">Initialize-CSVDirectory</S>
                  <S N="Command">Out-Null</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1483">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">221</I32>
                  <I32 N="StartLine">221</I32>
                  <I32 N="EndLine">221</I32>
                  <I32 N="StartColumn">13</I32>
                  <I32 N="EndColumn">91</I32>
                  <S N="Class"></S>
                  <S N="Function">Initialize-CSVDirectory</S>
                  <S N="Command">Write-Host "Created CSV directory at $CSVFilePath_1001" -ForegroundColor Green</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1484">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">224</I32>
                  <I32 N="StartLine">224</I32>
                  <I32 N="EndLine">226</I32>
                  <I32 N="StartColumn">16</I32>
                  <I32 N="EndColumn">10</I32>
                  <S N="Class"></S>
                  <S N="Function">Initialize-CSVDirectory</S>
                  <S N="Command">return @{_x000D__x000A_            CSVFilePath = $CSVFilePath_1001_x000D__x000A_        }</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1485">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">225</I32>
                  <I32 N="StartLine">225</I32>
                  <I32 N="EndLine">225</I32>
                  <I32 N="StartColumn">27</I32>
                  <I32 N="EndColumn">44</I32>
                  <S N="Class"></S>
                  <S N="Function">Initialize-CSVDirectory</S>
                  <S N="Command">CSVFilePath = $CSVFilePath_1001</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1486">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">229</I32>
                  <I32 N="StartLine">229</I32>
                  <I32 N="EndLine">229</I32>
                  <I32 N="StartColumn">9</I32>
                  <I32 N="EndColumn">97</I32>
                  <S N="Class"></S>
                  <S N="Function">Initialize-CSVDirectory</S>
                  <S N="Command">Write-Host "An error occurred while initializing CSV directory: $_" -ForegroundColor Red</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1487">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">248</I32>
                  <I32 N="StartLine">248</I32>
                  <I32 N="EndLine">248</I32>
                  <I32 N="StartColumn">30</I32>
                  <I32 N="EndColumn">48</I32>
                  <S N="Class"></S>
                  <S N="Function">Write-EventLogMessage</S>
                  <S N="Command">$ErrorActionPreference = 'SilentlyContinue'</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1488">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">249</I32>
                  <I32 N="StartLine">249</I32>
                  <I32 N="EndLine">249</I32>
                  <I32 N="StartColumn">17</I32>
                  <I32 N="EndColumn">23</I32>
                  <S N="Class"></S>
                  <S N="Function">Write-EventLogMessage</S>
                  <S N="Command">$hadError = $false</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1489">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">252</I32>
                  <I32 N="StartLine">252</I32>
                  <I32 N="EndLine">252</I32>
                  <I32 N="StartColumn">13</I32>
                  <I32 N="EndColumn">30</I32>
                  <S N="Class"></S>
                  <S N="Function">Write-EventLogMessage</S>
                  <S N="Command">if (-not $EventSource) {_x000D__x000A_            throw "EventSource is required."_x000D__x000A_        }</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1490">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">253</I32>
                  <I32 N="StartLine">253</I32>
                  <I32 N="EndLine">253</I32>
                  <I32 N="StartColumn">19</I32>
                  <I32 N="EndColumn">45</I32>
                  <S N="Class"></S>
                  <S N="Function">Write-EventLogMessage</S>
                  <S N="Command">throw "EventSource is required."</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1491">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">256</I32>
                  <I32 N="StartLine">256</I32>
                  <I32 N="EndLine">256</I32>
                  <I32 N="StartColumn">13</I32>
                  <I32 N="EndColumn">50</I32>
                  <S N="Class"></S>
                  <S N="Function">Write-EventLogMessage</S>
                  <S N="Command">if ($PSVersionTable.PSVersion.Major -lt 6) {_x000D__x000A_            # PowerShell version is less than 6, use Write-EventLog_x000D__x000A_            Write-EventLog -LogName $logName -Source $EventSource -EntryType Information -EventId $EventID -Message $Message_x000D__x000A_        }_x000D__x000A_        else {_x000D__x000A_            # PowerShell version is 6 or greater, use System.Diagnostics.EventLog_x000D__x000A_            $eventLog = New-Object System.Diagnostics.EventLog($logName)_x000D__x000A_            $eventLog.Source = $EventSource_x000D__x000A_            $eventLog.WriteEntry($Message, [System.Diagnostics.EventLogEntryType]::Information, $EventID)_x000D__x000A_        }</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1492">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">258</I32>
                  <I32 N="StartLine">258</I32>
                  <I32 N="EndLine">258</I32>
                  <I32 N="StartColumn">13</I32>
                  <I32 N="EndColumn">125</I32>
                  <S N="Class"></S>
                  <S N="Function">Write-EventLogMessage</S>
                  <S N="Command">Write-EventLog -LogName $logName -Source $EventSource -EntryType Information -EventId $EventID -Message $Message</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1493">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">262</I32>
                  <I32 N="StartLine">262</I32>
                  <I32 N="EndLine">262</I32>
                  <I32 N="StartColumn">25</I32>
                  <I32 N="EndColumn">73</I32>
                  <S N="Class"></S>
                  <S N="Function">Write-EventLogMessage</S>
                  <S N="Command">$eventLog = New-Object System.Diagnostics.EventLog($logName)</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1494">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">262</I32>
                  <I32 N="StartLine">262</I32>
                  <I32 N="EndLine">262</I32>
                  <I32 N="StartColumn">64</I32>
                  <I32 N="EndColumn">72</I32>
                  <S N="Class"></S>
                  <S N="Function">Write-EventLogMessage</S>
                  <S N="Command">$logName</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1495">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">263</I32>
                  <I32 N="StartLine">263</I32>
                  <I32 N="EndLine">263</I32>
                  <I32 N="StartColumn">32</I32>
                  <I32 N="EndColumn">44</I32>
                  <S N="Class"></S>
                  <S N="Function">Write-EventLogMessage</S>
                  <S N="Command">$eventLog.Source = $EventSource</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1496">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">264</I32>
                  <I32 N="StartLine">264</I32>
                  <I32 N="EndLine">264</I32>
                  <I32 N="StartColumn">13</I32>
                  <I32 N="EndColumn">106</I32>
                  <S N="Class"></S>
                  <S N="Function">Write-EventLogMessage</S>
                  <S N="Command">$eventLog.WriteEntry($Message, [System.Diagnostics.EventLogEntryType]::Information, $EventID)</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1497">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">270</I32>
                  <I32 N="StartLine">270</I32>
                  <I32 N="EndLine">270</I32>
                  <I32 N="StartColumn">9</I32>
                  <I32 N="EndColumn">56</I32>
                  <S N="Class"></S>
                  <S N="Function">Write-EventLogMessage</S>
                  <S N="Command">Write-Host "Error creating event log entry: $_"</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1498">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">271</I32>
                  <I32 N="StartLine">271</I32>
                  <I32 N="EndLine">271</I32>
                  <I32 N="StartColumn">21</I32>
                  <I32 N="EndColumn">26</I32>
                  <S N="Class"></S>
                  <S N="Function">Write-EventLogMessage</S>
                  <S N="Command">$hadError = $true</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1499">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">274</I32>
                  <I32 N="StartLine">274</I32>
                  <I32 N="EndLine">274</I32>
                  <I32 N="StartColumn">9</I32>
                  <I32 N="EndColumn">23</I32>
                  <S N="Class"></S>
                  <S N="Function">Write-EventLogMessage</S>
                  <S N="Command">if (-not $hadError) {_x000D__x000A_        # Write-Host "Event log message writing completed successfully."_x000D__x000A_    }</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1500">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">298</I32>
                  <I32 N="StartLine">298</I32>
                  <I32 N="EndLine">298</I32>
                  <I32 N="StartColumn">9</I32>
                  <I32 N="EndColumn">78</I32>
                  <S N="Class"></S>
                  <S N="Function">Add-Step</S>
                  <S N="Command">Write-EnhancedLog -Message "Starting Add-Step function" -Level "INFO"</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1501">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">299</I32>
                  <I32 N="StartLine">299</I32>
                  <I32 N="EndLine">302</I32>
                  <I32 N="StartColumn">9</I32>
                  <I32 N="EndColumn">10</I32>
                  <S N="Class"></S>
                  <S N="Function">Add-Step</S>
                  <S N="Command">Log-Params -Params @{_x000D__x000A_            Description = $Description_x000D__x000A_            Action = $Action.ToString()_x000D__x000A_        }</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1502">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">300</I32>
                  <I32 N="StartLine">300</I32>
                  <I32 N="EndLine">300</I32>
                  <I32 N="StartColumn">27</I32>
                  <I32 N="EndColumn">39</I32>
                  <S N="Class"></S>
                  <S N="Function">Add-Step</S>
                  <S N="Command">Description = $Description</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1503">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">301</I32>
                  <I32 N="StartLine">301</I32>
                  <I32 N="EndLine">301</I32>
                  <I32 N="StartColumn">22</I32>
                  <I32 N="EndColumn">40</I32>
                  <S N="Class"></S>
                  <S N="Function">Add-Step</S>
                  <S N="Command">Action = $Action.ToString()</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1504">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">307</I32>
                  <I32 N="StartLine">307</I32>
                  <I32 N="EndLine">307</I32>
                  <I32 N="StartColumn">13</I32>
                  <I32 N="EndColumn">81</I32>
                  <S N="Class"></S>
                  <S N="Function">Add-Step</S>
                  <S N="Command">Write-EnhancedLog -Message "Adding step: $Description" -Level "INFO"</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1505">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">308</I32>
                  <I32 N="StartLine">308</I32>
                  <I32 N="EndLine">308</I32>
                  <I32 N="StartColumn">13</I32>
                  <I32 N="EndColumn">97</I32>
                  <S N="Class"></S>
                  <S N="Function">Add-Step</S>
                  <S N="Command">$global:steps.Add([PSCustomObject]@{ Description = $Description; Action = $Action })</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1506">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">308</I32>
                  <I32 N="StartLine">308</I32>
                  <I32 N="EndLine">308</I32>
                  <I32 N="StartColumn">64</I32>
                  <I32 N="EndColumn">76</I32>
                  <S N="Class"></S>
                  <S N="Function">Add-Step</S>
                  <S N="Command">Description = $Description</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1507">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">308</I32>
                  <I32 N="StartLine">308</I32>
                  <I32 N="EndLine">308</I32>
                  <I32 N="StartColumn">87</I32>
                  <I32 N="EndColumn">94</I32>
                  <S N="Class"></S>
                  <S N="Function">Add-Step</S>
                  <S N="Command">Action = $Action</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1508">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">310</I32>
                  <I32 N="StartLine">310</I32>
                  <I32 N="EndLine">310</I32>
                  <I32 N="StartColumn">13</I32>
                  <I32 N="EndColumn">117</I32>
                  <S N="Class"></S>
                  <S N="Function">Add-Step</S>
                  <S N="Command">Write-EnhancedLog -Message "An error occurred while adding step: $($_.Exception.Message)" -Level "ERROR"</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1509">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">310</I32>
                  <I32 N="StartLine">310</I32>
                  <I32 N="EndLine">310</I32>
                  <I32 N="StartColumn">80</I32>
                  <I32 N="EndColumn">100</I32>
                  <S N="Class"></S>
                  <S N="Function">Add-Step</S>
                  <S N="Command">$_.Exception.Message</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1510">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">311</I32>
                  <I32 N="StartLine">311</I32>
                  <I32 N="EndLine">311</I32>
                  <I32 N="StartColumn">13</I32>
                  <I32 N="EndColumn">41</I32>
                  <S N="Class"></S>
                  <S N="Function">Add-Step</S>
                  <S N="Command">Handle-Error -ErrorRecord $_</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1511">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">316</I32>
                  <I32 N="StartLine">316</I32>
                  <I32 N="EndLine">316</I32>
                  <I32 N="StartColumn">9</I32>
                  <I32 N="EndColumn">77</I32>
                  <S N="Class"></S>
                  <S N="Function">Add-Step</S>
                  <S N="Command">Write-EnhancedLog -Message "Exiting Add-Step function" -Level "INFO"</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1512">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">404</I32>
                  <I32 N="StartLine">404</I32>
                  <I32 N="EndLine">404</I32>
                  <I32 N="StartColumn">9</I32>
                  <I32 N="EndColumn">69</I32>
                  <S N="Class"></S>
                  <S N="Function">Export-Data</S>
                  <S N="Command">Write-Host "BaseOutputPath before change: '$BaseOutputPath'"</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1513">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">405</I32>
                  <I32 N="StartLine">405</I32>
                  <I32 N="EndLine">405</I32>
                  <I32 N="StartColumn">37</I32>
                  <I32 N="EndColumn">94</I32>
                  <S N="Class"></S>
                  <S N="Function">Export-Data</S>
                  <S N="Command">$basePathWithoutExtension = [System.IO.Path]::ChangeExtension($BaseOutputPath, $null)</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1514">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">408</I32>
                  <I32 N="StartLine">408</I32>
                  <I32 N="EndLine">408</I32>
                  <I32 N="StartColumn">41</I32>
                  <I32 N="EndColumn">68</I32>
                  <S N="Class"></S>
                  <S N="Function">Export-Data</S>
                  <S N="Command">if ($BaseOutputPath -match '\.') {_x000D__x000A_            $BaseOutputPath.Substring(0, $BaseOutputPath.LastIndexOf('.'))_x000D__x000A_        }_x000D__x000A_        else {_x000D__x000A_            $BaseOutputPath_x000D__x000A_        }</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1515">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">409</I32>
                  <I32 N="StartLine">409</I32>
                  <I32 N="EndLine">409</I32>
                  <I32 N="StartColumn">13</I32>
                  <I32 N="EndColumn">75</I32>
                  <S N="Class"></S>
                  <S N="Function">Export-Data</S>
                  <S N="Command">$BaseOutputPath.Substring(0, $BaseOutputPath.LastIndexOf('.'))</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1516">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">412</I32>
                  <I32 N="StartLine">412</I32>
                  <I32 N="EndLine">412</I32>
                  <I32 N="StartColumn">13</I32>
                  <I32 N="EndColumn">28</I32>
                  <S N="Class"></S>
                  <S N="Function">Export-Data</S>
                  <S N="Command">$BaseOutputPath</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1517">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">416</I32>
                  <I32 N="StartLine">416</I32>
                  <I32 N="EndLine">416</I32>
                  <I32 N="StartColumn">37</I32>
                  <I32 N="EndColumn">75</I32>
                  <S N="Class"></S>
                  <S N="Function">Export-Data</S>
                  <S N="Command">$basePathWithoutExtension = $basePathWithoutExtension.TrimEnd('.')</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1518">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">421</I32>
                  <I32 N="StartLine">421</I32>
                  <I32 N="EndLine">421</I32>
                  <I32 N="StartColumn">17</I32>
                  <I32 N="EndColumn">28</I32>
                  <S N="Class"></S>
                  <S N="Function">Export-Data</S>
                  <S N="Command">if ($IncludeCSV) {_x000D__x000A_                $csvPath = "$basePathWithoutExtension.csv"_x000D__x000A_                $Data | Export-Csv -Path $csvPath -NoTypeInformation_x000D__x000A_            }</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1519">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">422</I32>
                  <I32 N="StartLine">422</I32>
                  <I32 N="EndLine">422</I32>
                  <I32 N="StartColumn">28</I32>
                  <I32 N="EndColumn">59</I32>
                  <S N="Class"></S>
                  <S N="Function">Export-Data</S>
                  <S N="Command">$csvPath = "$basePathWithoutExtension.csv"</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1520">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">423</I32>
                  <I32 N="StartLine">423</I32>
                  <I32 N="EndLine">423</I32>
                  <I32 N="StartColumn">17</I32>
                  <I32 N="EndColumn">22</I32>
                  <S N="Class"></S>
                  <S N="Function">Export-Data</S>
                  <S N="Command">$Data</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1521">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">423</I32>
                  <I32 N="StartLine">423</I32>
                  <I32 N="EndLine">423</I32>
                  <I32 N="StartColumn">25</I32>
                  <I32 N="EndColumn">69</I32>
                  <S N="Class"></S>
                  <S N="Function">Export-Data</S>
                  <S N="Command">Export-Csv -Path $csvPath -NoTypeInformation</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1522">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">426</I32>
                  <I32 N="StartLine">426</I32>
                  <I32 N="EndLine">426</I32>
                  <I32 N="StartColumn">17</I32>
                  <I32 N="EndColumn">29</I32>
                  <S N="Class"></S>
                  <S N="Function">Export-Data</S>
                  <S N="Command">if ($IncludeJSON) {_x000D__x000A_                $jsonPath = "$basePathWithoutExtension.json"_x000D__x000A_                $Data | ConvertTo-Json -Depth 10 | Set-Content -Path $jsonPath_x000D__x000A_            }</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1523">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">427</I32>
                  <I32 N="StartLine">427</I32>
                  <I32 N="EndLine">427</I32>
                  <I32 N="StartColumn">29</I32>
                  <I32 N="EndColumn">61</I32>
                  <S N="Class"></S>
                  <S N="Function">Export-Data</S>
                  <S N="Command">$jsonPath = "$basePathWithoutExtension.json"</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1524">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">428</I32>
                  <I32 N="StartLine">428</I32>
                  <I32 N="EndLine">428</I32>
                  <I32 N="StartColumn">17</I32>
                  <I32 N="EndColumn">22</I32>
                  <S N="Class"></S>
                  <S N="Function">Export-Data</S>
                  <S N="Command">$Data</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1525">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">428</I32>
                  <I32 N="StartLine">428</I32>
                  <I32 N="EndLine">428</I32>
                  <I32 N="StartColumn">25</I32>
                  <I32 N="EndColumn">49</I32>
                  <S N="Class"></S>
                  <S N="Function">Export-Data</S>
                  <S N="Command">ConvertTo-Json -Depth 10</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1526">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">428</I32>
                  <I32 N="StartLine">428</I32>
                  <I32 N="EndLine">428</I32>
                  <I32 N="StartColumn">52</I32>
                  <I32 N="EndColumn">79</I32>
                  <S N="Class"></S>
                  <S N="Function">Export-Data</S>
                  <S N="Command">Set-Content -Path $jsonPath</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1527">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">431</I32>
                  <I32 N="StartLine">431</I32>
                  <I32 N="EndLine">431</I32>
                  <I32 N="StartColumn">17</I32>
                  <I32 N="EndColumn">28</I32>
                  <S N="Class"></S>
                  <S N="Function">Export-Data</S>
                  <S N="Command">if ($IncludeXML) {_x000D__x000A_                $xmlPath = "$basePathWithoutExtension.xml"_x000D__x000A_                $Data | Export-Clixml -Path $xmlPath_x000D__x000A_            }</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1528">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">432</I32>
                  <I32 N="StartLine">432</I32>
                  <I32 N="EndLine">432</I32>
                  <I32 N="StartColumn">28</I32>
                  <I32 N="EndColumn">59</I32>
                  <S N="Class"></S>
                  <S N="Function">Export-Data</S>
                  <S N="Command">$xmlPath = "$basePathWithoutExtension.xml"</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1529">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">433</I32>
                  <I32 N="StartLine">433</I32>
                  <I32 N="EndLine">433</I32>
                  <I32 N="StartColumn">17</I32>
                  <I32 N="EndColumn">22</I32>
                  <S N="Class"></S>
                  <S N="Function">Export-Data</S>
                  <S N="Command">$Data</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1530">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">433</I32>
                  <I32 N="StartLine">433</I32>
                  <I32 N="EndLine">433</I32>
                  <I32 N="StartColumn">25</I32>
                  <I32 N="EndColumn">53</I32>
                  <S N="Class"></S>
                  <S N="Function">Export-Data</S>
                  <S N="Command">Export-Clixml -Path $xmlPath</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1531">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">436</I32>
                  <I32 N="StartLine">436</I32>
                  <I32 N="EndLine">436</I32>
                  <I32 N="StartColumn">17</I32>
                  <I32 N="EndColumn">33</I32>
                  <S N="Class"></S>
                  <S N="Function">Export-Data</S>
                  <S N="Command">if ($IncludeGridView) {_x000D__x000A_                $Data | Out-GridView -Title "Data Preview"_x000D__x000A_            }</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1532">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">437</I32>
                  <I32 N="StartLine">437</I32>
                  <I32 N="EndLine">437</I32>
                  <I32 N="StartColumn">17</I32>
                  <I32 N="EndColumn">22</I32>
                  <S N="Class"></S>
                  <S N="Function">Export-Data</S>
                  <S N="Command">$Data</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1533">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">437</I32>
                  <I32 N="StartLine">437</I32>
                  <I32 N="EndLine">437</I32>
                  <I32 N="StartColumn">25</I32>
                  <I32 N="EndColumn">59</I32>
                  <S N="Class"></S>
                  <S N="Function">Export-Data</S>
                  <S N="Command">Out-GridView -Title "Data Preview"</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1534">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">440</I32>
                  <I32 N="StartLine">440</I32>
                  <I32 N="EndLine">440</I32>
                  <I32 N="StartColumn">17</I32>
                  <I32 N="EndColumn">29</I32>
                  <S N="Class"></S>
                  <S N="Function">Export-Data</S>
                  <S N="Command">if ($IncludeHTML) {_x000D__x000A_                # Assumes $Data is the dataset you want to export to HTML_x000D__x000A_                # and $basePathWithoutExtension is prepared earlier in your script_x000D__x000A_                _x000D__x000A_                $htmlPath = "$basePathWithoutExtension.html"_x000D__x000A_                _x000D__x000A_                # Convert $Data to HTML using PSWriteHTML_x000D__x000A_                New-HTML -Title "Data Export Report" -FilePath $htmlPath -ShowHTML {_x000D__x000A_                    New-HTMLSection -HeaderText "Data Export Details" -Content {_x000D__x000A_                        New-HTMLTable -DataTable $Data -ScrollX -HideFooter_x000D__x000A_                    }_x000D__x000A_                }_x000D__x000A_            _x000D__x000A_                Write-Host "HTML report generated: '$htmlPath'"_x000D__x000A_            }</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1535">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">444</I32>
                  <I32 N="StartLine">444</I32>
                  <I32 N="EndLine">444</I32>
                  <I32 N="StartColumn">29</I32>
                  <I32 N="EndColumn">61</I32>
                  <S N="Class"></S>
                  <S N="Function">Export-Data</S>
                  <S N="Command">$htmlPath = "$basePathWithoutExtension.html"</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1536">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">447</I32>
                  <I32 N="StartLine">447</I32>
                  <I32 N="EndLine">451</I32>
                  <I32 N="StartColumn">17</I32>
                  <I32 N="EndColumn">18</I32>
                  <S N="Class"></S>
                  <S N="Function">Export-Data</S>
                  <S N="Command">New-HTML -Title "Data Export Report" -FilePath $htmlPath -ShowHTML {_x000D__x000A_                    New-HTMLSection -HeaderText "Data Export Details" -Content {_x000D__x000A_                        New-HTMLTable -DataTable $Data -ScrollX -HideFooter_x000D__x000A_                    }_x000D__x000A_                }</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1537">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">448</I32>
                  <I32 N="StartLine">448</I32>
                  <I32 N="EndLine">450</I32>
                  <I32 N="StartColumn">21</I32>
                  <I32 N="EndColumn">22</I32>
                  <S N="Class"></S>
                  <S N="Function">Export-Data</S>
                  <S N="Command">New-HTMLSection -HeaderText "Data Export Details" -Content {_x000D__x000A_                        New-HTMLTable -DataTable $Data -ScrollX -HideFooter_x000D__x000A_                    }</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1538">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">449</I32>
                  <I32 N="StartLine">449</I32>
                  <I32 N="EndLine">449</I32>
                  <I32 N="StartColumn">25</I32>
                  <I32 N="EndColumn">76</I32>
                  <S N="Class"></S>
                  <S N="Function">Export-Data</S>
                  <S N="Command">New-HTMLTable -DataTable $Data -ScrollX -HideFooter</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1539">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">453</I32>
                  <I32 N="StartLine">453</I32>
                  <I32 N="EndLine">453</I32>
                  <I32 N="StartColumn">17</I32>
                  <I32 N="EndColumn">64</I32>
                  <S N="Class"></S>
                  <S N="Function">Export-Data</S>
                  <S N="Command">Write-Host "HTML report generated: '$htmlPath'"</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1540">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">457</I32>
                  <I32 N="StartLine">457</I32>
                  <I32 N="EndLine">457</I32>
                  <I32 N="StartColumn">17</I32>
                  <I32 N="EndColumn">34</I32>
                  <S N="Class"></S>
                  <S N="Function">Export-Data</S>
                  <S N="Command">if ($IncludePlainText) {_x000D__x000A_                $txtPath = "$basePathWithoutExtension.txt"_x000D__x000A_                $Data | Out-String | Set-Content -Path $txtPath_x000D__x000A_            }</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1541">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">458</I32>
                  <I32 N="StartLine">458</I32>
                  <I32 N="EndLine">458</I32>
                  <I32 N="StartColumn">28</I32>
                  <I32 N="EndColumn">59</I32>
                  <S N="Class"></S>
                  <S N="Function">Export-Data</S>
                  <S N="Command">$txtPath = "$basePathWithoutExtension.txt"</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1542">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">459</I32>
                  <I32 N="StartLine">459</I32>
                  <I32 N="EndLine">459</I32>
                  <I32 N="StartColumn">17</I32>
                  <I32 N="EndColumn">22</I32>
                  <S N="Class"></S>
                  <S N="Function">Export-Data</S>
                  <S N="Command">$Data</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1543">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">459</I32>
                  <I32 N="StartLine">459</I32>
                  <I32 N="EndLine">459</I32>
                  <I32 N="StartColumn">25</I32>
                  <I32 N="EndColumn">35</I32>
                  <S N="Class"></S>
                  <S N="Function">Export-Data</S>
                  <S N="Command">Out-String</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1544">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">459</I32>
                  <I32 N="StartLine">459</I32>
                  <I32 N="EndLine">459</I32>
                  <I32 N="StartColumn">38</I32>
                  <I32 N="EndColumn">64</I32>
                  <S N="Class"></S>
                  <S N="Function">Export-Data</S>
                  <S N="Command">Set-Content -Path $txtPath</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1545">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">462</I32>
                  <I32 N="StartLine">462</I32>
                  <I32 N="EndLine">462</I32>
                  <I32 N="StartColumn">17</I32>
                  <I32 N="EndColumn">30</I32>
                  <S N="Class"></S>
                  <S N="Function">Export-Data</S>
                  <S N="Command">if ($IncludeExcel) {_x000D__x000A_                $excelPath = "$basePathWithoutExtension.xlsx"_x000D__x000A_                $Data | Export-Excel -Path $excelPath_x000D__x000A_            }</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1546">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">463</I32>
                  <I32 N="StartLine">463</I32>
                  <I32 N="EndLine">463</I32>
                  <I32 N="StartColumn">30</I32>
                  <I32 N="EndColumn">62</I32>
                  <S N="Class"></S>
                  <S N="Function">Export-Data</S>
                  <S N="Command">$excelPath = "$basePathWithoutExtension.xlsx"</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1547">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">464</I32>
                  <I32 N="StartLine">464</I32>
                  <I32 N="EndLine">464</I32>
                  <I32 N="StartColumn">17</I32>
                  <I32 N="EndColumn">22</I32>
                  <S N="Class"></S>
                  <S N="Function">Export-Data</S>
                  <S N="Command">$Data</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1548">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">464</I32>
                  <I32 N="StartLine">464</I32>
                  <I32 N="EndLine">464</I32>
                  <I32 N="StartColumn">25</I32>
                  <I32 N="EndColumn">54</I32>
                  <S N="Class"></S>
                  <S N="Function">Export-Data</S>
                  <S N="Command">Export-Excel -Path $excelPath</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1549">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">468</I32>
                  <I32 N="StartLine">468</I32>
                  <I32 N="EndLine">468</I32>
                  <I32 N="StartColumn">17</I32>
                  <I32 N="EndColumn">29</I32>
                  <S N="Class"></S>
                  <S N="Function">Export-Data</S>
                  <S N="Command">if ($IncludeYAML) {_x000D__x000A_                $yamlPath = "$basePathWithoutExtension.yaml"_x000D__x000A_    _x000D__x000A_                # Check if the powershell-yaml module is loaded_x000D__x000A_                if (Get-Module -ListAvailable -Name powershell-yaml) {_x000D__x000A_                    Import-Module powershell-yaml_x000D__x000A__x000D__x000A_                    # Process $Data to handle potentially problematic properties_x000D__x000A_                    $processedData = $Data | ForEach-Object {_x000D__x000A_                        $originalObject = $__x000D__x000A_                        $properties = $_ | Get-Member -MemberType Properties_x000D__x000A_                        $clonedObject = New-Object -TypeName PSObject_x000D__x000A__x000D__x000A_                        foreach ($prop in $properties) {_x000D__x000A_                            try {_x000D__x000A_                                $clonedObject | Add-Member -MemberType NoteProperty -Name $prop.Name -Value $originalObject.$($prop.Name) -ErrorAction Stop_x000D__x000A_                            }_x000D__x000A_                            catch {_x000D__x000A_                                # Optionally handle or log the error. Skipping problematic property._x000D__x000A_                                $clonedObject | Add-Member -MemberType NoteProperty -Name $prop.Name -Value "Error serializing property" -ErrorAction SilentlyContinue_x000D__x000A_                            }_x000D__x000A_                        }_x000D__x000A__x000D__x000A_                        return $clonedObject_x000D__x000A_                    }_x000D__x000A__x000D__x000A_                    # Convert the processed data to YAML and save it with UTF-16 LE encoding_x000D__x000A_                    $processedData | ConvertTo-Yaml | Set-Content -Path $yamlPath -Encoding Unicode_x000D__x000A_                    Write-Host "YAML export completed successfully: $yamlPath"_x000D__x000A_                }_x000D__x000A_                else {_x000D__x000A_                    Write-Warning "The 'powershell-yaml' module is not installed. YAML export skipped."_x000D__x000A_                }_x000D__x000A_            }</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1550">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">469</I32>
                  <I32 N="StartLine">469</I32>
                  <I32 N="EndLine">469</I32>
                  <I32 N="StartColumn">29</I32>
                  <I32 N="EndColumn">61</I32>
                  <S N="Class"></S>
                  <S N="Function">Export-Data</S>
                  <S N="Command">$yamlPath = "$basePathWithoutExtension.yaml"</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1551">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">472</I32>
                  <I32 N="StartLine">472</I32>
                  <I32 N="EndLine">472</I32>
                  <I32 N="StartColumn">21</I32>
                  <I32 N="EndColumn">68</I32>
                  <S N="Class"></S>
                  <S N="Function">Export-Data</S>
                  <S N="Command">if (Get-Module -ListAvailable -Name powershell-yaml) {_x000D__x000A_                    Import-Module powershell-yaml_x000D__x000A__x000D__x000A_                    # Process $Data to handle potentially problematic properties_x000D__x000A_                    $processedData = $Data | ForEach-Object {_x000D__x000A_                        $originalObject = $__x000D__x000A_                        $properties = $_ | Get-Member -MemberType Properties_x000D__x000A_                        $clonedObject = New-Object -TypeName PSObject_x000D__x000A__x000D__x000A_                        foreach ($prop in $properties) {_x000D__x000A_                            try {_x000D__x000A_                                $clonedObject | Add-Member -MemberType NoteProperty -Name $prop.Name -Value $originalObject.$($prop.Name) -ErrorAction Stop_x000D__x000A_                            }_x000D__x000A_                            catch {_x000D__x000A_                                # Optionally handle or log the error. Skipping problematic property._x000D__x000A_                                $clonedObject | Add-Member -MemberType NoteProperty -Name $prop.Name -Value "Error serializing property" -ErrorAction SilentlyContinue_x000D__x000A_                            }_x000D__x000A_                        }_x000D__x000A__x000D__x000A_                        return $clonedObject_x000D__x000A_                    }_x000D__x000A__x000D__x000A_                    # Convert the processed data to YAML and save it with UTF-16 LE encoding_x000D__x000A_                    $processedData | ConvertTo-Yaml | Set-Content -Path $yamlPath -Encoding Unicode_x000D__x000A_                    Write-Host "YAML export completed successfully: $yamlPath"_x000D__x000A_                }_x000D__x000A_                else {_x000D__x000A_                    Write-Warning "The 'powershell-yaml' module is not installed. YAML export skipped."_x000D__x000A_                }</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1552">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">473</I32>
                  <I32 N="StartLine">473</I32>
                  <I32 N="EndLine">473</I32>
                  <I32 N="StartColumn">21</I32>
                  <I32 N="EndColumn">50</I32>
                  <S N="Class"></S>
                  <S N="Function">Export-Data</S>
                  <S N="Command">Import-Module powershell-yaml</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1553">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">476</I32>
                  <I32 N="StartLine">476</I32>
                  <I32 N="EndLine">476</I32>
                  <I32 N="StartColumn">38</I32>
                  <I32 N="EndColumn">43</I32>
                  <S N="Class"></S>
                  <S N="Function">Export-Data</S>
                  <S N="Command">$processedData = $Data | ForEach-Object {_x000D__x000A_                        $originalObject = $__x000D__x000A_                        $properties = $_ | Get-Member -MemberType Properties_x000D__x000A_                        $clonedObject = New-Object -TypeName PSObject_x000D__x000A__x000D__x000A_                        foreach ($prop in $properties) {_x000D__x000A_                            try {_x000D__x000A_                                $clonedObject | Add-Member -MemberType NoteProperty -Name $prop.Name -Value $originalObject.$($prop.Name) -ErrorAction Stop_x000D__x000A_                            }_x000D__x000A_                            catch {_x000D__x000A_                                # Optionally handle or log the error. Skipping problematic property._x000D__x000A_                                $clonedObject | Add-Member -MemberType NoteProperty -Name $prop.Name -Value "Error serializing property" -ErrorAction SilentlyContinue_x000D__x000A_                            }_x000D__x000A_                        }_x000D__x000A__x000D__x000A_                        return $clonedObject_x000D__x000A_                    }</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1554">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">476</I32>
                  <I32 N="StartLine">476</I32>
                  <I32 N="EndLine">492</I32>
                  <I32 N="StartColumn">46</I32>
                  <I32 N="EndColumn">22</I32>
                  <S N="Class"></S>
                  <S N="Function">Export-Data</S>
                  <S N="Command">$processedData = $Data | ForEach-Object {_x000D__x000A_                        $originalObject = $__x000D__x000A_                        $properties = $_ | Get-Member -MemberType Properties_x000D__x000A_                        $clonedObject = New-Object -TypeName PSObject_x000D__x000A__x000D__x000A_                        foreach ($prop in $properties) {_x000D__x000A_                            try {_x000D__x000A_                                $clonedObject | Add-Member -MemberType NoteProperty -Name $prop.Name -Value $originalObject.$($prop.Name) -ErrorAction Stop_x000D__x000A_                            }_x000D__x000A_                            catch {_x000D__x000A_                                # Optionally handle or log the error. Skipping problematic property._x000D__x000A_                                $clonedObject | Add-Member -MemberType NoteProperty -Name $prop.Name -Value "Error serializing property" -ErrorAction SilentlyContinue_x000D__x000A_                            }_x000D__x000A_                        }_x000D__x000A__x000D__x000A_                        return $clonedObject_x000D__x000A_                    }</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1555">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">477</I32>
                  <I32 N="StartLine">477</I32>
                  <I32 N="EndLine">477</I32>
                  <I32 N="StartColumn">43</I32>
                  <I32 N="EndColumn">45</I32>
                  <S N="Class"></S>
                  <S N="Function">Export-Data</S>
                  <S N="Command">$originalObject = $_</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1556">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">478</I32>
                  <I32 N="StartLine">478</I32>
                  <I32 N="EndLine">478</I32>
                  <I32 N="StartColumn">39</I32>
                  <I32 N="EndColumn">41</I32>
                  <S N="Class"></S>
                  <S N="Function">Export-Data</S>
                  <S N="Command">$properties = $_ | Get-Member -MemberType Properties</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1557">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">478</I32>
                  <I32 N="StartLine">478</I32>
                  <I32 N="EndLine">478</I32>
                  <I32 N="StartColumn">44</I32>
                  <I32 N="EndColumn">77</I32>
                  <S N="Class"></S>
                  <S N="Function">Export-Data</S>
                  <S N="Command">$properties = $_ | Get-Member -MemberType Properties</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1558">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">479</I32>
                  <I32 N="StartLine">479</I32>
                  <I32 N="EndLine">479</I32>
                  <I32 N="StartColumn">41</I32>
                  <I32 N="EndColumn">70</I32>
                  <S N="Class"></S>
                  <S N="Function">Export-Data</S>
                  <S N="Command">$clonedObject = New-Object -TypeName PSObject</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1559">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">481</I32>
                  <I32 N="StartLine">481</I32>
                  <I32 N="EndLine">481</I32>
                  <I32 N="StartColumn">43</I32>
                  <I32 N="EndColumn">54</I32>
                  <S N="Class"></S>
                  <S N="Function">Export-Data</S>
                  <S N="Command">$properties</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1560">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">483</I32>
                  <I32 N="StartLine">483</I32>
                  <I32 N="EndLine">483</I32>
                  <I32 N="StartColumn">33</I32>
                  <I32 N="EndColumn">46</I32>
                  <S N="Class"></S>
                  <S N="Function">Export-Data</S>
                  <S N="Command">$clonedObject</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1561">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">483</I32>
                  <I32 N="StartLine">483</I32>
                  <I32 N="EndLine">483</I32>
                  <I32 N="StartColumn">49</I32>
                  <I32 N="EndColumn">156</I32>
                  <S N="Class"></S>
                  <S N="Function">Export-Data</S>
                  <S N="Command">Add-Member -MemberType NoteProperty -Name $prop.Name -Value $originalObject.$($prop.Name) -ErrorAction Stop</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1562">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">483</I32>
                  <I32 N="StartLine">483</I32>
                  <I32 N="EndLine">483</I32>
                  <I32 N="StartColumn">127</I32>
                  <I32 N="EndColumn">137</I32>
                  <S N="Class"></S>
                  <S N="Function">Export-Data</S>
                  <S N="Command">$prop.Name</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1563">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">487</I32>
                  <I32 N="StartLine">487</I32>
                  <I32 N="EndLine">487</I32>
                  <I32 N="StartColumn">33</I32>
                  <I32 N="EndColumn">46</I32>
                  <S N="Class"></S>
                  <S N="Function">Export-Data</S>
                  <S N="Command">$clonedObject</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1564">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">487</I32>
                  <I32 N="StartLine">487</I32>
                  <I32 N="EndLine">487</I32>
                  <I32 N="StartColumn">49</I32>
                  <I32 N="EndColumn">167</I32>
                  <S N="Class"></S>
                  <S N="Function">Export-Data</S>
                  <S N="Command">Add-Member -MemberType NoteProperty -Name $prop.Name -Value "Error serializing property" -ErrorAction SilentlyContinue</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1565">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">491</I32>
                  <I32 N="StartLine">491</I32>
                  <I32 N="EndLine">491</I32>
                  <I32 N="StartColumn">32</I32>
                  <I32 N="EndColumn">45</I32>
                  <S N="Class"></S>
                  <S N="Function">Export-Data</S>
                  <S N="Command">return $clonedObject</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1566">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">495</I32>
                  <I32 N="StartLine">495</I32>
                  <I32 N="EndLine">495</I32>
                  <I32 N="StartColumn">21</I32>
                  <I32 N="EndColumn">35</I32>
                  <S N="Class"></S>
                  <S N="Function">Export-Data</S>
                  <S N="Command">$processedData</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1567">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">495</I32>
                  <I32 N="StartLine">495</I32>
                  <I32 N="EndLine">495</I32>
                  <I32 N="StartColumn">38</I32>
                  <I32 N="EndColumn">52</I32>
                  <S N="Class"></S>
                  <S N="Function">Export-Data</S>
                  <S N="Command">ConvertTo-Yaml</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1568">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">495</I32>
                  <I32 N="StartLine">495</I32>
                  <I32 N="EndLine">495</I32>
                  <I32 N="StartColumn">55</I32>
                  <I32 N="EndColumn">100</I32>
                  <S N="Class"></S>
                  <S N="Function">Export-Data</S>
                  <S N="Command">Set-Content -Path $yamlPath -Encoding Unicode</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1569">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">496</I32>
                  <I32 N="StartLine">496</I32>
                  <I32 N="EndLine">496</I32>
                  <I32 N="StartColumn">21</I32>
                  <I32 N="EndColumn">79</I32>
                  <S N="Class"></S>
                  <S N="Function">Export-Data</S>
                  <S N="Command">Write-Host "YAML export completed successfully: $yamlPath"</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1570">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">499</I32>
                  <I32 N="StartLine">499</I32>
                  <I32 N="EndLine">499</I32>
                  <I32 N="StartColumn">21</I32>
                  <I32 N="EndColumn">104</I32>
                  <S N="Class"></S>
                  <S N="Function">Export-Data</S>
                  <S N="Command">Write-Warning "The 'powershell-yaml' module is not installed. YAML export skipped."</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1571">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">503</I32>
                  <I32 N="StartLine">503</I32>
                  <I32 N="EndLine">503</I32>
                  <I32 N="StartColumn">17</I32>
                  <I32 N="EndColumn">33</I32>
                  <S N="Class"></S>
                  <S N="Function">Export-Data</S>
                  <S N="Command">if ($IncludeMarkdown) {_x000D__x000A_                # You'll need to implement or find a ConvertTo-Markdown function or use a suitable module_x000D__x000A_                $markdownPath = "$basePathWithoutExtension.md"_x000D__x000A_                $Data | ConvertTo-Markdown | Set-Content -Path $markdownPath_x000D__x000A_            }</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1572">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">505</I32>
                  <I32 N="StartLine">505</I32>
                  <I32 N="EndLine">505</I32>
                  <I32 N="StartColumn">33</I32>
                  <I32 N="EndColumn">63</I32>
                  <S N="Class"></S>
                  <S N="Function">Export-Data</S>
                  <S N="Command">$markdownPath = "$basePathWithoutExtension.md"</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1573">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">506</I32>
                  <I32 N="StartLine">506</I32>
                  <I32 N="EndLine">506</I32>
                  <I32 N="StartColumn">17</I32>
                  <I32 N="EndColumn">22</I32>
                  <S N="Class"></S>
                  <S N="Function">Export-Data</S>
                  <S N="Command">$Data</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1574">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">506</I32>
                  <I32 N="StartLine">506</I32>
                  <I32 N="EndLine">506</I32>
                  <I32 N="StartColumn">25</I32>
                  <I32 N="EndColumn">43</I32>
                  <S N="Class"></S>
                  <S N="Function">Export-Data</S>
                  <S N="Command">ConvertTo-Markdown</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1575">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">506</I32>
                  <I32 N="StartLine">506</I32>
                  <I32 N="EndLine">506</I32>
                  <I32 N="StartColumn">46</I32>
                  <I32 N="EndColumn">77</I32>
                  <S N="Class"></S>
                  <S N="Function">Export-Data</S>
                  <S N="Command">Set-Content -Path $markdownPath</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1576">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">509</I32>
                  <I32 N="StartLine">509</I32>
                  <I32 N="EndLine">509</I32>
                  <I32 N="StartColumn">17</I32>
                  <I32 N="EndColumn">28</I32>
                  <S N="Class"></S>
                  <S N="Function">Export-Data</S>
                  <S N="Command">if ($IncludePDF) {_x000D__x000A_                # Convert HTML to PDF using external tool_x000D__x000A_                # This is a placeholder for the process. You will need to generate HTML first and then convert it._x000D__x000A_                $pdfPath = "$basePathWithoutExtension.pdf"_x000D__x000A_                # Assuming you have a Convert-HtmlToPdf function or a similar mechanism_x000D__x000A_                $htmlPath = "$basePathWithoutExtension.html"_x000D__x000A_                $Data | ConvertTo-Html | Convert-HtmlToPdf -OutputPath $pdfPath_x000D__x000A_            }</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1577">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">512</I32>
                  <I32 N="StartLine">512</I32>
                  <I32 N="EndLine">512</I32>
                  <I32 N="StartColumn">28</I32>
                  <I32 N="EndColumn">59</I32>
                  <S N="Class"></S>
                  <S N="Function">Export-Data</S>
                  <S N="Command">$pdfPath = "$basePathWithoutExtension.pdf"</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1578">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">514</I32>
                  <I32 N="StartLine">514</I32>
                  <I32 N="EndLine">514</I32>
                  <I32 N="StartColumn">29</I32>
                  <I32 N="EndColumn">61</I32>
                  <S N="Class"></S>
                  <S N="Function">Export-Data</S>
                  <S N="Command">$htmlPath = "$basePathWithoutExtension.html"</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1579">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">515</I32>
                  <I32 N="StartLine">515</I32>
                  <I32 N="EndLine">515</I32>
                  <I32 N="StartColumn">17</I32>
                  <I32 N="EndColumn">22</I32>
                  <S N="Class"></S>
                  <S N="Function">Export-Data</S>
                  <S N="Command">$Data</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1580">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">515</I32>
                  <I32 N="StartLine">515</I32>
                  <I32 N="EndLine">515</I32>
                  <I32 N="StartColumn">25</I32>
                  <I32 N="EndColumn">39</I32>
                  <S N="Class"></S>
                  <S N="Function">Export-Data</S>
                  <S N="Command">ConvertTo-Html</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1581">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">515</I32>
                  <I32 N="StartLine">515</I32>
                  <I32 N="EndLine">515</I32>
                  <I32 N="StartColumn">42</I32>
                  <I32 N="EndColumn">80</I32>
                  <S N="Class"></S>
                  <S N="Function">Export-Data</S>
                  <S N="Command">Convert-HtmlToPdf -OutputPath $pdfPath</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1582">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">520</I32>
                  <I32 N="StartLine">520</I32>
                  <I32 N="EndLine">520</I32>
                  <I32 N="StartColumn">13</I32>
                  <I32 N="EndColumn">62</I32>
                  <S N="Class"></S>
                  <S N="Function">Export-Data</S>
                  <S N="Command">Write-Error "An error occurred during export: $_"</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1583">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">525</I32>
                  <I32 N="StartLine">525</I32>
                  <I32 N="EndLine">525</I32>
                  <I32 N="StartColumn">9</I32>
                  <I32 N="EndColumn">66</I32>
                  <S N="Class"></S>
                  <S N="Function">Export-Data</S>
                  <S N="Command">Write-Verbose "Export-Data function execution completed."</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1584">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">547</I32>
                  <I32 N="StartLine">547</I32>
                  <I32 N="EndLine">547</I32>
                  <I32 N="StartColumn">13</I32>
                  <I32 N="EndColumn">50</I32>
                  <S N="Class"></S>
                  <S N="Function">Handle-Error</S>
                  <S N="Command">if ($PSVersionTable.PSVersion.Major -ge 7) {_x000D__x000A_            $fullErrorDetails = Get-Error -InputObject $ErrorRecord | Out-String_x000D__x000A_        }_x000D__x000A_        else {_x000D__x000A_            $fullErrorDetails = $ErrorRecord.Exception | Format-List * -Force | Out-String_x000D__x000A_        }</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1585">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">548</I32>
                  <I32 N="StartLine">548</I32>
                  <I32 N="EndLine">548</I32>
                  <I32 N="StartColumn">33</I32>
                  <I32 N="EndColumn">68</I32>
                  <S N="Class"></S>
                  <S N="Function">Handle-Error</S>
                  <S N="Command">$fullErrorDetails = Get-Error -InputObject $ErrorRecord | Out-String</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1586">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">548</I32>
                  <I32 N="StartLine">548</I32>
                  <I32 N="EndLine">548</I32>
                  <I32 N="StartColumn">71</I32>
                  <I32 N="EndColumn">81</I32>
                  <S N="Class"></S>
                  <S N="Function">Handle-Error</S>
                  <S N="Command">$fullErrorDetails = Get-Error -InputObject $ErrorRecord | Out-String</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1587">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">551</I32>
                  <I32 N="StartLine">551</I32>
                  <I32 N="EndLine">551</I32>
                  <I32 N="StartColumn">33</I32>
                  <I32 N="EndColumn">55</I32>
                  <S N="Class"></S>
                  <S N="Function">Handle-Error</S>
                  <S N="Command">$fullErrorDetails = $ErrorRecord.Exception | Format-List * -Force | Out-String</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1588">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">551</I32>
                  <I32 N="StartLine">551</I32>
                  <I32 N="EndLine">551</I32>
                  <I32 N="StartColumn">58</I32>
                  <I32 N="EndColumn">78</I32>
                  <S N="Class"></S>
                  <S N="Function">Handle-Error</S>
                  <S N="Command">$fullErrorDetails = $ErrorRecord.Exception | Format-List * -Force | Out-String</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1589">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">551</I32>
                  <I32 N="StartLine">551</I32>
                  <I32 N="EndLine">551</I32>
                  <I32 N="StartColumn">81</I32>
                  <I32 N="EndColumn">91</I32>
                  <S N="Class"></S>
                  <S N="Function">Handle-Error</S>
                  <S N="Command">$fullErrorDetails = $ErrorRecord.Exception | Format-List * -Force | Out-String</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1590">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">554</I32>
                  <I32 N="StartLine">554</I32>
                  <I32 N="EndLine">554</I32>
                  <I32 N="StartColumn">9</I32>
                  <I32 N="EndColumn">105</I32>
                  <S N="Class"></S>
                  <S N="Function">Handle-Error</S>
                  <S N="Command">Write-EnhancedLog -Message "Exception Message: $($ErrorRecord.Exception.Message)" -Level "ERROR"</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1591">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">554</I32>
                  <I32 N="StartLine">554</I32>
                  <I32 N="EndLine">554</I32>
                  <I32 N="StartColumn">58</I32>
                  <I32 N="EndColumn">88</I32>
                  <S N="Class"></S>
                  <S N="Function">Handle-Error</S>
                  <S N="Command">$ErrorRecord.Exception.Message</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1592">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">555</I32>
                  <I32 N="StartLine">555</I32>
                  <I32 N="EndLine">555</I32>
                  <I32 N="StartColumn">9</I32>
                  <I32 N="EndColumn">86</I32>
                  <S N="Class"></S>
                  <S N="Function">Handle-Error</S>
                  <S N="Command">Write-EnhancedLog -Message "Full Exception: $fullErrorDetails" -Level "ERROR"</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1593">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">559</I32>
                  <I32 N="StartLine">559</I32>
                  <I32 N="EndLine">559</I32>
                  <I32 N="StartColumn">9</I32>
                  <I32 N="EndColumn">157</I32>
                  <S N="Class"></S>
                  <S N="Function">Handle-Error</S>
                  <S N="Command">Write-EnhancedLog -Message "An error occurred while handling another error. Original Exception: $($ErrorRecord.Exception.Message)" -Level "CRITICAL"</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1594">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">559</I32>
                  <I32 N="StartLine">559</I32>
                  <I32 N="EndLine">559</I32>
                  <I32 N="StartColumn">107</I32>
                  <I32 N="EndColumn">137</I32>
                  <S N="Class"></S>
                  <S N="Function">Handle-Error</S>
                  <S N="Command">$ErrorRecord.Exception.Message</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1595">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">560</I32>
                  <I32 N="StartLine">560</I32>
                  <I32 N="EndLine">560</I32>
                  <I32 N="StartColumn">9</I32>
                  <I32 N="EndColumn">98</I32>
                  <S N="Class"></S>
                  <S N="Function">Handle-Error</S>
                  <S N="Command">Write-EnhancedLog -Message "Handler Exception: $($_.Exception.Message)" -Level "CRITICAL"</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1596">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">560</I32>
                  <I32 N="StartLine">560</I32>
                  <I32 N="EndLine">560</I32>
                  <I32 N="StartColumn">58</I32>
                  <I32 N="EndColumn">78</I32>
                  <S N="Class"></S>
                  <S N="Function">Handle-Error</S>
                  <S N="Command">$_.Exception.Message</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1597">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">561</I32>
                  <I32 N="StartLine">561</I32>
                  <I32 N="EndLine">561</I32>
                  <I32 N="StartColumn">9</I32>
                  <I32 N="EndColumn">98</I32>
                  <S N="Class"></S>
                  <S N="Function">Handle-Error</S>
                  <S N="Command">Write-EnhancedLog -Message "Handler Full Exception: $($_ | Out-String)" -Level "CRITICAL"</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1598">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">561</I32>
                  <I32 N="StartLine">561</I32>
                  <I32 N="EndLine">561</I32>
                  <I32 N="StartColumn">63</I32>
                  <I32 N="EndColumn">65</I32>
                  <S N="Class"></S>
                  <S N="Function">Handle-Error</S>
                  <S N="Command">$_</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1599">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">561</I32>
                  <I32 N="StartLine">561</I32>
                  <I32 N="EndLine">561</I32>
                  <I32 N="StartColumn">68</I32>
                  <I32 N="EndColumn">78</I32>
                  <S N="Class"></S>
                  <S N="Function">Handle-Error</S>
                  <S N="Command">Out-String</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1600">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">581</I32>
                  <I32 N="StartLine">581</I32>
                  <I32 N="EndLine">581</I32>
                  <I32 N="StartColumn">30</I32>
                  <I32 N="EndColumn">59</I32>
                  <S N="Class"></S>
                  <S N="Function">Initialize-ScriptAndLogging</S>
                  <S N="Command">$LoggingDeploymentName = $config.LoggingDeploymentName</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1601">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">584</I32>
                  <I32 N="StartLine">584</I32>
                  <I32 N="EndLine">584</I32>
                  <I32 N="StartColumn">20</I32>
                  <I32 N="EndColumn">26</I32>
                  <S N="Class"></S>
                  <S N="Function">Initialize-ScriptAndLogging</S>
                  <S N="Command">$isWindowsOS = $false</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1602">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">585</I32>
                  <I32 N="StartLine">585</I32>
                  <I32 N="EndLine">585</I32>
                  <I32 N="StartColumn">9</I32>
                  <I32 N="EndColumn">46</I32>
                  <S N="Class"></S>
                  <S N="Function">Initialize-ScriptAndLogging</S>
                  <S N="Command">if ($PSVersionTable.PSVersion.Major -ge 6) {_x000D__x000A_        $isWindowsOS = $isWindowsOS -or ($PSVersionTable.Platform -eq 'Win32NT')_x000D__x000A_    }_x000D__x000A_    else {_x000D__x000A_        $isWindowsOS = $isWindowsOS -or ($env:OS -eq 'Windows_NT')_x000D__x000A_    }</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1603">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">586</I32>
                  <I32 N="StartLine">586</I32>
                  <I32 N="EndLine">586</I32>
                  <I32 N="StartColumn">24</I32>
                  <I32 N="EndColumn">81</I32>
                  <S N="Class"></S>
                  <S N="Function">Initialize-ScriptAndLogging</S>
                  <S N="Command">$isWindowsOS = $isWindowsOS -or ($PSVersionTable.Platform -eq 'Win32NT')</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1604">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">586</I32>
                  <I32 N="StartLine">586</I32>
                  <I32 N="EndLine">586</I32>
                  <I32 N="StartColumn">42</I32>
                  <I32 N="EndColumn">80</I32>
                  <S N="Class"></S>
                  <S N="Function">Initialize-ScriptAndLogging</S>
                  <S N="Command">$PSVersionTable.Platform -eq 'Win32NT'</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1605">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">589</I32>
                  <I32 N="StartLine">589</I32>
                  <I32 N="EndLine">589</I32>
                  <I32 N="StartColumn">24</I32>
                  <I32 N="EndColumn">67</I32>
                  <S N="Class"></S>
                  <S N="Function">Initialize-ScriptAndLogging</S>
                  <S N="Command">$isWindowsOS = $isWindowsOS -or ($env:OS -eq 'Windows_NT')</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1606">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">589</I32>
                  <I32 N="StartLine">589</I32>
                  <I32 N="EndLine">589</I32>
                  <I32 N="StartColumn">42</I32>
                  <I32 N="EndColumn">66</I32>
                  <S N="Class"></S>
                  <S N="Function">Initialize-ScriptAndLogging</S>
                  <S N="Command">$env:OS -eq 'Windows_NT'</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1607">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">592</I32>
                  <I32 N="StartLine">592</I32>
                  <I32 N="EndLine">592</I32>
                  <I32 N="StartColumn">23</I32>
                  <I32 N="EndColumn">47</I32>
                  <S N="Class"></S>
                  <S N="Function">Initialize-ScriptAndLogging</S>
                  <S N="Command">$deploymentName = "$LoggingDeploymentName"</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1608">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">593</I32>
                  <I32 N="StartLine">593</I32>
                  <I32 N="EndLine">593</I32>
                  <I32 N="StartColumn">27</I32>
                  <I32 N="EndColumn">39</I32>
                  <S N="Class"></S>
                  <S N="Function">Initialize-ScriptAndLogging</S>
                  <S N="Command">if ($isWindowsOS) { "C:\code" } else { "/home/code" }</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1609">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">593</I32>
                  <I32 N="StartLine">593</I32>
                  <I32 N="EndLine">593</I32>
                  <I32 N="StartColumn">43</I32>
                  <I32 N="EndColumn">52</I32>
                  <S N="Class"></S>
                  <S N="Function">Initialize-ScriptAndLogging</S>
                  <S N="Command">"C:\code"</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1610">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">593</I32>
                  <I32 N="StartLine">593</I32>
                  <I32 N="EndLine">593</I32>
                  <I32 N="StartColumn">62</I32>
                  <I32 N="EndColumn">74</I32>
                  <S N="Class"></S>
                  <S N="Function">Initialize-ScriptAndLogging</S>
                  <S N="Command">"/home/code"</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1611">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">594</I32>
                  <I32 N="StartLine">594</I32>
                  <I32 N="EndLine">594</I32>
                  <I32 N="StartColumn">24</I32>
                  <I32 N="EndColumn">82</I32>
                  <S N="Class"></S>
                  <S N="Function">Initialize-ScriptAndLogging</S>
                  <S N="Command">$scriptPath_1001 = Join-Path -Path $baseScriptPath -ChildPath $deploymentName</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1612">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">595</I32>
                  <I32 N="StartLine">595</I32>
                  <I32 N="EndLine">595</I32>
                  <I32 N="StartColumn">25</I32>
                  <I32 N="EndColumn">37</I32>
                  <S N="Class"></S>
                  <S N="Function">Initialize-ScriptAndLogging</S>
                  <S N="Command">if ($isWindowsOS) { $env:COMPUTERNAME } else { (hostname) }</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1613">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">595</I32>
                  <I32 N="StartLine">595</I32>
                  <I32 N="EndLine">595</I32>
                  <I32 N="StartColumn">41</I32>
                  <I32 N="EndColumn">58</I32>
                  <S N="Class"></S>
                  <S N="Function">Initialize-ScriptAndLogging</S>
                  <S N="Command">$env:COMPUTERNAME</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1614">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">595</I32>
                  <I32 N="StartLine">595</I32>
                  <I32 N="EndLine">595</I32>
                  <I32 N="StartColumn">68</I32>
                  <I32 N="EndColumn">78</I32>
                  <S N="Class"></S>
                  <S N="Function">Initialize-ScriptAndLogging</S>
                  <S N="Command">(hostname)</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1615">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">595</I32>
                  <I32 N="StartLine">595</I32>
                  <I32 N="EndLine">595</I32>
                  <I32 N="StartColumn">69</I32>
                  <I32 N="EndColumn">77</I32>
                  <S N="Class"></S>
                  <S N="Function">Initialize-ScriptAndLogging</S>
                  <S N="Command">hostname</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1616">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">598</I32>
                  <I32 N="StartLine">598</I32>
                  <I32 N="EndLine">598</I32>
                  <I32 N="StartColumn">13</I32>
                  <I32 N="EndColumn">52</I32>
                  <S N="Class"></S>
                  <S N="Function">Initialize-ScriptAndLogging</S>
                  <S N="Command">if (-not (Test-Path -Path $scriptPath_1001)) {_x000D__x000A_            New-Item -ItemType Directory -Path $scriptPath_1001 -Force | Out-Null_x000D__x000A_            Write-Host "Created directory: $scriptPath_1001" -ForegroundColor Green_x000D__x000A_        }</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1617">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">598</I32>
                  <I32 N="StartLine">598</I32>
                  <I32 N="EndLine">598</I32>
                  <I32 N="StartColumn">19</I32>
                  <I32 N="EndColumn">51</I32>
                  <S N="Class"></S>
                  <S N="Function">Initialize-ScriptAndLogging</S>
                  <S N="Command">Test-Path -Path $scriptPath_1001</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1618">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">599</I32>
                  <I32 N="StartLine">599</I32>
                  <I32 N="EndLine">599</I32>
                  <I32 N="StartColumn">13</I32>
                  <I32 N="EndColumn">71</I32>
                  <S N="Class"></S>
                  <S N="Function">Initialize-ScriptAndLogging</S>
                  <S N="Command">New-Item -ItemType Directory -Path $scriptPath_1001 -Force</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1619">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">599</I32>
                  <I32 N="StartLine">599</I32>
                  <I32 N="EndLine">599</I32>
                  <I32 N="StartColumn">74</I32>
                  <I32 N="EndColumn">82</I32>
                  <S N="Class"></S>
                  <S N="Function">Initialize-ScriptAndLogging</S>
                  <S N="Command">Out-Null</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1620">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">600</I32>
                  <I32 N="StartLine">600</I32>
                  <I32 N="EndLine">600</I32>
                  <I32 N="StartColumn">13</I32>
                  <I32 N="EndColumn">84</I32>
                  <S N="Class"></S>
                  <S N="Function">Initialize-ScriptAndLogging</S>
                  <S N="Command">Write-Host "Created directory: $scriptPath_1001" -ForegroundColor Green</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1621">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">603</I32>
                  <I32 N="StartLine">603</I32>
                  <I32 N="EndLine">603</I32>
                  <I32 N="StartColumn">21</I32>
                  <I32 N="EndColumn">45</I32>
                  <S N="Class"></S>
                  <S N="Function">Initialize-ScriptAndLogging</S>
                  <S N="Command">$Filename = "$LoggingDeploymentName"</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1622">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">604</I32>
                  <I32 N="StartLine">604</I32>
                  <I32 N="EndLine">604</I32>
                  <I32 N="StartColumn">19</I32>
                  <I32 N="EndColumn">91</I32>
                  <S N="Class"></S>
                  <S N="Function">Initialize-ScriptAndLogging</S>
                  <S N="Command">$logDir = Join-Path -Path $scriptPath_1001 -ChildPath "exports/Logs/$computerName"</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1623">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">605</I32>
                  <I32 N="StartLine">605</I32>
                  <I32 N="EndLine">605</I32>
                  <I32 N="StartColumn">20</I32>
                  <I32 N="EndColumn">98</I32>
                  <S N="Class"></S>
                  <S N="Function">Initialize-ScriptAndLogging</S>
                  <S N="Command">$logPath = Join-Path -Path $logDir -ChildPath "$(Get-Date -Format 'yyyy-MM-dd-HH-mm-ss')"</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1624">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">605</I32>
                  <I32 N="StartLine">605</I32>
                  <I32 N="EndLine">605</I32>
                  <I32 N="StartColumn">58</I32>
                  <I32 N="EndColumn">96</I32>
                  <S N="Class"></S>
                  <S N="Function">Initialize-ScriptAndLogging</S>
                  <S N="Command">Get-Date -Format 'yyyy-MM-dd-HH-mm-ss'</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1625">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">607</I32>
                  <I32 N="StartLine">607</I32>
                  <I32 N="EndLine">607</I32>
                  <I32 N="StartColumn">13</I32>
                  <I32 N="EndColumn">38</I32>
                  <S N="Class"></S>
                  <S N="Function">Initialize-ScriptAndLogging</S>
                  <S N="Command">if (-not (Test-Path $logPath)) {_x000D__x000A_            Write-Host "Did not find log directory at $logPath" -ForegroundColor Yellow_x000D__x000A_            Write-Host "Creating log directory at $logPath" -ForegroundColor Yellow_x000D__x000A_            New-Item -ItemType Directory -Path $logPath -Force -ErrorAction Stop | Out-Null_x000D__x000A_            Write-Host "Created log directory at $logPath" -ForegroundColor Green_x000D__x000A_        }</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1626">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">607</I32>
                  <I32 N="StartLine">607</I32>
                  <I32 N="EndLine">607</I32>
                  <I32 N="StartColumn">19</I32>
                  <I32 N="EndColumn">37</I32>
                  <S N="Class"></S>
                  <S N="Function">Initialize-ScriptAndLogging</S>
                  <S N="Command">Test-Path $logPath</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1627">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">608</I32>
                  <I32 N="StartLine">608</I32>
                  <I32 N="EndLine">608</I32>
                  <I32 N="StartColumn">13</I32>
                  <I32 N="EndColumn">88</I32>
                  <S N="Class"></S>
                  <S N="Function">Initialize-ScriptAndLogging</S>
                  <S N="Command">Write-Host "Did not find log directory at $logPath" -ForegroundColor Yellow</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1628">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">609</I32>
                  <I32 N="StartLine">609</I32>
                  <I32 N="EndLine">609</I32>
                  <I32 N="StartColumn">13</I32>
                  <I32 N="EndColumn">84</I32>
                  <S N="Class"></S>
                  <S N="Function">Initialize-ScriptAndLogging</S>
                  <S N="Command">Write-Host "Creating log directory at $logPath" -ForegroundColor Yellow</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1629">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">610</I32>
                  <I32 N="StartLine">610</I32>
                  <I32 N="EndLine">610</I32>
                  <I32 N="StartColumn">13</I32>
                  <I32 N="EndColumn">81</I32>
                  <S N="Class"></S>
                  <S N="Function">Initialize-ScriptAndLogging</S>
                  <S N="Command">New-Item -ItemType Directory -Path $logPath -Force -ErrorAction Stop</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1630">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">610</I32>
                  <I32 N="StartLine">610</I32>
                  <I32 N="EndLine">610</I32>
                  <I32 N="StartColumn">84</I32>
                  <I32 N="EndColumn">92</I32>
                  <S N="Class"></S>
                  <S N="Function">Initialize-ScriptAndLogging</S>
                  <S N="Command">Out-Null</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1631">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">611</I32>
                  <I32 N="StartLine">611</I32>
                  <I32 N="EndLine">611</I32>
                  <I32 N="StartColumn">13</I32>
                  <I32 N="EndColumn">82</I32>
                  <S N="Class"></S>
                  <S N="Function">Initialize-ScriptAndLogging</S>
                  <S N="Command">Write-Host "Created log directory at $logPath" -ForegroundColor Green</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1632">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">614</I32>
                  <I32 N="StartLine">614</I32>
                  <I32 N="EndLine">614</I32>
                  <I32 N="StartColumn">20</I32>
                  <I32 N="EndColumn">82</I32>
                  <S N="Class"></S>
                  <S N="Function">Initialize-ScriptAndLogging</S>
                  <S N="Command">$logFile = Join-Path -Path $logPath -ChildPath "$Filename-Transcript.log"</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1633">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">615</I32>
                  <I32 N="StartLine">615</I32>
                  <I32 N="EndLine">615</I32>
                  <I32 N="StartColumn">9</I32>
                  <I32 N="EndColumn">58</I32>
                  <S N="Class"></S>
                  <S N="Function">Initialize-ScriptAndLogging</S>
                  <S N="Command">Start-Transcript -Path $logFile -ErrorAction Stop</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1634">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">615</I32>
                  <I32 N="StartLine">615</I32>
                  <I32 N="EndLine">615</I32>
                  <I32 N="StartColumn">61</I32>
                  <I32 N="EndColumn">69</I32>
                  <S N="Class"></S>
                  <S N="Function">Initialize-ScriptAndLogging</S>
                  <S N="Command">Out-Null</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1635">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">617</I32>
                  <I32 N="StartLine">617</I32>
                  <I32 N="EndLine">622</I32>
                  <I32 N="StartColumn">16</I32>
                  <I32 N="EndColumn">10</I32>
                  <S N="Class"></S>
                  <S N="Function">Initialize-ScriptAndLogging</S>
                  <S N="Command">return @{_x000D__x000A_            ScriptPath = $scriptPath_1001_x000D__x000A_            Filename   = $Filename_x000D__x000A_            LogPath    = $logPath_x000D__x000A_            LogFile    = $logFile_x000D__x000A_        }</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1636">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">618</I32>
                  <I32 N="StartLine">618</I32>
                  <I32 N="EndLine">618</I32>
                  <I32 N="StartColumn">26</I32>
                  <I32 N="EndColumn">42</I32>
                  <S N="Class"></S>
                  <S N="Function">Initialize-ScriptAndLogging</S>
                  <S N="Command">ScriptPath = $scriptPath_1001</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1637">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">619</I32>
                  <I32 N="StartLine">619</I32>
                  <I32 N="EndLine">619</I32>
                  <I32 N="StartColumn">26</I32>
                  <I32 N="EndColumn">35</I32>
                  <S N="Class"></S>
                  <S N="Function">Initialize-ScriptAndLogging</S>
                  <S N="Command">Filename = $Filename</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1638">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">620</I32>
                  <I32 N="StartLine">620</I32>
                  <I32 N="EndLine">620</I32>
                  <I32 N="StartColumn">26</I32>
                  <I32 N="EndColumn">34</I32>
                  <S N="Class"></S>
                  <S N="Function">Initialize-ScriptAndLogging</S>
                  <S N="Command">LogPath = $logPath</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1639">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">621</I32>
                  <I32 N="StartLine">621</I32>
                  <I32 N="EndLine">621</I32>
                  <I32 N="StartColumn">26</I32>
                  <I32 N="EndColumn">34</I32>
                  <S N="Class"></S>
                  <S N="Function">Initialize-ScriptAndLogging</S>
                  <S N="Command">LogFile = $logFile</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1640">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">625</I32>
                  <I32 N="StartLine">625</I32>
                  <I32 N="EndLine">625</I32>
                  <I32 N="StartColumn">9</I32>
                  <I32 N="EndColumn">102</I32>
                  <S N="Class"></S>
                  <S N="Function">Initialize-ScriptAndLogging</S>
                  <S N="Command">Write-Host "An error occurred while initializing script and logging: $_" -ForegroundColor Red</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1641">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">640</I32>
                  <I32 N="StartLine">640</I32>
                  <I32 N="EndLine">640</I32>
                  <I32 N="StartColumn">9</I32>
                  <I32 N="EndColumn">90</I32>
                  <S N="Class"></S>
                  <S N="Function">Log-And-Execute-Step</S>
                  <S N="Command">Write-EnhancedLog -Message "Starting Log-And-Execute-Step function" -Level "INFO"</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1642">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">645</I32>
                  <I32 N="StartLine">645</I32>
                  <I32 N="EndLine">645</I32>
                  <I32 N="StartColumn">13</I32>
                  <I32 N="EndColumn">34</I32>
                  <S N="Class"></S>
                  <S N="Function">Log-And-Execute-Step</S>
                  <S N="Command">$global:currentStep++</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1643">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">646</I32>
                  <I32 N="StartLine">646</I32>
                  <I32 N="EndLine">646</I32>
                  <I32 N="StartColumn">27</I32>
                  <I32 N="EndColumn">46</I32>
                  <S N="Class"></S>
                  <S N="Function">Log-And-Execute-Step</S>
                  <S N="Command">$totalSteps = $global:steps.Count</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1644">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">647</I32>
                  <I32 N="StartLine">647</I32>
                  <I32 N="EndLine">647</I32>
                  <I32 N="StartColumn">21</I32>
                  <I32 N="EndColumn">59</I32>
                  <S N="Class"></S>
                  <S N="Function">Log-And-Execute-Step</S>
                  <S N="Command">$step = $global:steps[$global:currentStep - 1]</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1645">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">648</I32>
                  <I32 N="StartLine">648</I32>
                  <I32 N="EndLine">648</I32>
                  <I32 N="StartColumn">13</I32>
                  <I32 N="EndColumn">116</I32>
                  <S N="Class"></S>
                  <S N="Function">Log-And-Execute-Step</S>
                  <S N="Command">Write-EnhancedLog -Message "Step [$global:currentStep/$totalSteps]: $($step.Description)" -Level "INFO"</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1646">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">648</I32>
                  <I32 N="StartLine">648</I32>
                  <I32 N="EndLine">648</I32>
                  <I32 N="StartColumn">83</I32>
                  <I32 N="EndColumn">100</I32>
                  <S N="Class"></S>
                  <S N="Function">Log-And-Execute-Step</S>
                  <S N="Command">$step.Description</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1647">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">650</I32>
                  <I32 N="StartLine">650</I32>
                  <I32 N="EndLine">650</I32>
                  <I32 N="StartColumn">13</I32>
                  <I32 N="EndColumn">27</I32>
                  <S N="Class"></S>
                  <S N="Function">Log-And-Execute-Step</S>
                  <S N="Command">&amp; $step.Action</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1648">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">653</I32>
                  <I32 N="StartLine">653</I32>
                  <I32 N="EndLine">653</I32>
                  <I32 N="StartColumn">13</I32>
                  <I32 N="EndColumn">118</I32>
                  <S N="Class"></S>
                  <S N="Function">Log-And-Execute-Step</S>
                  <S N="Command">Write-EnhancedLog -Message "Error in step: $($step.Description) - $($_.Exception.Message)" -Level "ERROR"</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1649">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">653</I32>
                  <I32 N="StartLine">653</I32>
                  <I32 N="EndLine">653</I32>
                  <I32 N="StartColumn">58</I32>
                  <I32 N="EndColumn">75</I32>
                  <S N="Class"></S>
                  <S N="Function">Log-And-Execute-Step</S>
                  <S N="Command">$step.Description</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1650">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">653</I32>
                  <I32 N="StartLine">653</I32>
                  <I32 N="EndLine">653</I32>
                  <I32 N="StartColumn">81</I32>
                  <I32 N="EndColumn">101</I32>
                  <S N="Class"></S>
                  <S N="Function">Log-And-Execute-Step</S>
                  <S N="Command">$_.Exception.Message</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1651">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">654</I32>
                  <I32 N="StartLine">654</I32>
                  <I32 N="EndLine">654</I32>
                  <I32 N="StartColumn">13</I32>
                  <I32 N="EndColumn">41</I32>
                  <S N="Class"></S>
                  <S N="Function">Log-And-Execute-Step</S>
                  <S N="Command">Handle-Error -ErrorRecord $_</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1652">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">659</I32>
                  <I32 N="StartLine">659</I32>
                  <I32 N="EndLine">659</I32>
                  <I32 N="StartColumn">9</I32>
                  <I32 N="EndColumn">89</I32>
                  <S N="Class"></S>
                  <S N="Function">Log-And-Execute-Step</S>
                  <S N="Command">Write-EnhancedLog -Message "Exiting Log-And-Execute-Step function" -Level "INFO"</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1653">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">682</I32>
                  <I32 N="StartLine">682</I32>
                  <I32 N="EndLine">682</I32>
                  <I32 N="StartColumn">30</I32>
                  <I32 N="EndColumn">42</I32>
                  <S N="Class"></S>
                  <S N="Function">Log-Params</S>
                  <S N="Command">$Params.Keys</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1654">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">683</I32>
                  <I32 N="StartLine">683</I32>
                  <I32 N="EndLine">683</I32>
                  <I32 N="StartColumn">17</I32>
                  <I32 N="EndColumn">81</I32>
                  <S N="Class"></S>
                  <S N="Function">Log-Params</S>
                  <S N="Command">Write-EnhancedLog -Message "$key $($Params[$key])" -Level "INFO"</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1655">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">683</I32>
                  <I32 N="StartLine">683</I32>
                  <I32 N="EndLine">683</I32>
                  <I32 N="StartColumn">52</I32>
                  <I32 N="EndColumn">65</I32>
                  <S N="Class"></S>
                  <S N="Function">Log-Params</S>
                  <S N="Command">$Params[$key]</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1656">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">686</I32>
                  <I32 N="StartLine">686</I32>
                  <I32 N="EndLine">686</I32>
                  <I32 N="StartColumn">13</I32>
                  <I32 N="EndColumn">124</I32>
                  <S N="Class"></S>
                  <S N="Function">Log-Params</S>
                  <S N="Command">Write-EnhancedLog -Message "An error occurred while logging parameters: $($_.Exception.Message)" -Level "ERROR"</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1657">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">686</I32>
                  <I32 N="StartLine">686</I32>
                  <I32 N="EndLine">686</I32>
                  <I32 N="StartColumn">87</I32>
                  <I32 N="EndColumn">107</I32>
                  <S N="Class"></S>
                  <S N="Function">Log-Params</S>
                  <S N="Command">$_.Exception.Message</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1658">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">687</I32>
                  <I32 N="StartLine">687</I32>
                  <I32 N="EndLine">687</I32>
                  <I32 N="StartColumn">13</I32>
                  <I32 N="EndColumn">41</I32>
                  <S N="Class"></S>
                  <S N="Function">Log-Params</S>
                  <S N="Command">Handle-Error -ErrorRecord $_</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1659">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">728</I32>
                  <I32 N="StartLine">728</I32>
                  <I32 N="EndLine">728</I32>
                  <I32 N="StartColumn">15</I32>
                  <I32 N="EndColumn">30</I32>
                  <S N="Class"></S>
                  <S N="Function">Write-EnhancedLog</S>
                  <S N="Command">$logger = [Logger]::new()</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
              <Obj RefId="1660">
                <TNRef RefId="64" />
                <MS>
                  <S N="File">C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
                  <I32 N="Line">729</I32>
                  <I32 N="StartLine">729</I32>
                  <I32 N="EndLine">729</I32>
                  <I32 N="StartColumn">5</I32>
                  <I32 N="EndColumn">43</I32>
                  <S N="Class"></S>
                  <S N="Function">Write-EnhancedLog</S>
                  <S N="Command">$logger.LogClassCall($Message, $Level)</S>
                  <I32 N="HitCount">0</I32>
                </MS>
              </Obj>
            </LST>
          </Obj>
          <Obj N="CommandsExecuted" RefId="1661">
            <TNRef RefId="31" />
            <LST />
          </Obj>
          <Obj N="FilesAnalyzed" RefId="1662">
            <TNRef RefId="31" />
            <LST>
              <S>C:\Code\modules-beta\EnhancedLoggingAO-Sampler-Simple-BTP\EnhancedLoggingAO\output\module\EnhancedLoggingAO\0.0.1\EnhancedLoggingAO.psm1</S>
            </LST>
          </Obj>
        </Props>
      </Obj>
    </Props>
  </Obj>
</Objs>